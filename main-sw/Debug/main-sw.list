
main-sw.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000198  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000cba8  080001a0  080001a0  000101a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000a44  0800cd48  0800cd48  0001cd48  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0800d78c  0800d78c  00020240  2**0
                  CONTENTS
  4 .ARM          00000008  0800d78c  0800d78c  0001d78c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  0800d794  0800d794  00020240  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800d794  0800d794  0001d794  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  0800d798  0800d798  0001d798  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000240  20000000  0800d79c  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000670  20000240  0800d9dc  00020240  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  200008b0  0800d9dc  000208b0  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00020240  2**0
                  CONTENTS, READONLY
 12 .comment      00000043  00000000  00000000  00020270  2**0
                  CONTENTS, READONLY
 13 .debug_info   000165dc  00000000  00000000  000202b3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 000036ca  00000000  00000000  0003688f  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 00001308  00000000  00000000  00039f60  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 00000ea6  00000000  00000000  0003b268  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  00019970  00000000  00000000  0003c10e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00017563  00000000  00000000  00055a7e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    000936d4  00000000  00000000  0006cfe1  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_frame  000063fc  00000000  00000000  001006b8  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000061  00000000  00000000  00106ab4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a0 <__do_global_dtors_aux>:
 80001a0:	b510      	push	{r4, lr}
 80001a2:	4c05      	ldr	r4, [pc, #20]	; (80001b8 <__do_global_dtors_aux+0x18>)
 80001a4:	7823      	ldrb	r3, [r4, #0]
 80001a6:	b933      	cbnz	r3, 80001b6 <__do_global_dtors_aux+0x16>
 80001a8:	4b04      	ldr	r3, [pc, #16]	; (80001bc <__do_global_dtors_aux+0x1c>)
 80001aa:	b113      	cbz	r3, 80001b2 <__do_global_dtors_aux+0x12>
 80001ac:	4804      	ldr	r0, [pc, #16]	; (80001c0 <__do_global_dtors_aux+0x20>)
 80001ae:	f3af 8000 	nop.w
 80001b2:	2301      	movs	r3, #1
 80001b4:	7023      	strb	r3, [r4, #0]
 80001b6:	bd10      	pop	{r4, pc}
 80001b8:	20000240 	.word	0x20000240
 80001bc:	00000000 	.word	0x00000000
 80001c0:	0800cd30 	.word	0x0800cd30

080001c4 <frame_dummy>:
 80001c4:	b508      	push	{r3, lr}
 80001c6:	4b03      	ldr	r3, [pc, #12]	; (80001d4 <frame_dummy+0x10>)
 80001c8:	b11b      	cbz	r3, 80001d2 <frame_dummy+0xe>
 80001ca:	4903      	ldr	r1, [pc, #12]	; (80001d8 <frame_dummy+0x14>)
 80001cc:	4803      	ldr	r0, [pc, #12]	; (80001dc <frame_dummy+0x18>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	bd08      	pop	{r3, pc}
 80001d4:	00000000 	.word	0x00000000
 80001d8:	20000244 	.word	0x20000244
 80001dc:	0800cd30 	.word	0x0800cd30

080001e0 <memchr>:
 80001e0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001e4:	2a10      	cmp	r2, #16
 80001e6:	db2b      	blt.n	8000240 <memchr+0x60>
 80001e8:	f010 0f07 	tst.w	r0, #7
 80001ec:	d008      	beq.n	8000200 <memchr+0x20>
 80001ee:	f810 3b01 	ldrb.w	r3, [r0], #1
 80001f2:	3a01      	subs	r2, #1
 80001f4:	428b      	cmp	r3, r1
 80001f6:	d02d      	beq.n	8000254 <memchr+0x74>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	b342      	cbz	r2, 8000250 <memchr+0x70>
 80001fe:	d1f6      	bne.n	80001ee <memchr+0xe>
 8000200:	b4f0      	push	{r4, r5, r6, r7}
 8000202:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000206:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800020a:	f022 0407 	bic.w	r4, r2, #7
 800020e:	f07f 0700 	mvns.w	r7, #0
 8000212:	2300      	movs	r3, #0
 8000214:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000218:	3c08      	subs	r4, #8
 800021a:	ea85 0501 	eor.w	r5, r5, r1
 800021e:	ea86 0601 	eor.w	r6, r6, r1
 8000222:	fa85 f547 	uadd8	r5, r5, r7
 8000226:	faa3 f587 	sel	r5, r3, r7
 800022a:	fa86 f647 	uadd8	r6, r6, r7
 800022e:	faa5 f687 	sel	r6, r5, r7
 8000232:	b98e      	cbnz	r6, 8000258 <memchr+0x78>
 8000234:	d1ee      	bne.n	8000214 <memchr+0x34>
 8000236:	bcf0      	pop	{r4, r5, r6, r7}
 8000238:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800023c:	f002 0207 	and.w	r2, r2, #7
 8000240:	b132      	cbz	r2, 8000250 <memchr+0x70>
 8000242:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000246:	3a01      	subs	r2, #1
 8000248:	ea83 0301 	eor.w	r3, r3, r1
 800024c:	b113      	cbz	r3, 8000254 <memchr+0x74>
 800024e:	d1f8      	bne.n	8000242 <memchr+0x62>
 8000250:	2000      	movs	r0, #0
 8000252:	4770      	bx	lr
 8000254:	3801      	subs	r0, #1
 8000256:	4770      	bx	lr
 8000258:	2d00      	cmp	r5, #0
 800025a:	bf06      	itte	eq
 800025c:	4635      	moveq	r5, r6
 800025e:	3803      	subeq	r0, #3
 8000260:	3807      	subne	r0, #7
 8000262:	f015 0f01 	tst.w	r5, #1
 8000266:	d107      	bne.n	8000278 <memchr+0x98>
 8000268:	3001      	adds	r0, #1
 800026a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800026e:	bf02      	ittt	eq
 8000270:	3001      	addeq	r0, #1
 8000272:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000276:	3001      	addeq	r0, #1
 8000278:	bcf0      	pop	{r4, r5, r6, r7}
 800027a:	3801      	subs	r0, #1
 800027c:	4770      	bx	lr
 800027e:	bf00      	nop

08000280 <strlen>:
 8000280:	4603      	mov	r3, r0
 8000282:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000286:	2a00      	cmp	r2, #0
 8000288:	d1fb      	bne.n	8000282 <strlen+0x2>
 800028a:	1a18      	subs	r0, r3, r0
 800028c:	3801      	subs	r0, #1
 800028e:	4770      	bx	lr

08000290 <__aeabi_drsub>:
 8000290:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 8000294:	e002      	b.n	800029c <__adddf3>
 8000296:	bf00      	nop

08000298 <__aeabi_dsub>:
 8000298:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

0800029c <__adddf3>:
 800029c:	b530      	push	{r4, r5, lr}
 800029e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80002a2:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80002a6:	ea94 0f05 	teq	r4, r5
 80002aa:	bf08      	it	eq
 80002ac:	ea90 0f02 	teqeq	r0, r2
 80002b0:	bf1f      	itttt	ne
 80002b2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002b6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002ba:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002be:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002c2:	f000 80e2 	beq.w	800048a <__adddf3+0x1ee>
 80002c6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002ca:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002ce:	bfb8      	it	lt
 80002d0:	426d      	neglt	r5, r5
 80002d2:	dd0c      	ble.n	80002ee <__adddf3+0x52>
 80002d4:	442c      	add	r4, r5
 80002d6:	ea80 0202 	eor.w	r2, r0, r2
 80002da:	ea81 0303 	eor.w	r3, r1, r3
 80002de:	ea82 0000 	eor.w	r0, r2, r0
 80002e2:	ea83 0101 	eor.w	r1, r3, r1
 80002e6:	ea80 0202 	eor.w	r2, r0, r2
 80002ea:	ea81 0303 	eor.w	r3, r1, r3
 80002ee:	2d36      	cmp	r5, #54	; 0x36
 80002f0:	bf88      	it	hi
 80002f2:	bd30      	pophi	{r4, r5, pc}
 80002f4:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 80002f8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80002fc:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8000300:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000304:	d002      	beq.n	800030c <__adddf3+0x70>
 8000306:	4240      	negs	r0, r0
 8000308:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800030c:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000310:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000314:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000318:	d002      	beq.n	8000320 <__adddf3+0x84>
 800031a:	4252      	negs	r2, r2
 800031c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000320:	ea94 0f05 	teq	r4, r5
 8000324:	f000 80a7 	beq.w	8000476 <__adddf3+0x1da>
 8000328:	f1a4 0401 	sub.w	r4, r4, #1
 800032c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000330:	db0d      	blt.n	800034e <__adddf3+0xb2>
 8000332:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000336:	fa22 f205 	lsr.w	r2, r2, r5
 800033a:	1880      	adds	r0, r0, r2
 800033c:	f141 0100 	adc.w	r1, r1, #0
 8000340:	fa03 f20e 	lsl.w	r2, r3, lr
 8000344:	1880      	adds	r0, r0, r2
 8000346:	fa43 f305 	asr.w	r3, r3, r5
 800034a:	4159      	adcs	r1, r3
 800034c:	e00e      	b.n	800036c <__adddf3+0xd0>
 800034e:	f1a5 0520 	sub.w	r5, r5, #32
 8000352:	f10e 0e20 	add.w	lr, lr, #32
 8000356:	2a01      	cmp	r2, #1
 8000358:	fa03 fc0e 	lsl.w	ip, r3, lr
 800035c:	bf28      	it	cs
 800035e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000362:	fa43 f305 	asr.w	r3, r3, r5
 8000366:	18c0      	adds	r0, r0, r3
 8000368:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800036c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000370:	d507      	bpl.n	8000382 <__adddf3+0xe6>
 8000372:	f04f 0e00 	mov.w	lr, #0
 8000376:	f1dc 0c00 	rsbs	ip, ip, #0
 800037a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800037e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000382:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8000386:	d31b      	bcc.n	80003c0 <__adddf3+0x124>
 8000388:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 800038c:	d30c      	bcc.n	80003a8 <__adddf3+0x10c>
 800038e:	0849      	lsrs	r1, r1, #1
 8000390:	ea5f 0030 	movs.w	r0, r0, rrx
 8000394:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000398:	f104 0401 	add.w	r4, r4, #1
 800039c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80003a0:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 80003a4:	f080 809a 	bcs.w	80004dc <__adddf3+0x240>
 80003a8:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 80003ac:	bf08      	it	eq
 80003ae:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003b2:	f150 0000 	adcs.w	r0, r0, #0
 80003b6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003ba:	ea41 0105 	orr.w	r1, r1, r5
 80003be:	bd30      	pop	{r4, r5, pc}
 80003c0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003c4:	4140      	adcs	r0, r0
 80003c6:	eb41 0101 	adc.w	r1, r1, r1
 80003ca:	3c01      	subs	r4, #1
 80003cc:	bf28      	it	cs
 80003ce:	f5b1 1f80 	cmpcs.w	r1, #1048576	; 0x100000
 80003d2:	d2e9      	bcs.n	80003a8 <__adddf3+0x10c>
 80003d4:	f091 0f00 	teq	r1, #0
 80003d8:	bf04      	itt	eq
 80003da:	4601      	moveq	r1, r0
 80003dc:	2000      	moveq	r0, #0
 80003de:	fab1 f381 	clz	r3, r1
 80003e2:	bf08      	it	eq
 80003e4:	3320      	addeq	r3, #32
 80003e6:	f1a3 030b 	sub.w	r3, r3, #11
 80003ea:	f1b3 0220 	subs.w	r2, r3, #32
 80003ee:	da0c      	bge.n	800040a <__adddf3+0x16e>
 80003f0:	320c      	adds	r2, #12
 80003f2:	dd08      	ble.n	8000406 <__adddf3+0x16a>
 80003f4:	f102 0c14 	add.w	ip, r2, #20
 80003f8:	f1c2 020c 	rsb	r2, r2, #12
 80003fc:	fa01 f00c 	lsl.w	r0, r1, ip
 8000400:	fa21 f102 	lsr.w	r1, r1, r2
 8000404:	e00c      	b.n	8000420 <__adddf3+0x184>
 8000406:	f102 0214 	add.w	r2, r2, #20
 800040a:	bfd8      	it	le
 800040c:	f1c2 0c20 	rsble	ip, r2, #32
 8000410:	fa01 f102 	lsl.w	r1, r1, r2
 8000414:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000418:	bfdc      	itt	le
 800041a:	ea41 010c 	orrle.w	r1, r1, ip
 800041e:	4090      	lslle	r0, r2
 8000420:	1ae4      	subs	r4, r4, r3
 8000422:	bfa2      	ittt	ge
 8000424:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000428:	4329      	orrge	r1, r5
 800042a:	bd30      	popge	{r4, r5, pc}
 800042c:	ea6f 0404 	mvn.w	r4, r4
 8000430:	3c1f      	subs	r4, #31
 8000432:	da1c      	bge.n	800046e <__adddf3+0x1d2>
 8000434:	340c      	adds	r4, #12
 8000436:	dc0e      	bgt.n	8000456 <__adddf3+0x1ba>
 8000438:	f104 0414 	add.w	r4, r4, #20
 800043c:	f1c4 0220 	rsb	r2, r4, #32
 8000440:	fa20 f004 	lsr.w	r0, r0, r4
 8000444:	fa01 f302 	lsl.w	r3, r1, r2
 8000448:	ea40 0003 	orr.w	r0, r0, r3
 800044c:	fa21 f304 	lsr.w	r3, r1, r4
 8000450:	ea45 0103 	orr.w	r1, r5, r3
 8000454:	bd30      	pop	{r4, r5, pc}
 8000456:	f1c4 040c 	rsb	r4, r4, #12
 800045a:	f1c4 0220 	rsb	r2, r4, #32
 800045e:	fa20 f002 	lsr.w	r0, r0, r2
 8000462:	fa01 f304 	lsl.w	r3, r1, r4
 8000466:	ea40 0003 	orr.w	r0, r0, r3
 800046a:	4629      	mov	r1, r5
 800046c:	bd30      	pop	{r4, r5, pc}
 800046e:	fa21 f004 	lsr.w	r0, r1, r4
 8000472:	4629      	mov	r1, r5
 8000474:	bd30      	pop	{r4, r5, pc}
 8000476:	f094 0f00 	teq	r4, #0
 800047a:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 800047e:	bf06      	itte	eq
 8000480:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8000484:	3401      	addeq	r4, #1
 8000486:	3d01      	subne	r5, #1
 8000488:	e74e      	b.n	8000328 <__adddf3+0x8c>
 800048a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800048e:	bf18      	it	ne
 8000490:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000494:	d029      	beq.n	80004ea <__adddf3+0x24e>
 8000496:	ea94 0f05 	teq	r4, r5
 800049a:	bf08      	it	eq
 800049c:	ea90 0f02 	teqeq	r0, r2
 80004a0:	d005      	beq.n	80004ae <__adddf3+0x212>
 80004a2:	ea54 0c00 	orrs.w	ip, r4, r0
 80004a6:	bf04      	itt	eq
 80004a8:	4619      	moveq	r1, r3
 80004aa:	4610      	moveq	r0, r2
 80004ac:	bd30      	pop	{r4, r5, pc}
 80004ae:	ea91 0f03 	teq	r1, r3
 80004b2:	bf1e      	ittt	ne
 80004b4:	2100      	movne	r1, #0
 80004b6:	2000      	movne	r0, #0
 80004b8:	bd30      	popne	{r4, r5, pc}
 80004ba:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004be:	d105      	bne.n	80004cc <__adddf3+0x230>
 80004c0:	0040      	lsls	r0, r0, #1
 80004c2:	4149      	adcs	r1, r1
 80004c4:	bf28      	it	cs
 80004c6:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80004ca:	bd30      	pop	{r4, r5, pc}
 80004cc:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 80004d0:	bf3c      	itt	cc
 80004d2:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 80004d6:	bd30      	popcc	{r4, r5, pc}
 80004d8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80004dc:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 80004e0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80004e4:	f04f 0000 	mov.w	r0, #0
 80004e8:	bd30      	pop	{r4, r5, pc}
 80004ea:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004ee:	bf1a      	itte	ne
 80004f0:	4619      	movne	r1, r3
 80004f2:	4610      	movne	r0, r2
 80004f4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80004f8:	bf1c      	itt	ne
 80004fa:	460b      	movne	r3, r1
 80004fc:	4602      	movne	r2, r0
 80004fe:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000502:	bf06      	itte	eq
 8000504:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000508:	ea91 0f03 	teqeq	r1, r3
 800050c:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000510:	bd30      	pop	{r4, r5, pc}
 8000512:	bf00      	nop

08000514 <__aeabi_ui2d>:
 8000514:	f090 0f00 	teq	r0, #0
 8000518:	bf04      	itt	eq
 800051a:	2100      	moveq	r1, #0
 800051c:	4770      	bxeq	lr
 800051e:	b530      	push	{r4, r5, lr}
 8000520:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000524:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000528:	f04f 0500 	mov.w	r5, #0
 800052c:	f04f 0100 	mov.w	r1, #0
 8000530:	e750      	b.n	80003d4 <__adddf3+0x138>
 8000532:	bf00      	nop

08000534 <__aeabi_i2d>:
 8000534:	f090 0f00 	teq	r0, #0
 8000538:	bf04      	itt	eq
 800053a:	2100      	moveq	r1, #0
 800053c:	4770      	bxeq	lr
 800053e:	b530      	push	{r4, r5, lr}
 8000540:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000544:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000548:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 800054c:	bf48      	it	mi
 800054e:	4240      	negmi	r0, r0
 8000550:	f04f 0100 	mov.w	r1, #0
 8000554:	e73e      	b.n	80003d4 <__adddf3+0x138>
 8000556:	bf00      	nop

08000558 <__aeabi_f2d>:
 8000558:	0042      	lsls	r2, r0, #1
 800055a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800055e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000562:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000566:	bf1f      	itttt	ne
 8000568:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 800056c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000570:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8000574:	4770      	bxne	lr
 8000576:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 800057a:	bf08      	it	eq
 800057c:	4770      	bxeq	lr
 800057e:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8000582:	bf04      	itt	eq
 8000584:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 8000588:	4770      	bxeq	lr
 800058a:	b530      	push	{r4, r5, lr}
 800058c:	f44f 7460 	mov.w	r4, #896	; 0x380
 8000590:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000594:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000598:	e71c      	b.n	80003d4 <__adddf3+0x138>
 800059a:	bf00      	nop

0800059c <__aeabi_ul2d>:
 800059c:	ea50 0201 	orrs.w	r2, r0, r1
 80005a0:	bf08      	it	eq
 80005a2:	4770      	bxeq	lr
 80005a4:	b530      	push	{r4, r5, lr}
 80005a6:	f04f 0500 	mov.w	r5, #0
 80005aa:	e00a      	b.n	80005c2 <__aeabi_l2d+0x16>

080005ac <__aeabi_l2d>:
 80005ac:	ea50 0201 	orrs.w	r2, r0, r1
 80005b0:	bf08      	it	eq
 80005b2:	4770      	bxeq	lr
 80005b4:	b530      	push	{r4, r5, lr}
 80005b6:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80005ba:	d502      	bpl.n	80005c2 <__aeabi_l2d+0x16>
 80005bc:	4240      	negs	r0, r0
 80005be:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005c2:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80005c6:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80005ca:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005ce:	f43f aed8 	beq.w	8000382 <__adddf3+0xe6>
 80005d2:	f04f 0203 	mov.w	r2, #3
 80005d6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005da:	bf18      	it	ne
 80005dc:	3203      	addne	r2, #3
 80005de:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005e2:	bf18      	it	ne
 80005e4:	3203      	addne	r2, #3
 80005e6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80005ea:	f1c2 0320 	rsb	r3, r2, #32
 80005ee:	fa00 fc03 	lsl.w	ip, r0, r3
 80005f2:	fa20 f002 	lsr.w	r0, r0, r2
 80005f6:	fa01 fe03 	lsl.w	lr, r1, r3
 80005fa:	ea40 000e 	orr.w	r0, r0, lr
 80005fe:	fa21 f102 	lsr.w	r1, r1, r2
 8000602:	4414      	add	r4, r2
 8000604:	e6bd      	b.n	8000382 <__adddf3+0xe6>
 8000606:	bf00      	nop

08000608 <__aeabi_dmul>:
 8000608:	b570      	push	{r4, r5, r6, lr}
 800060a:	f04f 0cff 	mov.w	ip, #255	; 0xff
 800060e:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000612:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000616:	bf1d      	ittte	ne
 8000618:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800061c:	ea94 0f0c 	teqne	r4, ip
 8000620:	ea95 0f0c 	teqne	r5, ip
 8000624:	f000 f8de 	bleq	80007e4 <__aeabi_dmul+0x1dc>
 8000628:	442c      	add	r4, r5
 800062a:	ea81 0603 	eor.w	r6, r1, r3
 800062e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000632:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000636:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800063a:	bf18      	it	ne
 800063c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000640:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000644:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000648:	d038      	beq.n	80006bc <__aeabi_dmul+0xb4>
 800064a:	fba0 ce02 	umull	ip, lr, r0, r2
 800064e:	f04f 0500 	mov.w	r5, #0
 8000652:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000656:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800065a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800065e:	f04f 0600 	mov.w	r6, #0
 8000662:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000666:	f09c 0f00 	teq	ip, #0
 800066a:	bf18      	it	ne
 800066c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000670:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 8000674:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 8000678:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 800067c:	d204      	bcs.n	8000688 <__aeabi_dmul+0x80>
 800067e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000682:	416d      	adcs	r5, r5
 8000684:	eb46 0606 	adc.w	r6, r6, r6
 8000688:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800068c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000690:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000694:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000698:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 800069c:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80006a0:	bf88      	it	hi
 80006a2:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80006a6:	d81e      	bhi.n	80006e6 <__aeabi_dmul+0xde>
 80006a8:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 80006ac:	bf08      	it	eq
 80006ae:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006b2:	f150 0000 	adcs.w	r0, r0, #0
 80006b6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006ba:	bd70      	pop	{r4, r5, r6, pc}
 80006bc:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 80006c0:	ea46 0101 	orr.w	r1, r6, r1
 80006c4:	ea40 0002 	orr.w	r0, r0, r2
 80006c8:	ea81 0103 	eor.w	r1, r1, r3
 80006cc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80006d0:	bfc2      	ittt	gt
 80006d2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80006d6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80006da:	bd70      	popgt	{r4, r5, r6, pc}
 80006dc:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80006e0:	f04f 0e00 	mov.w	lr, #0
 80006e4:	3c01      	subs	r4, #1
 80006e6:	f300 80ab 	bgt.w	8000840 <__aeabi_dmul+0x238>
 80006ea:	f114 0f36 	cmn.w	r4, #54	; 0x36
 80006ee:	bfde      	ittt	le
 80006f0:	2000      	movle	r0, #0
 80006f2:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 80006f6:	bd70      	pople	{r4, r5, r6, pc}
 80006f8:	f1c4 0400 	rsb	r4, r4, #0
 80006fc:	3c20      	subs	r4, #32
 80006fe:	da35      	bge.n	800076c <__aeabi_dmul+0x164>
 8000700:	340c      	adds	r4, #12
 8000702:	dc1b      	bgt.n	800073c <__aeabi_dmul+0x134>
 8000704:	f104 0414 	add.w	r4, r4, #20
 8000708:	f1c4 0520 	rsb	r5, r4, #32
 800070c:	fa00 f305 	lsl.w	r3, r0, r5
 8000710:	fa20 f004 	lsr.w	r0, r0, r4
 8000714:	fa01 f205 	lsl.w	r2, r1, r5
 8000718:	ea40 0002 	orr.w	r0, r0, r2
 800071c:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000720:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000724:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000728:	fa21 f604 	lsr.w	r6, r1, r4
 800072c:	eb42 0106 	adc.w	r1, r2, r6
 8000730:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000734:	bf08      	it	eq
 8000736:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800073a:	bd70      	pop	{r4, r5, r6, pc}
 800073c:	f1c4 040c 	rsb	r4, r4, #12
 8000740:	f1c4 0520 	rsb	r5, r4, #32
 8000744:	fa00 f304 	lsl.w	r3, r0, r4
 8000748:	fa20 f005 	lsr.w	r0, r0, r5
 800074c:	fa01 f204 	lsl.w	r2, r1, r4
 8000750:	ea40 0002 	orr.w	r0, r0, r2
 8000754:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000758:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800075c:	f141 0100 	adc.w	r1, r1, #0
 8000760:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000764:	bf08      	it	eq
 8000766:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800076a:	bd70      	pop	{r4, r5, r6, pc}
 800076c:	f1c4 0520 	rsb	r5, r4, #32
 8000770:	fa00 f205 	lsl.w	r2, r0, r5
 8000774:	ea4e 0e02 	orr.w	lr, lr, r2
 8000778:	fa20 f304 	lsr.w	r3, r0, r4
 800077c:	fa01 f205 	lsl.w	r2, r1, r5
 8000780:	ea43 0302 	orr.w	r3, r3, r2
 8000784:	fa21 f004 	lsr.w	r0, r1, r4
 8000788:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800078c:	fa21 f204 	lsr.w	r2, r1, r4
 8000790:	ea20 0002 	bic.w	r0, r0, r2
 8000794:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000798:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800079c:	bf08      	it	eq
 800079e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007a2:	bd70      	pop	{r4, r5, r6, pc}
 80007a4:	f094 0f00 	teq	r4, #0
 80007a8:	d10f      	bne.n	80007ca <__aeabi_dmul+0x1c2>
 80007aa:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 80007ae:	0040      	lsls	r0, r0, #1
 80007b0:	eb41 0101 	adc.w	r1, r1, r1
 80007b4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80007b8:	bf08      	it	eq
 80007ba:	3c01      	subeq	r4, #1
 80007bc:	d0f7      	beq.n	80007ae <__aeabi_dmul+0x1a6>
 80007be:	ea41 0106 	orr.w	r1, r1, r6
 80007c2:	f095 0f00 	teq	r5, #0
 80007c6:	bf18      	it	ne
 80007c8:	4770      	bxne	lr
 80007ca:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 80007ce:	0052      	lsls	r2, r2, #1
 80007d0:	eb43 0303 	adc.w	r3, r3, r3
 80007d4:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 80007d8:	bf08      	it	eq
 80007da:	3d01      	subeq	r5, #1
 80007dc:	d0f7      	beq.n	80007ce <__aeabi_dmul+0x1c6>
 80007de:	ea43 0306 	orr.w	r3, r3, r6
 80007e2:	4770      	bx	lr
 80007e4:	ea94 0f0c 	teq	r4, ip
 80007e8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80007ec:	bf18      	it	ne
 80007ee:	ea95 0f0c 	teqne	r5, ip
 80007f2:	d00c      	beq.n	800080e <__aeabi_dmul+0x206>
 80007f4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80007f8:	bf18      	it	ne
 80007fa:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80007fe:	d1d1      	bne.n	80007a4 <__aeabi_dmul+0x19c>
 8000800:	ea81 0103 	eor.w	r1, r1, r3
 8000804:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000808:	f04f 0000 	mov.w	r0, #0
 800080c:	bd70      	pop	{r4, r5, r6, pc}
 800080e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000812:	bf06      	itte	eq
 8000814:	4610      	moveq	r0, r2
 8000816:	4619      	moveq	r1, r3
 8000818:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800081c:	d019      	beq.n	8000852 <__aeabi_dmul+0x24a>
 800081e:	ea94 0f0c 	teq	r4, ip
 8000822:	d102      	bne.n	800082a <__aeabi_dmul+0x222>
 8000824:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000828:	d113      	bne.n	8000852 <__aeabi_dmul+0x24a>
 800082a:	ea95 0f0c 	teq	r5, ip
 800082e:	d105      	bne.n	800083c <__aeabi_dmul+0x234>
 8000830:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000834:	bf1c      	itt	ne
 8000836:	4610      	movne	r0, r2
 8000838:	4619      	movne	r1, r3
 800083a:	d10a      	bne.n	8000852 <__aeabi_dmul+0x24a>
 800083c:	ea81 0103 	eor.w	r1, r1, r3
 8000840:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000844:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000848:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800084c:	f04f 0000 	mov.w	r0, #0
 8000850:	bd70      	pop	{r4, r5, r6, pc}
 8000852:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000856:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800085a:	bd70      	pop	{r4, r5, r6, pc}

0800085c <__aeabi_ddiv>:
 800085c:	b570      	push	{r4, r5, r6, lr}
 800085e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000862:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000866:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800086a:	bf1d      	ittte	ne
 800086c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000870:	ea94 0f0c 	teqne	r4, ip
 8000874:	ea95 0f0c 	teqne	r5, ip
 8000878:	f000 f8a7 	bleq	80009ca <__aeabi_ddiv+0x16e>
 800087c:	eba4 0405 	sub.w	r4, r4, r5
 8000880:	ea81 0e03 	eor.w	lr, r1, r3
 8000884:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000888:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800088c:	f000 8088 	beq.w	80009a0 <__aeabi_ddiv+0x144>
 8000890:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000894:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 8000898:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 800089c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80008a0:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80008a4:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80008a8:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80008ac:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008b0:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 80008b4:	429d      	cmp	r5, r3
 80008b6:	bf08      	it	eq
 80008b8:	4296      	cmpeq	r6, r2
 80008ba:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 80008be:	f504 7440 	add.w	r4, r4, #768	; 0x300
 80008c2:	d202      	bcs.n	80008ca <__aeabi_ddiv+0x6e>
 80008c4:	085b      	lsrs	r3, r3, #1
 80008c6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008ca:	1ab6      	subs	r6, r6, r2
 80008cc:	eb65 0503 	sbc.w	r5, r5, r3
 80008d0:	085b      	lsrs	r3, r3, #1
 80008d2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008d6:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 80008da:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 80008de:	ebb6 0e02 	subs.w	lr, r6, r2
 80008e2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008e6:	bf22      	ittt	cs
 80008e8:	1ab6      	subcs	r6, r6, r2
 80008ea:	4675      	movcs	r5, lr
 80008ec:	ea40 000c 	orrcs.w	r0, r0, ip
 80008f0:	085b      	lsrs	r3, r3, #1
 80008f2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008f6:	ebb6 0e02 	subs.w	lr, r6, r2
 80008fa:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008fe:	bf22      	ittt	cs
 8000900:	1ab6      	subcs	r6, r6, r2
 8000902:	4675      	movcs	r5, lr
 8000904:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000908:	085b      	lsrs	r3, r3, #1
 800090a:	ea4f 0232 	mov.w	r2, r2, rrx
 800090e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000912:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000916:	bf22      	ittt	cs
 8000918:	1ab6      	subcs	r6, r6, r2
 800091a:	4675      	movcs	r5, lr
 800091c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000920:	085b      	lsrs	r3, r3, #1
 8000922:	ea4f 0232 	mov.w	r2, r2, rrx
 8000926:	ebb6 0e02 	subs.w	lr, r6, r2
 800092a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800092e:	bf22      	ittt	cs
 8000930:	1ab6      	subcs	r6, r6, r2
 8000932:	4675      	movcs	r5, lr
 8000934:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000938:	ea55 0e06 	orrs.w	lr, r5, r6
 800093c:	d018      	beq.n	8000970 <__aeabi_ddiv+0x114>
 800093e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000942:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000946:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800094a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800094e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000952:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000956:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800095a:	d1c0      	bne.n	80008de <__aeabi_ddiv+0x82>
 800095c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000960:	d10b      	bne.n	800097a <__aeabi_ddiv+0x11e>
 8000962:	ea41 0100 	orr.w	r1, r1, r0
 8000966:	f04f 0000 	mov.w	r0, #0
 800096a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 800096e:	e7b6      	b.n	80008de <__aeabi_ddiv+0x82>
 8000970:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000974:	bf04      	itt	eq
 8000976:	4301      	orreq	r1, r0
 8000978:	2000      	moveq	r0, #0
 800097a:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 800097e:	bf88      	it	hi
 8000980:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000984:	f63f aeaf 	bhi.w	80006e6 <__aeabi_dmul+0xde>
 8000988:	ebb5 0c03 	subs.w	ip, r5, r3
 800098c:	bf04      	itt	eq
 800098e:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000992:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000996:	f150 0000 	adcs.w	r0, r0, #0
 800099a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800099e:	bd70      	pop	{r4, r5, r6, pc}
 80009a0:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 80009a4:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80009a8:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80009ac:	bfc2      	ittt	gt
 80009ae:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009b2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009b6:	bd70      	popgt	{r4, r5, r6, pc}
 80009b8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80009bc:	f04f 0e00 	mov.w	lr, #0
 80009c0:	3c01      	subs	r4, #1
 80009c2:	e690      	b.n	80006e6 <__aeabi_dmul+0xde>
 80009c4:	ea45 0e06 	orr.w	lr, r5, r6
 80009c8:	e68d      	b.n	80006e6 <__aeabi_dmul+0xde>
 80009ca:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009ce:	ea94 0f0c 	teq	r4, ip
 80009d2:	bf08      	it	eq
 80009d4:	ea95 0f0c 	teqeq	r5, ip
 80009d8:	f43f af3b 	beq.w	8000852 <__aeabi_dmul+0x24a>
 80009dc:	ea94 0f0c 	teq	r4, ip
 80009e0:	d10a      	bne.n	80009f8 <__aeabi_ddiv+0x19c>
 80009e2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80009e6:	f47f af34 	bne.w	8000852 <__aeabi_dmul+0x24a>
 80009ea:	ea95 0f0c 	teq	r5, ip
 80009ee:	f47f af25 	bne.w	800083c <__aeabi_dmul+0x234>
 80009f2:	4610      	mov	r0, r2
 80009f4:	4619      	mov	r1, r3
 80009f6:	e72c      	b.n	8000852 <__aeabi_dmul+0x24a>
 80009f8:	ea95 0f0c 	teq	r5, ip
 80009fc:	d106      	bne.n	8000a0c <__aeabi_ddiv+0x1b0>
 80009fe:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000a02:	f43f aefd 	beq.w	8000800 <__aeabi_dmul+0x1f8>
 8000a06:	4610      	mov	r0, r2
 8000a08:	4619      	mov	r1, r3
 8000a0a:	e722      	b.n	8000852 <__aeabi_dmul+0x24a>
 8000a0c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a10:	bf18      	it	ne
 8000a12:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a16:	f47f aec5 	bne.w	80007a4 <__aeabi_dmul+0x19c>
 8000a1a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a1e:	f47f af0d 	bne.w	800083c <__aeabi_dmul+0x234>
 8000a22:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a26:	f47f aeeb 	bne.w	8000800 <__aeabi_dmul+0x1f8>
 8000a2a:	e712      	b.n	8000852 <__aeabi_dmul+0x24a>

08000a2c <__gedf2>:
 8000a2c:	f04f 3cff 	mov.w	ip, #4294967295
 8000a30:	e006      	b.n	8000a40 <__cmpdf2+0x4>
 8000a32:	bf00      	nop

08000a34 <__ledf2>:
 8000a34:	f04f 0c01 	mov.w	ip, #1
 8000a38:	e002      	b.n	8000a40 <__cmpdf2+0x4>
 8000a3a:	bf00      	nop

08000a3c <__cmpdf2>:
 8000a3c:	f04f 0c01 	mov.w	ip, #1
 8000a40:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a44:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a48:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a4c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a50:	bf18      	it	ne
 8000a52:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a56:	d01b      	beq.n	8000a90 <__cmpdf2+0x54>
 8000a58:	b001      	add	sp, #4
 8000a5a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a5e:	bf0c      	ite	eq
 8000a60:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a64:	ea91 0f03 	teqne	r1, r3
 8000a68:	bf02      	ittt	eq
 8000a6a:	ea90 0f02 	teqeq	r0, r2
 8000a6e:	2000      	moveq	r0, #0
 8000a70:	4770      	bxeq	lr
 8000a72:	f110 0f00 	cmn.w	r0, #0
 8000a76:	ea91 0f03 	teq	r1, r3
 8000a7a:	bf58      	it	pl
 8000a7c:	4299      	cmppl	r1, r3
 8000a7e:	bf08      	it	eq
 8000a80:	4290      	cmpeq	r0, r2
 8000a82:	bf2c      	ite	cs
 8000a84:	17d8      	asrcs	r0, r3, #31
 8000a86:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000a8a:	f040 0001 	orr.w	r0, r0, #1
 8000a8e:	4770      	bx	lr
 8000a90:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a94:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a98:	d102      	bne.n	8000aa0 <__cmpdf2+0x64>
 8000a9a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a9e:	d107      	bne.n	8000ab0 <__cmpdf2+0x74>
 8000aa0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000aa4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000aa8:	d1d6      	bne.n	8000a58 <__cmpdf2+0x1c>
 8000aaa:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000aae:	d0d3      	beq.n	8000a58 <__cmpdf2+0x1c>
 8000ab0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000ab4:	4770      	bx	lr
 8000ab6:	bf00      	nop

08000ab8 <__aeabi_cdrcmple>:
 8000ab8:	4684      	mov	ip, r0
 8000aba:	4610      	mov	r0, r2
 8000abc:	4662      	mov	r2, ip
 8000abe:	468c      	mov	ip, r1
 8000ac0:	4619      	mov	r1, r3
 8000ac2:	4663      	mov	r3, ip
 8000ac4:	e000      	b.n	8000ac8 <__aeabi_cdcmpeq>
 8000ac6:	bf00      	nop

08000ac8 <__aeabi_cdcmpeq>:
 8000ac8:	b501      	push	{r0, lr}
 8000aca:	f7ff ffb7 	bl	8000a3c <__cmpdf2>
 8000ace:	2800      	cmp	r0, #0
 8000ad0:	bf48      	it	mi
 8000ad2:	f110 0f00 	cmnmi.w	r0, #0
 8000ad6:	bd01      	pop	{r0, pc}

08000ad8 <__aeabi_dcmpeq>:
 8000ad8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000adc:	f7ff fff4 	bl	8000ac8 <__aeabi_cdcmpeq>
 8000ae0:	bf0c      	ite	eq
 8000ae2:	2001      	moveq	r0, #1
 8000ae4:	2000      	movne	r0, #0
 8000ae6:	f85d fb08 	ldr.w	pc, [sp], #8
 8000aea:	bf00      	nop

08000aec <__aeabi_dcmplt>:
 8000aec:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000af0:	f7ff ffea 	bl	8000ac8 <__aeabi_cdcmpeq>
 8000af4:	bf34      	ite	cc
 8000af6:	2001      	movcc	r0, #1
 8000af8:	2000      	movcs	r0, #0
 8000afa:	f85d fb08 	ldr.w	pc, [sp], #8
 8000afe:	bf00      	nop

08000b00 <__aeabi_dcmple>:
 8000b00:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b04:	f7ff ffe0 	bl	8000ac8 <__aeabi_cdcmpeq>
 8000b08:	bf94      	ite	ls
 8000b0a:	2001      	movls	r0, #1
 8000b0c:	2000      	movhi	r0, #0
 8000b0e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b12:	bf00      	nop

08000b14 <__aeabi_dcmpge>:
 8000b14:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b18:	f7ff ffce 	bl	8000ab8 <__aeabi_cdrcmple>
 8000b1c:	bf94      	ite	ls
 8000b1e:	2001      	movls	r0, #1
 8000b20:	2000      	movhi	r0, #0
 8000b22:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b26:	bf00      	nop

08000b28 <__aeabi_dcmpgt>:
 8000b28:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b2c:	f7ff ffc4 	bl	8000ab8 <__aeabi_cdrcmple>
 8000b30:	bf34      	ite	cc
 8000b32:	2001      	movcc	r0, #1
 8000b34:	2000      	movcs	r0, #0
 8000b36:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b3a:	bf00      	nop

08000b3c <__aeabi_dcmpun>:
 8000b3c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b40:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b44:	d102      	bne.n	8000b4c <__aeabi_dcmpun+0x10>
 8000b46:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b4a:	d10a      	bne.n	8000b62 <__aeabi_dcmpun+0x26>
 8000b4c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b50:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b54:	d102      	bne.n	8000b5c <__aeabi_dcmpun+0x20>
 8000b56:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b5a:	d102      	bne.n	8000b62 <__aeabi_dcmpun+0x26>
 8000b5c:	f04f 0000 	mov.w	r0, #0
 8000b60:	4770      	bx	lr
 8000b62:	f04f 0001 	mov.w	r0, #1
 8000b66:	4770      	bx	lr

08000b68 <__aeabi_d2iz>:
 8000b68:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b6c:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000b70:	d215      	bcs.n	8000b9e <__aeabi_d2iz+0x36>
 8000b72:	d511      	bpl.n	8000b98 <__aeabi_d2iz+0x30>
 8000b74:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000b78:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000b7c:	d912      	bls.n	8000ba4 <__aeabi_d2iz+0x3c>
 8000b7e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b82:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000b86:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000b8a:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000b8e:	fa23 f002 	lsr.w	r0, r3, r2
 8000b92:	bf18      	it	ne
 8000b94:	4240      	negne	r0, r0
 8000b96:	4770      	bx	lr
 8000b98:	f04f 0000 	mov.w	r0, #0
 8000b9c:	4770      	bx	lr
 8000b9e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000ba2:	d105      	bne.n	8000bb0 <__aeabi_d2iz+0x48>
 8000ba4:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000ba8:	bf08      	it	eq
 8000baa:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000bae:	4770      	bx	lr
 8000bb0:	f04f 0000 	mov.w	r0, #0
 8000bb4:	4770      	bx	lr
 8000bb6:	bf00      	nop

08000bb8 <__aeabi_d2uiz>:
 8000bb8:	004a      	lsls	r2, r1, #1
 8000bba:	d211      	bcs.n	8000be0 <__aeabi_d2uiz+0x28>
 8000bbc:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000bc0:	d211      	bcs.n	8000be6 <__aeabi_d2uiz+0x2e>
 8000bc2:	d50d      	bpl.n	8000be0 <__aeabi_d2uiz+0x28>
 8000bc4:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000bc8:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000bcc:	d40e      	bmi.n	8000bec <__aeabi_d2uiz+0x34>
 8000bce:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000bd2:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000bd6:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000bda:	fa23 f002 	lsr.w	r0, r3, r2
 8000bde:	4770      	bx	lr
 8000be0:	f04f 0000 	mov.w	r0, #0
 8000be4:	4770      	bx	lr
 8000be6:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000bea:	d102      	bne.n	8000bf2 <__aeabi_d2uiz+0x3a>
 8000bec:	f04f 30ff 	mov.w	r0, #4294967295
 8000bf0:	4770      	bx	lr
 8000bf2:	f04f 0000 	mov.w	r0, #0
 8000bf6:	4770      	bx	lr

08000bf8 <__aeabi_d2f>:
 8000bf8:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000bfc:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8000c00:	bf24      	itt	cs
 8000c02:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 8000c06:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 8000c0a:	d90d      	bls.n	8000c28 <__aeabi_d2f+0x30>
 8000c0c:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000c10:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000c14:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000c18:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8000c1c:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000c20:	bf08      	it	eq
 8000c22:	f020 0001 	biceq.w	r0, r0, #1
 8000c26:	4770      	bx	lr
 8000c28:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8000c2c:	d121      	bne.n	8000c72 <__aeabi_d2f+0x7a>
 8000c2e:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 8000c32:	bfbc      	itt	lt
 8000c34:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 8000c38:	4770      	bxlt	lr
 8000c3a:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000c3e:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000c42:	f1c2 0218 	rsb	r2, r2, #24
 8000c46:	f1c2 0c20 	rsb	ip, r2, #32
 8000c4a:	fa10 f30c 	lsls.w	r3, r0, ip
 8000c4e:	fa20 f002 	lsr.w	r0, r0, r2
 8000c52:	bf18      	it	ne
 8000c54:	f040 0001 	orrne.w	r0, r0, #1
 8000c58:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000c5c:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000c60:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000c64:	ea40 000c 	orr.w	r0, r0, ip
 8000c68:	fa23 f302 	lsr.w	r3, r3, r2
 8000c6c:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000c70:	e7cc      	b.n	8000c0c <__aeabi_d2f+0x14>
 8000c72:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000c76:	d107      	bne.n	8000c88 <__aeabi_d2f+0x90>
 8000c78:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000c7c:	bf1e      	ittt	ne
 8000c7e:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 8000c82:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 8000c86:	4770      	bxne	lr
 8000c88:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 8000c8c:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000c90:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000c94:	4770      	bx	lr
 8000c96:	bf00      	nop

08000c98 <__aeabi_uldivmod>:
 8000c98:	b953      	cbnz	r3, 8000cb0 <__aeabi_uldivmod+0x18>
 8000c9a:	b94a      	cbnz	r2, 8000cb0 <__aeabi_uldivmod+0x18>
 8000c9c:	2900      	cmp	r1, #0
 8000c9e:	bf08      	it	eq
 8000ca0:	2800      	cmpeq	r0, #0
 8000ca2:	bf1c      	itt	ne
 8000ca4:	f04f 31ff 	movne.w	r1, #4294967295
 8000ca8:	f04f 30ff 	movne.w	r0, #4294967295
 8000cac:	f000 b9a6 	b.w	8000ffc <__aeabi_idiv0>
 8000cb0:	f1ad 0c08 	sub.w	ip, sp, #8
 8000cb4:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000cb8:	f000 f83c 	bl	8000d34 <__udivmoddi4>
 8000cbc:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000cc0:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000cc4:	b004      	add	sp, #16
 8000cc6:	4770      	bx	lr

08000cc8 <__aeabi_d2lz>:
 8000cc8:	b538      	push	{r3, r4, r5, lr}
 8000cca:	2200      	movs	r2, #0
 8000ccc:	2300      	movs	r3, #0
 8000cce:	4604      	mov	r4, r0
 8000cd0:	460d      	mov	r5, r1
 8000cd2:	f7ff ff0b 	bl	8000aec <__aeabi_dcmplt>
 8000cd6:	b928      	cbnz	r0, 8000ce4 <__aeabi_d2lz+0x1c>
 8000cd8:	4620      	mov	r0, r4
 8000cda:	4629      	mov	r1, r5
 8000cdc:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000ce0:	f000 b80a 	b.w	8000cf8 <__aeabi_d2ulz>
 8000ce4:	4620      	mov	r0, r4
 8000ce6:	f105 4100 	add.w	r1, r5, #2147483648	; 0x80000000
 8000cea:	f000 f805 	bl	8000cf8 <__aeabi_d2ulz>
 8000cee:	4240      	negs	r0, r0
 8000cf0:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000cf4:	bd38      	pop	{r3, r4, r5, pc}
 8000cf6:	bf00      	nop

08000cf8 <__aeabi_d2ulz>:
 8000cf8:	b5d0      	push	{r4, r6, r7, lr}
 8000cfa:	4b0c      	ldr	r3, [pc, #48]	; (8000d2c <__aeabi_d2ulz+0x34>)
 8000cfc:	2200      	movs	r2, #0
 8000cfe:	4606      	mov	r6, r0
 8000d00:	460f      	mov	r7, r1
 8000d02:	f7ff fc81 	bl	8000608 <__aeabi_dmul>
 8000d06:	f7ff ff57 	bl	8000bb8 <__aeabi_d2uiz>
 8000d0a:	4604      	mov	r4, r0
 8000d0c:	f7ff fc02 	bl	8000514 <__aeabi_ui2d>
 8000d10:	4b07      	ldr	r3, [pc, #28]	; (8000d30 <__aeabi_d2ulz+0x38>)
 8000d12:	2200      	movs	r2, #0
 8000d14:	f7ff fc78 	bl	8000608 <__aeabi_dmul>
 8000d18:	4602      	mov	r2, r0
 8000d1a:	460b      	mov	r3, r1
 8000d1c:	4630      	mov	r0, r6
 8000d1e:	4639      	mov	r1, r7
 8000d20:	f7ff faba 	bl	8000298 <__aeabi_dsub>
 8000d24:	f7ff ff48 	bl	8000bb8 <__aeabi_d2uiz>
 8000d28:	4621      	mov	r1, r4
 8000d2a:	bdd0      	pop	{r4, r6, r7, pc}
 8000d2c:	3df00000 	.word	0x3df00000
 8000d30:	41f00000 	.word	0x41f00000

08000d34 <__udivmoddi4>:
 8000d34:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000d38:	9e08      	ldr	r6, [sp, #32]
 8000d3a:	460d      	mov	r5, r1
 8000d3c:	4604      	mov	r4, r0
 8000d3e:	460f      	mov	r7, r1
 8000d40:	2b00      	cmp	r3, #0
 8000d42:	d14a      	bne.n	8000dda <__udivmoddi4+0xa6>
 8000d44:	428a      	cmp	r2, r1
 8000d46:	4694      	mov	ip, r2
 8000d48:	d965      	bls.n	8000e16 <__udivmoddi4+0xe2>
 8000d4a:	fab2 f382 	clz	r3, r2
 8000d4e:	b143      	cbz	r3, 8000d62 <__udivmoddi4+0x2e>
 8000d50:	fa02 fc03 	lsl.w	ip, r2, r3
 8000d54:	f1c3 0220 	rsb	r2, r3, #32
 8000d58:	409f      	lsls	r7, r3
 8000d5a:	fa20 f202 	lsr.w	r2, r0, r2
 8000d5e:	4317      	orrs	r7, r2
 8000d60:	409c      	lsls	r4, r3
 8000d62:	ea4f 4e1c 	mov.w	lr, ip, lsr #16
 8000d66:	fa1f f58c 	uxth.w	r5, ip
 8000d6a:	fbb7 f1fe 	udiv	r1, r7, lr
 8000d6e:	0c22      	lsrs	r2, r4, #16
 8000d70:	fb0e 7711 	mls	r7, lr, r1, r7
 8000d74:	ea42 4207 	orr.w	r2, r2, r7, lsl #16
 8000d78:	fb01 f005 	mul.w	r0, r1, r5
 8000d7c:	4290      	cmp	r0, r2
 8000d7e:	d90a      	bls.n	8000d96 <__udivmoddi4+0x62>
 8000d80:	eb1c 0202 	adds.w	r2, ip, r2
 8000d84:	f101 37ff 	add.w	r7, r1, #4294967295
 8000d88:	f080 811c 	bcs.w	8000fc4 <__udivmoddi4+0x290>
 8000d8c:	4290      	cmp	r0, r2
 8000d8e:	f240 8119 	bls.w	8000fc4 <__udivmoddi4+0x290>
 8000d92:	3902      	subs	r1, #2
 8000d94:	4462      	add	r2, ip
 8000d96:	1a12      	subs	r2, r2, r0
 8000d98:	b2a4      	uxth	r4, r4
 8000d9a:	fbb2 f0fe 	udiv	r0, r2, lr
 8000d9e:	fb0e 2210 	mls	r2, lr, r0, r2
 8000da2:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 8000da6:	fb00 f505 	mul.w	r5, r0, r5
 8000daa:	42a5      	cmp	r5, r4
 8000dac:	d90a      	bls.n	8000dc4 <__udivmoddi4+0x90>
 8000dae:	eb1c 0404 	adds.w	r4, ip, r4
 8000db2:	f100 32ff 	add.w	r2, r0, #4294967295
 8000db6:	f080 8107 	bcs.w	8000fc8 <__udivmoddi4+0x294>
 8000dba:	42a5      	cmp	r5, r4
 8000dbc:	f240 8104 	bls.w	8000fc8 <__udivmoddi4+0x294>
 8000dc0:	4464      	add	r4, ip
 8000dc2:	3802      	subs	r0, #2
 8000dc4:	ea40 4001 	orr.w	r0, r0, r1, lsl #16
 8000dc8:	1b64      	subs	r4, r4, r5
 8000dca:	2100      	movs	r1, #0
 8000dcc:	b11e      	cbz	r6, 8000dd6 <__udivmoddi4+0xa2>
 8000dce:	40dc      	lsrs	r4, r3
 8000dd0:	2300      	movs	r3, #0
 8000dd2:	e9c6 4300 	strd	r4, r3, [r6]
 8000dd6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000dda:	428b      	cmp	r3, r1
 8000ddc:	d908      	bls.n	8000df0 <__udivmoddi4+0xbc>
 8000dde:	2e00      	cmp	r6, #0
 8000de0:	f000 80ed 	beq.w	8000fbe <__udivmoddi4+0x28a>
 8000de4:	2100      	movs	r1, #0
 8000de6:	e9c6 0500 	strd	r0, r5, [r6]
 8000dea:	4608      	mov	r0, r1
 8000dec:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000df0:	fab3 f183 	clz	r1, r3
 8000df4:	2900      	cmp	r1, #0
 8000df6:	d149      	bne.n	8000e8c <__udivmoddi4+0x158>
 8000df8:	42ab      	cmp	r3, r5
 8000dfa:	d302      	bcc.n	8000e02 <__udivmoddi4+0xce>
 8000dfc:	4282      	cmp	r2, r0
 8000dfe:	f200 80f8 	bhi.w	8000ff2 <__udivmoddi4+0x2be>
 8000e02:	1a84      	subs	r4, r0, r2
 8000e04:	eb65 0203 	sbc.w	r2, r5, r3
 8000e08:	2001      	movs	r0, #1
 8000e0a:	4617      	mov	r7, r2
 8000e0c:	2e00      	cmp	r6, #0
 8000e0e:	d0e2      	beq.n	8000dd6 <__udivmoddi4+0xa2>
 8000e10:	e9c6 4700 	strd	r4, r7, [r6]
 8000e14:	e7df      	b.n	8000dd6 <__udivmoddi4+0xa2>
 8000e16:	b902      	cbnz	r2, 8000e1a <__udivmoddi4+0xe6>
 8000e18:	deff      	udf	#255	; 0xff
 8000e1a:	fab2 f382 	clz	r3, r2
 8000e1e:	2b00      	cmp	r3, #0
 8000e20:	f040 8090 	bne.w	8000f44 <__udivmoddi4+0x210>
 8000e24:	1a8a      	subs	r2, r1, r2
 8000e26:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000e2a:	fa1f fe8c 	uxth.w	lr, ip
 8000e2e:	2101      	movs	r1, #1
 8000e30:	fbb2 f5f7 	udiv	r5, r2, r7
 8000e34:	fb07 2015 	mls	r0, r7, r5, r2
 8000e38:	0c22      	lsrs	r2, r4, #16
 8000e3a:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8000e3e:	fb0e f005 	mul.w	r0, lr, r5
 8000e42:	4290      	cmp	r0, r2
 8000e44:	d908      	bls.n	8000e58 <__udivmoddi4+0x124>
 8000e46:	eb1c 0202 	adds.w	r2, ip, r2
 8000e4a:	f105 38ff 	add.w	r8, r5, #4294967295
 8000e4e:	d202      	bcs.n	8000e56 <__udivmoddi4+0x122>
 8000e50:	4290      	cmp	r0, r2
 8000e52:	f200 80cb 	bhi.w	8000fec <__udivmoddi4+0x2b8>
 8000e56:	4645      	mov	r5, r8
 8000e58:	1a12      	subs	r2, r2, r0
 8000e5a:	b2a4      	uxth	r4, r4
 8000e5c:	fbb2 f0f7 	udiv	r0, r2, r7
 8000e60:	fb07 2210 	mls	r2, r7, r0, r2
 8000e64:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 8000e68:	fb0e fe00 	mul.w	lr, lr, r0
 8000e6c:	45a6      	cmp	lr, r4
 8000e6e:	d908      	bls.n	8000e82 <__udivmoddi4+0x14e>
 8000e70:	eb1c 0404 	adds.w	r4, ip, r4
 8000e74:	f100 32ff 	add.w	r2, r0, #4294967295
 8000e78:	d202      	bcs.n	8000e80 <__udivmoddi4+0x14c>
 8000e7a:	45a6      	cmp	lr, r4
 8000e7c:	f200 80bb 	bhi.w	8000ff6 <__udivmoddi4+0x2c2>
 8000e80:	4610      	mov	r0, r2
 8000e82:	eba4 040e 	sub.w	r4, r4, lr
 8000e86:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 8000e8a:	e79f      	b.n	8000dcc <__udivmoddi4+0x98>
 8000e8c:	f1c1 0720 	rsb	r7, r1, #32
 8000e90:	408b      	lsls	r3, r1
 8000e92:	fa22 fc07 	lsr.w	ip, r2, r7
 8000e96:	ea4c 0c03 	orr.w	ip, ip, r3
 8000e9a:	fa05 f401 	lsl.w	r4, r5, r1
 8000e9e:	fa20 f307 	lsr.w	r3, r0, r7
 8000ea2:	40fd      	lsrs	r5, r7
 8000ea4:	ea4f 491c 	mov.w	r9, ip, lsr #16
 8000ea8:	4323      	orrs	r3, r4
 8000eaa:	fbb5 f8f9 	udiv	r8, r5, r9
 8000eae:	fa1f fe8c 	uxth.w	lr, ip
 8000eb2:	fb09 5518 	mls	r5, r9, r8, r5
 8000eb6:	0c1c      	lsrs	r4, r3, #16
 8000eb8:	ea44 4405 	orr.w	r4, r4, r5, lsl #16
 8000ebc:	fb08 f50e 	mul.w	r5, r8, lr
 8000ec0:	42a5      	cmp	r5, r4
 8000ec2:	fa02 f201 	lsl.w	r2, r2, r1
 8000ec6:	fa00 f001 	lsl.w	r0, r0, r1
 8000eca:	d90b      	bls.n	8000ee4 <__udivmoddi4+0x1b0>
 8000ecc:	eb1c 0404 	adds.w	r4, ip, r4
 8000ed0:	f108 3aff 	add.w	sl, r8, #4294967295
 8000ed4:	f080 8088 	bcs.w	8000fe8 <__udivmoddi4+0x2b4>
 8000ed8:	42a5      	cmp	r5, r4
 8000eda:	f240 8085 	bls.w	8000fe8 <__udivmoddi4+0x2b4>
 8000ede:	f1a8 0802 	sub.w	r8, r8, #2
 8000ee2:	4464      	add	r4, ip
 8000ee4:	1b64      	subs	r4, r4, r5
 8000ee6:	b29d      	uxth	r5, r3
 8000ee8:	fbb4 f3f9 	udiv	r3, r4, r9
 8000eec:	fb09 4413 	mls	r4, r9, r3, r4
 8000ef0:	ea45 4404 	orr.w	r4, r5, r4, lsl #16
 8000ef4:	fb03 fe0e 	mul.w	lr, r3, lr
 8000ef8:	45a6      	cmp	lr, r4
 8000efa:	d908      	bls.n	8000f0e <__udivmoddi4+0x1da>
 8000efc:	eb1c 0404 	adds.w	r4, ip, r4
 8000f00:	f103 35ff 	add.w	r5, r3, #4294967295
 8000f04:	d26c      	bcs.n	8000fe0 <__udivmoddi4+0x2ac>
 8000f06:	45a6      	cmp	lr, r4
 8000f08:	d96a      	bls.n	8000fe0 <__udivmoddi4+0x2ac>
 8000f0a:	3b02      	subs	r3, #2
 8000f0c:	4464      	add	r4, ip
 8000f0e:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 8000f12:	fba3 9502 	umull	r9, r5, r3, r2
 8000f16:	eba4 040e 	sub.w	r4, r4, lr
 8000f1a:	42ac      	cmp	r4, r5
 8000f1c:	46c8      	mov	r8, r9
 8000f1e:	46ae      	mov	lr, r5
 8000f20:	d356      	bcc.n	8000fd0 <__udivmoddi4+0x29c>
 8000f22:	d053      	beq.n	8000fcc <__udivmoddi4+0x298>
 8000f24:	b156      	cbz	r6, 8000f3c <__udivmoddi4+0x208>
 8000f26:	ebb0 0208 	subs.w	r2, r0, r8
 8000f2a:	eb64 040e 	sbc.w	r4, r4, lr
 8000f2e:	fa04 f707 	lsl.w	r7, r4, r7
 8000f32:	40ca      	lsrs	r2, r1
 8000f34:	40cc      	lsrs	r4, r1
 8000f36:	4317      	orrs	r7, r2
 8000f38:	e9c6 7400 	strd	r7, r4, [r6]
 8000f3c:	4618      	mov	r0, r3
 8000f3e:	2100      	movs	r1, #0
 8000f40:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000f44:	f1c3 0120 	rsb	r1, r3, #32
 8000f48:	fa02 fc03 	lsl.w	ip, r2, r3
 8000f4c:	fa20 f201 	lsr.w	r2, r0, r1
 8000f50:	fa25 f101 	lsr.w	r1, r5, r1
 8000f54:	409d      	lsls	r5, r3
 8000f56:	432a      	orrs	r2, r5
 8000f58:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000f5c:	fa1f fe8c 	uxth.w	lr, ip
 8000f60:	fbb1 f0f7 	udiv	r0, r1, r7
 8000f64:	fb07 1510 	mls	r5, r7, r0, r1
 8000f68:	0c11      	lsrs	r1, r2, #16
 8000f6a:	ea41 4105 	orr.w	r1, r1, r5, lsl #16
 8000f6e:	fb00 f50e 	mul.w	r5, r0, lr
 8000f72:	428d      	cmp	r5, r1
 8000f74:	fa04 f403 	lsl.w	r4, r4, r3
 8000f78:	d908      	bls.n	8000f8c <__udivmoddi4+0x258>
 8000f7a:	eb1c 0101 	adds.w	r1, ip, r1
 8000f7e:	f100 38ff 	add.w	r8, r0, #4294967295
 8000f82:	d22f      	bcs.n	8000fe4 <__udivmoddi4+0x2b0>
 8000f84:	428d      	cmp	r5, r1
 8000f86:	d92d      	bls.n	8000fe4 <__udivmoddi4+0x2b0>
 8000f88:	3802      	subs	r0, #2
 8000f8a:	4461      	add	r1, ip
 8000f8c:	1b49      	subs	r1, r1, r5
 8000f8e:	b292      	uxth	r2, r2
 8000f90:	fbb1 f5f7 	udiv	r5, r1, r7
 8000f94:	fb07 1115 	mls	r1, r7, r5, r1
 8000f98:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8000f9c:	fb05 f10e 	mul.w	r1, r5, lr
 8000fa0:	4291      	cmp	r1, r2
 8000fa2:	d908      	bls.n	8000fb6 <__udivmoddi4+0x282>
 8000fa4:	eb1c 0202 	adds.w	r2, ip, r2
 8000fa8:	f105 38ff 	add.w	r8, r5, #4294967295
 8000fac:	d216      	bcs.n	8000fdc <__udivmoddi4+0x2a8>
 8000fae:	4291      	cmp	r1, r2
 8000fb0:	d914      	bls.n	8000fdc <__udivmoddi4+0x2a8>
 8000fb2:	3d02      	subs	r5, #2
 8000fb4:	4462      	add	r2, ip
 8000fb6:	1a52      	subs	r2, r2, r1
 8000fb8:	ea45 4100 	orr.w	r1, r5, r0, lsl #16
 8000fbc:	e738      	b.n	8000e30 <__udivmoddi4+0xfc>
 8000fbe:	4631      	mov	r1, r6
 8000fc0:	4630      	mov	r0, r6
 8000fc2:	e708      	b.n	8000dd6 <__udivmoddi4+0xa2>
 8000fc4:	4639      	mov	r1, r7
 8000fc6:	e6e6      	b.n	8000d96 <__udivmoddi4+0x62>
 8000fc8:	4610      	mov	r0, r2
 8000fca:	e6fb      	b.n	8000dc4 <__udivmoddi4+0x90>
 8000fcc:	4548      	cmp	r0, r9
 8000fce:	d2a9      	bcs.n	8000f24 <__udivmoddi4+0x1f0>
 8000fd0:	ebb9 0802 	subs.w	r8, r9, r2
 8000fd4:	eb65 0e0c 	sbc.w	lr, r5, ip
 8000fd8:	3b01      	subs	r3, #1
 8000fda:	e7a3      	b.n	8000f24 <__udivmoddi4+0x1f0>
 8000fdc:	4645      	mov	r5, r8
 8000fde:	e7ea      	b.n	8000fb6 <__udivmoddi4+0x282>
 8000fe0:	462b      	mov	r3, r5
 8000fe2:	e794      	b.n	8000f0e <__udivmoddi4+0x1da>
 8000fe4:	4640      	mov	r0, r8
 8000fe6:	e7d1      	b.n	8000f8c <__udivmoddi4+0x258>
 8000fe8:	46d0      	mov	r8, sl
 8000fea:	e77b      	b.n	8000ee4 <__udivmoddi4+0x1b0>
 8000fec:	3d02      	subs	r5, #2
 8000fee:	4462      	add	r2, ip
 8000ff0:	e732      	b.n	8000e58 <__udivmoddi4+0x124>
 8000ff2:	4608      	mov	r0, r1
 8000ff4:	e70a      	b.n	8000e0c <__udivmoddi4+0xd8>
 8000ff6:	4464      	add	r4, ip
 8000ff8:	3802      	subs	r0, #2
 8000ffa:	e742      	b.n	8000e82 <__udivmoddi4+0x14e>

08000ffc <__aeabi_idiv0>:
 8000ffc:	4770      	bx	lr
 8000ffe:	bf00      	nop

08001000 <ILI9341_SendCommand>:
 8001000:	b580      	push	{r7, lr}
 8001002:	b084      	sub	sp, #16
 8001004:	af00      	add	r7, sp, #0
 8001006:	4603      	mov	r3, r0
 8001008:	71fb      	strb	r3, [r7, #7]
 800100a:	79fb      	ldrb	r3, [r7, #7]
 800100c:	73fb      	strb	r3, [r7, #15]
 800100e:	4b11      	ldr	r3, [pc, #68]	; (8001054 <ILI9341_SendCommand+0x54>)
 8001010:	681b      	ldr	r3, [r3, #0]
 8001012:	4a11      	ldr	r2, [pc, #68]	; (8001058 <ILI9341_SendCommand+0x58>)
 8001014:	8811      	ldrh	r1, [r2, #0]
 8001016:	2200      	movs	r2, #0
 8001018:	4618      	mov	r0, r3
 800101a:	f004 f87d 	bl	8005118 <HAL_GPIO_WritePin>
 800101e:	4b0f      	ldr	r3, [pc, #60]	; (800105c <ILI9341_SendCommand+0x5c>)
 8001020:	681b      	ldr	r3, [r3, #0]
 8001022:	4a0f      	ldr	r2, [pc, #60]	; (8001060 <ILI9341_SendCommand+0x60>)
 8001024:	8811      	ldrh	r1, [r2, #0]
 8001026:	2200      	movs	r2, #0
 8001028:	4618      	mov	r0, r3
 800102a:	f004 f875 	bl	8005118 <HAL_GPIO_WritePin>
 800102e:	f107 010f 	add.w	r1, r7, #15
 8001032:	2305      	movs	r3, #5
 8001034:	2201      	movs	r2, #1
 8001036:	480b      	ldr	r0, [pc, #44]	; (8001064 <ILI9341_SendCommand+0x64>)
 8001038:	f004 fda9 	bl	8005b8e <HAL_SPI_Transmit>
 800103c:	4b07      	ldr	r3, [pc, #28]	; (800105c <ILI9341_SendCommand+0x5c>)
 800103e:	681b      	ldr	r3, [r3, #0]
 8001040:	4a07      	ldr	r2, [pc, #28]	; (8001060 <ILI9341_SendCommand+0x60>)
 8001042:	8811      	ldrh	r1, [r2, #0]
 8001044:	2201      	movs	r2, #1
 8001046:	4618      	mov	r0, r3
 8001048:	f004 f866 	bl	8005118 <HAL_GPIO_WritePin>
 800104c:	bf00      	nop
 800104e:	3710      	adds	r7, #16
 8001050:	46bd      	mov	sp, r7
 8001052:	bd80      	pop	{r7, pc}
 8001054:	200002c0 	.word	0x200002c0
 8001058:	200002c4 	.word	0x200002c4
 800105c:	200002b8 	.word	0x200002b8
 8001060:	200002bc 	.word	0x200002bc
 8001064:	20000260 	.word	0x20000260

08001068 <ILI9341_SendData>:
 8001068:	b580      	push	{r7, lr}
 800106a:	b084      	sub	sp, #16
 800106c:	af00      	add	r7, sp, #0
 800106e:	4603      	mov	r3, r0
 8001070:	71fb      	strb	r3, [r7, #7]
 8001072:	79fb      	ldrb	r3, [r7, #7]
 8001074:	73fb      	strb	r3, [r7, #15]
 8001076:	4b11      	ldr	r3, [pc, #68]	; (80010bc <ILI9341_SendData+0x54>)
 8001078:	681b      	ldr	r3, [r3, #0]
 800107a:	4a11      	ldr	r2, [pc, #68]	; (80010c0 <ILI9341_SendData+0x58>)
 800107c:	8811      	ldrh	r1, [r2, #0]
 800107e:	2201      	movs	r2, #1
 8001080:	4618      	mov	r0, r3
 8001082:	f004 f849 	bl	8005118 <HAL_GPIO_WritePin>
 8001086:	4b0f      	ldr	r3, [pc, #60]	; (80010c4 <ILI9341_SendData+0x5c>)
 8001088:	681b      	ldr	r3, [r3, #0]
 800108a:	4a0f      	ldr	r2, [pc, #60]	; (80010c8 <ILI9341_SendData+0x60>)
 800108c:	8811      	ldrh	r1, [r2, #0]
 800108e:	2200      	movs	r2, #0
 8001090:	4618      	mov	r0, r3
 8001092:	f004 f841 	bl	8005118 <HAL_GPIO_WritePin>
 8001096:	f107 010f 	add.w	r1, r7, #15
 800109a:	2305      	movs	r3, #5
 800109c:	2201      	movs	r2, #1
 800109e:	480b      	ldr	r0, [pc, #44]	; (80010cc <ILI9341_SendData+0x64>)
 80010a0:	f004 fd75 	bl	8005b8e <HAL_SPI_Transmit>
 80010a4:	4b07      	ldr	r3, [pc, #28]	; (80010c4 <ILI9341_SendData+0x5c>)
 80010a6:	681b      	ldr	r3, [r3, #0]
 80010a8:	4a07      	ldr	r2, [pc, #28]	; (80010c8 <ILI9341_SendData+0x60>)
 80010aa:	8811      	ldrh	r1, [r2, #0]
 80010ac:	2201      	movs	r2, #1
 80010ae:	4618      	mov	r0, r3
 80010b0:	f004 f832 	bl	8005118 <HAL_GPIO_WritePin>
 80010b4:	bf00      	nop
 80010b6:	3710      	adds	r7, #16
 80010b8:	46bd      	mov	sp, r7
 80010ba:	bd80      	pop	{r7, pc}
 80010bc:	200002c0 	.word	0x200002c0
 80010c0:	200002c4 	.word	0x200002c4
 80010c4:	200002b8 	.word	0x200002b8
 80010c8:	200002bc 	.word	0x200002bc
 80010cc:	20000260 	.word	0x20000260

080010d0 <ILI9341_SetCursorPosition>:
 80010d0:	b590      	push	{r4, r7, lr}
 80010d2:	b083      	sub	sp, #12
 80010d4:	af00      	add	r7, sp, #0
 80010d6:	4604      	mov	r4, r0
 80010d8:	4608      	mov	r0, r1
 80010da:	4611      	mov	r1, r2
 80010dc:	461a      	mov	r2, r3
 80010de:	4623      	mov	r3, r4
 80010e0:	80fb      	strh	r3, [r7, #6]
 80010e2:	4603      	mov	r3, r0
 80010e4:	80bb      	strh	r3, [r7, #4]
 80010e6:	460b      	mov	r3, r1
 80010e8:	807b      	strh	r3, [r7, #2]
 80010ea:	4613      	mov	r3, r2
 80010ec:	803b      	strh	r3, [r7, #0]
 80010ee:	202a      	movs	r0, #42	; 0x2a
 80010f0:	f7ff ff86 	bl	8001000 <ILI9341_SendCommand>
 80010f4:	88fb      	ldrh	r3, [r7, #6]
 80010f6:	0a1b      	lsrs	r3, r3, #8
 80010f8:	b29b      	uxth	r3, r3
 80010fa:	b2db      	uxtb	r3, r3
 80010fc:	4618      	mov	r0, r3
 80010fe:	f7ff ffb3 	bl	8001068 <ILI9341_SendData>
 8001102:	88fb      	ldrh	r3, [r7, #6]
 8001104:	b2db      	uxtb	r3, r3
 8001106:	4618      	mov	r0, r3
 8001108:	f7ff ffae 	bl	8001068 <ILI9341_SendData>
 800110c:	887b      	ldrh	r3, [r7, #2]
 800110e:	0a1b      	lsrs	r3, r3, #8
 8001110:	b29b      	uxth	r3, r3
 8001112:	b2db      	uxtb	r3, r3
 8001114:	4618      	mov	r0, r3
 8001116:	f7ff ffa7 	bl	8001068 <ILI9341_SendData>
 800111a:	887b      	ldrh	r3, [r7, #2]
 800111c:	b2db      	uxtb	r3, r3
 800111e:	4618      	mov	r0, r3
 8001120:	f7ff ffa2 	bl	8001068 <ILI9341_SendData>
 8001124:	202b      	movs	r0, #43	; 0x2b
 8001126:	f7ff ff6b 	bl	8001000 <ILI9341_SendCommand>
 800112a:	88bb      	ldrh	r3, [r7, #4]
 800112c:	0a1b      	lsrs	r3, r3, #8
 800112e:	b29b      	uxth	r3, r3
 8001130:	b2db      	uxtb	r3, r3
 8001132:	4618      	mov	r0, r3
 8001134:	f7ff ff98 	bl	8001068 <ILI9341_SendData>
 8001138:	88bb      	ldrh	r3, [r7, #4]
 800113a:	b2db      	uxtb	r3, r3
 800113c:	4618      	mov	r0, r3
 800113e:	f7ff ff93 	bl	8001068 <ILI9341_SendData>
 8001142:	883b      	ldrh	r3, [r7, #0]
 8001144:	0a1b      	lsrs	r3, r3, #8
 8001146:	b29b      	uxth	r3, r3
 8001148:	b2db      	uxtb	r3, r3
 800114a:	4618      	mov	r0, r3
 800114c:	f7ff ff8c 	bl	8001068 <ILI9341_SendData>
 8001150:	883b      	ldrh	r3, [r7, #0]
 8001152:	b2db      	uxtb	r3, r3
 8001154:	4618      	mov	r0, r3
 8001156:	f7ff ff87 	bl	8001068 <ILI9341_SendData>
 800115a:	202c      	movs	r0, #44	; 0x2c
 800115c:	f7ff ff50 	bl	8001000 <ILI9341_SendCommand>
 8001160:	bf00      	nop
 8001162:	370c      	adds	r7, #12
 8001164:	46bd      	mov	sp, r7
 8001166:	bd90      	pop	{r4, r7, pc}

08001168 <ILI9341_Init>:
 8001168:	b580      	push	{r7, lr}
 800116a:	b084      	sub	sp, #16
 800116c:	af00      	add	r7, sp, #0
 800116e:	60f8      	str	r0, [r7, #12]
 8001170:	60b9      	str	r1, [r7, #8]
 8001172:	603b      	str	r3, [r7, #0]
 8001174:	4613      	mov	r3, r2
 8001176:	80fb      	strh	r3, [r7, #6]
 8001178:	2258      	movs	r2, #88	; 0x58
 800117a:	68f9      	ldr	r1, [r7, #12]
 800117c:	4853      	ldr	r0, [pc, #332]	; (80012cc <ILI9341_Init+0x164>)
 800117e:	f009 f8c2 	bl	800a306 <memcpy>
 8001182:	4a53      	ldr	r2, [pc, #332]	; (80012d0 <ILI9341_Init+0x168>)
 8001184:	68bb      	ldr	r3, [r7, #8]
 8001186:	6013      	str	r3, [r2, #0]
 8001188:	4a52      	ldr	r2, [pc, #328]	; (80012d4 <ILI9341_Init+0x16c>)
 800118a:	88fb      	ldrh	r3, [r7, #6]
 800118c:	8013      	strh	r3, [r2, #0]
 800118e:	4a52      	ldr	r2, [pc, #328]	; (80012d8 <ILI9341_Init+0x170>)
 8001190:	683b      	ldr	r3, [r7, #0]
 8001192:	6013      	str	r3, [r2, #0]
 8001194:	4a51      	ldr	r2, [pc, #324]	; (80012dc <ILI9341_Init+0x174>)
 8001196:	8b3b      	ldrh	r3, [r7, #24]
 8001198:	8013      	strh	r3, [r2, #0]
 800119a:	4b4d      	ldr	r3, [pc, #308]	; (80012d0 <ILI9341_Init+0x168>)
 800119c:	681b      	ldr	r3, [r3, #0]
 800119e:	4a4d      	ldr	r2, [pc, #308]	; (80012d4 <ILI9341_Init+0x16c>)
 80011a0:	8811      	ldrh	r1, [r2, #0]
 80011a2:	2201      	movs	r2, #1
 80011a4:	4618      	mov	r0, r3
 80011a6:	f003 ffb7 	bl	8005118 <HAL_GPIO_WritePin>
 80011aa:	4a4d      	ldr	r2, [pc, #308]	; (80012e0 <ILI9341_Init+0x178>)
 80011ac:	69fb      	ldr	r3, [r7, #28]
 80011ae:	6013      	str	r3, [r2, #0]
 80011b0:	4a4c      	ldr	r2, [pc, #304]	; (80012e4 <ILI9341_Init+0x17c>)
 80011b2:	8c3b      	ldrh	r3, [r7, #32]
 80011b4:	8013      	strh	r3, [r2, #0]
 80011b6:	8c3b      	ldrh	r3, [r7, #32]
 80011b8:	2201      	movs	r2, #1
 80011ba:	4619      	mov	r1, r3
 80011bc:	69f8      	ldr	r0, [r7, #28]
 80011be:	f003 ffab 	bl	8005118 <HAL_GPIO_WritePin>
 80011c2:	2001      	movs	r0, #1
 80011c4:	f7ff ff1c 	bl	8001000 <ILI9341_SendCommand>
 80011c8:	2064      	movs	r0, #100	; 0x64
 80011ca:	f003 fc59 	bl	8004a80 <HAL_Delay>
 80011ce:	2028      	movs	r0, #40	; 0x28
 80011d0:	f7ff ff16 	bl	8001000 <ILI9341_SendCommand>
 80011d4:	20c0      	movs	r0, #192	; 0xc0
 80011d6:	f7ff ff13 	bl	8001000 <ILI9341_SendCommand>
 80011da:	2026      	movs	r0, #38	; 0x26
 80011dc:	f7ff ff44 	bl	8001068 <ILI9341_SendData>
 80011e0:	20c1      	movs	r0, #193	; 0xc1
 80011e2:	f7ff ff0d 	bl	8001000 <ILI9341_SendCommand>
 80011e6:	2011      	movs	r0, #17
 80011e8:	f7ff ff3e 	bl	8001068 <ILI9341_SendData>
 80011ec:	20c5      	movs	r0, #197	; 0xc5
 80011ee:	f7ff ff07 	bl	8001000 <ILI9341_SendCommand>
 80011f2:	2035      	movs	r0, #53	; 0x35
 80011f4:	f7ff ff38 	bl	8001068 <ILI9341_SendData>
 80011f8:	203e      	movs	r0, #62	; 0x3e
 80011fa:	f7ff ff35 	bl	8001068 <ILI9341_SendData>
 80011fe:	20c7      	movs	r0, #199	; 0xc7
 8001200:	f7ff fefe 	bl	8001000 <ILI9341_SendCommand>
 8001204:	20be      	movs	r0, #190	; 0xbe
 8001206:	f7ff ff2f 	bl	8001068 <ILI9341_SendData>
 800120a:	2036      	movs	r0, #54	; 0x36
 800120c:	f7ff fef8 	bl	8001000 <ILI9341_SendCommand>
 8001210:	2048      	movs	r0, #72	; 0x48
 8001212:	f7ff ff29 	bl	8001068 <ILI9341_SendData>
 8001216:	203a      	movs	r0, #58	; 0x3a
 8001218:	f7ff fef2 	bl	8001000 <ILI9341_SendCommand>
 800121c:	2055      	movs	r0, #85	; 0x55
 800121e:	f7ff ff23 	bl	8001068 <ILI9341_SendData>
 8001222:	20b1      	movs	r0, #177	; 0xb1
 8001224:	f7ff feec 	bl	8001000 <ILI9341_SendCommand>
 8001228:	2000      	movs	r0, #0
 800122a:	f7ff ff1d 	bl	8001068 <ILI9341_SendData>
 800122e:	201f      	movs	r0, #31
 8001230:	f7ff ff1a 	bl	8001068 <ILI9341_SendData>
 8001234:	202a      	movs	r0, #42	; 0x2a
 8001236:	f7ff fee3 	bl	8001000 <ILI9341_SendCommand>
 800123a:	2000      	movs	r0, #0
 800123c:	f7ff ff14 	bl	8001068 <ILI9341_SendData>
 8001240:	2000      	movs	r0, #0
 8001242:	f7ff ff11 	bl	8001068 <ILI9341_SendData>
 8001246:	2000      	movs	r0, #0
 8001248:	f7ff ff0e 	bl	8001068 <ILI9341_SendData>
 800124c:	20ef      	movs	r0, #239	; 0xef
 800124e:	f7ff ff0b 	bl	8001068 <ILI9341_SendData>
 8001252:	202b      	movs	r0, #43	; 0x2b
 8001254:	f7ff fed4 	bl	8001000 <ILI9341_SendCommand>
 8001258:	2000      	movs	r0, #0
 800125a:	f7ff ff05 	bl	8001068 <ILI9341_SendData>
 800125e:	2000      	movs	r0, #0
 8001260:	f7ff ff02 	bl	8001068 <ILI9341_SendData>
 8001264:	2001      	movs	r0, #1
 8001266:	f7ff feff 	bl	8001068 <ILI9341_SendData>
 800126a:	203f      	movs	r0, #63	; 0x3f
 800126c:	f7ff fefc 	bl	8001068 <ILI9341_SendData>
 8001270:	2034      	movs	r0, #52	; 0x34
 8001272:	f7ff fec5 	bl	8001000 <ILI9341_SendCommand>
 8001276:	20b7      	movs	r0, #183	; 0xb7
 8001278:	f7ff fec2 	bl	8001000 <ILI9341_SendCommand>
 800127c:	2007      	movs	r0, #7
 800127e:	f7ff fef3 	bl	8001068 <ILI9341_SendData>
 8001282:	20b6      	movs	r0, #182	; 0xb6
 8001284:	f7ff febc 	bl	8001000 <ILI9341_SendCommand>
 8001288:	200a      	movs	r0, #10
 800128a:	f7ff feed 	bl	8001068 <ILI9341_SendData>
 800128e:	2082      	movs	r0, #130	; 0x82
 8001290:	f7ff feea 	bl	8001068 <ILI9341_SendData>
 8001294:	2027      	movs	r0, #39	; 0x27
 8001296:	f7ff fee7 	bl	8001068 <ILI9341_SendData>
 800129a:	2000      	movs	r0, #0
 800129c:	f7ff fee4 	bl	8001068 <ILI9341_SendData>
 80012a0:	2011      	movs	r0, #17
 80012a2:	f7ff fead 	bl	8001000 <ILI9341_SendCommand>
 80012a6:	2064      	movs	r0, #100	; 0x64
 80012a8:	f003 fbea 	bl	8004a80 <HAL_Delay>
 80012ac:	2029      	movs	r0, #41	; 0x29
 80012ae:	f7ff fea7 	bl	8001000 <ILI9341_SendCommand>
 80012b2:	2064      	movs	r0, #100	; 0x64
 80012b4:	f003 fbe4 	bl	8004a80 <HAL_Delay>
 80012b8:	202c      	movs	r0, #44	; 0x2c
 80012ba:	f7ff fea1 	bl	8001000 <ILI9341_SendCommand>
 80012be:	2005      	movs	r0, #5
 80012c0:	f003 fbde 	bl	8004a80 <HAL_Delay>
 80012c4:	bf00      	nop
 80012c6:	3710      	adds	r7, #16
 80012c8:	46bd      	mov	sp, r7
 80012ca:	bd80      	pop	{r7, pc}
 80012cc:	20000260 	.word	0x20000260
 80012d0:	200002b8 	.word	0x200002b8
 80012d4:	200002bc 	.word	0x200002bc
 80012d8:	200002c0 	.word	0x200002c0
 80012dc:	200002c4 	.word	0x200002c4
 80012e0:	200002c8 	.word	0x200002c8
 80012e4:	200002cc 	.word	0x200002cc

080012e8 <ILI9341_DrawPixel>:
 80012e8:	b580      	push	{r7, lr}
 80012ea:	b082      	sub	sp, #8
 80012ec:	af00      	add	r7, sp, #0
 80012ee:	4603      	mov	r3, r0
 80012f0:	80fb      	strh	r3, [r7, #6]
 80012f2:	460b      	mov	r3, r1
 80012f4:	80bb      	strh	r3, [r7, #4]
 80012f6:	4613      	mov	r3, r2
 80012f8:	807b      	strh	r3, [r7, #2]
 80012fa:	88bb      	ldrh	r3, [r7, #4]
 80012fc:	88fa      	ldrh	r2, [r7, #6]
 80012fe:	88b9      	ldrh	r1, [r7, #4]
 8001300:	88f8      	ldrh	r0, [r7, #6]
 8001302:	f7ff fee5 	bl	80010d0 <ILI9341_SetCursorPosition>
 8001306:	887b      	ldrh	r3, [r7, #2]
 8001308:	0a1b      	lsrs	r3, r3, #8
 800130a:	b29b      	uxth	r3, r3
 800130c:	b2db      	uxtb	r3, r3
 800130e:	4618      	mov	r0, r3
 8001310:	f7ff feaa 	bl	8001068 <ILI9341_SendData>
 8001314:	887b      	ldrh	r3, [r7, #2]
 8001316:	b2db      	uxtb	r3, r3
 8001318:	4618      	mov	r0, r3
 800131a:	f7ff fea5 	bl	8001068 <ILI9341_SendData>
 800131e:	bf00      	nop
 8001320:	3708      	adds	r7, #8
 8001322:	46bd      	mov	sp, r7
 8001324:	bd80      	pop	{r7, pc}
	...

08001328 <ILI9341_Fill>:
 8001328:	b580      	push	{r7, lr}
 800132a:	b084      	sub	sp, #16
 800132c:	af00      	add	r7, sp, #0
 800132e:	4603      	mov	r3, r0
 8001330:	80fb      	strh	r3, [r7, #6]
 8001332:	f44f 3396 	mov.w	r3, #76800	; 0x12c00
 8001336:	60fb      	str	r3, [r7, #12]
 8001338:	23ff      	movs	r3, #255	; 0xff
 800133a:	817b      	strh	r3, [r7, #10]
 800133c:	4b1b      	ldr	r3, [pc, #108]	; (80013ac <ILI9341_Fill+0x84>)
 800133e:	781b      	ldrb	r3, [r3, #0]
 8001340:	2b01      	cmp	r3, #1
 8001342:	d003      	beq.n	800134c <ILI9341_Fill+0x24>
 8001344:	4b19      	ldr	r3, [pc, #100]	; (80013ac <ILI9341_Fill+0x84>)
 8001346:	781b      	ldrb	r3, [r3, #0]
 8001348:	2b03      	cmp	r3, #3
 800134a:	d107      	bne.n	800135c <ILI9341_Fill+0x34>
 800134c:	f240 133f 	movw	r3, #319	; 0x13f
 8001350:	22ef      	movs	r2, #239	; 0xef
 8001352:	2100      	movs	r1, #0
 8001354:	2000      	movs	r0, #0
 8001356:	f7ff febb 	bl	80010d0 <ILI9341_SetCursorPosition>
 800135a:	e00e      	b.n	800137a <ILI9341_Fill+0x52>
 800135c:	4b13      	ldr	r3, [pc, #76]	; (80013ac <ILI9341_Fill+0x84>)
 800135e:	781b      	ldrb	r3, [r3, #0]
 8001360:	2b02      	cmp	r3, #2
 8001362:	d003      	beq.n	800136c <ILI9341_Fill+0x44>
 8001364:	4b11      	ldr	r3, [pc, #68]	; (80013ac <ILI9341_Fill+0x84>)
 8001366:	781b      	ldrb	r3, [r3, #0]
 8001368:	2b04      	cmp	r3, #4
 800136a:	d116      	bne.n	800139a <ILI9341_Fill+0x72>
 800136c:	23ef      	movs	r3, #239	; 0xef
 800136e:	f240 123f 	movw	r2, #319	; 0x13f
 8001372:	2100      	movs	r1, #0
 8001374:	2000      	movs	r0, #0
 8001376:	f7ff feab 	bl	80010d0 <ILI9341_SetCursorPosition>
 800137a:	e00e      	b.n	800139a <ILI9341_Fill+0x72>
 800137c:	68fb      	ldr	r3, [r7, #12]
 800137e:	3b01      	subs	r3, #1
 8001380:	60fb      	str	r3, [r7, #12]
 8001382:	88fb      	ldrh	r3, [r7, #6]
 8001384:	0a1b      	lsrs	r3, r3, #8
 8001386:	b29b      	uxth	r3, r3
 8001388:	b2db      	uxtb	r3, r3
 800138a:	4618      	mov	r0, r3
 800138c:	f7ff fe6c 	bl	8001068 <ILI9341_SendData>
 8001390:	88fb      	ldrh	r3, [r7, #6]
 8001392:	b2db      	uxtb	r3, r3
 8001394:	4618      	mov	r0, r3
 8001396:	f7ff fe67 	bl	8001068 <ILI9341_SendData>
 800139a:	68fb      	ldr	r3, [r7, #12]
 800139c:	2b00      	cmp	r3, #0
 800139e:	d1ed      	bne.n	800137c <ILI9341_Fill+0x54>
 80013a0:	bf00      	nop
 80013a2:	bf00      	nop
 80013a4:	3710      	adds	r7, #16
 80013a6:	46bd      	mov	sp, r7
 80013a8:	bd80      	pop	{r7, pc}
 80013aa:	bf00      	nop
 80013ac:	20000000 	.word	0x20000000

080013b0 <ILI9341_Fill_Rect>:
 80013b0:	b580      	push	{r7, lr}
 80013b2:	b086      	sub	sp, #24
 80013b4:	af00      	add	r7, sp, #0
 80013b6:	60f8      	str	r0, [r7, #12]
 80013b8:	60b9      	str	r1, [r7, #8]
 80013ba:	607a      	str	r2, [r7, #4]
 80013bc:	603b      	str	r3, [r7, #0]
 80013be:	687a      	ldr	r2, [r7, #4]
 80013c0:	68fb      	ldr	r3, [r7, #12]
 80013c2:	1ad3      	subs	r3, r2, r3
 80013c4:	3301      	adds	r3, #1
 80013c6:	6839      	ldr	r1, [r7, #0]
 80013c8:	68ba      	ldr	r2, [r7, #8]
 80013ca:	1a8a      	subs	r2, r1, r2
 80013cc:	3201      	adds	r2, #1
 80013ce:	fb02 f303 	mul.w	r3, r2, r3
 80013d2:	617b      	str	r3, [r7, #20]
 80013d4:	697b      	ldr	r3, [r7, #20]
 80013d6:	f5b3 3f96 	cmp.w	r3, #76800	; 0x12c00
 80013da:	d902      	bls.n	80013e2 <ILI9341_Fill_Rect+0x32>
 80013dc:	f44f 3396 	mov.w	r3, #76800	; 0x12c00
 80013e0:	617b      	str	r3, [r7, #20]
 80013e2:	68fb      	ldr	r3, [r7, #12]
 80013e4:	b298      	uxth	r0, r3
 80013e6:	68bb      	ldr	r3, [r7, #8]
 80013e8:	b299      	uxth	r1, r3
 80013ea:	687b      	ldr	r3, [r7, #4]
 80013ec:	b29a      	uxth	r2, r3
 80013ee:	683b      	ldr	r3, [r7, #0]
 80013f0:	b29b      	uxth	r3, r3
 80013f2:	f7ff fe6d 	bl	80010d0 <ILI9341_SetCursorPosition>
 80013f6:	e00e      	b.n	8001416 <ILI9341_Fill_Rect+0x66>
 80013f8:	697b      	ldr	r3, [r7, #20]
 80013fa:	3b01      	subs	r3, #1
 80013fc:	617b      	str	r3, [r7, #20]
 80013fe:	8c3b      	ldrh	r3, [r7, #32]
 8001400:	0a1b      	lsrs	r3, r3, #8
 8001402:	b29b      	uxth	r3, r3
 8001404:	b2db      	uxtb	r3, r3
 8001406:	4618      	mov	r0, r3
 8001408:	f7ff fe2e 	bl	8001068 <ILI9341_SendData>
 800140c:	8c3b      	ldrh	r3, [r7, #32]
 800140e:	b2db      	uxtb	r3, r3
 8001410:	4618      	mov	r0, r3
 8001412:	f7ff fe29 	bl	8001068 <ILI9341_SendData>
 8001416:	697b      	ldr	r3, [r7, #20]
 8001418:	2b00      	cmp	r3, #0
 800141a:	d1ed      	bne.n	80013f8 <ILI9341_Fill_Rect+0x48>
 800141c:	bf00      	nop
 800141e:	bf00      	nop
 8001420:	3718      	adds	r7, #24
 8001422:	46bd      	mov	sp, r7
 8001424:	bd80      	pop	{r7, pc}

08001426 <fillCircleHelper>:
 8001426:	b590      	push	{r4, r7, lr}
 8001428:	b087      	sub	sp, #28
 800142a:	af00      	add	r7, sp, #0
 800142c:	4604      	mov	r4, r0
 800142e:	4608      	mov	r0, r1
 8001430:	4611      	mov	r1, r2
 8001432:	461a      	mov	r2, r3
 8001434:	4623      	mov	r3, r4
 8001436:	80fb      	strh	r3, [r7, #6]
 8001438:	4603      	mov	r3, r0
 800143a:	80bb      	strh	r3, [r7, #4]
 800143c:	460b      	mov	r3, r1
 800143e:	807b      	strh	r3, [r7, #2]
 8001440:	4613      	mov	r3, r2
 8001442:	707b      	strb	r3, [r7, #1]
 8001444:	887b      	ldrh	r3, [r7, #2]
 8001446:	f1c3 0301 	rsb	r3, r3, #1
 800144a:	b29b      	uxth	r3, r3
 800144c:	82fb      	strh	r3, [r7, #22]
 800144e:	2301      	movs	r3, #1
 8001450:	82bb      	strh	r3, [r7, #20]
 8001452:	887b      	ldrh	r3, [r7, #2]
 8001454:	461a      	mov	r2, r3
 8001456:	03d2      	lsls	r2, r2, #15
 8001458:	1ad3      	subs	r3, r2, r3
 800145a:	005b      	lsls	r3, r3, #1
 800145c:	b29b      	uxth	r3, r3
 800145e:	827b      	strh	r3, [r7, #18]
 8001460:	2300      	movs	r3, #0
 8001462:	823b      	strh	r3, [r7, #16]
 8001464:	887b      	ldrh	r3, [r7, #2]
 8001466:	81fb      	strh	r3, [r7, #14]
 8001468:	e083      	b.n	8001572 <fillCircleHelper+0x14c>
 800146a:	f9b7 3016 	ldrsh.w	r3, [r7, #22]
 800146e:	2b00      	cmp	r3, #0
 8001470:	db0e      	blt.n	8001490 <fillCircleHelper+0x6a>
 8001472:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8001476:	b29b      	uxth	r3, r3
 8001478:	3b01      	subs	r3, #1
 800147a:	b29b      	uxth	r3, r3
 800147c:	81fb      	strh	r3, [r7, #14]
 800147e:	8a7b      	ldrh	r3, [r7, #18]
 8001480:	3302      	adds	r3, #2
 8001482:	b29b      	uxth	r3, r3
 8001484:	827b      	strh	r3, [r7, #18]
 8001486:	8afa      	ldrh	r2, [r7, #22]
 8001488:	8a7b      	ldrh	r3, [r7, #18]
 800148a:	4413      	add	r3, r2
 800148c:	b29b      	uxth	r3, r3
 800148e:	82fb      	strh	r3, [r7, #22]
 8001490:	f9b7 3010 	ldrsh.w	r3, [r7, #16]
 8001494:	b29b      	uxth	r3, r3
 8001496:	3301      	adds	r3, #1
 8001498:	b29b      	uxth	r3, r3
 800149a:	823b      	strh	r3, [r7, #16]
 800149c:	8abb      	ldrh	r3, [r7, #20]
 800149e:	3302      	adds	r3, #2
 80014a0:	b29b      	uxth	r3, r3
 80014a2:	82bb      	strh	r3, [r7, #20]
 80014a4:	8afa      	ldrh	r2, [r7, #22]
 80014a6:	8abb      	ldrh	r3, [r7, #20]
 80014a8:	4413      	add	r3, r2
 80014aa:	b29b      	uxth	r3, r3
 80014ac:	82fb      	strh	r3, [r7, #22]
 80014ae:	787b      	ldrb	r3, [r7, #1]
 80014b0:	f003 0301 	and.w	r3, r3, #1
 80014b4:	2b00      	cmp	r3, #0
 80014b6:	d02b      	beq.n	8001510 <fillCircleHelper+0xea>
 80014b8:	88fa      	ldrh	r2, [r7, #6]
 80014ba:	8a3b      	ldrh	r3, [r7, #16]
 80014bc:	4413      	add	r3, r2
 80014be:	b29b      	uxth	r3, r3
 80014c0:	b218      	sxth	r0, r3
 80014c2:	88ba      	ldrh	r2, [r7, #4]
 80014c4:	89fb      	ldrh	r3, [r7, #14]
 80014c6:	1ad3      	subs	r3, r2, r3
 80014c8:	b29b      	uxth	r3, r3
 80014ca:	b219      	sxth	r1, r3
 80014cc:	89fb      	ldrh	r3, [r7, #14]
 80014ce:	005b      	lsls	r3, r3, #1
 80014d0:	b29a      	uxth	r2, r3
 80014d2:	8d3b      	ldrh	r3, [r7, #40]	; 0x28
 80014d4:	4413      	add	r3, r2
 80014d6:	b29b      	uxth	r3, r3
 80014d8:	3301      	adds	r3, #1
 80014da:	b29b      	uxth	r3, r3
 80014dc:	b21a      	sxth	r2, r3
 80014de:	8dbb      	ldrh	r3, [r7, #44]	; 0x2c
 80014e0:	f000 f921 	bl	8001726 <ILI9341_drawFastVLine>
 80014e4:	88fa      	ldrh	r2, [r7, #6]
 80014e6:	89fb      	ldrh	r3, [r7, #14]
 80014e8:	4413      	add	r3, r2
 80014ea:	b29b      	uxth	r3, r3
 80014ec:	b218      	sxth	r0, r3
 80014ee:	88ba      	ldrh	r2, [r7, #4]
 80014f0:	8a3b      	ldrh	r3, [r7, #16]
 80014f2:	1ad3      	subs	r3, r2, r3
 80014f4:	b29b      	uxth	r3, r3
 80014f6:	b219      	sxth	r1, r3
 80014f8:	8a3b      	ldrh	r3, [r7, #16]
 80014fa:	005b      	lsls	r3, r3, #1
 80014fc:	b29a      	uxth	r2, r3
 80014fe:	8d3b      	ldrh	r3, [r7, #40]	; 0x28
 8001500:	4413      	add	r3, r2
 8001502:	b29b      	uxth	r3, r3
 8001504:	3301      	adds	r3, #1
 8001506:	b29b      	uxth	r3, r3
 8001508:	b21a      	sxth	r2, r3
 800150a:	8dbb      	ldrh	r3, [r7, #44]	; 0x2c
 800150c:	f000 f90b 	bl	8001726 <ILI9341_drawFastVLine>
 8001510:	787b      	ldrb	r3, [r7, #1]
 8001512:	f003 0302 	and.w	r3, r3, #2
 8001516:	2b00      	cmp	r3, #0
 8001518:	d02b      	beq.n	8001572 <fillCircleHelper+0x14c>
 800151a:	88fa      	ldrh	r2, [r7, #6]
 800151c:	8a3b      	ldrh	r3, [r7, #16]
 800151e:	1ad3      	subs	r3, r2, r3
 8001520:	b29b      	uxth	r3, r3
 8001522:	b218      	sxth	r0, r3
 8001524:	88ba      	ldrh	r2, [r7, #4]
 8001526:	89fb      	ldrh	r3, [r7, #14]
 8001528:	1ad3      	subs	r3, r2, r3
 800152a:	b29b      	uxth	r3, r3
 800152c:	b219      	sxth	r1, r3
 800152e:	89fb      	ldrh	r3, [r7, #14]
 8001530:	005b      	lsls	r3, r3, #1
 8001532:	b29a      	uxth	r2, r3
 8001534:	8d3b      	ldrh	r3, [r7, #40]	; 0x28
 8001536:	4413      	add	r3, r2
 8001538:	b29b      	uxth	r3, r3
 800153a:	3301      	adds	r3, #1
 800153c:	b29b      	uxth	r3, r3
 800153e:	b21a      	sxth	r2, r3
 8001540:	8dbb      	ldrh	r3, [r7, #44]	; 0x2c
 8001542:	f000 f8f0 	bl	8001726 <ILI9341_drawFastVLine>
 8001546:	88fa      	ldrh	r2, [r7, #6]
 8001548:	89fb      	ldrh	r3, [r7, #14]
 800154a:	1ad3      	subs	r3, r2, r3
 800154c:	b29b      	uxth	r3, r3
 800154e:	b218      	sxth	r0, r3
 8001550:	88ba      	ldrh	r2, [r7, #4]
 8001552:	8a3b      	ldrh	r3, [r7, #16]
 8001554:	1ad3      	subs	r3, r2, r3
 8001556:	b29b      	uxth	r3, r3
 8001558:	b219      	sxth	r1, r3
 800155a:	8a3b      	ldrh	r3, [r7, #16]
 800155c:	005b      	lsls	r3, r3, #1
 800155e:	b29a      	uxth	r2, r3
 8001560:	8d3b      	ldrh	r3, [r7, #40]	; 0x28
 8001562:	4413      	add	r3, r2
 8001564:	b29b      	uxth	r3, r3
 8001566:	3301      	adds	r3, #1
 8001568:	b29b      	uxth	r3, r3
 800156a:	b21a      	sxth	r2, r3
 800156c:	8dbb      	ldrh	r3, [r7, #44]	; 0x2c
 800156e:	f000 f8da 	bl	8001726 <ILI9341_drawFastVLine>
 8001572:	f9b7 2010 	ldrsh.w	r2, [r7, #16]
 8001576:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 800157a:	429a      	cmp	r2, r3
 800157c:	f6ff af75 	blt.w	800146a <fillCircleHelper+0x44>
 8001580:	bf00      	nop
 8001582:	bf00      	nop
 8001584:	371c      	adds	r7, #28
 8001586:	46bd      	mov	sp, r7
 8001588:	bd90      	pop	{r4, r7, pc}

0800158a <ILI9341_fillCircle>:
 800158a:	b590      	push	{r4, r7, lr}
 800158c:	b085      	sub	sp, #20
 800158e:	af02      	add	r7, sp, #8
 8001590:	4604      	mov	r4, r0
 8001592:	4608      	mov	r0, r1
 8001594:	4611      	mov	r1, r2
 8001596:	461a      	mov	r2, r3
 8001598:	4623      	mov	r3, r4
 800159a:	80fb      	strh	r3, [r7, #6]
 800159c:	4603      	mov	r3, r0
 800159e:	80bb      	strh	r3, [r7, #4]
 80015a0:	460b      	mov	r3, r1
 80015a2:	807b      	strh	r3, [r7, #2]
 80015a4:	4613      	mov	r3, r2
 80015a6:	803b      	strh	r3, [r7, #0]
 80015a8:	88ba      	ldrh	r2, [r7, #4]
 80015aa:	887b      	ldrh	r3, [r7, #2]
 80015ac:	1ad3      	subs	r3, r2, r3
 80015ae:	b29b      	uxth	r3, r3
 80015b0:	b219      	sxth	r1, r3
 80015b2:	887b      	ldrh	r3, [r7, #2]
 80015b4:	005b      	lsls	r3, r3, #1
 80015b6:	b29b      	uxth	r3, r3
 80015b8:	3301      	adds	r3, #1
 80015ba:	b29b      	uxth	r3, r3
 80015bc:	b21a      	sxth	r2, r3
 80015be:	883b      	ldrh	r3, [r7, #0]
 80015c0:	f9b7 0006 	ldrsh.w	r0, [r7, #6]
 80015c4:	f000 f8af 	bl	8001726 <ILI9341_drawFastVLine>
 80015c8:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 80015cc:	f9b7 1004 	ldrsh.w	r1, [r7, #4]
 80015d0:	f9b7 0006 	ldrsh.w	r0, [r7, #6]
 80015d4:	883b      	ldrh	r3, [r7, #0]
 80015d6:	9301      	str	r3, [sp, #4]
 80015d8:	2300      	movs	r3, #0
 80015da:	9300      	str	r3, [sp, #0]
 80015dc:	2303      	movs	r3, #3
 80015de:	f7ff ff22 	bl	8001426 <fillCircleHelper>
 80015e2:	bf00      	nop
 80015e4:	370c      	adds	r7, #12
 80015e6:	46bd      	mov	sp, r7
 80015e8:	bd90      	pop	{r4, r7, pc}

080015ea <ILI9341_drawLine>:
 80015ea:	b590      	push	{r4, r7, lr}
 80015ec:	b089      	sub	sp, #36	; 0x24
 80015ee:	af00      	add	r7, sp, #0
 80015f0:	4604      	mov	r4, r0
 80015f2:	4608      	mov	r0, r1
 80015f4:	4611      	mov	r1, r2
 80015f6:	461a      	mov	r2, r3
 80015f8:	4623      	mov	r3, r4
 80015fa:	80fb      	strh	r3, [r7, #6]
 80015fc:	4603      	mov	r3, r0
 80015fe:	80bb      	strh	r3, [r7, #4]
 8001600:	460b      	mov	r3, r1
 8001602:	807b      	strh	r3, [r7, #2]
 8001604:	4613      	mov	r3, r2
 8001606:	803b      	strh	r3, [r7, #0]
 8001608:	f9b7 2000 	ldrsh.w	r2, [r7]
 800160c:	f9b7 3004 	ldrsh.w	r3, [r7, #4]
 8001610:	1ad3      	subs	r3, r2, r3
 8001612:	ea83 72e3 	eor.w	r2, r3, r3, asr #31
 8001616:	eba2 72e3 	sub.w	r2, r2, r3, asr #31
 800161a:	f9b7 1002 	ldrsh.w	r1, [r7, #2]
 800161e:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8001622:	1acb      	subs	r3, r1, r3
 8001624:	2b00      	cmp	r3, #0
 8001626:	bfb8      	it	lt
 8001628:	425b      	neglt	r3, r3
 800162a:	429a      	cmp	r2, r3
 800162c:	bfcc      	ite	gt
 800162e:	2301      	movgt	r3, #1
 8001630:	2300      	movle	r3, #0
 8001632:	b2db      	uxtb	r3, r3
 8001634:	837b      	strh	r3, [r7, #26]
 8001636:	f9b7 301a 	ldrsh.w	r3, [r7, #26]
 800163a:	2b00      	cmp	r3, #0
 800163c:	d00b      	beq.n	8001656 <ILI9341_drawLine+0x6c>
 800163e:	88fb      	ldrh	r3, [r7, #6]
 8001640:	833b      	strh	r3, [r7, #24]
 8001642:	88bb      	ldrh	r3, [r7, #4]
 8001644:	80fb      	strh	r3, [r7, #6]
 8001646:	8b3b      	ldrh	r3, [r7, #24]
 8001648:	80bb      	strh	r3, [r7, #4]
 800164a:	887b      	ldrh	r3, [r7, #2]
 800164c:	82fb      	strh	r3, [r7, #22]
 800164e:	883b      	ldrh	r3, [r7, #0]
 8001650:	807b      	strh	r3, [r7, #2]
 8001652:	8afb      	ldrh	r3, [r7, #22]
 8001654:	803b      	strh	r3, [r7, #0]
 8001656:	f9b7 2006 	ldrsh.w	r2, [r7, #6]
 800165a:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 800165e:	429a      	cmp	r2, r3
 8001660:	dd0b      	ble.n	800167a <ILI9341_drawLine+0x90>
 8001662:	88fb      	ldrh	r3, [r7, #6]
 8001664:	82bb      	strh	r3, [r7, #20]
 8001666:	887b      	ldrh	r3, [r7, #2]
 8001668:	80fb      	strh	r3, [r7, #6]
 800166a:	8abb      	ldrh	r3, [r7, #20]
 800166c:	807b      	strh	r3, [r7, #2]
 800166e:	88bb      	ldrh	r3, [r7, #4]
 8001670:	827b      	strh	r3, [r7, #18]
 8001672:	883b      	ldrh	r3, [r7, #0]
 8001674:	80bb      	strh	r3, [r7, #4]
 8001676:	8a7b      	ldrh	r3, [r7, #18]
 8001678:	803b      	strh	r3, [r7, #0]
 800167a:	887a      	ldrh	r2, [r7, #2]
 800167c:	88fb      	ldrh	r3, [r7, #6]
 800167e:	1ad3      	subs	r3, r2, r3
 8001680:	b29b      	uxth	r3, r3
 8001682:	823b      	strh	r3, [r7, #16]
 8001684:	f9b7 2000 	ldrsh.w	r2, [r7]
 8001688:	f9b7 3004 	ldrsh.w	r3, [r7, #4]
 800168c:	1ad3      	subs	r3, r2, r3
 800168e:	2b00      	cmp	r3, #0
 8001690:	bfb8      	it	lt
 8001692:	425b      	neglt	r3, r3
 8001694:	81fb      	strh	r3, [r7, #14]
 8001696:	f9b7 3010 	ldrsh.w	r3, [r7, #16]
 800169a:	0fda      	lsrs	r2, r3, #31
 800169c:	4413      	add	r3, r2
 800169e:	105b      	asrs	r3, r3, #1
 80016a0:	83fb      	strh	r3, [r7, #30]
 80016a2:	f9b7 2004 	ldrsh.w	r2, [r7, #4]
 80016a6:	f9b7 3000 	ldrsh.w	r3, [r7]
 80016aa:	429a      	cmp	r2, r3
 80016ac:	da02      	bge.n	80016b4 <ILI9341_drawLine+0xca>
 80016ae:	2301      	movs	r3, #1
 80016b0:	83bb      	strh	r3, [r7, #28]
 80016b2:	e02d      	b.n	8001710 <ILI9341_drawLine+0x126>
 80016b4:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80016b8:	83bb      	strh	r3, [r7, #28]
 80016ba:	e029      	b.n	8001710 <ILI9341_drawLine+0x126>
 80016bc:	f9b7 301a 	ldrsh.w	r3, [r7, #26]
 80016c0:	2b00      	cmp	r3, #0
 80016c2:	d006      	beq.n	80016d2 <ILI9341_drawLine+0xe8>
 80016c4:	88bb      	ldrh	r3, [r7, #4]
 80016c6:	88f9      	ldrh	r1, [r7, #6]
 80016c8:	8e3a      	ldrh	r2, [r7, #48]	; 0x30
 80016ca:	4618      	mov	r0, r3
 80016cc:	f7ff fe0c 	bl	80012e8 <ILI9341_DrawPixel>
 80016d0:	e005      	b.n	80016de <ILI9341_drawLine+0xf4>
 80016d2:	88fb      	ldrh	r3, [r7, #6]
 80016d4:	88b9      	ldrh	r1, [r7, #4]
 80016d6:	8e3a      	ldrh	r2, [r7, #48]	; 0x30
 80016d8:	4618      	mov	r0, r3
 80016da:	f7ff fe05 	bl	80012e8 <ILI9341_DrawPixel>
 80016de:	8bfa      	ldrh	r2, [r7, #30]
 80016e0:	89fb      	ldrh	r3, [r7, #14]
 80016e2:	1ad3      	subs	r3, r2, r3
 80016e4:	b29b      	uxth	r3, r3
 80016e6:	83fb      	strh	r3, [r7, #30]
 80016e8:	f9b7 301e 	ldrsh.w	r3, [r7, #30]
 80016ec:	2b00      	cmp	r3, #0
 80016ee:	da09      	bge.n	8001704 <ILI9341_drawLine+0x11a>
 80016f0:	88ba      	ldrh	r2, [r7, #4]
 80016f2:	8bbb      	ldrh	r3, [r7, #28]
 80016f4:	4413      	add	r3, r2
 80016f6:	b29b      	uxth	r3, r3
 80016f8:	80bb      	strh	r3, [r7, #4]
 80016fa:	8bfa      	ldrh	r2, [r7, #30]
 80016fc:	8a3b      	ldrh	r3, [r7, #16]
 80016fe:	4413      	add	r3, r2
 8001700:	b29b      	uxth	r3, r3
 8001702:	83fb      	strh	r3, [r7, #30]
 8001704:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8001708:	b29b      	uxth	r3, r3
 800170a:	3301      	adds	r3, #1
 800170c:	b29b      	uxth	r3, r3
 800170e:	80fb      	strh	r3, [r7, #6]
 8001710:	f9b7 2006 	ldrsh.w	r2, [r7, #6]
 8001714:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 8001718:	429a      	cmp	r2, r3
 800171a:	ddcf      	ble.n	80016bc <ILI9341_drawLine+0xd2>
 800171c:	bf00      	nop
 800171e:	bf00      	nop
 8001720:	3724      	adds	r7, #36	; 0x24
 8001722:	46bd      	mov	sp, r7
 8001724:	bd90      	pop	{r4, r7, pc}

08001726 <ILI9341_drawFastVLine>:
 8001726:	b590      	push	{r4, r7, lr}
 8001728:	b085      	sub	sp, #20
 800172a:	af02      	add	r7, sp, #8
 800172c:	4604      	mov	r4, r0
 800172e:	4608      	mov	r0, r1
 8001730:	4611      	mov	r1, r2
 8001732:	461a      	mov	r2, r3
 8001734:	4623      	mov	r3, r4
 8001736:	80fb      	strh	r3, [r7, #6]
 8001738:	4603      	mov	r3, r0
 800173a:	80bb      	strh	r3, [r7, #4]
 800173c:	460b      	mov	r3, r1
 800173e:	807b      	strh	r3, [r7, #2]
 8001740:	4613      	mov	r3, r2
 8001742:	803b      	strh	r3, [r7, #0]
 8001744:	88ba      	ldrh	r2, [r7, #4]
 8001746:	887b      	ldrh	r3, [r7, #2]
 8001748:	4413      	add	r3, r2
 800174a:	b29b      	uxth	r3, r3
 800174c:	3b01      	subs	r3, #1
 800174e:	b29b      	uxth	r3, r3
 8001750:	b21c      	sxth	r4, r3
 8001752:	f9b7 2006 	ldrsh.w	r2, [r7, #6]
 8001756:	f9b7 1004 	ldrsh.w	r1, [r7, #4]
 800175a:	f9b7 0006 	ldrsh.w	r0, [r7, #6]
 800175e:	883b      	ldrh	r3, [r7, #0]
 8001760:	9300      	str	r3, [sp, #0]
 8001762:	4623      	mov	r3, r4
 8001764:	f7ff ff41 	bl	80015ea <ILI9341_drawLine>
 8001768:	bf00      	nop
 800176a:	370c      	adds	r7, #12
 800176c:	46bd      	mov	sp, r7
 800176e:	bd90      	pop	{r4, r7, pc}

08001770 <ILI9341_drawChar>:
 8001770:	b5b0      	push	{r4, r5, r7, lr}
 8001772:	b086      	sub	sp, #24
 8001774:	af02      	add	r7, sp, #8
 8001776:	4604      	mov	r4, r0
 8001778:	4608      	mov	r0, r1
 800177a:	4611      	mov	r1, r2
 800177c:	461a      	mov	r2, r3
 800177e:	4623      	mov	r3, r4
 8001780:	80fb      	strh	r3, [r7, #6]
 8001782:	4603      	mov	r3, r0
 8001784:	80bb      	strh	r3, [r7, #4]
 8001786:	460b      	mov	r3, r1
 8001788:	70fb      	strb	r3, [r7, #3]
 800178a:	4613      	mov	r3, r2
 800178c:	803b      	strh	r3, [r7, #0]
 800178e:	4b98      	ldr	r3, [pc, #608]	; (80019f0 <ILI9341_drawChar+0x280>)
 8001790:	781b      	ldrb	r3, [r3, #0]
 8001792:	2b01      	cmp	r3, #1
 8001794:	d003      	beq.n	800179e <ILI9341_drawChar+0x2e>
 8001796:	4b96      	ldr	r3, [pc, #600]	; (80019f0 <ILI9341_drawChar+0x280>)
 8001798:	781b      	ldrb	r3, [r3, #0]
 800179a:	2b03      	cmp	r3, #3
 800179c:	d11f      	bne.n	80017de <ILI9341_drawChar+0x6e>
 800179e:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 80017a2:	2bef      	cmp	r3, #239	; 0xef
 80017a4:	f300 811d 	bgt.w	80019e2 <ILI9341_drawChar+0x272>
 80017a8:	f9b7 3004 	ldrsh.w	r3, [r7, #4]
 80017ac:	f5b3 7fa0 	cmp.w	r3, #320	; 0x140
 80017b0:	f280 8117 	bge.w	80019e2 <ILI9341_drawChar+0x272>
 80017b4:	f9b7 1006 	ldrsh.w	r1, [r7, #6]
 80017b8:	f897 2024 	ldrb.w	r2, [r7, #36]	; 0x24
 80017bc:	4613      	mov	r3, r2
 80017be:	005b      	lsls	r3, r3, #1
 80017c0:	4413      	add	r3, r2
 80017c2:	005b      	lsls	r3, r3, #1
 80017c4:	440b      	add	r3, r1
 80017c6:	2b00      	cmp	r3, #0
 80017c8:	f340 810b 	ble.w	80019e2 <ILI9341_drawChar+0x272>
 80017cc:	f9b7 2004 	ldrsh.w	r2, [r7, #4]
 80017d0:	f897 3024 	ldrb.w	r3, [r7, #36]	; 0x24
 80017d4:	00db      	lsls	r3, r3, #3
 80017d6:	4413      	add	r3, r2
 80017d8:	2b00      	cmp	r3, #0
 80017da:	dc21      	bgt.n	8001820 <ILI9341_drawChar+0xb0>
 80017dc:	e101      	b.n	80019e2 <ILI9341_drawChar+0x272>
 80017de:	f9b7 3004 	ldrsh.w	r3, [r7, #4]
 80017e2:	2bef      	cmp	r3, #239	; 0xef
 80017e4:	f300 80ff 	bgt.w	80019e6 <ILI9341_drawChar+0x276>
 80017e8:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 80017ec:	f5b3 7fa0 	cmp.w	r3, #320	; 0x140
 80017f0:	f280 80f9 	bge.w	80019e6 <ILI9341_drawChar+0x276>
 80017f4:	f9b7 1004 	ldrsh.w	r1, [r7, #4]
 80017f8:	f897 2024 	ldrb.w	r2, [r7, #36]	; 0x24
 80017fc:	4613      	mov	r3, r2
 80017fe:	005b      	lsls	r3, r3, #1
 8001800:	4413      	add	r3, r2
 8001802:	005b      	lsls	r3, r3, #1
 8001804:	440b      	add	r3, r1
 8001806:	2b00      	cmp	r3, #0
 8001808:	f340 80ed 	ble.w	80019e6 <ILI9341_drawChar+0x276>
 800180c:	f9b7 2006 	ldrsh.w	r2, [r7, #6]
 8001810:	f897 3024 	ldrb.w	r3, [r7, #36]	; 0x24
 8001814:	00db      	lsls	r3, r3, #3
 8001816:	4413      	add	r3, r2
 8001818:	2b00      	cmp	r3, #0
 800181a:	f340 80e4 	ble.w	80019e6 <ILI9341_drawChar+0x276>
 800181e:	e000      	b.n	8001822 <ILI9341_drawChar+0xb2>
 8001820:	bf00      	nop
 8001822:	4b74      	ldr	r3, [pc, #464]	; (80019f4 <ILI9341_drawChar+0x284>)
 8001824:	781b      	ldrb	r3, [r3, #0]
 8001826:	f083 0301 	eor.w	r3, r3, #1
 800182a:	b2db      	uxtb	r3, r3
 800182c:	2b00      	cmp	r3, #0
 800182e:	d005      	beq.n	800183c <ILI9341_drawChar+0xcc>
 8001830:	78fb      	ldrb	r3, [r7, #3]
 8001832:	2baf      	cmp	r3, #175	; 0xaf
 8001834:	d902      	bls.n	800183c <ILI9341_drawChar+0xcc>
 8001836:	78fb      	ldrb	r3, [r7, #3]
 8001838:	3301      	adds	r3, #1
 800183a:	70fb      	strb	r3, [r7, #3]
 800183c:	2300      	movs	r3, #0
 800183e:	73fb      	strb	r3, [r7, #15]
 8001840:	e0c9      	b.n	80019d6 <ILI9341_drawChar+0x266>
 8001842:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8001846:	2b05      	cmp	r3, #5
 8001848:	d102      	bne.n	8001850 <ILI9341_drawChar+0xe0>
 800184a:	2300      	movs	r3, #0
 800184c:	73bb      	strb	r3, [r7, #14]
 800184e:	e00b      	b.n	8001868 <ILI9341_drawChar+0xf8>
 8001850:	78fa      	ldrb	r2, [r7, #3]
 8001852:	4613      	mov	r3, r2
 8001854:	009b      	lsls	r3, r3, #2
 8001856:	4413      	add	r3, r2
 8001858:	461a      	mov	r2, r3
 800185a:	f997 300f 	ldrsb.w	r3, [r7, #15]
 800185e:	4413      	add	r3, r2
 8001860:	4a65      	ldr	r2, [pc, #404]	; (80019f8 <ILI9341_drawChar+0x288>)
 8001862:	4413      	add	r3, r2
 8001864:	781b      	ldrb	r3, [r3, #0]
 8001866:	73bb      	strb	r3, [r7, #14]
 8001868:	2300      	movs	r3, #0
 800186a:	737b      	strb	r3, [r7, #13]
 800186c:	e0a8      	b.n	80019c0 <ILI9341_drawChar+0x250>
 800186e:	7bbb      	ldrb	r3, [r7, #14]
 8001870:	f003 0301 	and.w	r3, r3, #1
 8001874:	2b00      	cmp	r3, #0
 8001876:	d04b      	beq.n	8001910 <ILI9341_drawChar+0x1a0>
 8001878:	f897 3024 	ldrb.w	r3, [r7, #36]	; 0x24
 800187c:	2b01      	cmp	r3, #1
 800187e:	d110      	bne.n	80018a2 <ILI9341_drawChar+0x132>
 8001880:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8001884:	b29a      	uxth	r2, r3
 8001886:	88fb      	ldrh	r3, [r7, #6]
 8001888:	4413      	add	r3, r2
 800188a:	b298      	uxth	r0, r3
 800188c:	f997 300d 	ldrsb.w	r3, [r7, #13]
 8001890:	b29a      	uxth	r2, r3
 8001892:	88bb      	ldrh	r3, [r7, #4]
 8001894:	4413      	add	r3, r2
 8001896:	b29b      	uxth	r3, r3
 8001898:	883a      	ldrh	r2, [r7, #0]
 800189a:	4619      	mov	r1, r3
 800189c:	f7ff fd24 	bl	80012e8 <ILI9341_DrawPixel>
 80018a0:	e085      	b.n	80019ae <ILI9341_drawChar+0x23e>
 80018a2:	f9b7 2006 	ldrsh.w	r2, [r7, #6]
 80018a6:	f997 300f 	ldrsb.w	r3, [r7, #15]
 80018aa:	f897 1024 	ldrb.w	r1, [r7, #36]	; 0x24
 80018ae:	fb01 f303 	mul.w	r3, r1, r3
 80018b2:	4413      	add	r3, r2
 80018b4:	4618      	mov	r0, r3
 80018b6:	f9b7 2004 	ldrsh.w	r2, [r7, #4]
 80018ba:	f997 300d 	ldrsb.w	r3, [r7, #13]
 80018be:	f897 1024 	ldrb.w	r1, [r7, #36]	; 0x24
 80018c2:	fb01 f303 	mul.w	r3, r1, r3
 80018c6:	4413      	add	r3, r2
 80018c8:	461c      	mov	r4, r3
 80018ca:	f897 2024 	ldrb.w	r2, [r7, #36]	; 0x24
 80018ce:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 80018d2:	441a      	add	r2, r3
 80018d4:	f997 300f 	ldrsb.w	r3, [r7, #15]
 80018d8:	f897 1024 	ldrb.w	r1, [r7, #36]	; 0x24
 80018dc:	fb01 f303 	mul.w	r3, r1, r3
 80018e0:	4413      	add	r3, r2
 80018e2:	461d      	mov	r5, r3
 80018e4:	f897 3024 	ldrb.w	r3, [r7, #36]	; 0x24
 80018e8:	1c5a      	adds	r2, r3, #1
 80018ea:	f9b7 3004 	ldrsh.w	r3, [r7, #4]
 80018ee:	441a      	add	r2, r3
 80018f0:	f997 300d 	ldrsb.w	r3, [r7, #13]
 80018f4:	f897 1024 	ldrb.w	r1, [r7, #36]	; 0x24
 80018f8:	fb01 f303 	mul.w	r3, r1, r3
 80018fc:	4413      	add	r3, r2
 80018fe:	461a      	mov	r2, r3
 8001900:	883b      	ldrh	r3, [r7, #0]
 8001902:	9300      	str	r3, [sp, #0]
 8001904:	4613      	mov	r3, r2
 8001906:	462a      	mov	r2, r5
 8001908:	4621      	mov	r1, r4
 800190a:	f7ff fd51 	bl	80013b0 <ILI9341_Fill_Rect>
 800190e:	e04e      	b.n	80019ae <ILI9341_drawChar+0x23e>
 8001910:	8c3a      	ldrh	r2, [r7, #32]
 8001912:	883b      	ldrh	r3, [r7, #0]
 8001914:	429a      	cmp	r2, r3
 8001916:	d04a      	beq.n	80019ae <ILI9341_drawChar+0x23e>
 8001918:	f897 3024 	ldrb.w	r3, [r7, #36]	; 0x24
 800191c:	2b01      	cmp	r3, #1
 800191e:	d110      	bne.n	8001942 <ILI9341_drawChar+0x1d2>
 8001920:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8001924:	b29a      	uxth	r2, r3
 8001926:	88fb      	ldrh	r3, [r7, #6]
 8001928:	4413      	add	r3, r2
 800192a:	b298      	uxth	r0, r3
 800192c:	f997 300d 	ldrsb.w	r3, [r7, #13]
 8001930:	b29a      	uxth	r2, r3
 8001932:	88bb      	ldrh	r3, [r7, #4]
 8001934:	4413      	add	r3, r2
 8001936:	b29b      	uxth	r3, r3
 8001938:	8c3a      	ldrh	r2, [r7, #32]
 800193a:	4619      	mov	r1, r3
 800193c:	f7ff fcd4 	bl	80012e8 <ILI9341_DrawPixel>
 8001940:	e035      	b.n	80019ae <ILI9341_drawChar+0x23e>
 8001942:	f9b7 2006 	ldrsh.w	r2, [r7, #6]
 8001946:	f997 300f 	ldrsb.w	r3, [r7, #15]
 800194a:	f897 1024 	ldrb.w	r1, [r7, #36]	; 0x24
 800194e:	fb01 f303 	mul.w	r3, r1, r3
 8001952:	4413      	add	r3, r2
 8001954:	4618      	mov	r0, r3
 8001956:	f9b7 2004 	ldrsh.w	r2, [r7, #4]
 800195a:	f997 300d 	ldrsb.w	r3, [r7, #13]
 800195e:	f897 1024 	ldrb.w	r1, [r7, #36]	; 0x24
 8001962:	fb01 f303 	mul.w	r3, r1, r3
 8001966:	4413      	add	r3, r2
 8001968:	461c      	mov	r4, r3
 800196a:	f897 2024 	ldrb.w	r2, [r7, #36]	; 0x24
 800196e:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8001972:	441a      	add	r2, r3
 8001974:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8001978:	f897 1024 	ldrb.w	r1, [r7, #36]	; 0x24
 800197c:	fb01 f303 	mul.w	r3, r1, r3
 8001980:	4413      	add	r3, r2
 8001982:	461d      	mov	r5, r3
 8001984:	f897 3024 	ldrb.w	r3, [r7, #36]	; 0x24
 8001988:	1c5a      	adds	r2, r3, #1
 800198a:	f9b7 3004 	ldrsh.w	r3, [r7, #4]
 800198e:	441a      	add	r2, r3
 8001990:	f997 300d 	ldrsb.w	r3, [r7, #13]
 8001994:	f897 1024 	ldrb.w	r1, [r7, #36]	; 0x24
 8001998:	fb01 f303 	mul.w	r3, r1, r3
 800199c:	4413      	add	r3, r2
 800199e:	461a      	mov	r2, r3
 80019a0:	8c3b      	ldrh	r3, [r7, #32]
 80019a2:	9300      	str	r3, [sp, #0]
 80019a4:	4613      	mov	r3, r2
 80019a6:	462a      	mov	r2, r5
 80019a8:	4621      	mov	r1, r4
 80019aa:	f7ff fd01 	bl	80013b0 <ILI9341_Fill_Rect>
 80019ae:	7bbb      	ldrb	r3, [r7, #14]
 80019b0:	085b      	lsrs	r3, r3, #1
 80019b2:	73bb      	strb	r3, [r7, #14]
 80019b4:	f997 300d 	ldrsb.w	r3, [r7, #13]
 80019b8:	b2db      	uxtb	r3, r3
 80019ba:	3301      	adds	r3, #1
 80019bc:	b2db      	uxtb	r3, r3
 80019be:	737b      	strb	r3, [r7, #13]
 80019c0:	f997 300d 	ldrsb.w	r3, [r7, #13]
 80019c4:	2b07      	cmp	r3, #7
 80019c6:	f77f af52 	ble.w	800186e <ILI9341_drawChar+0xfe>
 80019ca:	f997 300f 	ldrsb.w	r3, [r7, #15]
 80019ce:	b2db      	uxtb	r3, r3
 80019d0:	3301      	adds	r3, #1
 80019d2:	b2db      	uxtb	r3, r3
 80019d4:	73fb      	strb	r3, [r7, #15]
 80019d6:	f997 300f 	ldrsb.w	r3, [r7, #15]
 80019da:	2b05      	cmp	r3, #5
 80019dc:	f77f af31 	ble.w	8001842 <ILI9341_drawChar+0xd2>
 80019e0:	e002      	b.n	80019e8 <ILI9341_drawChar+0x278>
 80019e2:	bf00      	nop
 80019e4:	e000      	b.n	80019e8 <ILI9341_drawChar+0x278>
 80019e6:	bf00      	nop
 80019e8:	3710      	adds	r7, #16
 80019ea:	46bd      	mov	sp, r7
 80019ec:	bdb0      	pop	{r4, r5, r7, pc}
 80019ee:	bf00      	nop
 80019f0:	20000000 	.word	0x20000000
 80019f4:	2000025c 	.word	0x2000025c
 80019f8:	0800ce4c 	.word	0x0800ce4c

080019fc <ILI9341_printText>:
 80019fc:	b590      	push	{r4, r7, lr}
 80019fe:	b089      	sub	sp, #36	; 0x24
 8001a00:	af02      	add	r7, sp, #8
 8001a02:	60f8      	str	r0, [r7, #12]
 8001a04:	4608      	mov	r0, r1
 8001a06:	4611      	mov	r1, r2
 8001a08:	461a      	mov	r2, r3
 8001a0a:	4603      	mov	r3, r0
 8001a0c:	817b      	strh	r3, [r7, #10]
 8001a0e:	460b      	mov	r3, r1
 8001a10:	813b      	strh	r3, [r7, #8]
 8001a12:	4613      	mov	r3, r2
 8001a14:	80fb      	strh	r3, [r7, #6]
 8001a16:	f897 302c 	ldrb.w	r3, [r7, #44]	; 0x2c
 8001a1a:	b29b      	uxth	r3, r3
 8001a1c:	461a      	mov	r2, r3
 8001a1e:	0052      	lsls	r2, r2, #1
 8001a20:	4413      	add	r3, r2
 8001a22:	005b      	lsls	r3, r3, #1
 8001a24:	b29b      	uxth	r3, r3
 8001a26:	82bb      	strh	r3, [r7, #20]
 8001a28:	2300      	movs	r3, #0
 8001a2a:	82fb      	strh	r3, [r7, #22]
 8001a2c:	e01a      	b.n	8001a64 <ILI9341_printText+0x68>
 8001a2e:	8abb      	ldrh	r3, [r7, #20]
 8001a30:	8afa      	ldrh	r2, [r7, #22]
 8001a32:	fb12 f303 	smulbb	r3, r2, r3
 8001a36:	b29a      	uxth	r2, r3
 8001a38:	897b      	ldrh	r3, [r7, #10]
 8001a3a:	4413      	add	r3, r2
 8001a3c:	b29b      	uxth	r3, r3
 8001a3e:	b218      	sxth	r0, r3
 8001a40:	8afb      	ldrh	r3, [r7, #22]
 8001a42:	68fa      	ldr	r2, [r7, #12]
 8001a44:	4413      	add	r3, r2
 8001a46:	781a      	ldrb	r2, [r3, #0]
 8001a48:	88fc      	ldrh	r4, [r7, #6]
 8001a4a:	f9b7 1008 	ldrsh.w	r1, [r7, #8]
 8001a4e:	f897 302c 	ldrb.w	r3, [r7, #44]	; 0x2c
 8001a52:	9301      	str	r3, [sp, #4]
 8001a54:	8d3b      	ldrh	r3, [r7, #40]	; 0x28
 8001a56:	9300      	str	r3, [sp, #0]
 8001a58:	4623      	mov	r3, r4
 8001a5a:	f7ff fe89 	bl	8001770 <ILI9341_drawChar>
 8001a5e:	8afb      	ldrh	r3, [r7, #22]
 8001a60:	3301      	adds	r3, #1
 8001a62:	82fb      	strh	r3, [r7, #22]
 8001a64:	8afb      	ldrh	r3, [r7, #22]
 8001a66:	2b27      	cmp	r3, #39	; 0x27
 8001a68:	d805      	bhi.n	8001a76 <ILI9341_printText+0x7a>
 8001a6a:	8afb      	ldrh	r3, [r7, #22]
 8001a6c:	68fa      	ldr	r2, [r7, #12]
 8001a6e:	4413      	add	r3, r2
 8001a70:	781b      	ldrb	r3, [r3, #0]
 8001a72:	2b00      	cmp	r3, #0
 8001a74:	d1db      	bne.n	8001a2e <ILI9341_printText+0x32>
 8001a76:	bf00      	nop
 8001a78:	371c      	adds	r7, #28
 8001a7a:	46bd      	mov	sp, r7
 8001a7c:	bd90      	pop	{r4, r7, pc}
	...

08001a80 <ILI9341_setRotation>:
 8001a80:	b580      	push	{r7, lr}
 8001a82:	b082      	sub	sp, #8
 8001a84:	af00      	add	r7, sp, #0
 8001a86:	4603      	mov	r3, r0
 8001a88:	71fb      	strb	r3, [r7, #7]
 8001a8a:	79fb      	ldrb	r3, [r7, #7]
 8001a8c:	3b01      	subs	r3, #1
 8001a8e:	2b03      	cmp	r3, #3
 8001a90:	d832      	bhi.n	8001af8 <ILI9341_setRotation+0x78>
 8001a92:	a201      	add	r2, pc, #4	; (adr r2, 8001a98 <ILI9341_setRotation+0x18>)
 8001a94:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001a98:	08001aa9 	.word	0x08001aa9
 8001a9c:	08001abd 	.word	0x08001abd
 8001aa0:	08001ad1 	.word	0x08001ad1
 8001aa4:	08001ae5 	.word	0x08001ae5
 8001aa8:	4b1a      	ldr	r3, [pc, #104]	; (8001b14 <ILI9341_setRotation+0x94>)
 8001aaa:	2201      	movs	r2, #1
 8001aac:	701a      	strb	r2, [r3, #0]
 8001aae:	2036      	movs	r0, #54	; 0x36
 8001ab0:	f7ff faa6 	bl	8001000 <ILI9341_SendCommand>
 8001ab4:	2088      	movs	r0, #136	; 0x88
 8001ab6:	f7ff fad7 	bl	8001068 <ILI9341_SendData>
 8001aba:	e027      	b.n	8001b0c <ILI9341_setRotation+0x8c>
 8001abc:	4b15      	ldr	r3, [pc, #84]	; (8001b14 <ILI9341_setRotation+0x94>)
 8001abe:	2202      	movs	r2, #2
 8001ac0:	701a      	strb	r2, [r3, #0]
 8001ac2:	2036      	movs	r0, #54	; 0x36
 8001ac4:	f7ff fa9c 	bl	8001000 <ILI9341_SendCommand>
 8001ac8:	2028      	movs	r0, #40	; 0x28
 8001aca:	f7ff facd 	bl	8001068 <ILI9341_SendData>
 8001ace:	e01d      	b.n	8001b0c <ILI9341_setRotation+0x8c>
 8001ad0:	4b10      	ldr	r3, [pc, #64]	; (8001b14 <ILI9341_setRotation+0x94>)
 8001ad2:	2203      	movs	r2, #3
 8001ad4:	701a      	strb	r2, [r3, #0]
 8001ad6:	2036      	movs	r0, #54	; 0x36
 8001ad8:	f7ff fa92 	bl	8001000 <ILI9341_SendCommand>
 8001adc:	2048      	movs	r0, #72	; 0x48
 8001ade:	f7ff fac3 	bl	8001068 <ILI9341_SendData>
 8001ae2:	e013      	b.n	8001b0c <ILI9341_setRotation+0x8c>
 8001ae4:	4b0b      	ldr	r3, [pc, #44]	; (8001b14 <ILI9341_setRotation+0x94>)
 8001ae6:	2204      	movs	r2, #4
 8001ae8:	701a      	strb	r2, [r3, #0]
 8001aea:	2036      	movs	r0, #54	; 0x36
 8001aec:	f7ff fa88 	bl	8001000 <ILI9341_SendCommand>
 8001af0:	20e8      	movs	r0, #232	; 0xe8
 8001af2:	f7ff fab9 	bl	8001068 <ILI9341_SendData>
 8001af6:	e009      	b.n	8001b0c <ILI9341_setRotation+0x8c>
 8001af8:	4b06      	ldr	r3, [pc, #24]	; (8001b14 <ILI9341_setRotation+0x94>)
 8001afa:	2201      	movs	r2, #1
 8001afc:	701a      	strb	r2, [r3, #0]
 8001afe:	2036      	movs	r0, #54	; 0x36
 8001b00:	f7ff fa7e 	bl	8001000 <ILI9341_SendCommand>
 8001b04:	2088      	movs	r0, #136	; 0x88
 8001b06:	f7ff faaf 	bl	8001068 <ILI9341_SendData>
 8001b0a:	bf00      	nop
 8001b0c:	bf00      	nop
 8001b0e:	3708      	adds	r7, #8
 8001b10:	46bd      	mov	sp, r7
 8001b12:	bd80      	pop	{r7, pc}
 8001b14:	20000000 	.word	0x20000000

08001b18 <ILI9341_getRotation>:
 8001b18:	b480      	push	{r7}
 8001b1a:	af00      	add	r7, sp, #0
 8001b1c:	4b03      	ldr	r3, [pc, #12]	; (8001b2c <ILI9341_getRotation+0x14>)
 8001b1e:	781b      	ldrb	r3, [r3, #0]
 8001b20:	4618      	mov	r0, r3
 8001b22:	46bd      	mov	sp, r7
 8001b24:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001b28:	4770      	bx	lr
 8001b2a:	bf00      	nop
 8001b2c:	20000000 	.word	0x20000000

08001b30 <TSC2046_SendCommand>:
 8001b30:	b580      	push	{r7, lr}
 8001b32:	b084      	sub	sp, #16
 8001b34:	af00      	add	r7, sp, #0
 8001b36:	4603      	mov	r3, r0
 8001b38:	71fb      	strb	r3, [r7, #7]
 8001b3a:	4a1e      	ldr	r2, [pc, #120]	; (8001bb4 <TSC2046_SendCommand+0x84>)
 8001b3c:	f107 0308 	add.w	r3, r7, #8
 8001b40:	6812      	ldr	r2, [r2, #0]
 8001b42:	4611      	mov	r1, r2
 8001b44:	8019      	strh	r1, [r3, #0]
 8001b46:	3302      	adds	r3, #2
 8001b48:	0c12      	lsrs	r2, r2, #16
 8001b4a:	701a      	strb	r2, [r3, #0]
 8001b4c:	2300      	movs	r3, #0
 8001b4e:	81fb      	strh	r3, [r7, #14]
 8001b50:	4b19      	ldr	r3, [pc, #100]	; (8001bb8 <TSC2046_SendCommand+0x88>)
 8001b52:	681b      	ldr	r3, [r3, #0]
 8001b54:	4a19      	ldr	r2, [pc, #100]	; (8001bbc <TSC2046_SendCommand+0x8c>)
 8001b56:	8811      	ldrh	r1, [r2, #0]
 8001b58:	2200      	movs	r2, #0
 8001b5a:	4618      	mov	r0, r3
 8001b5c:	f003 fadc 	bl	8005118 <HAL_GPIO_WritePin>
 8001b60:	79fb      	ldrb	r3, [r7, #7]
 8001b62:	723b      	strb	r3, [r7, #8]
 8001b64:	f107 0108 	add.w	r1, r7, #8
 8001b68:	230a      	movs	r3, #10
 8001b6a:	2201      	movs	r2, #1
 8001b6c:	4814      	ldr	r0, [pc, #80]	; (8001bc0 <TSC2046_SendCommand+0x90>)
 8001b6e:	f004 f80e 	bl	8005b8e <HAL_SPI_Transmit>
 8001b72:	2003      	movs	r0, #3
 8001b74:	f002 ff84 	bl	8004a80 <HAL_Delay>
 8001b78:	f107 0308 	add.w	r3, r7, #8
 8001b7c:	1c59      	adds	r1, r3, #1
 8001b7e:	230a      	movs	r3, #10
 8001b80:	2202      	movs	r2, #2
 8001b82:	480f      	ldr	r0, [pc, #60]	; (8001bc0 <TSC2046_SendCommand+0x90>)
 8001b84:	f004 f93f 	bl	8005e06 <HAL_SPI_Receive>
 8001b88:	4603      	mov	r3, r0
 8001b8a:	2b00      	cmp	r3, #0
 8001b8c:	d10a      	bne.n	8001ba4 <TSC2046_SendCommand+0x74>
 8001b8e:	7a7b      	ldrb	r3, [r7, #9]
 8001b90:	b29b      	uxth	r3, r3
 8001b92:	011b      	lsls	r3, r3, #4
 8001b94:	b29a      	uxth	r2, r3
 8001b96:	7abb      	ldrb	r3, [r7, #10]
 8001b98:	091b      	lsrs	r3, r3, #4
 8001b9a:	b2db      	uxtb	r3, r3
 8001b9c:	b29b      	uxth	r3, r3
 8001b9e:	4413      	add	r3, r2
 8001ba0:	81fb      	strh	r3, [r7, #14]
 8001ba2:	e001      	b.n	8001ba8 <TSC2046_SendCommand+0x78>
 8001ba4:	2300      	movs	r3, #0
 8001ba6:	81fb      	strh	r3, [r7, #14]
 8001ba8:	89fb      	ldrh	r3, [r7, #14]
 8001baa:	4618      	mov	r0, r3
 8001bac:	3710      	adds	r7, #16
 8001bae:	46bd      	mov	sp, r7
 8001bb0:	bd80      	pop	{r7, pc}
 8001bb2:	bf00      	nop
 8001bb4:	0800cd48 	.word	0x0800cd48
 8001bb8:	20000328 	.word	0x20000328
 8001bbc:	2000032c 	.word	0x2000032c
 8001bc0:	200002d0 	.word	0x200002d0
 8001bc4:	00000000 	.word	0x00000000

08001bc8 <TSC2046_Calibrate>:
 8001bc8:	b580      	push	{r7, lr}
 8001bca:	b082      	sub	sp, #8
 8001bcc:	af00      	add	r7, sp, #0
 8001bce:	2300      	movs	r3, #0
 8001bd0:	80bb      	strh	r3, [r7, #4]
 8001bd2:	f000 f9f7 	bl	8001fc4 <TSC2046_TL_point>
 8001bd6:	4b8c      	ldr	r3, [pc, #560]	; (8001e08 <TSC2046_Calibrate+0x240>)
 8001bd8:	2200      	movs	r2, #0
 8001bda:	801a      	strh	r2, [r3, #0]
 8001bdc:	4b8a      	ldr	r3, [pc, #552]	; (8001e08 <TSC2046_Calibrate+0x240>)
 8001bde:	2200      	movs	r2, #0
 8001be0:	805a      	strh	r2, [r3, #2]
 8001be2:	4b89      	ldr	r3, [pc, #548]	; (8001e08 <TSC2046_Calibrate+0x240>)
 8001be4:	2200      	movs	r2, #0
 8001be6:	809a      	strh	r2, [r3, #4]
 8001be8:	4b87      	ldr	r3, [pc, #540]	; (8001e08 <TSC2046_Calibrate+0x240>)
 8001bea:	2200      	movs	r2, #0
 8001bec:	80da      	strh	r2, [r3, #6]
 8001bee:	f000 f9d9 	bl	8001fa4 <TSC2046_getRaw_Z>
 8001bf2:	4603      	mov	r3, r0
 8001bf4:	80bb      	strh	r3, [r7, #4]
 8001bf6:	88bb      	ldrh	r3, [r7, #4]
 8001bf8:	2b32      	cmp	r3, #50	; 0x32
 8001bfa:	d91b      	bls.n	8001c34 <TSC2046_Calibrate+0x6c>
 8001bfc:	2300      	movs	r3, #0
 8001bfe:	71fb      	strb	r3, [r7, #7]
 8001c00:	e014      	b.n	8001c2c <TSC2046_Calibrate+0x64>
 8001c02:	f000 f905 	bl	8001e10 <TSC2046_GetRawTouch>
 8001c06:	4603      	mov	r3, r0
 8001c08:	603b      	str	r3, [r7, #0]
 8001c0a:	4b7f      	ldr	r3, [pc, #508]	; (8001e08 <TSC2046_Calibrate+0x240>)
 8001c0c:	881a      	ldrh	r2, [r3, #0]
 8001c0e:	883b      	ldrh	r3, [r7, #0]
 8001c10:	4413      	add	r3, r2
 8001c12:	b29a      	uxth	r2, r3
 8001c14:	4b7c      	ldr	r3, [pc, #496]	; (8001e08 <TSC2046_Calibrate+0x240>)
 8001c16:	801a      	strh	r2, [r3, #0]
 8001c18:	4b7b      	ldr	r3, [pc, #492]	; (8001e08 <TSC2046_Calibrate+0x240>)
 8001c1a:	885a      	ldrh	r2, [r3, #2]
 8001c1c:	887b      	ldrh	r3, [r7, #2]
 8001c1e:	4413      	add	r3, r2
 8001c20:	b29a      	uxth	r2, r3
 8001c22:	4b79      	ldr	r3, [pc, #484]	; (8001e08 <TSC2046_Calibrate+0x240>)
 8001c24:	805a      	strh	r2, [r3, #2]
 8001c26:	79fb      	ldrb	r3, [r7, #7]
 8001c28:	3301      	adds	r3, #1
 8001c2a:	71fb      	strb	r3, [r7, #7]
 8001c2c:	79fb      	ldrb	r3, [r7, #7]
 8001c2e:	2b09      	cmp	r3, #9
 8001c30:	d9e7      	bls.n	8001c02 <TSC2046_Calibrate+0x3a>
 8001c32:	e003      	b.n	8001c3c <TSC2046_Calibrate+0x74>
 8001c34:	200a      	movs	r0, #10
 8001c36:	f002 ff23 	bl	8004a80 <HAL_Delay>
 8001c3a:	e7d8      	b.n	8001bee <TSC2046_Calibrate+0x26>
 8001c3c:	f44f 707a 	mov.w	r0, #1000	; 0x3e8
 8001c40:	f002 ff1e 	bl	8004a80 <HAL_Delay>
 8001c44:	f000 f9da 	bl	8001ffc <TSC2046_BR_point>
 8001c48:	f000 f9ac 	bl	8001fa4 <TSC2046_getRaw_Z>
 8001c4c:	4603      	mov	r3, r0
 8001c4e:	80bb      	strh	r3, [r7, #4]
 8001c50:	88bb      	ldrh	r3, [r7, #4]
 8001c52:	2b32      	cmp	r3, #50	; 0x32
 8001c54:	d91b      	bls.n	8001c8e <TSC2046_Calibrate+0xc6>
 8001c56:	2300      	movs	r3, #0
 8001c58:	71bb      	strb	r3, [r7, #6]
 8001c5a:	e014      	b.n	8001c86 <TSC2046_Calibrate+0xbe>
 8001c5c:	f000 f8d8 	bl	8001e10 <TSC2046_GetRawTouch>
 8001c60:	4603      	mov	r3, r0
 8001c62:	603b      	str	r3, [r7, #0]
 8001c64:	4b68      	ldr	r3, [pc, #416]	; (8001e08 <TSC2046_Calibrate+0x240>)
 8001c66:	889a      	ldrh	r2, [r3, #4]
 8001c68:	883b      	ldrh	r3, [r7, #0]
 8001c6a:	4413      	add	r3, r2
 8001c6c:	b29a      	uxth	r2, r3
 8001c6e:	4b66      	ldr	r3, [pc, #408]	; (8001e08 <TSC2046_Calibrate+0x240>)
 8001c70:	809a      	strh	r2, [r3, #4]
 8001c72:	4b65      	ldr	r3, [pc, #404]	; (8001e08 <TSC2046_Calibrate+0x240>)
 8001c74:	88da      	ldrh	r2, [r3, #6]
 8001c76:	887b      	ldrh	r3, [r7, #2]
 8001c78:	4413      	add	r3, r2
 8001c7a:	b29a      	uxth	r2, r3
 8001c7c:	4b62      	ldr	r3, [pc, #392]	; (8001e08 <TSC2046_Calibrate+0x240>)
 8001c7e:	80da      	strh	r2, [r3, #6]
 8001c80:	79bb      	ldrb	r3, [r7, #6]
 8001c82:	3301      	adds	r3, #1
 8001c84:	71bb      	strb	r3, [r7, #6]
 8001c86:	79bb      	ldrb	r3, [r7, #6]
 8001c88:	2b09      	cmp	r3, #9
 8001c8a:	d9e7      	bls.n	8001c5c <TSC2046_Calibrate+0x94>
 8001c8c:	e003      	b.n	8001c96 <TSC2046_Calibrate+0xce>
 8001c8e:	200a      	movs	r0, #10
 8001c90:	f002 fef6 	bl	8004a80 <HAL_Delay>
 8001c94:	e7d8      	b.n	8001c48 <TSC2046_Calibrate+0x80>
 8001c96:	4b5c      	ldr	r3, [pc, #368]	; (8001e08 <TSC2046_Calibrate+0x240>)
 8001c98:	881b      	ldrh	r3, [r3, #0]
 8001c9a:	4618      	mov	r0, r3
 8001c9c:	f7fe fc4a 	bl	8000534 <__aeabi_i2d>
 8001ca0:	a357      	add	r3, pc, #348	; (adr r3, 8001e00 <TSC2046_Calibrate+0x238>)
 8001ca2:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001ca6:	f7fe fcaf 	bl	8000608 <__aeabi_dmul>
 8001caa:	4602      	mov	r2, r0
 8001cac:	460b      	mov	r3, r1
 8001cae:	4610      	mov	r0, r2
 8001cb0:	4619      	mov	r1, r3
 8001cb2:	f7fe ff81 	bl	8000bb8 <__aeabi_d2uiz>
 8001cb6:	4603      	mov	r3, r0
 8001cb8:	b29a      	uxth	r2, r3
 8001cba:	4b53      	ldr	r3, [pc, #332]	; (8001e08 <TSC2046_Calibrate+0x240>)
 8001cbc:	801a      	strh	r2, [r3, #0]
 8001cbe:	4b52      	ldr	r3, [pc, #328]	; (8001e08 <TSC2046_Calibrate+0x240>)
 8001cc0:	885b      	ldrh	r3, [r3, #2]
 8001cc2:	4618      	mov	r0, r3
 8001cc4:	f7fe fc36 	bl	8000534 <__aeabi_i2d>
 8001cc8:	a34d      	add	r3, pc, #308	; (adr r3, 8001e00 <TSC2046_Calibrate+0x238>)
 8001cca:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001cce:	f7fe fc9b 	bl	8000608 <__aeabi_dmul>
 8001cd2:	4602      	mov	r2, r0
 8001cd4:	460b      	mov	r3, r1
 8001cd6:	4610      	mov	r0, r2
 8001cd8:	4619      	mov	r1, r3
 8001cda:	f7fe ff6d 	bl	8000bb8 <__aeabi_d2uiz>
 8001cde:	4603      	mov	r3, r0
 8001ce0:	b29a      	uxth	r2, r3
 8001ce2:	4b49      	ldr	r3, [pc, #292]	; (8001e08 <TSC2046_Calibrate+0x240>)
 8001ce4:	805a      	strh	r2, [r3, #2]
 8001ce6:	4b48      	ldr	r3, [pc, #288]	; (8001e08 <TSC2046_Calibrate+0x240>)
 8001ce8:	889b      	ldrh	r3, [r3, #4]
 8001cea:	4618      	mov	r0, r3
 8001cec:	f7fe fc22 	bl	8000534 <__aeabi_i2d>
 8001cf0:	a343      	add	r3, pc, #268	; (adr r3, 8001e00 <TSC2046_Calibrate+0x238>)
 8001cf2:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001cf6:	f7fe fc87 	bl	8000608 <__aeabi_dmul>
 8001cfa:	4602      	mov	r2, r0
 8001cfc:	460b      	mov	r3, r1
 8001cfe:	4610      	mov	r0, r2
 8001d00:	4619      	mov	r1, r3
 8001d02:	f7fe ff59 	bl	8000bb8 <__aeabi_d2uiz>
 8001d06:	4603      	mov	r3, r0
 8001d08:	b29a      	uxth	r2, r3
 8001d0a:	4b3f      	ldr	r3, [pc, #252]	; (8001e08 <TSC2046_Calibrate+0x240>)
 8001d0c:	809a      	strh	r2, [r3, #4]
 8001d0e:	4b3e      	ldr	r3, [pc, #248]	; (8001e08 <TSC2046_Calibrate+0x240>)
 8001d10:	88db      	ldrh	r3, [r3, #6]
 8001d12:	4618      	mov	r0, r3
 8001d14:	f7fe fc0e 	bl	8000534 <__aeabi_i2d>
 8001d18:	a339      	add	r3, pc, #228	; (adr r3, 8001e00 <TSC2046_Calibrate+0x238>)
 8001d1a:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001d1e:	f7fe fc73 	bl	8000608 <__aeabi_dmul>
 8001d22:	4602      	mov	r2, r0
 8001d24:	460b      	mov	r3, r1
 8001d26:	4610      	mov	r0, r2
 8001d28:	4619      	mov	r1, r3
 8001d2a:	f7fe ff45 	bl	8000bb8 <__aeabi_d2uiz>
 8001d2e:	4603      	mov	r3, r0
 8001d30:	b29a      	uxth	r2, r3
 8001d32:	4b35      	ldr	r3, [pc, #212]	; (8001e08 <TSC2046_Calibrate+0x240>)
 8001d34:	80da      	strh	r2, [r3, #6]
 8001d36:	4b34      	ldr	r3, [pc, #208]	; (8001e08 <TSC2046_Calibrate+0x240>)
 8001d38:	8b1b      	ldrh	r3, [r3, #24]
 8001d3a:	ee07 3a90 	vmov	s15, r3
 8001d3e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001d42:	ed9f 7a32 	vldr	s14, [pc, #200]	; 8001e0c <TSC2046_Calibrate+0x244>
 8001d46:	ee77 6a87 	vadd.f32	s13, s15, s14
 8001d4a:	4b2f      	ldr	r3, [pc, #188]	; (8001e08 <TSC2046_Calibrate+0x240>)
 8001d4c:	889b      	ldrh	r3, [r3, #4]
 8001d4e:	461a      	mov	r2, r3
 8001d50:	4b2d      	ldr	r3, [pc, #180]	; (8001e08 <TSC2046_Calibrate+0x240>)
 8001d52:	881b      	ldrh	r3, [r3, #0]
 8001d54:	1ad3      	subs	r3, r2, r3
 8001d56:	ee07 3a90 	vmov	s15, r3
 8001d5a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001d5e:	ed9f 7a2b 	vldr	s14, [pc, #172]	; 8001e0c <TSC2046_Calibrate+0x244>
 8001d62:	ee37 7a87 	vadd.f32	s14, s15, s14
 8001d66:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8001d6a:	4b27      	ldr	r3, [pc, #156]	; (8001e08 <TSC2046_Calibrate+0x240>)
 8001d6c:	edc3 7a02 	vstr	s15, [r3, #8]
 8001d70:	4b25      	ldr	r3, [pc, #148]	; (8001e08 <TSC2046_Calibrate+0x240>)
 8001d72:	8b5b      	ldrh	r3, [r3, #26]
 8001d74:	ee07 3a90 	vmov	s15, r3
 8001d78:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001d7c:	ed9f 7a23 	vldr	s14, [pc, #140]	; 8001e0c <TSC2046_Calibrate+0x244>
 8001d80:	ee77 6a87 	vadd.f32	s13, s15, s14
 8001d84:	4b20      	ldr	r3, [pc, #128]	; (8001e08 <TSC2046_Calibrate+0x240>)
 8001d86:	88db      	ldrh	r3, [r3, #6]
 8001d88:	461a      	mov	r2, r3
 8001d8a:	4b1f      	ldr	r3, [pc, #124]	; (8001e08 <TSC2046_Calibrate+0x240>)
 8001d8c:	885b      	ldrh	r3, [r3, #2]
 8001d8e:	1ad3      	subs	r3, r2, r3
 8001d90:	ee07 3a90 	vmov	s15, r3
 8001d94:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001d98:	ed9f 7a1c 	vldr	s14, [pc, #112]	; 8001e0c <TSC2046_Calibrate+0x244>
 8001d9c:	ee37 7a87 	vadd.f32	s14, s15, s14
 8001da0:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8001da4:	4b18      	ldr	r3, [pc, #96]	; (8001e08 <TSC2046_Calibrate+0x240>)
 8001da6:	edc3 7a03 	vstr	s15, [r3, #12]
 8001daa:	4b17      	ldr	r3, [pc, #92]	; (8001e08 <TSC2046_Calibrate+0x240>)
 8001dac:	ed93 7a02 	vldr	s14, [r3, #8]
 8001db0:	4b15      	ldr	r3, [pc, #84]	; (8001e08 <TSC2046_Calibrate+0x240>)
 8001db2:	881b      	ldrh	r3, [r3, #0]
 8001db4:	ee07 3a90 	vmov	s15, r3
 8001db8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001dbc:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001dc0:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8001dc4:	ee77 7a67 	vsub.f32	s15, s14, s15
 8001dc8:	4b0f      	ldr	r3, [pc, #60]	; (8001e08 <TSC2046_Calibrate+0x240>)
 8001dca:	edc3 7a04 	vstr	s15, [r3, #16]
 8001dce:	4b0e      	ldr	r3, [pc, #56]	; (8001e08 <TSC2046_Calibrate+0x240>)
 8001dd0:	ed93 7a03 	vldr	s14, [r3, #12]
 8001dd4:	4b0c      	ldr	r3, [pc, #48]	; (8001e08 <TSC2046_Calibrate+0x240>)
 8001dd6:	885b      	ldrh	r3, [r3, #2]
 8001dd8:	ee07 3a90 	vmov	s15, r3
 8001ddc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001de0:	ee67 7a27 	vmul.f32	s15, s14, s15
 8001de4:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8001de8:	ee77 7a67 	vsub.f32	s15, s14, s15
 8001dec:	4b06      	ldr	r3, [pc, #24]	; (8001e08 <TSC2046_Calibrate+0x240>)
 8001dee:	edc3 7a05 	vstr	s15, [r3, #20]
 8001df2:	bf00      	nop
 8001df4:	3708      	adds	r7, #8
 8001df6:	46bd      	mov	sp, r7
 8001df8:	bd80      	pop	{r7, pc}
 8001dfa:	bf00      	nop
 8001dfc:	f3af 8000 	nop.w
 8001e00:	9999999a 	.word	0x9999999a
 8001e04:	3fb99999 	.word	0x3fb99999
 8001e08:	20000330 	.word	0x20000330
 8001e0c:	00000000 	.word	0x00000000

08001e10 <TSC2046_GetRawTouch>:
 8001e10:	b580      	push	{r7, lr}
 8001e12:	b082      	sub	sp, #8
 8001e14:	af00      	add	r7, sp, #0
 8001e16:	4b3d      	ldr	r3, [pc, #244]	; (8001f0c <TSC2046_GetRawTouch+0xfc>)
 8001e18:	781b      	ldrb	r3, [r3, #0]
 8001e1a:	3b01      	subs	r3, #1
 8001e1c:	2b03      	cmp	r3, #3
 8001e1e:	d867      	bhi.n	8001ef0 <TSC2046_GetRawTouch+0xe0>
 8001e20:	a201      	add	r2, pc, #4	; (adr r2, 8001e28 <TSC2046_GetRawTouch+0x18>)
 8001e22:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001e26:	bf00      	nop
 8001e28:	08001e39 	.word	0x08001e39
 8001e2c:	08001e67 	.word	0x08001e67
 8001e30:	08001e9b 	.word	0x08001e9b
 8001e34:	08001ec9 	.word	0x08001ec9
 8001e38:	f000 f894 	bl	8001f64 <TSC2046_getRaw_X>
 8001e3c:	4603      	mov	r3, r0
 8001e3e:	f5c3 637f 	rsb	r3, r3, #4080	; 0xff0
 8001e42:	330f      	adds	r3, #15
 8001e44:	b29a      	uxth	r2, r3
 8001e46:	4b32      	ldr	r3, [pc, #200]	; (8001f10 <TSC2046_GetRawTouch+0x100>)
 8001e48:	801a      	strh	r2, [r3, #0]
 8001e4a:	f000 f89b 	bl	8001f84 <TSC2046_getRaw_Y>
 8001e4e:	4603      	mov	r3, r0
 8001e50:	461a      	mov	r2, r3
 8001e52:	4b2f      	ldr	r3, [pc, #188]	; (8001f10 <TSC2046_GetRawTouch+0x100>)
 8001e54:	805a      	strh	r2, [r3, #2]
 8001e56:	4b2f      	ldr	r3, [pc, #188]	; (8001f14 <TSC2046_GetRawTouch+0x104>)
 8001e58:	22e6      	movs	r2, #230	; 0xe6
 8001e5a:	831a      	strh	r2, [r3, #24]
 8001e5c:	4b2d      	ldr	r3, [pc, #180]	; (8001f14 <TSC2046_GetRawTouch+0x104>)
 8001e5e:	f44f 72a0 	mov.w	r2, #320	; 0x140
 8001e62:	835a      	strh	r2, [r3, #26]
 8001e64:	e044      	b.n	8001ef0 <TSC2046_GetRawTouch+0xe0>
 8001e66:	f000 f88d 	bl	8001f84 <TSC2046_getRaw_Y>
 8001e6a:	4603      	mov	r3, r0
 8001e6c:	f5c3 637f 	rsb	r3, r3, #4080	; 0xff0
 8001e70:	330f      	adds	r3, #15
 8001e72:	b29a      	uxth	r2, r3
 8001e74:	4b26      	ldr	r3, [pc, #152]	; (8001f10 <TSC2046_GetRawTouch+0x100>)
 8001e76:	801a      	strh	r2, [r3, #0]
 8001e78:	f000 f874 	bl	8001f64 <TSC2046_getRaw_X>
 8001e7c:	4603      	mov	r3, r0
 8001e7e:	f5c3 637f 	rsb	r3, r3, #4080	; 0xff0
 8001e82:	330f      	adds	r3, #15
 8001e84:	b29a      	uxth	r2, r3
 8001e86:	4b22      	ldr	r3, [pc, #136]	; (8001f10 <TSC2046_GetRawTouch+0x100>)
 8001e88:	805a      	strh	r2, [r3, #2]
 8001e8a:	4b22      	ldr	r3, [pc, #136]	; (8001f14 <TSC2046_GetRawTouch+0x104>)
 8001e8c:	f44f 72a0 	mov.w	r2, #320	; 0x140
 8001e90:	831a      	strh	r2, [r3, #24]
 8001e92:	4b20      	ldr	r3, [pc, #128]	; (8001f14 <TSC2046_GetRawTouch+0x104>)
 8001e94:	22f0      	movs	r2, #240	; 0xf0
 8001e96:	835a      	strh	r2, [r3, #26]
 8001e98:	e02a      	b.n	8001ef0 <TSC2046_GetRawTouch+0xe0>
 8001e9a:	f000 f863 	bl	8001f64 <TSC2046_getRaw_X>
 8001e9e:	4603      	mov	r3, r0
 8001ea0:	461a      	mov	r2, r3
 8001ea2:	4b1b      	ldr	r3, [pc, #108]	; (8001f10 <TSC2046_GetRawTouch+0x100>)
 8001ea4:	801a      	strh	r2, [r3, #0]
 8001ea6:	f000 f86d 	bl	8001f84 <TSC2046_getRaw_Y>
 8001eaa:	4603      	mov	r3, r0
 8001eac:	f5c3 637f 	rsb	r3, r3, #4080	; 0xff0
 8001eb0:	330f      	adds	r3, #15
 8001eb2:	b29a      	uxth	r2, r3
 8001eb4:	4b16      	ldr	r3, [pc, #88]	; (8001f10 <TSC2046_GetRawTouch+0x100>)
 8001eb6:	805a      	strh	r2, [r3, #2]
 8001eb8:	4b16      	ldr	r3, [pc, #88]	; (8001f14 <TSC2046_GetRawTouch+0x104>)
 8001eba:	22e6      	movs	r2, #230	; 0xe6
 8001ebc:	831a      	strh	r2, [r3, #24]
 8001ebe:	4b15      	ldr	r3, [pc, #84]	; (8001f14 <TSC2046_GetRawTouch+0x104>)
 8001ec0:	f44f 72a0 	mov.w	r2, #320	; 0x140
 8001ec4:	835a      	strh	r2, [r3, #26]
 8001ec6:	e013      	b.n	8001ef0 <TSC2046_GetRawTouch+0xe0>
 8001ec8:	f000 f85c 	bl	8001f84 <TSC2046_getRaw_Y>
 8001ecc:	4603      	mov	r3, r0
 8001ece:	461a      	mov	r2, r3
 8001ed0:	4b0f      	ldr	r3, [pc, #60]	; (8001f10 <TSC2046_GetRawTouch+0x100>)
 8001ed2:	801a      	strh	r2, [r3, #0]
 8001ed4:	f000 f846 	bl	8001f64 <TSC2046_getRaw_X>
 8001ed8:	4603      	mov	r3, r0
 8001eda:	461a      	mov	r2, r3
 8001edc:	4b0c      	ldr	r3, [pc, #48]	; (8001f10 <TSC2046_GetRawTouch+0x100>)
 8001ede:	805a      	strh	r2, [r3, #2]
 8001ee0:	4b0c      	ldr	r3, [pc, #48]	; (8001f14 <TSC2046_GetRawTouch+0x104>)
 8001ee2:	f44f 72a0 	mov.w	r2, #320	; 0x140
 8001ee6:	831a      	strh	r2, [r3, #24]
 8001ee8:	4b0a      	ldr	r3, [pc, #40]	; (8001f14 <TSC2046_GetRawTouch+0x104>)
 8001eea:	22f0      	movs	r2, #240	; 0xf0
 8001eec:	835a      	strh	r2, [r3, #26]
 8001eee:	bf00      	nop
 8001ef0:	4b07      	ldr	r3, [pc, #28]	; (8001f10 <TSC2046_GetRawTouch+0x100>)
 8001ef2:	681b      	ldr	r3, [r3, #0]
 8001ef4:	607b      	str	r3, [r7, #4]
 8001ef6:	2300      	movs	r3, #0
 8001ef8:	88ba      	ldrh	r2, [r7, #4]
 8001efa:	f362 030f 	bfi	r3, r2, #0, #16
 8001efe:	88fa      	ldrh	r2, [r7, #6]
 8001f00:	f362 431f 	bfi	r3, r2, #16, #16
 8001f04:	4618      	mov	r0, r3
 8001f06:	3708      	adds	r7, #8
 8001f08:	46bd      	mov	sp, r7
 8001f0a:	bd80      	pop	{r7, pc}
 8001f0c:	2000032e 	.word	0x2000032e
 8001f10:	2000034c 	.word	0x2000034c
 8001f14:	20000330 	.word	0x20000330

08001f18 <TSC2046_Begin>:
 8001f18:	b580      	push	{r7, lr}
 8001f1a:	b084      	sub	sp, #16
 8001f1c:	af00      	add	r7, sp, #0
 8001f1e:	60f8      	str	r0, [r7, #12]
 8001f20:	60b9      	str	r1, [r7, #8]
 8001f22:	4613      	mov	r3, r2
 8001f24:	80fb      	strh	r3, [r7, #6]
 8001f26:	2258      	movs	r2, #88	; 0x58
 8001f28:	68f9      	ldr	r1, [r7, #12]
 8001f2a:	480a      	ldr	r0, [pc, #40]	; (8001f54 <TSC2046_Begin+0x3c>)
 8001f2c:	f008 f9eb 	bl	800a306 <memcpy>
 8001f30:	4a09      	ldr	r2, [pc, #36]	; (8001f58 <TSC2046_Begin+0x40>)
 8001f32:	68bb      	ldr	r3, [r7, #8]
 8001f34:	6013      	str	r3, [r2, #0]
 8001f36:	4a09      	ldr	r2, [pc, #36]	; (8001f5c <TSC2046_Begin+0x44>)
 8001f38:	88fb      	ldrh	r3, [r7, #6]
 8001f3a:	8013      	strh	r3, [r2, #0]
 8001f3c:	f000 f88c 	bl	8002058 <TSC2046_getOrientation>
 8001f40:	4603      	mov	r3, r0
 8001f42:	461a      	mov	r2, r3
 8001f44:	4b06      	ldr	r3, [pc, #24]	; (8001f60 <TSC2046_Begin+0x48>)
 8001f46:	701a      	strb	r2, [r3, #0]
 8001f48:	bf00      	nop
 8001f4a:	4618      	mov	r0, r3
 8001f4c:	3710      	adds	r7, #16
 8001f4e:	46bd      	mov	sp, r7
 8001f50:	bd80      	pop	{r7, pc}
 8001f52:	bf00      	nop
 8001f54:	200002d0 	.word	0x200002d0
 8001f58:	20000328 	.word	0x20000328
 8001f5c:	2000032c 	.word	0x2000032c
 8001f60:	2000032e 	.word	0x2000032e

08001f64 <TSC2046_getRaw_X>:
 8001f64:	b580      	push	{r7, lr}
 8001f66:	af00      	add	r7, sp, #0
 8001f68:	4b05      	ldr	r3, [pc, #20]	; (8001f80 <TSC2046_getRaw_X+0x1c>)
 8001f6a:	781b      	ldrb	r3, [r3, #0]
 8001f6c:	f063 032f 	orn	r3, r3, #47	; 0x2f
 8001f70:	b2db      	uxtb	r3, r3
 8001f72:	4618      	mov	r0, r3
 8001f74:	f7ff fddc 	bl	8001b30 <TSC2046_SendCommand>
 8001f78:	4603      	mov	r3, r0
 8001f7a:	4618      	mov	r0, r3
 8001f7c:	bd80      	pop	{r7, pc}
 8001f7e:	bf00      	nop
 8001f80:	20000001 	.word	0x20000001

08001f84 <TSC2046_getRaw_Y>:
 8001f84:	b580      	push	{r7, lr}
 8001f86:	af00      	add	r7, sp, #0
 8001f88:	4b05      	ldr	r3, [pc, #20]	; (8001fa0 <TSC2046_getRaw_Y+0x1c>)
 8001f8a:	781b      	ldrb	r3, [r3, #0]
 8001f8c:	f063 036f 	orn	r3, r3, #111	; 0x6f
 8001f90:	b2db      	uxtb	r3, r3
 8001f92:	4618      	mov	r0, r3
 8001f94:	f7ff fdcc 	bl	8001b30 <TSC2046_SendCommand>
 8001f98:	4603      	mov	r3, r0
 8001f9a:	4618      	mov	r0, r3
 8001f9c:	bd80      	pop	{r7, pc}
 8001f9e:	bf00      	nop
 8001fa0:	20000001 	.word	0x20000001

08001fa4 <TSC2046_getRaw_Z>:
 8001fa4:	b580      	push	{r7, lr}
 8001fa6:	af00      	add	r7, sp, #0
 8001fa8:	4b05      	ldr	r3, [pc, #20]	; (8001fc0 <TSC2046_getRaw_Z+0x1c>)
 8001faa:	781b      	ldrb	r3, [r3, #0]
 8001fac:	f043 0330 	orr.w	r3, r3, #48	; 0x30
 8001fb0:	b2db      	uxtb	r3, r3
 8001fb2:	4618      	mov	r0, r3
 8001fb4:	f7ff fdbc 	bl	8001b30 <TSC2046_SendCommand>
 8001fb8:	4603      	mov	r3, r0
 8001fba:	4618      	mov	r0, r3
 8001fbc:	bd80      	pop	{r7, pc}
 8001fbe:	bf00      	nop
 8001fc0:	20000001 	.word	0x20000001

08001fc4 <TSC2046_TL_point>:
 8001fc4:	b580      	push	{r7, lr}
 8001fc6:	b082      	sub	sp, #8
 8001fc8:	af02      	add	r7, sp, #8
 8001fca:	f44f 4378 	mov.w	r3, #63488	; 0xf800
 8001fce:	2203      	movs	r2, #3
 8001fd0:	210a      	movs	r1, #10
 8001fd2:	200a      	movs	r0, #10
 8001fd4:	f7ff fad9 	bl	800158a <ILI9341_fillCircle>
 8001fd8:	2301      	movs	r3, #1
 8001fda:	9301      	str	r3, [sp, #4]
 8001fdc:	f44f 4378 	mov.w	r3, #63488	; 0xf800
 8001fe0:	9300      	str	r3, [sp, #0]
 8001fe2:	f44f 4378 	mov.w	r3, #63488	; 0xf800
 8001fe6:	221e      	movs	r2, #30
 8001fe8:	2114      	movs	r1, #20
 8001fea:	4803      	ldr	r0, [pc, #12]	; (8001ff8 <TSC2046_TL_point+0x34>)
 8001fec:	f7ff fd06 	bl	80019fc <ILI9341_printText>
 8001ff0:	bf00      	nop
 8001ff2:	46bd      	mov	sp, r7
 8001ff4:	bd80      	pop	{r7, pc}
 8001ff6:	bf00      	nop
 8001ff8:	0800cd4c 	.word	0x0800cd4c

08001ffc <TSC2046_BR_point>:
 8001ffc:	b580      	push	{r7, lr}
 8001ffe:	b082      	sub	sp, #8
 8002000:	af02      	add	r7, sp, #8
 8002002:	4b13      	ldr	r3, [pc, #76]	; (8002050 <TSC2046_BR_point+0x54>)
 8002004:	8b1b      	ldrh	r3, [r3, #24]
 8002006:	3b0a      	subs	r3, #10
 8002008:	b29b      	uxth	r3, r3
 800200a:	b218      	sxth	r0, r3
 800200c:	4b10      	ldr	r3, [pc, #64]	; (8002050 <TSC2046_BR_point+0x54>)
 800200e:	8b5b      	ldrh	r3, [r3, #26]
 8002010:	3b0a      	subs	r3, #10
 8002012:	b29b      	uxth	r3, r3
 8002014:	b219      	sxth	r1, r3
 8002016:	f44f 4378 	mov.w	r3, #63488	; 0xf800
 800201a:	2203      	movs	r2, #3
 800201c:	f7ff fab5 	bl	800158a <ILI9341_fillCircle>
 8002020:	4b0b      	ldr	r3, [pc, #44]	; (8002050 <TSC2046_BR_point+0x54>)
 8002022:	8b1b      	ldrh	r3, [r3, #24]
 8002024:	3b50      	subs	r3, #80	; 0x50
 8002026:	b29b      	uxth	r3, r3
 8002028:	b219      	sxth	r1, r3
 800202a:	4b09      	ldr	r3, [pc, #36]	; (8002050 <TSC2046_BR_point+0x54>)
 800202c:	8b5b      	ldrh	r3, [r3, #26]
 800202e:	3b28      	subs	r3, #40	; 0x28
 8002030:	b29b      	uxth	r3, r3
 8002032:	b21a      	sxth	r2, r3
 8002034:	2301      	movs	r3, #1
 8002036:	9301      	str	r3, [sp, #4]
 8002038:	f44f 4378 	mov.w	r3, #63488	; 0xf800
 800203c:	9300      	str	r3, [sp, #0]
 800203e:	f44f 4378 	mov.w	r3, #63488	; 0xf800
 8002042:	4804      	ldr	r0, [pc, #16]	; (8002054 <TSC2046_BR_point+0x58>)
 8002044:	f7ff fcda 	bl	80019fc <ILI9341_printText>
 8002048:	bf00      	nop
 800204a:	46bd      	mov	sp, r7
 800204c:	bd80      	pop	{r7, pc}
 800204e:	bf00      	nop
 8002050:	20000330 	.word	0x20000330
 8002054:	0800cd4c 	.word	0x0800cd4c

08002058 <TSC2046_getOrientation>:
 8002058:	b580      	push	{r7, lr}
 800205a:	af00      	add	r7, sp, #0
 800205c:	f7ff fd5c 	bl	8001b18 <ILI9341_getRotation>
 8002060:	4603      	mov	r3, r0
 8002062:	4618      	mov	r0, r3
 8002064:	bd80      	pop	{r7, pc}
	...

08002068 <TSC2046_GetTouchData>:
 8002068:	b580      	push	{r7, lr}
 800206a:	b086      	sub	sp, #24
 800206c:	af00      	add	r7, sp, #0
 800206e:	6078      	str	r0, [r7, #4]
 8002070:	2300      	movs	r3, #0
 8002072:	82fb      	strh	r3, [r7, #22]
 8002074:	2300      	movs	r3, #0
 8002076:	82bb      	strh	r3, [r7, #20]
 8002078:	f7ff ff94 	bl	8001fa4 <TSC2046_getRaw_Z>
 800207c:	4603      	mov	r3, r0
 800207e:	2b32      	cmp	r3, #50	; 0x32
 8002080:	d920      	bls.n	80020c4 <TSC2046_GetTouchData+0x5c>
 8002082:	2301      	movs	r3, #1
 8002084:	733b      	strb	r3, [r7, #12]
 8002086:	2300      	movs	r3, #0
 8002088:	74fb      	strb	r3, [r7, #19]
 800208a:	e011      	b.n	80020b0 <TSC2046_GetTouchData+0x48>
 800208c:	f7ff fec0 	bl	8001e10 <TSC2046_GetRawTouch>
 8002090:	4603      	mov	r3, r0
 8002092:	4a29      	ldr	r2, [pc, #164]	; (8002138 <TSC2046_GetTouchData+0xd0>)
 8002094:	6013      	str	r3, [r2, #0]
 8002096:	4b28      	ldr	r3, [pc, #160]	; (8002138 <TSC2046_GetTouchData+0xd0>)
 8002098:	881a      	ldrh	r2, [r3, #0]
 800209a:	8afb      	ldrh	r3, [r7, #22]
 800209c:	4413      	add	r3, r2
 800209e:	82fb      	strh	r3, [r7, #22]
 80020a0:	4b25      	ldr	r3, [pc, #148]	; (8002138 <TSC2046_GetTouchData+0xd0>)
 80020a2:	885a      	ldrh	r2, [r3, #2]
 80020a4:	8abb      	ldrh	r3, [r7, #20]
 80020a6:	4413      	add	r3, r2
 80020a8:	82bb      	strh	r3, [r7, #20]
 80020aa:	7cfb      	ldrb	r3, [r7, #19]
 80020ac:	3301      	adds	r3, #1
 80020ae:	74fb      	strb	r3, [r7, #19]
 80020b0:	7cfb      	ldrb	r3, [r7, #19]
 80020b2:	2b00      	cmp	r3, #0
 80020b4:	d0ea      	beq.n	800208c <TSC2046_GetTouchData+0x24>
 80020b6:	4a20      	ldr	r2, [pc, #128]	; (8002138 <TSC2046_GetTouchData+0xd0>)
 80020b8:	8afb      	ldrh	r3, [r7, #22]
 80020ba:	8013      	strh	r3, [r2, #0]
 80020bc:	4a1e      	ldr	r2, [pc, #120]	; (8002138 <TSC2046_GetTouchData+0xd0>)
 80020be:	8abb      	ldrh	r3, [r7, #20]
 80020c0:	8053      	strh	r3, [r2, #2]
 80020c2:	e001      	b.n	80020c8 <TSC2046_GetTouchData+0x60>
 80020c4:	2300      	movs	r3, #0
 80020c6:	733b      	strb	r3, [r7, #12]
 80020c8:	4b1c      	ldr	r3, [pc, #112]	; (800213c <TSC2046_GetTouchData+0xd4>)
 80020ca:	ed93 7a02 	vldr	s14, [r3, #8]
 80020ce:	4b1a      	ldr	r3, [pc, #104]	; (8002138 <TSC2046_GetTouchData+0xd0>)
 80020d0:	881b      	ldrh	r3, [r3, #0]
 80020d2:	ee07 3a90 	vmov	s15, r3
 80020d6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80020da:	ee27 7a27 	vmul.f32	s14, s14, s15
 80020de:	4b17      	ldr	r3, [pc, #92]	; (800213c <TSC2046_GetTouchData+0xd4>)
 80020e0:	edd3 7a04 	vldr	s15, [r3, #16]
 80020e4:	ee77 7a27 	vadd.f32	s15, s14, s15
 80020e8:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 80020ec:	ee17 3a90 	vmov	r3, s15
 80020f0:	b29b      	uxth	r3, r3
 80020f2:	81fb      	strh	r3, [r7, #14]
 80020f4:	4b11      	ldr	r3, [pc, #68]	; (800213c <TSC2046_GetTouchData+0xd4>)
 80020f6:	ed93 7a03 	vldr	s14, [r3, #12]
 80020fa:	4b0f      	ldr	r3, [pc, #60]	; (8002138 <TSC2046_GetTouchData+0xd0>)
 80020fc:	885b      	ldrh	r3, [r3, #2]
 80020fe:	ee07 3a90 	vmov	s15, r3
 8002102:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8002106:	ee27 7a27 	vmul.f32	s14, s14, s15
 800210a:	4b0c      	ldr	r3, [pc, #48]	; (800213c <TSC2046_GetTouchData+0xd4>)
 800210c:	edd3 7a05 	vldr	s15, [r3, #20]
 8002110:	ee77 7a27 	vadd.f32	s15, s14, s15
 8002114:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 8002118:	ee17 3a90 	vmov	r3, s15
 800211c:	b29b      	uxth	r3, r3
 800211e:	823b      	strh	r3, [r7, #16]
 8002120:	687b      	ldr	r3, [r7, #4]
 8002122:	461a      	mov	r2, r3
 8002124:	f107 030c 	add.w	r3, r7, #12
 8002128:	6818      	ldr	r0, [r3, #0]
 800212a:	6010      	str	r0, [r2, #0]
 800212c:	889b      	ldrh	r3, [r3, #4]
 800212e:	8093      	strh	r3, [r2, #4]
 8002130:	6878      	ldr	r0, [r7, #4]
 8002132:	3718      	adds	r7, #24
 8002134:	46bd      	mov	sp, r7
 8002136:	bd80      	pop	{r7, pc}
 8002138:	2000034c 	.word	0x2000034c
 800213c:	20000330 	.word	0x20000330

08002140 <HMI_init>:

#include <HMI/hmi_display.h>


Hmi HMI_init(StateMachine* stateMachine, Sensor* sensorExtruder, Sensor* sensorBack, PIDController *pidController)
{
 8002140:	b590      	push	{r4, r7, lr}
 8002142:	b08f      	sub	sp, #60	; 0x3c
 8002144:	af02      	add	r7, sp, #8
 8002146:	60f8      	str	r0, [r7, #12]
 8002148:	60b9      	str	r1, [r7, #8]
 800214a:	607a      	str	r2, [r7, #4]
 800214c:	603b      	str	r3, [r7, #0]
	Hmi hmi;
	hmi.HmiInformation.stateMachine = stateMachine;
 800214e:	68bb      	ldr	r3, [r7, #8]
 8002150:	627b      	str	r3, [r7, #36]	; 0x24
	hmi.HmiInformation.sensorExtruder = sensorExtruder;
 8002152:	687b      	ldr	r3, [r7, #4]
 8002154:	62bb      	str	r3, [r7, #40]	; 0x28
	hmi.HmiInformation.sensorBack = sensorBack;
 8002156:	683b      	ldr	r3, [r7, #0]
 8002158:	62fb      	str	r3, [r7, #44]	; 0x2c

	TSC2046_Calibrate();
 800215a:	f7ff fd35 	bl	8001bc8 <TSC2046_Calibrate>
	ILI9341_Fill(COLOR_WHITE);
 800215e:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8002162:	f7ff f8e1 	bl	8001328 <ILI9341_Fill>

	ILI9341_Fill_Rect(5, 10, 315, 50, COLOR_ORANGE);
 8002166:	f64f 5320 	movw	r3, #64800	; 0xfd20
 800216a:	9300      	str	r3, [sp, #0]
 800216c:	2332      	movs	r3, #50	; 0x32
 800216e:	f240 123b 	movw	r2, #315	; 0x13b
 8002172:	210a      	movs	r1, #10
 8002174:	2005      	movs	r0, #5
 8002176:	f7ff f91b 	bl	80013b0 <ILI9341_Fill_Rect>
	ILI9341_printText("Durchmesser: 1.75mm", 50, 25, COLOR_WHITE, COLOR_ORANGE, 2);
 800217a:	2302      	movs	r3, #2
 800217c:	9301      	str	r3, [sp, #4]
 800217e:	f64f 5320 	movw	r3, #64800	; 0xfd20
 8002182:	9300      	str	r3, [sp, #0]
 8002184:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002188:	2219      	movs	r2, #25
 800218a:	2132      	movs	r1, #50	; 0x32
 800218c:	483d      	ldr	r0, [pc, #244]	; (8002284 <HMI_init+0x144>)
 800218e:	f7ff fc35 	bl	80019fc <ILI9341_printText>

	char buf[20];
	sprintf(buf, "Soll: %.2f mm", pidController->get_setPoint(pidController));
 8002192:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 8002194:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002196:	6c38      	ldr	r0, [r7, #64]	; 0x40
 8002198:	4798      	blx	r3
 800219a:	ee10 3a10 	vmov	r3, s0
 800219e:	4618      	mov	r0, r3
 80021a0:	f7fe f9da 	bl	8000558 <__aeabi_f2d>
 80021a4:	4602      	mov	r2, r0
 80021a6:	460b      	mov	r3, r1
 80021a8:	f107 0010 	add.w	r0, r7, #16
 80021ac:	4936      	ldr	r1, [pc, #216]	; (8002288 <HMI_init+0x148>)
 80021ae:	f007 ffa3 	bl	800a0f8 <siprintf>

	ILI9341_Fill_Rect(5, 60, 315, 100, COLOR_BLUE);
 80021b2:	231f      	movs	r3, #31
 80021b4:	9300      	str	r3, [sp, #0]
 80021b6:	2364      	movs	r3, #100	; 0x64
 80021b8:	f240 123b 	movw	r2, #315	; 0x13b
 80021bc:	213c      	movs	r1, #60	; 0x3c
 80021be:	2005      	movs	r0, #5
 80021c0:	f7ff f8f6 	bl	80013b0 <ILI9341_Fill_Rect>
	ILI9341_printText(buf, 50, 70, COLOR_WHITE, COLOR_BLUE, 2);
 80021c4:	f107 0010 	add.w	r0, r7, #16
 80021c8:	2302      	movs	r3, #2
 80021ca:	9301      	str	r3, [sp, #4]
 80021cc:	231f      	movs	r3, #31
 80021ce:	9300      	str	r3, [sp, #0]
 80021d0:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80021d4:	2246      	movs	r2, #70	; 0x46
 80021d6:	2132      	movs	r1, #50	; 0x32
 80021d8:	f7ff fc10 	bl	80019fc <ILI9341_printText>

	ILI9341_Fill_Rect(30, 110, 70, 150, COLOR_BLUE);
 80021dc:	231f      	movs	r3, #31
 80021de:	9300      	str	r3, [sp, #0]
 80021e0:	2396      	movs	r3, #150	; 0x96
 80021e2:	2246      	movs	r2, #70	; 0x46
 80021e4:	216e      	movs	r1, #110	; 0x6e
 80021e6:	201e      	movs	r0, #30
 80021e8:	f7ff f8e2 	bl	80013b0 <ILI9341_Fill_Rect>
	ILI9341_printText("UP", 45,  130, COLOR_WHITE, COLOR_BLUE, 1);
 80021ec:	2301      	movs	r3, #1
 80021ee:	9301      	str	r3, [sp, #4]
 80021f0:	231f      	movs	r3, #31
 80021f2:	9300      	str	r3, [sp, #0]
 80021f4:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80021f8:	2282      	movs	r2, #130	; 0x82
 80021fa:	212d      	movs	r1, #45	; 0x2d
 80021fc:	4823      	ldr	r0, [pc, #140]	; (800228c <HMI_init+0x14c>)
 80021fe:	f7ff fbfd 	bl	80019fc <ILI9341_printText>

	ILI9341_Fill_Rect(80, 110, 120, 150, COLOR_BLUE);
 8002202:	231f      	movs	r3, #31
 8002204:	9300      	str	r3, [sp, #0]
 8002206:	2396      	movs	r3, #150	; 0x96
 8002208:	2278      	movs	r2, #120	; 0x78
 800220a:	216e      	movs	r1, #110	; 0x6e
 800220c:	2050      	movs	r0, #80	; 0x50
 800220e:	f7ff f8cf 	bl	80013b0 <ILI9341_Fill_Rect>
	ILI9341_printText("DOWN", 90,  130, COLOR_WHITE, COLOR_BLUE, 1);
 8002212:	2301      	movs	r3, #1
 8002214:	9301      	str	r3, [sp, #4]
 8002216:	231f      	movs	r3, #31
 8002218:	9300      	str	r3, [sp, #0]
 800221a:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800221e:	2282      	movs	r2, #130	; 0x82
 8002220:	215a      	movs	r1, #90	; 0x5a
 8002222:	481b      	ldr	r0, [pc, #108]	; (8002290 <HMI_init+0x150>)
 8002224:	f7ff fbea 	bl	80019fc <ILI9341_printText>

	ILI9341_Fill_Rect(180, 140, 300, 180, COLOR_RED);
 8002228:	f44f 4378 	mov.w	r3, #63488	; 0xf800
 800222c:	9300      	str	r3, [sp, #0]
 800222e:	23b4      	movs	r3, #180	; 0xb4
 8002230:	f44f 7296 	mov.w	r2, #300	; 0x12c
 8002234:	218c      	movs	r1, #140	; 0x8c
 8002236:	20b4      	movs	r0, #180	; 0xb4
 8002238:	f7ff f8ba 	bl	80013b0 <ILI9341_Fill_Rect>
	ILI9341_printText("AUS", 230,  155, COLOR_WHITE, COLOR_RED, 2);
 800223c:	2302      	movs	r3, #2
 800223e:	9301      	str	r3, [sp, #4]
 8002240:	f44f 4378 	mov.w	r3, #63488	; 0xf800
 8002244:	9300      	str	r3, [sp, #0]
 8002246:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800224a:	229b      	movs	r2, #155	; 0x9b
 800224c:	21e6      	movs	r1, #230	; 0xe6
 800224e:	4811      	ldr	r0, [pc, #68]	; (8002294 <HMI_init+0x154>)
 8002250:	f7ff fbd4 	bl	80019fc <ILI9341_printText>

	ILI9341_printText("REGELUNG", 195,  120, COLOR_BLACK, COLOR_WHITE, 2);
 8002254:	2302      	movs	r3, #2
 8002256:	9301      	str	r3, [sp, #4]
 8002258:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800225c:	9300      	str	r3, [sp, #0]
 800225e:	2300      	movs	r3, #0
 8002260:	2278      	movs	r2, #120	; 0x78
 8002262:	21c3      	movs	r1, #195	; 0xc3
 8002264:	480c      	ldr	r0, [pc, #48]	; (8002298 <HMI_init+0x158>)
 8002266:	f7ff fbc9 	bl	80019fc <ILI9341_printText>

	return hmi;
 800226a:	68fb      	ldr	r3, [r7, #12]
 800226c:	461c      	mov	r4, r3
 800226e:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8002272:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 8002276:	e884 0007 	stmia.w	r4, {r0, r1, r2}
}
 800227a:	68f8      	ldr	r0, [r7, #12]
 800227c:	3734      	adds	r7, #52	; 0x34
 800227e:	46bd      	mov	sp, r7
 8002280:	bd90      	pop	{r4, r7, pc}
 8002282:	bf00      	nop
 8002284:	0800cd58 	.word	0x0800cd58
 8002288:	0800cd6c 	.word	0x0800cd6c
 800228c:	0800cd7c 	.word	0x0800cd7c
 8002290:	0800cd80 	.word	0x0800cd80
 8002294:	0800cd88 	.word	0x0800cd88
 8002298:	0800cd8c 	.word	0x0800cd8c
 800229c:	00000000 	.word	0x00000000

080022a0 <HMI_getTouch>:


void HMI_getTouch(Hmi *hmi, TS_TOUCH_DATA_Def myTS_Handle, StateMachine *state, PIDController *pidController)
{
 80022a0:	b580      	push	{r7, lr}
 80022a2:	b098      	sub	sp, #96	; 0x60
 80022a4:	af02      	add	r7, sp, #8
 80022a6:	60f8      	str	r0, [r7, #12]
 80022a8:	1d38      	adds	r0, r7, #4
 80022aa:	e880 0006 	stmia.w	r0, {r1, r2}
 80022ae:	603b      	str	r3, [r7, #0]
	if(myTS_Handle.isPressed)
 80022b0:	793b      	ldrb	r3, [r7, #4]
 80022b2:	2b00      	cmp	r3, #0
 80022b4:	f000 81f3 	beq.w	800269e <HMI_getTouch+0x3fe>
	{
		//Draw a point


		if(myTS_Handle.X >=30 && myTS_Handle.X<=70 && myTS_Handle.Y>=110 && myTS_Handle.Y<=150)
 80022b8:	88fb      	ldrh	r3, [r7, #6]
 80022ba:	2b1d      	cmp	r3, #29
 80022bc:	d948      	bls.n	8002350 <HMI_getTouch+0xb0>
 80022be:	88fb      	ldrh	r3, [r7, #6]
 80022c0:	2b46      	cmp	r3, #70	; 0x46
 80022c2:	d845      	bhi.n	8002350 <HMI_getTouch+0xb0>
 80022c4:	893b      	ldrh	r3, [r7, #8]
 80022c6:	2b6d      	cmp	r3, #109	; 0x6d
 80022c8:	d942      	bls.n	8002350 <HMI_getTouch+0xb0>
 80022ca:	893b      	ldrh	r3, [r7, #8]
 80022cc:	2b96      	cmp	r3, #150	; 0x96
 80022ce:	d83f      	bhi.n	8002350 <HMI_getTouch+0xb0>
		{
			float Soll = pidController->get_setPoint(pidController);
 80022d0:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 80022d2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80022d4:	6e38      	ldr	r0, [r7, #96]	; 0x60
 80022d6:	4798      	blx	r3
 80022d8:	ed87 0a15 	vstr	s0, [r7, #84]	; 0x54
			Soll = Soll + 0.05;
 80022dc:	6d78      	ldr	r0, [r7, #84]	; 0x54
 80022de:	f7fe f93b 	bl	8000558 <__aeabi_f2d>
 80022e2:	a373      	add	r3, pc, #460	; (adr r3, 80024b0 <HMI_getTouch+0x210>)
 80022e4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80022e8:	f7fd ffd8 	bl	800029c <__adddf3>
 80022ec:	4602      	mov	r2, r0
 80022ee:	460b      	mov	r3, r1
 80022f0:	4610      	mov	r0, r2
 80022f2:	4619      	mov	r1, r3
 80022f4:	f7fe fc80 	bl	8000bf8 <__aeabi_d2f>
 80022f8:	4603      	mov	r3, r0
 80022fa:	657b      	str	r3, [r7, #84]	; 0x54
			pidController->set_setPoint(pidController,Soll);
 80022fc:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 80022fe:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8002300:	ed97 0a15 	vldr	s0, [r7, #84]	; 0x54
 8002304:	6e38      	ldr	r0, [r7, #96]	; 0x60
 8002306:	4798      	blx	r3
			char buf[20];
			sprintf(buf, "Soll: %.2f mm", Soll);
 8002308:	6d78      	ldr	r0, [r7, #84]	; 0x54
 800230a:	f7fe f925 	bl	8000558 <__aeabi_f2d>
 800230e:	4602      	mov	r2, r0
 8002310:	460b      	mov	r3, r1
 8002312:	f107 003c 	add.w	r0, r7, #60	; 0x3c
 8002316:	4968      	ldr	r1, [pc, #416]	; (80024b8 <HMI_getTouch+0x218>)
 8002318:	f007 feee 	bl	800a0f8 <siprintf>

			ILI9341_Fill_Rect(5, 60, 315, 100, COLOR_BLUE);
 800231c:	231f      	movs	r3, #31
 800231e:	9300      	str	r3, [sp, #0]
 8002320:	2364      	movs	r3, #100	; 0x64
 8002322:	f240 123b 	movw	r2, #315	; 0x13b
 8002326:	213c      	movs	r1, #60	; 0x3c
 8002328:	2005      	movs	r0, #5
 800232a:	f7ff f841 	bl	80013b0 <ILI9341_Fill_Rect>
			ILI9341_printText(buf, 50, 80, COLOR_WHITE, COLOR_BLUE, 2);
 800232e:	f107 003c 	add.w	r0, r7, #60	; 0x3c
 8002332:	2302      	movs	r3, #2
 8002334:	9301      	str	r3, [sp, #4]
 8002336:	231f      	movs	r3, #31
 8002338:	9300      	str	r3, [sp, #0]
 800233a:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800233e:	2250      	movs	r2, #80	; 0x50
 8002340:	2132      	movs	r1, #50	; 0x32
 8002342:	f7ff fb5b 	bl	80019fc <ILI9341_printText>



			HAL_GPIO_WritePin(GPIOA, LED_Pin, GPIO_PIN_SET);
 8002346:	2201      	movs	r2, #1
 8002348:	2120      	movs	r1, #32
 800234a:	485c      	ldr	r0, [pc, #368]	; (80024bc <HMI_getTouch+0x21c>)
 800234c:	f002 fee4 	bl	8005118 <HAL_GPIO_WritePin>
		}

		if(myTS_Handle.X >=80 && myTS_Handle.X<=120 && myTS_Handle.Y>=110 && myTS_Handle.Y<=150)
 8002350:	88fb      	ldrh	r3, [r7, #6]
 8002352:	2b4f      	cmp	r3, #79	; 0x4f
 8002354:	d948      	bls.n	80023e8 <HMI_getTouch+0x148>
 8002356:	88fb      	ldrh	r3, [r7, #6]
 8002358:	2b78      	cmp	r3, #120	; 0x78
 800235a:	d845      	bhi.n	80023e8 <HMI_getTouch+0x148>
 800235c:	893b      	ldrh	r3, [r7, #8]
 800235e:	2b6d      	cmp	r3, #109	; 0x6d
 8002360:	d942      	bls.n	80023e8 <HMI_getTouch+0x148>
 8002362:	893b      	ldrh	r3, [r7, #8]
 8002364:	2b96      	cmp	r3, #150	; 0x96
 8002366:	d83f      	bhi.n	80023e8 <HMI_getTouch+0x148>
		{
			float Soll = pidController->get_setPoint(pidController);
 8002368:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 800236a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800236c:	6e38      	ldr	r0, [r7, #96]	; 0x60
 800236e:	4798      	blx	r3
 8002370:	ed87 0a14 	vstr	s0, [r7, #80]	; 0x50
			Soll = Soll - 0.05;
 8002374:	6d38      	ldr	r0, [r7, #80]	; 0x50
 8002376:	f7fe f8ef 	bl	8000558 <__aeabi_f2d>
 800237a:	a34d      	add	r3, pc, #308	; (adr r3, 80024b0 <HMI_getTouch+0x210>)
 800237c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002380:	f7fd ff8a 	bl	8000298 <__aeabi_dsub>
 8002384:	4602      	mov	r2, r0
 8002386:	460b      	mov	r3, r1
 8002388:	4610      	mov	r0, r2
 800238a:	4619      	mov	r1, r3
 800238c:	f7fe fc34 	bl	8000bf8 <__aeabi_d2f>
 8002390:	4603      	mov	r3, r0
 8002392:	653b      	str	r3, [r7, #80]	; 0x50
			pidController->set_setPoint(pidController,Soll);
 8002394:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 8002396:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8002398:	ed97 0a14 	vldr	s0, [r7, #80]	; 0x50
 800239c:	6e38      	ldr	r0, [r7, #96]	; 0x60
 800239e:	4798      	blx	r3

			char buf[20];
			sprintf(buf, "Soll: %.2f mm", Soll);
 80023a0:	6d38      	ldr	r0, [r7, #80]	; 0x50
 80023a2:	f7fe f8d9 	bl	8000558 <__aeabi_f2d>
 80023a6:	4602      	mov	r2, r0
 80023a8:	460b      	mov	r3, r1
 80023aa:	f107 0028 	add.w	r0, r7, #40	; 0x28
 80023ae:	4942      	ldr	r1, [pc, #264]	; (80024b8 <HMI_getTouch+0x218>)
 80023b0:	f007 fea2 	bl	800a0f8 <siprintf>

			ILI9341_Fill_Rect(5, 60, 315, 100, COLOR_BLUE);
 80023b4:	231f      	movs	r3, #31
 80023b6:	9300      	str	r3, [sp, #0]
 80023b8:	2364      	movs	r3, #100	; 0x64
 80023ba:	f240 123b 	movw	r2, #315	; 0x13b
 80023be:	213c      	movs	r1, #60	; 0x3c
 80023c0:	2005      	movs	r0, #5
 80023c2:	f7fe fff5 	bl	80013b0 <ILI9341_Fill_Rect>
			ILI9341_printText(buf, 50, 80, COLOR_WHITE, COLOR_BLUE, 2);
 80023c6:	f107 0028 	add.w	r0, r7, #40	; 0x28
 80023ca:	2302      	movs	r3, #2
 80023cc:	9301      	str	r3, [sp, #4]
 80023ce:	231f      	movs	r3, #31
 80023d0:	9300      	str	r3, [sp, #0]
 80023d2:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80023d6:	2250      	movs	r2, #80	; 0x50
 80023d8:	2132      	movs	r1, #50	; 0x32
 80023da:	f7ff fb0f 	bl	80019fc <ILI9341_printText>



			HAL_GPIO_WritePin(GPIOA, LED_Pin, GPIO_PIN_RESET);
 80023de:	2200      	movs	r2, #0
 80023e0:	2120      	movs	r1, #32
 80023e2:	4836      	ldr	r0, [pc, #216]	; (80024bc <HMI_getTouch+0x21c>)
 80023e4:	f002 fe98 	bl	8005118 <HAL_GPIO_WritePin>
		}

		if(myTS_Handle.X >=180 && myTS_Handle.X<=300 && myTS_Handle.Y>=140 && myTS_Handle.Y<=180)
 80023e8:	88fb      	ldrh	r3, [r7, #6]
 80023ea:	2bb3      	cmp	r3, #179	; 0xb3
 80023ec:	f240 808a 	bls.w	8002504 <HMI_getTouch+0x264>
 80023f0:	88fb      	ldrh	r3, [r7, #6]
 80023f2:	f5b3 7f96 	cmp.w	r3, #300	; 0x12c
 80023f6:	f200 8085 	bhi.w	8002504 <HMI_getTouch+0x264>
 80023fa:	893b      	ldrh	r3, [r7, #8]
 80023fc:	2b8b      	cmp	r3, #139	; 0x8b
 80023fe:	f240 8081 	bls.w	8002504 <HMI_getTouch+0x264>
 8002402:	893b      	ldrh	r3, [r7, #8]
 8002404:	2bb4      	cmp	r3, #180	; 0xb4
 8002406:	d87d      	bhi.n	8002504 <HMI_getTouch+0x264>
		{
			if(hmi->HmiInformation.stateMachine->getState(hmi->HmiInformation.stateMachine) == STATE_IDLE){
 8002408:	68fb      	ldr	r3, [r7, #12]
 800240a:	681b      	ldr	r3, [r3, #0]
 800240c:	695b      	ldr	r3, [r3, #20]
 800240e:	68fa      	ldr	r2, [r7, #12]
 8002410:	6812      	ldr	r2, [r2, #0]
 8002412:	4610      	mov	r0, r2
 8002414:	4798      	blx	r3
 8002416:	4603      	mov	r3, r0
 8002418:	2b00      	cmp	r3, #0
 800241a:	d11e      	bne.n	800245a <HMI_getTouch+0x1ba>
				hmi->HmiInformation.stateMachine->changeState(hmi->HmiInformation.stateMachine, STATE_MANUAL_CONTROL);
 800241c:	68fb      	ldr	r3, [r7, #12]
 800241e:	681b      	ldr	r3, [r3, #0]
 8002420:	691b      	ldr	r3, [r3, #16]
 8002422:	68fa      	ldr	r2, [r7, #12]
 8002424:	6812      	ldr	r2, [r2, #0]
 8002426:	2101      	movs	r1, #1
 8002428:	4610      	mov	r0, r2
 800242a:	4798      	blx	r3
  				ILI9341_Fill_Rect(180, 140, 300, 180, COLOR_GREEN);
 800242c:	f44f 63fc 	mov.w	r3, #2016	; 0x7e0
 8002430:	9300      	str	r3, [sp, #0]
 8002432:	23b4      	movs	r3, #180	; 0xb4
 8002434:	f44f 7296 	mov.w	r2, #300	; 0x12c
 8002438:	218c      	movs	r1, #140	; 0x8c
 800243a:	20b4      	movs	r0, #180	; 0xb4
 800243c:	f7fe ffb8 	bl	80013b0 <ILI9341_Fill_Rect>
  				ILI9341_printText("Manual", 230,  155, COLOR_WHITE, COLOR_GREEN, 2);
 8002440:	2302      	movs	r3, #2
 8002442:	9301      	str	r3, [sp, #4]
 8002444:	f44f 63fc 	mov.w	r3, #2016	; 0x7e0
 8002448:	9300      	str	r3, [sp, #0]
 800244a:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800244e:	229b      	movs	r2, #155	; 0x9b
 8002450:	21e6      	movs	r1, #230	; 0xe6
 8002452:	481b      	ldr	r0, [pc, #108]	; (80024c0 <HMI_getTouch+0x220>)
 8002454:	f7ff fad2 	bl	80019fc <ILI9341_printText>
 8002458:	e054      	b.n	8002504 <HMI_getTouch+0x264>
			}
			else if(hmi->HmiInformation.stateMachine->getState(hmi->HmiInformation.stateMachine) == STATE_MANUAL_CONTROL){
 800245a:	68fb      	ldr	r3, [r7, #12]
 800245c:	681b      	ldr	r3, [r3, #0]
 800245e:	695b      	ldr	r3, [r3, #20]
 8002460:	68fa      	ldr	r2, [r7, #12]
 8002462:	6812      	ldr	r2, [r2, #0]
 8002464:	4610      	mov	r0, r2
 8002466:	4798      	blx	r3
 8002468:	4603      	mov	r3, r0
 800246a:	2b01      	cmp	r3, #1
 800246c:	d12c      	bne.n	80024c8 <HMI_getTouch+0x228>
				hmi->HmiInformation.stateMachine->changeState(hmi->HmiInformation.stateMachine, STATE_AUTOMATIC_MODE);
 800246e:	68fb      	ldr	r3, [r7, #12]
 8002470:	681b      	ldr	r3, [r3, #0]
 8002472:	691b      	ldr	r3, [r3, #16]
 8002474:	68fa      	ldr	r2, [r7, #12]
 8002476:	6812      	ldr	r2, [r2, #0]
 8002478:	2102      	movs	r1, #2
 800247a:	4610      	mov	r0, r2
 800247c:	4798      	blx	r3
  				ILI9341_Fill_Rect(180, 140, 300, 180, COLOR_GREEN);
 800247e:	f44f 63fc 	mov.w	r3, #2016	; 0x7e0
 8002482:	9300      	str	r3, [sp, #0]
 8002484:	23b4      	movs	r3, #180	; 0xb4
 8002486:	f44f 7296 	mov.w	r2, #300	; 0x12c
 800248a:	218c      	movs	r1, #140	; 0x8c
 800248c:	20b4      	movs	r0, #180	; 0xb4
 800248e:	f7fe ff8f 	bl	80013b0 <ILI9341_Fill_Rect>
  				ILI9341_printText("Auto", 230,  155, COLOR_WHITE, COLOR_GREEN, 2);
 8002492:	2302      	movs	r3, #2
 8002494:	9301      	str	r3, [sp, #4]
 8002496:	f44f 63fc 	mov.w	r3, #2016	; 0x7e0
 800249a:	9300      	str	r3, [sp, #0]
 800249c:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80024a0:	229b      	movs	r2, #155	; 0x9b
 80024a2:	21e6      	movs	r1, #230	; 0xe6
 80024a4:	4807      	ldr	r0, [pc, #28]	; (80024c4 <HMI_getTouch+0x224>)
 80024a6:	f7ff faa9 	bl	80019fc <ILI9341_printText>
 80024aa:	e02b      	b.n	8002504 <HMI_getTouch+0x264>
 80024ac:	f3af 8000 	nop.w
 80024b0:	9999999a 	.word	0x9999999a
 80024b4:	3fa99999 	.word	0x3fa99999
 80024b8:	0800cd6c 	.word	0x0800cd6c
 80024bc:	40020000 	.word	0x40020000
 80024c0:	0800cd98 	.word	0x0800cd98
 80024c4:	0800cda0 	.word	0x0800cda0
			}
			else{
				hmi->HmiInformation.stateMachine->changeState(hmi->HmiInformation.stateMachine, STATE_IDLE);
 80024c8:	68fb      	ldr	r3, [r7, #12]
 80024ca:	681b      	ldr	r3, [r3, #0]
 80024cc:	691b      	ldr	r3, [r3, #16]
 80024ce:	68fa      	ldr	r2, [r7, #12]
 80024d0:	6812      	ldr	r2, [r2, #0]
 80024d2:	2100      	movs	r1, #0
 80024d4:	4610      	mov	r0, r2
 80024d6:	4798      	blx	r3
  				ILI9341_Fill_Rect(180, 140, 300, 180, COLOR_GREEN);
 80024d8:	f44f 63fc 	mov.w	r3, #2016	; 0x7e0
 80024dc:	9300      	str	r3, [sp, #0]
 80024de:	23b4      	movs	r3, #180	; 0xb4
 80024e0:	f44f 7296 	mov.w	r2, #300	; 0x12c
 80024e4:	218c      	movs	r1, #140	; 0x8c
 80024e6:	20b4      	movs	r0, #180	; 0xb4
 80024e8:	f7fe ff62 	bl	80013b0 <ILI9341_Fill_Rect>
  				ILI9341_printText("Idle", 230,  155, COLOR_WHITE, COLOR_GREEN, 2);
 80024ec:	2302      	movs	r3, #2
 80024ee:	9301      	str	r3, [sp, #4]
 80024f0:	f44f 63fc 	mov.w	r3, #2016	; 0x7e0
 80024f4:	9300      	str	r3, [sp, #0]
 80024f6:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80024fa:	229b      	movs	r2, #155	; 0x9b
 80024fc:	21e6      	movs	r1, #230	; 0xe6
 80024fe:	486a      	ldr	r0, [pc, #424]	; (80026a8 <HMI_getTouch+0x408>)
 8002500:	f7ff fa7c 	bl	80019fc <ILI9341_printText>
			}
		}

		if(hmi->HmiInformation.stateMachine->getBlobDetected(hmi->HmiInformation.stateMachine)==1)
 8002504:	68fb      	ldr	r3, [r7, #12]
 8002506:	681b      	ldr	r3, [r3, #0]
 8002508:	699b      	ldr	r3, [r3, #24]
 800250a:	68fa      	ldr	r2, [r7, #12]
 800250c:	6812      	ldr	r2, [r2, #0]
 800250e:	4610      	mov	r0, r2
 8002510:	4798      	blx	r3
 8002512:	4603      	mov	r3, r0
 8002514:	2b01      	cmp	r3, #1
 8002516:	f040 80c2 	bne.w	800269e <HMI_getTouch+0x3fe>
		{
			ILI9341_Fill(COLOR_RED);
 800251a:	f44f 4078 	mov.w	r0, #63488	; 0xf800
 800251e:	f7fe ff03 	bl	8001328 <ILI9341_Fill>
			ILI9341_Fill_Rect(110, 70, 210, 170, COLOR_WHITE);
 8002522:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002526:	9300      	str	r3, [sp, #0]
 8002528:	23aa      	movs	r3, #170	; 0xaa
 800252a:	22d2      	movs	r2, #210	; 0xd2
 800252c:	2146      	movs	r1, #70	; 0x46
 800252e:	206e      	movs	r0, #110	; 0x6e
 8002530:	f7fe ff3e 	bl	80013b0 <ILI9341_Fill_Rect>
			ILI9341_printText("BLOB erkannt!", 90, 20, COLOR_WHITE, COLOR_RED, 2);
 8002534:	2302      	movs	r3, #2
 8002536:	9301      	str	r3, [sp, #4]
 8002538:	f44f 4378 	mov.w	r3, #63488	; 0xf800
 800253c:	9300      	str	r3, [sp, #0]
 800253e:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002542:	2214      	movs	r2, #20
 8002544:	215a      	movs	r1, #90	; 0x5a
 8002546:	4859      	ldr	r0, [pc, #356]	; (80026ac <HMI_getTouch+0x40c>)
 8002548:	f7ff fa58 	bl	80019fc <ILI9341_printText>
			ILI9341_printText("OK", 145, 110, COLOR_BLACK, COLOR_WHITE, 3);
 800254c:	2303      	movs	r3, #3
 800254e:	9301      	str	r3, [sp, #4]
 8002550:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002554:	9300      	str	r3, [sp, #0]
 8002556:	2300      	movs	r3, #0
 8002558:	226e      	movs	r2, #110	; 0x6e
 800255a:	2191      	movs	r1, #145	; 0x91
 800255c:	4854      	ldr	r0, [pc, #336]	; (80026b0 <HMI_getTouch+0x410>)
 800255e:	f7ff fa4d 	bl	80019fc <ILI9341_printText>
			if(myTS_Handle.X >=110 && myTS_Handle.X<=210 && myTS_Handle.Y>=70 && myTS_Handle.Y<=140)
 8002562:	88fb      	ldrh	r3, [r7, #6]
 8002564:	2b6d      	cmp	r3, #109	; 0x6d
 8002566:	f240 809a 	bls.w	800269e <HMI_getTouch+0x3fe>
 800256a:	88fb      	ldrh	r3, [r7, #6]
 800256c:	2bd2      	cmp	r3, #210	; 0xd2
 800256e:	f200 8096 	bhi.w	800269e <HMI_getTouch+0x3fe>
 8002572:	893b      	ldrh	r3, [r7, #8]
 8002574:	2b45      	cmp	r3, #69	; 0x45
 8002576:	f240 8092 	bls.w	800269e <HMI_getTouch+0x3fe>
 800257a:	893b      	ldrh	r3, [r7, #8]
 800257c:	2b8c      	cmp	r3, #140	; 0x8c
 800257e:	f200 808e 	bhi.w	800269e <HMI_getTouch+0x3fe>
				{
				hmi->HmiInformation.stateMachine->setBlobDetected(hmi->HmiInformation.stateMachine,0);
 8002582:	68fb      	ldr	r3, [r7, #12]
 8002584:	681b      	ldr	r3, [r3, #0]
 8002586:	69db      	ldr	r3, [r3, #28]
 8002588:	68fa      	ldr	r2, [r7, #12]
 800258a:	6812      	ldr	r2, [r2, #0]
 800258c:	2100      	movs	r1, #0
 800258e:	4610      	mov	r0, r2
 8002590:	4798      	blx	r3
				ILI9341_Fill(COLOR_WHITE);
 8002592:	f64f 70ff 	movw	r0, #65535	; 0xffff
 8002596:	f7fe fec7 	bl	8001328 <ILI9341_Fill>

				ILI9341_Fill_Rect(5, 10, 315, 50, COLOR_ORANGE);
 800259a:	f64f 5320 	movw	r3, #64800	; 0xfd20
 800259e:	9300      	str	r3, [sp, #0]
 80025a0:	2332      	movs	r3, #50	; 0x32
 80025a2:	f240 123b 	movw	r2, #315	; 0x13b
 80025a6:	210a      	movs	r1, #10
 80025a8:	2005      	movs	r0, #5
 80025aa:	f7fe ff01 	bl	80013b0 <ILI9341_Fill_Rect>
				ILI9341_printText("Durchmesser: 1.75mm", 50, 25, COLOR_WHITE, COLOR_ORANGE, 2);
 80025ae:	2302      	movs	r3, #2
 80025b0:	9301      	str	r3, [sp, #4]
 80025b2:	f64f 5320 	movw	r3, #64800	; 0xfd20
 80025b6:	9300      	str	r3, [sp, #0]
 80025b8:	f64f 73ff 	movw	r3, #65535	; 0xffff
 80025bc:	2219      	movs	r2, #25
 80025be:	2132      	movs	r1, #50	; 0x32
 80025c0:	483c      	ldr	r0, [pc, #240]	; (80026b4 <HMI_getTouch+0x414>)
 80025c2:	f7ff fa1b 	bl	80019fc <ILI9341_printText>
				char buf[20];
				sprintf(buf, "Soll: %.2f mm", pidController->get_setPoint(pidController));
 80025c6:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 80025c8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80025ca:	6e38      	ldr	r0, [r7, #96]	; 0x60
 80025cc:	4798      	blx	r3
 80025ce:	ee10 3a10 	vmov	r3, s0
 80025d2:	4618      	mov	r0, r3
 80025d4:	f7fd ffc0 	bl	8000558 <__aeabi_f2d>
 80025d8:	4602      	mov	r2, r0
 80025da:	460b      	mov	r3, r1
 80025dc:	f107 0014 	add.w	r0, r7, #20
 80025e0:	4935      	ldr	r1, [pc, #212]	; (80026b8 <HMI_getTouch+0x418>)
 80025e2:	f007 fd89 	bl	800a0f8 <siprintf>
				ILI9341_Fill_Rect(5, 60, 315, 100, COLOR_BLUE);
 80025e6:	231f      	movs	r3, #31
 80025e8:	9300      	str	r3, [sp, #0]
 80025ea:	2364      	movs	r3, #100	; 0x64
 80025ec:	f240 123b 	movw	r2, #315	; 0x13b
 80025f0:	213c      	movs	r1, #60	; 0x3c
 80025f2:	2005      	movs	r0, #5
 80025f4:	f7fe fedc 	bl	80013b0 <ILI9341_Fill_Rect>
				ILI9341_printText(buf, 50, 70, COLOR_WHITE, COLOR_BLUE, 2);
 80025f8:	f107 0014 	add.w	r0, r7, #20
 80025fc:	2302      	movs	r3, #2
 80025fe:	9301      	str	r3, [sp, #4]
 8002600:	231f      	movs	r3, #31
 8002602:	9300      	str	r3, [sp, #0]
 8002604:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002608:	2246      	movs	r2, #70	; 0x46
 800260a:	2132      	movs	r1, #50	; 0x32
 800260c:	f7ff f9f6 	bl	80019fc <ILI9341_printText>

				ILI9341_Fill_Rect(30, 110, 70, 150, COLOR_BLUE);
 8002610:	231f      	movs	r3, #31
 8002612:	9300      	str	r3, [sp, #0]
 8002614:	2396      	movs	r3, #150	; 0x96
 8002616:	2246      	movs	r2, #70	; 0x46
 8002618:	216e      	movs	r1, #110	; 0x6e
 800261a:	201e      	movs	r0, #30
 800261c:	f7fe fec8 	bl	80013b0 <ILI9341_Fill_Rect>
				ILI9341_printText("UP", 45,  130, COLOR_WHITE, COLOR_BLUE, 1);
 8002620:	2301      	movs	r3, #1
 8002622:	9301      	str	r3, [sp, #4]
 8002624:	231f      	movs	r3, #31
 8002626:	9300      	str	r3, [sp, #0]
 8002628:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800262c:	2282      	movs	r2, #130	; 0x82
 800262e:	212d      	movs	r1, #45	; 0x2d
 8002630:	4822      	ldr	r0, [pc, #136]	; (80026bc <HMI_getTouch+0x41c>)
 8002632:	f7ff f9e3 	bl	80019fc <ILI9341_printText>

				ILI9341_Fill_Rect(80, 110, 120, 150, COLOR_BLUE);
 8002636:	231f      	movs	r3, #31
 8002638:	9300      	str	r3, [sp, #0]
 800263a:	2396      	movs	r3, #150	; 0x96
 800263c:	2278      	movs	r2, #120	; 0x78
 800263e:	216e      	movs	r1, #110	; 0x6e
 8002640:	2050      	movs	r0, #80	; 0x50
 8002642:	f7fe feb5 	bl	80013b0 <ILI9341_Fill_Rect>
				ILI9341_printText("DOWN", 90,  130, COLOR_WHITE, COLOR_BLUE, 1);
 8002646:	2301      	movs	r3, #1
 8002648:	9301      	str	r3, [sp, #4]
 800264a:	231f      	movs	r3, #31
 800264c:	9300      	str	r3, [sp, #0]
 800264e:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002652:	2282      	movs	r2, #130	; 0x82
 8002654:	215a      	movs	r1, #90	; 0x5a
 8002656:	481a      	ldr	r0, [pc, #104]	; (80026c0 <HMI_getTouch+0x420>)
 8002658:	f7ff f9d0 	bl	80019fc <ILI9341_printText>

				ILI9341_printText("REGELUNG", 195,  120, COLOR_BLACK, COLOR_WHITE, 2);
 800265c:	2302      	movs	r3, #2
 800265e:	9301      	str	r3, [sp, #4]
 8002660:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002664:	9300      	str	r3, [sp, #0]
 8002666:	2300      	movs	r3, #0
 8002668:	2278      	movs	r2, #120	; 0x78
 800266a:	21c3      	movs	r1, #195	; 0xc3
 800266c:	4815      	ldr	r0, [pc, #84]	; (80026c4 <HMI_getTouch+0x424>)
 800266e:	f7ff f9c5 	bl	80019fc <ILI9341_printText>


				ILI9341_Fill_Rect(180, 140, 300, 180, COLOR_RED);
 8002672:	f44f 4378 	mov.w	r3, #63488	; 0xf800
 8002676:	9300      	str	r3, [sp, #0]
 8002678:	23b4      	movs	r3, #180	; 0xb4
 800267a:	f44f 7296 	mov.w	r2, #300	; 0x12c
 800267e:	218c      	movs	r1, #140	; 0x8c
 8002680:	20b4      	movs	r0, #180	; 0xb4
 8002682:	f7fe fe95 	bl	80013b0 <ILI9341_Fill_Rect>
				ILI9341_printText("IDLE", 230,  155, COLOR_WHITE, COLOR_RED, 2);
 8002686:	2302      	movs	r3, #2
 8002688:	9301      	str	r3, [sp, #4]
 800268a:	f44f 4378 	mov.w	r3, #63488	; 0xf800
 800268e:	9300      	str	r3, [sp, #0]
 8002690:	f64f 73ff 	movw	r3, #65535	; 0xffff
 8002694:	229b      	movs	r2, #155	; 0x9b
 8002696:	21e6      	movs	r1, #230	; 0xe6
 8002698:	480b      	ldr	r0, [pc, #44]	; (80026c8 <HMI_getTouch+0x428>)
 800269a:	f7ff f9af 	bl	80019fc <ILI9341_printText>


	}


}
 800269e:	bf00      	nop
 80026a0:	3758      	adds	r7, #88	; 0x58
 80026a2:	46bd      	mov	sp, r7
 80026a4:	bd80      	pop	{r7, pc}
 80026a6:	bf00      	nop
 80026a8:	0800cda8 	.word	0x0800cda8
 80026ac:	0800cdb0 	.word	0x0800cdb0
 80026b0:	0800cdc0 	.word	0x0800cdc0
 80026b4:	0800cd58 	.word	0x0800cd58
 80026b8:	0800cd6c 	.word	0x0800cd6c
 80026bc:	0800cd7c 	.word	0x0800cd7c
 80026c0:	0800cd80 	.word	0x0800cd80
 80026c4:	0800cd8c 	.word	0x0800cd8c
 80026c8:	0800cdc4 	.word	0x0800cdc4

080026cc <createPcReceiveHandler>:
PcReceiveHandler createPcReceiveHandler(StateMachine*  stateMachine,
										PIDController* controller,
		   								Motor* motor,
		   								PcSendHandler* sender,
		   								UART_HandleTypeDef* uart3)
{
 80026cc:	b5b0      	push	{r4, r5, r7, lr}
 80026ce:	b08a      	sub	sp, #40	; 0x28
 80026d0:	af00      	add	r7, sp, #0
 80026d2:	60f8      	str	r0, [r7, #12]
 80026d4:	60b9      	str	r1, [r7, #8]
 80026d6:	607a      	str	r2, [r7, #4]
 80026d8:	603b      	str	r3, [r7, #0]
    PcReceiveHandler handler;
    handler.stateMachine	= stateMachine;
 80026da:	68bb      	ldr	r3, [r7, #8]
 80026dc:	613b      	str	r3, [r7, #16]
    handler.pidController 	= controller;
 80026de:	687b      	ldr	r3, [r7, #4]
 80026e0:	617b      	str	r3, [r7, #20]
    handler.motor 			= motor;
 80026e2:	683b      	ldr	r3, [r7, #0]
 80026e4:	61bb      	str	r3, [r7, #24]
    handler.sender 			= sender;
 80026e6:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80026e8:	61fb      	str	r3, [r7, #28]
    handler.uart3 			= uart3;
 80026ea:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 80026ec:	623b      	str	r3, [r7, #32]

    // Zuweisung der globalen Variable
    gPcHandler = handler;
 80026ee:	4b0e      	ldr	r3, [pc, #56]	; (8002728 <createPcReceiveHandler+0x5c>)
 80026f0:	461d      	mov	r5, r3
 80026f2:	f107 0410 	add.w	r4, r7, #16
 80026f6:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80026f8:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 80026fa:	e894 0003 	ldmia.w	r4, {r0, r1}
 80026fe:	e885 0003 	stmia.w	r5, {r0, r1}

    handler.uartProcessor = createUartProcessor(pc_interface_dictionary);
 8002702:	480a      	ldr	r0, [pc, #40]	; (800272c <createPcReceiveHandler+0x60>)
 8002704:	f000 fe74 	bl	80033f0 <createUartProcessor>
 8002708:	6278      	str	r0, [r7, #36]	; 0x24
    return handler;
 800270a:	68fb      	ldr	r3, [r7, #12]
 800270c:	461d      	mov	r5, r3
 800270e:	f107 0410 	add.w	r4, r7, #16
 8002712:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8002714:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8002716:	e894 0003 	ldmia.w	r4, {r0, r1}
 800271a:	e885 0003 	stmia.w	r5, {r0, r1}
}
 800271e:	68f8      	ldr	r0, [r7, #12]
 8002720:	3728      	adds	r7, #40	; 0x28
 8002722:	46bd      	mov	sp, r7
 8002724:	bdb0      	pop	{r4, r5, r7, pc}
 8002726:	bf00      	nop
 8002728:	20000350 	.word	0x20000350
 800272c:	20000004 	.word	0x20000004

08002730 <handleSetSpeed>:

// Handle-Methods
void handleSetSpeed(uint8_t uartNr, const char* value){
 8002730:	b5b0      	push	{r4, r5, r7, lr}
 8002732:	b082      	sub	sp, #8
 8002734:	af00      	add	r7, sp, #0
 8002736:	4603      	mov	r3, r0
 8002738:	6039      	str	r1, [r7, #0]
 800273a:	71fb      	strb	r3, [r7, #7]
	if(gPcHandler.stateMachine->getState(gPcHandler.stateMachine) == STATE_MANUAL_CONTROL){
 800273c:	4b0f      	ldr	r3, [pc, #60]	; (800277c <handleSetSpeed+0x4c>)
 800273e:	681b      	ldr	r3, [r3, #0]
 8002740:	695b      	ldr	r3, [r3, #20]
 8002742:	4a0e      	ldr	r2, [pc, #56]	; (800277c <handleSetSpeed+0x4c>)
 8002744:	6812      	ldr	r2, [r2, #0]
 8002746:	4610      	mov	r0, r2
 8002748:	4798      	blx	r3
 800274a:	4603      	mov	r3, r0
 800274c:	2b01      	cmp	r3, #1
 800274e:	d110      	bne.n	8002772 <handleSetSpeed+0x42>
		gPcHandler.motor->setSpeed(gPcHandler.motor,extractFloatValue(3,value));
 8002750:	4b0a      	ldr	r3, [pc, #40]	; (800277c <handleSetSpeed+0x4c>)
 8002752:	689b      	ldr	r3, [r3, #8]
 8002754:	68dc      	ldr	r4, [r3, #12]
 8002756:	4b09      	ldr	r3, [pc, #36]	; (800277c <handleSetSpeed+0x4c>)
 8002758:	689d      	ldr	r5, [r3, #8]
 800275a:	6839      	ldr	r1, [r7, #0]
 800275c:	2003      	movs	r0, #3
 800275e:	f000 f933 	bl	80029c8 <extractFloatValue>
 8002762:	eef0 7a40 	vmov.f32	s15, s0
 8002766:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800276a:	ee17 1a90 	vmov	r1, s15
 800276e:	4628      	mov	r0, r5
 8002770:	47a0      	blx	r4
	}

}
 8002772:	bf00      	nop
 8002774:	3708      	adds	r7, #8
 8002776:	46bd      	mov	sp, r7
 8002778:	bdb0      	pop	{r4, r5, r7, pc}
 800277a:	bf00      	nop
 800277c:	20000350 	.word	0x20000350

08002780 <handleSetState>:


void handleSetState(uint8_t uartNr, const char* value){
 8002780:	b580      	push	{r7, lr}
 8002782:	b084      	sub	sp, #16
 8002784:	af00      	add	r7, sp, #0
 8002786:	4603      	mov	r3, r0
 8002788:	6039      	str	r1, [r7, #0]
 800278a:	71fb      	strb	r3, [r7, #7]
	int state = extractIntValue(3, value);
 800278c:	6839      	ldr	r1, [r7, #0]
 800278e:	2003      	movs	r0, #3
 8002790:	f000 f9a6 	bl	8002ae0 <extractIntValue>
 8002794:	60b8      	str	r0, [r7, #8]
	State s = STATE_IDLE;
 8002796:	2300      	movs	r3, #0
 8002798:	73fb      	strb	r3, [r7, #15]
	if(state == 1){
 800279a:	68bb      	ldr	r3, [r7, #8]
 800279c:	2b01      	cmp	r3, #1
 800279e:	d102      	bne.n	80027a6 <handleSetState+0x26>
		s = STATE_MANUAL_CONTROL;
 80027a0:	2301      	movs	r3, #1
 80027a2:	73fb      	strb	r3, [r7, #15]
 80027a4:	e004      	b.n	80027b0 <handleSetState+0x30>
	}else if(state ==2){
 80027a6:	68bb      	ldr	r3, [r7, #8]
 80027a8:	2b02      	cmp	r3, #2
 80027aa:	d101      	bne.n	80027b0 <handleSetState+0x30>
		s = STATE_AUTOMATIC_MODE;
 80027ac:	2302      	movs	r3, #2
 80027ae:	73fb      	strb	r3, [r7, #15]
	}

	gPcHandler.stateMachine->changeState(gPcHandler.stateMachine,s);
 80027b0:	4b05      	ldr	r3, [pc, #20]	; (80027c8 <handleSetState+0x48>)
 80027b2:	681b      	ldr	r3, [r3, #0]
 80027b4:	691b      	ldr	r3, [r3, #16]
 80027b6:	4a04      	ldr	r2, [pc, #16]	; (80027c8 <handleSetState+0x48>)
 80027b8:	6812      	ldr	r2, [r2, #0]
 80027ba:	7bf9      	ldrb	r1, [r7, #15]
 80027bc:	4610      	mov	r0, r2
 80027be:	4798      	blx	r3
}
 80027c0:	bf00      	nop
 80027c2:	3710      	adds	r7, #16
 80027c4:	46bd      	mov	sp, r7
 80027c6:	bd80      	pop	{r7, pc}
 80027c8:	20000350 	.word	0x20000350

080027cc <handleSetCP>:

void handleSetCP(uint8_t uartNr, const char* value){
 80027cc:	b580      	push	{r7, lr}
 80027ce:	b084      	sub	sp, #16
 80027d0:	af00      	add	r7, sp, #0
 80027d2:	4603      	mov	r3, r0
 80027d4:	6039      	str	r1, [r7, #0]
 80027d6:	71fb      	strb	r3, [r7, #7]
	float kp = extractFloatValue(3, value);
 80027d8:	6839      	ldr	r1, [r7, #0]
 80027da:	2003      	movs	r0, #3
 80027dc:	f000 f8f4 	bl	80029c8 <extractFloatValue>
 80027e0:	ed87 0a03 	vstr	s0, [r7, #12]
	gPcHandler.pidController->set_kp(gPcHandler.pidController,kp);
 80027e4:	4b06      	ldr	r3, [pc, #24]	; (8002800 <handleSetCP+0x34>)
 80027e6:	685b      	ldr	r3, [r3, #4]
 80027e8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80027ea:	4a05      	ldr	r2, [pc, #20]	; (8002800 <handleSetCP+0x34>)
 80027ec:	6852      	ldr	r2, [r2, #4]
 80027ee:	ed97 0a03 	vldr	s0, [r7, #12]
 80027f2:	4610      	mov	r0, r2
 80027f4:	4798      	blx	r3
}
 80027f6:	bf00      	nop
 80027f8:	3710      	adds	r7, #16
 80027fa:	46bd      	mov	sp, r7
 80027fc:	bd80      	pop	{r7, pc}
 80027fe:	bf00      	nop
 8002800:	20000350 	.word	0x20000350

08002804 <handleSetCI>:
void handleSetCI(uint8_t uartNr, const char* value){
 8002804:	b580      	push	{r7, lr}
 8002806:	b084      	sub	sp, #16
 8002808:	af00      	add	r7, sp, #0
 800280a:	4603      	mov	r3, r0
 800280c:	6039      	str	r1, [r7, #0]
 800280e:	71fb      	strb	r3, [r7, #7]
	float ki = extractFloatValue(3, value);
 8002810:	6839      	ldr	r1, [r7, #0]
 8002812:	2003      	movs	r0, #3
 8002814:	f000 f8d8 	bl	80029c8 <extractFloatValue>
 8002818:	ed87 0a03 	vstr	s0, [r7, #12]
	gPcHandler.pidController->set_ki(gPcHandler.pidController,ki);
 800281c:	4b06      	ldr	r3, [pc, #24]	; (8002838 <handleSetCI+0x34>)
 800281e:	685b      	ldr	r3, [r3, #4]
 8002820:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002822:	4a05      	ldr	r2, [pc, #20]	; (8002838 <handleSetCI+0x34>)
 8002824:	6852      	ldr	r2, [r2, #4]
 8002826:	ed97 0a03 	vldr	s0, [r7, #12]
 800282a:	4610      	mov	r0, r2
 800282c:	4798      	blx	r3
}
 800282e:	bf00      	nop
 8002830:	3710      	adds	r7, #16
 8002832:	46bd      	mov	sp, r7
 8002834:	bd80      	pop	{r7, pc}
 8002836:	bf00      	nop
 8002838:	20000350 	.word	0x20000350

0800283c <handleSetCD>:
void handleSetCD(uint8_t uartNr, const char* value){
 800283c:	b580      	push	{r7, lr}
 800283e:	b084      	sub	sp, #16
 8002840:	af00      	add	r7, sp, #0
 8002842:	4603      	mov	r3, r0
 8002844:	6039      	str	r1, [r7, #0]
 8002846:	71fb      	strb	r3, [r7, #7]
	float kd = extractFloatValue(3, value);
 8002848:	6839      	ldr	r1, [r7, #0]
 800284a:	2003      	movs	r0, #3
 800284c:	f000 f8bc 	bl	80029c8 <extractFloatValue>
 8002850:	ed87 0a03 	vstr	s0, [r7, #12]
	gPcHandler.pidController->set_kd(gPcHandler.pidController,kd);
 8002854:	4b06      	ldr	r3, [pc, #24]	; (8002870 <handleSetCD+0x34>)
 8002856:	685b      	ldr	r3, [r3, #4]
 8002858:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800285a:	4a05      	ldr	r2, [pc, #20]	; (8002870 <handleSetCD+0x34>)
 800285c:	6852      	ldr	r2, [r2, #4]
 800285e:	ed97 0a03 	vldr	s0, [r7, #12]
 8002862:	4610      	mov	r0, r2
 8002864:	4798      	blx	r3
}
 8002866:	bf00      	nop
 8002868:	3710      	adds	r7, #16
 800286a:	46bd      	mov	sp, r7
 800286c:	bd80      	pop	{r7, pc}
 800286e:	bf00      	nop
 8002870:	20000350 	.word	0x20000350

08002874 <handleGetState>:

void handleGetState(uint8_t uartNr, const char* value){
 8002874:	b5b0      	push	{r4, r5, r7, lr}
 8002876:	b082      	sub	sp, #8
 8002878:	af00      	add	r7, sp, #0
 800287a:	4603      	mov	r3, r0
 800287c:	6039      	str	r1, [r7, #0]
 800287e:	71fb      	strb	r3, [r7, #7]
	gPcHandler.sender->interface.sendState(gPcHandler.uart3,gPcHandler.stateMachine->getState(gPcHandler.stateMachine));
 8002880:	4b09      	ldr	r3, [pc, #36]	; (80028a8 <handleGetState+0x34>)
 8002882:	68db      	ldr	r3, [r3, #12]
 8002884:	689c      	ldr	r4, [r3, #8]
 8002886:	4b08      	ldr	r3, [pc, #32]	; (80028a8 <handleGetState+0x34>)
 8002888:	691d      	ldr	r5, [r3, #16]
 800288a:	4b07      	ldr	r3, [pc, #28]	; (80028a8 <handleGetState+0x34>)
 800288c:	681b      	ldr	r3, [r3, #0]
 800288e:	695b      	ldr	r3, [r3, #20]
 8002890:	4a05      	ldr	r2, [pc, #20]	; (80028a8 <handleGetState+0x34>)
 8002892:	6812      	ldr	r2, [r2, #0]
 8002894:	4610      	mov	r0, r2
 8002896:	4798      	blx	r3
 8002898:	4603      	mov	r3, r0
 800289a:	4619      	mov	r1, r3
 800289c:	4628      	mov	r0, r5
 800289e:	47a0      	blx	r4
}
 80028a0:	bf00      	nop
 80028a2:	3708      	adds	r7, #8
 80028a4:	46bd      	mov	sp, r7
 80028a6:	bdb0      	pop	{r4, r5, r7, pc}
 80028a8:	20000350 	.word	0x20000350

080028ac <handleGetSpeed>:
void handleGetSpeed(uint8_t uartNr, const char* value){
 80028ac:	b5b0      	push	{r4, r5, r7, lr}
 80028ae:	b082      	sub	sp, #8
 80028b0:	af00      	add	r7, sp, #0
 80028b2:	4603      	mov	r3, r0
 80028b4:	6039      	str	r1, [r7, #0]
 80028b6:	71fb      	strb	r3, [r7, #7]
	gPcHandler.sender->interface.sendSpeed(gPcHandler.uart3,gPcHandler.motor->getSpeed(gPcHandler.motor));
 80028b8:	4b0b      	ldr	r3, [pc, #44]	; (80028e8 <handleGetSpeed+0x3c>)
 80028ba:	68db      	ldr	r3, [r3, #12]
 80028bc:	68dc      	ldr	r4, [r3, #12]
 80028be:	4b0a      	ldr	r3, [pc, #40]	; (80028e8 <handleGetSpeed+0x3c>)
 80028c0:	691d      	ldr	r5, [r3, #16]
 80028c2:	4b09      	ldr	r3, [pc, #36]	; (80028e8 <handleGetSpeed+0x3c>)
 80028c4:	689b      	ldr	r3, [r3, #8]
 80028c6:	689b      	ldr	r3, [r3, #8]
 80028c8:	4a07      	ldr	r2, [pc, #28]	; (80028e8 <handleGetSpeed+0x3c>)
 80028ca:	6892      	ldr	r2, [r2, #8]
 80028cc:	4610      	mov	r0, r2
 80028ce:	4798      	blx	r3
 80028d0:	ee07 0a90 	vmov	s15, r0
 80028d4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80028d8:	eeb0 0a67 	vmov.f32	s0, s15
 80028dc:	4628      	mov	r0, r5
 80028de:	47a0      	blx	r4
}
 80028e0:	bf00      	nop
 80028e2:	3708      	adds	r7, #8
 80028e4:	46bd      	mov	sp, r7
 80028e6:	bdb0      	pop	{r4, r5, r7, pc}
 80028e8:	20000350 	.word	0x20000350

080028ec <handleGetCP>:
void handleGetCP(uint8_t uartNr, const char* value){
 80028ec:	b580      	push	{r7, lr}
 80028ee:	b084      	sub	sp, #16
 80028f0:	af00      	add	r7, sp, #0
 80028f2:	4603      	mov	r3, r0
 80028f4:	6039      	str	r1, [r7, #0]
 80028f6:	71fb      	strb	r3, [r7, #7]
	float kp = gPcHandler.pidController->get_kp(gPcHandler.pidController);
 80028f8:	4b0a      	ldr	r3, [pc, #40]	; (8002924 <handleGetCP+0x38>)
 80028fa:	685b      	ldr	r3, [r3, #4]
 80028fc:	699b      	ldr	r3, [r3, #24]
 80028fe:	4a09      	ldr	r2, [pc, #36]	; (8002924 <handleGetCP+0x38>)
 8002900:	6852      	ldr	r2, [r2, #4]
 8002902:	4610      	mov	r0, r2
 8002904:	4798      	blx	r3
 8002906:	ed87 0a03 	vstr	s0, [r7, #12]
	gPcHandler.sender->interface.sendCPvalue(gPcHandler.uart3,kp);
 800290a:	4b06      	ldr	r3, [pc, #24]	; (8002924 <handleGetCP+0x38>)
 800290c:	68db      	ldr	r3, [r3, #12]
 800290e:	691b      	ldr	r3, [r3, #16]
 8002910:	4a04      	ldr	r2, [pc, #16]	; (8002924 <handleGetCP+0x38>)
 8002912:	6912      	ldr	r2, [r2, #16]
 8002914:	ed97 0a03 	vldr	s0, [r7, #12]
 8002918:	4610      	mov	r0, r2
 800291a:	4798      	blx	r3
}
 800291c:	bf00      	nop
 800291e:	3710      	adds	r7, #16
 8002920:	46bd      	mov	sp, r7
 8002922:	bd80      	pop	{r7, pc}
 8002924:	20000350 	.word	0x20000350

08002928 <handleGetCI>:
void handleGetCI(uint8_t uartNr, const char* value){
 8002928:	b580      	push	{r7, lr}
 800292a:	b084      	sub	sp, #16
 800292c:	af00      	add	r7, sp, #0
 800292e:	4603      	mov	r3, r0
 8002930:	6039      	str	r1, [r7, #0]
 8002932:	71fb      	strb	r3, [r7, #7]
	float ki = gPcHandler.pidController->get_ki(gPcHandler.pidController);
 8002934:	4b0a      	ldr	r3, [pc, #40]	; (8002960 <handleGetCI+0x38>)
 8002936:	685b      	ldr	r3, [r3, #4]
 8002938:	69db      	ldr	r3, [r3, #28]
 800293a:	4a09      	ldr	r2, [pc, #36]	; (8002960 <handleGetCI+0x38>)
 800293c:	6852      	ldr	r2, [r2, #4]
 800293e:	4610      	mov	r0, r2
 8002940:	4798      	blx	r3
 8002942:	ed87 0a03 	vstr	s0, [r7, #12]
	gPcHandler.sender->interface.sendCIvalue(gPcHandler.uart3,ki);
 8002946:	4b06      	ldr	r3, [pc, #24]	; (8002960 <handleGetCI+0x38>)
 8002948:	68db      	ldr	r3, [r3, #12]
 800294a:	695b      	ldr	r3, [r3, #20]
 800294c:	4a04      	ldr	r2, [pc, #16]	; (8002960 <handleGetCI+0x38>)
 800294e:	6912      	ldr	r2, [r2, #16]
 8002950:	ed97 0a03 	vldr	s0, [r7, #12]
 8002954:	4610      	mov	r0, r2
 8002956:	4798      	blx	r3
}
 8002958:	bf00      	nop
 800295a:	3710      	adds	r7, #16
 800295c:	46bd      	mov	sp, r7
 800295e:	bd80      	pop	{r7, pc}
 8002960:	20000350 	.word	0x20000350

08002964 <handleGetCD>:
void handleGetCD(uint8_t uartNr, const char* value){
 8002964:	b580      	push	{r7, lr}
 8002966:	b084      	sub	sp, #16
 8002968:	af00      	add	r7, sp, #0
 800296a:	4603      	mov	r3, r0
 800296c:	6039      	str	r1, [r7, #0]
 800296e:	71fb      	strb	r3, [r7, #7]
	float kd = gPcHandler.pidController->get_kd(gPcHandler.pidController);
 8002970:	4b0a      	ldr	r3, [pc, #40]	; (800299c <handleGetCD+0x38>)
 8002972:	685b      	ldr	r3, [r3, #4]
 8002974:	6a1b      	ldr	r3, [r3, #32]
 8002976:	4a09      	ldr	r2, [pc, #36]	; (800299c <handleGetCD+0x38>)
 8002978:	6852      	ldr	r2, [r2, #4]
 800297a:	4610      	mov	r0, r2
 800297c:	4798      	blx	r3
 800297e:	ed87 0a03 	vstr	s0, [r7, #12]
	gPcHandler.sender->interface.sendCDvalue(gPcHandler.uart3,kd);
 8002982:	4b06      	ldr	r3, [pc, #24]	; (800299c <handleGetCD+0x38>)
 8002984:	68db      	ldr	r3, [r3, #12]
 8002986:	699b      	ldr	r3, [r3, #24]
 8002988:	4a04      	ldr	r2, [pc, #16]	; (800299c <handleGetCD+0x38>)
 800298a:	6912      	ldr	r2, [r2, #16]
 800298c:	ed97 0a03 	vldr	s0, [r7, #12]
 8002990:	4610      	mov	r0, r2
 8002992:	4798      	blx	r3
}
 8002994:	bf00      	nop
 8002996:	3710      	adds	r7, #16
 8002998:	46bd      	mov	sp, r7
 800299a:	bd80      	pop	{r7, pc}
 800299c:	20000350 	.word	0x20000350

080029a0 <processPcInterfaceMessage>:

void processPcInterfaceMessage(PcReceiveHandler* handler,uint8_t* receivedData, uint8_t receivedDataIndex){
 80029a0:	b580      	push	{r7, lr}
 80029a2:	b084      	sub	sp, #16
 80029a4:	af00      	add	r7, sp, #0
 80029a6:	60f8      	str	r0, [r7, #12]
 80029a8:	60b9      	str	r1, [r7, #8]
 80029aa:	4613      	mov	r3, r2
 80029ac:	71fb      	strb	r3, [r7, #7]
	processCommand(3, &(handler->uartProcessor), receivedData, receivedDataIndex);
 80029ae:	68fb      	ldr	r3, [r7, #12]
 80029b0:	f103 0114 	add.w	r1, r3, #20
 80029b4:	79fb      	ldrb	r3, [r7, #7]
 80029b6:	68ba      	ldr	r2, [r7, #8]
 80029b8:	2003      	movs	r0, #3
 80029ba:	f000 fd57 	bl	800346c <processCommand>
}
 80029be:	bf00      	nop
 80029c0:	3710      	adds	r7, #16
 80029c2:	46bd      	mov	sp, r7
 80029c4:	bd80      	pop	{r7, pc}
	...

080029c8 <extractFloatValue>:

float extractFloatValue(uint8_t uartNr, const char* value) {
 80029c8:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80029cc:	b089      	sub	sp, #36	; 0x24
 80029ce:	af00      	add	r7, sp, #0
 80029d0:	4603      	mov	r3, r0
 80029d2:	6039      	str	r1, [r7, #0]
 80029d4:	71fb      	strb	r3, [r7, #7]
    int length = strlen(value);
 80029d6:	6838      	ldr	r0, [r7, #0]
 80029d8:	f7fd fc52 	bl	8000280 <strlen>
 80029dc:	4603      	mov	r3, r0
 80029de:	613b      	str	r3, [r7, #16]
    int startIndex = -1;  // Index des ersten Leerzeichens
 80029e0:	f04f 33ff 	mov.w	r3, #4294967295
 80029e4:	61fb      	str	r3, [r7, #28]
    int endIndex = -1;    // Index des zweiten Leerzeichens
 80029e6:	f04f 33ff 	mov.w	r3, #4294967295
 80029ea:	61bb      	str	r3, [r7, #24]

    for (int i = 0; i < length; i++) {
 80029ec:	2300      	movs	r3, #0
 80029ee:	617b      	str	r3, [r7, #20]
 80029f0:	e019      	b.n	8002a26 <extractFloatValue+0x5e>
        if (value[i] == ' ' || value[i] == '\r') {
 80029f2:	697b      	ldr	r3, [r7, #20]
 80029f4:	683a      	ldr	r2, [r7, #0]
 80029f6:	4413      	add	r3, r2
 80029f8:	781b      	ldrb	r3, [r3, #0]
 80029fa:	2b20      	cmp	r3, #32
 80029fc:	d005      	beq.n	8002a0a <extractFloatValue+0x42>
 80029fe:	697b      	ldr	r3, [r7, #20]
 8002a00:	683a      	ldr	r2, [r7, #0]
 8002a02:	4413      	add	r3, r2
 8002a04:	781b      	ldrb	r3, [r3, #0]
 8002a06:	2b0d      	cmp	r3, #13
 8002a08:	d10a      	bne.n	8002a20 <extractFloatValue+0x58>
            if (startIndex == -1) {
 8002a0a:	69fb      	ldr	r3, [r7, #28]
 8002a0c:	f1b3 3fff 	cmp.w	r3, #4294967295
 8002a10:	d103      	bne.n	8002a1a <extractFloatValue+0x52>
                startIndex = i + 1;
 8002a12:	697b      	ldr	r3, [r7, #20]
 8002a14:	3301      	adds	r3, #1
 8002a16:	61fb      	str	r3, [r7, #28]
 8002a18:	e002      	b.n	8002a20 <extractFloatValue+0x58>
            } else {
                endIndex = i;
 8002a1a:	697b      	ldr	r3, [r7, #20]
 8002a1c:	61bb      	str	r3, [r7, #24]
                break;
 8002a1e:	e006      	b.n	8002a2e <extractFloatValue+0x66>
    for (int i = 0; i < length; i++) {
 8002a20:	697b      	ldr	r3, [r7, #20]
 8002a22:	3301      	adds	r3, #1
 8002a24:	617b      	str	r3, [r7, #20]
 8002a26:	697a      	ldr	r2, [r7, #20]
 8002a28:	693b      	ldr	r3, [r7, #16]
 8002a2a:	429a      	cmp	r2, r3
 8002a2c:	dbe1      	blt.n	80029f2 <extractFloatValue+0x2a>
            }
        }
    }
    if (startIndex != -1 && endIndex != -1 && startIndex < endIndex) {
 8002a2e:	69fb      	ldr	r3, [r7, #28]
 8002a30:	f1b3 3fff 	cmp.w	r3, #4294967295
 8002a34:	d04a      	beq.n	8002acc <extractFloatValue+0x104>
 8002a36:	69bb      	ldr	r3, [r7, #24]
 8002a38:	f1b3 3fff 	cmp.w	r3, #4294967295
 8002a3c:	d046      	beq.n	8002acc <extractFloatValue+0x104>
 8002a3e:	69fa      	ldr	r2, [r7, #28]
 8002a40:	69bb      	ldr	r3, [r7, #24]
 8002a42:	429a      	cmp	r2, r3
 8002a44:	da42      	bge.n	8002acc <extractFloatValue+0x104>
 8002a46:	466b      	mov	r3, sp
 8002a48:	461e      	mov	r6, r3
        char floatStr[endIndex - startIndex + 1];
 8002a4a:	69ba      	ldr	r2, [r7, #24]
 8002a4c:	69fb      	ldr	r3, [r7, #28]
 8002a4e:	1ad3      	subs	r3, r2, r3
 8002a50:	1c59      	adds	r1, r3, #1
 8002a52:	1e4b      	subs	r3, r1, #1
 8002a54:	60fb      	str	r3, [r7, #12]
 8002a56:	460a      	mov	r2, r1
 8002a58:	2300      	movs	r3, #0
 8002a5a:	4690      	mov	r8, r2
 8002a5c:	4699      	mov	r9, r3
 8002a5e:	f04f 0200 	mov.w	r2, #0
 8002a62:	f04f 0300 	mov.w	r3, #0
 8002a66:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 8002a6a:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 8002a6e:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 8002a72:	460a      	mov	r2, r1
 8002a74:	2300      	movs	r3, #0
 8002a76:	4614      	mov	r4, r2
 8002a78:	461d      	mov	r5, r3
 8002a7a:	f04f 0200 	mov.w	r2, #0
 8002a7e:	f04f 0300 	mov.w	r3, #0
 8002a82:	00eb      	lsls	r3, r5, #3
 8002a84:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 8002a88:	00e2      	lsls	r2, r4, #3
 8002a8a:	460b      	mov	r3, r1
 8002a8c:	3307      	adds	r3, #7
 8002a8e:	08db      	lsrs	r3, r3, #3
 8002a90:	00db      	lsls	r3, r3, #3
 8002a92:	ebad 0d03 	sub.w	sp, sp, r3
 8002a96:	466b      	mov	r3, sp
 8002a98:	3300      	adds	r3, #0
 8002a9a:	60bb      	str	r3, [r7, #8]
        strncpy(floatStr, value + startIndex, endIndex - startIndex);
 8002a9c:	69fb      	ldr	r3, [r7, #28]
 8002a9e:	683a      	ldr	r2, [r7, #0]
 8002aa0:	18d1      	adds	r1, r2, r3
 8002aa2:	69ba      	ldr	r2, [r7, #24]
 8002aa4:	69fb      	ldr	r3, [r7, #28]
 8002aa6:	1ad3      	subs	r3, r2, r3
 8002aa8:	461a      	mov	r2, r3
 8002aaa:	68b8      	ldr	r0, [r7, #8]
 8002aac:	f007 fba1 	bl	800a1f2 <strncpy>
        floatStr[endIndex - startIndex] = '\0';
 8002ab0:	69ba      	ldr	r2, [r7, #24]
 8002ab2:	69fb      	ldr	r3, [r7, #28]
 8002ab4:	1ad3      	subs	r3, r2, r3
 8002ab6:	68ba      	ldr	r2, [r7, #8]
 8002ab8:	2100      	movs	r1, #0
 8002aba:	54d1      	strb	r1, [r2, r3]
        return strtof(floatStr, NULL);
 8002abc:	2100      	movs	r1, #0
 8002abe:	68b8      	ldr	r0, [r7, #8]
 8002ac0:	f006 fae4 	bl	800908c <strtof>
 8002ac4:	eef0 7a40 	vmov.f32	s15, s0
 8002ac8:	46b5      	mov	sp, r6
 8002aca:	e001      	b.n	8002ad0 <extractFloatValue+0x108>
    }
    return 0.00;
 8002acc:	eddf 7a03 	vldr	s15, [pc, #12]	; 8002adc <extractFloatValue+0x114>
}
 8002ad0:	eeb0 0a67 	vmov.f32	s0, s15
 8002ad4:	3724      	adds	r7, #36	; 0x24
 8002ad6:	46bd      	mov	sp, r7
 8002ad8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8002adc:	00000000 	.word	0x00000000

08002ae0 <extractIntValue>:
int extractIntValue(uint8_t uartNr, const char* value) {
 8002ae0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8002ae4:	b089      	sub	sp, #36	; 0x24
 8002ae6:	af00      	add	r7, sp, #0
 8002ae8:	4603      	mov	r3, r0
 8002aea:	6039      	str	r1, [r7, #0]
 8002aec:	71fb      	strb	r3, [r7, #7]
    int length = strlen(value);
 8002aee:	6838      	ldr	r0, [r7, #0]
 8002af0:	f7fd fbc6 	bl	8000280 <strlen>
 8002af4:	4603      	mov	r3, r0
 8002af6:	613b      	str	r3, [r7, #16]
    int startIndex = -1;  // Index des ersten Leerzeichens
 8002af8:	f04f 33ff 	mov.w	r3, #4294967295
 8002afc:	61fb      	str	r3, [r7, #28]
    int endIndex = -1;    // Index des zweiten Leerzeichens
 8002afe:	f04f 33ff 	mov.w	r3, #4294967295
 8002b02:	61bb      	str	r3, [r7, #24]

    for (int i = 0; i < length; i++) {
 8002b04:	2300      	movs	r3, #0
 8002b06:	617b      	str	r3, [r7, #20]
 8002b08:	e019      	b.n	8002b3e <extractIntValue+0x5e>
        if (value[i] == ' ' || value[i] == '\r') {
 8002b0a:	697b      	ldr	r3, [r7, #20]
 8002b0c:	683a      	ldr	r2, [r7, #0]
 8002b0e:	4413      	add	r3, r2
 8002b10:	781b      	ldrb	r3, [r3, #0]
 8002b12:	2b20      	cmp	r3, #32
 8002b14:	d005      	beq.n	8002b22 <extractIntValue+0x42>
 8002b16:	697b      	ldr	r3, [r7, #20]
 8002b18:	683a      	ldr	r2, [r7, #0]
 8002b1a:	4413      	add	r3, r2
 8002b1c:	781b      	ldrb	r3, [r3, #0]
 8002b1e:	2b0d      	cmp	r3, #13
 8002b20:	d10a      	bne.n	8002b38 <extractIntValue+0x58>
            if (startIndex == -1) {
 8002b22:	69fb      	ldr	r3, [r7, #28]
 8002b24:	f1b3 3fff 	cmp.w	r3, #4294967295
 8002b28:	d103      	bne.n	8002b32 <extractIntValue+0x52>
                startIndex = i + 1;
 8002b2a:	697b      	ldr	r3, [r7, #20]
 8002b2c:	3301      	adds	r3, #1
 8002b2e:	61fb      	str	r3, [r7, #28]
 8002b30:	e002      	b.n	8002b38 <extractIntValue+0x58>
            } else {
                endIndex = i;
 8002b32:	697b      	ldr	r3, [r7, #20]
 8002b34:	61bb      	str	r3, [r7, #24]
                break;
 8002b36:	e006      	b.n	8002b46 <extractIntValue+0x66>
    for (int i = 0; i < length; i++) {
 8002b38:	697b      	ldr	r3, [r7, #20]
 8002b3a:	3301      	adds	r3, #1
 8002b3c:	617b      	str	r3, [r7, #20]
 8002b3e:	697a      	ldr	r2, [r7, #20]
 8002b40:	693b      	ldr	r3, [r7, #16]
 8002b42:	429a      	cmp	r2, r3
 8002b44:	dbe1      	blt.n	8002b0a <extractIntValue+0x2a>
            }
        }
    }
    if (startIndex != -1 && endIndex != -1 && startIndex < endIndex) {
 8002b46:	69fb      	ldr	r3, [r7, #28]
 8002b48:	f1b3 3fff 	cmp.w	r3, #4294967295
 8002b4c:	d048      	beq.n	8002be0 <extractIntValue+0x100>
 8002b4e:	69bb      	ldr	r3, [r7, #24]
 8002b50:	f1b3 3fff 	cmp.w	r3, #4294967295
 8002b54:	d044      	beq.n	8002be0 <extractIntValue+0x100>
 8002b56:	69fa      	ldr	r2, [r7, #28]
 8002b58:	69bb      	ldr	r3, [r7, #24]
 8002b5a:	429a      	cmp	r2, r3
 8002b5c:	da40      	bge.n	8002be0 <extractIntValue+0x100>
 8002b5e:	466b      	mov	r3, sp
 8002b60:	461e      	mov	r6, r3
        char intStr[endIndex - startIndex + 1];
 8002b62:	69ba      	ldr	r2, [r7, #24]
 8002b64:	69fb      	ldr	r3, [r7, #28]
 8002b66:	1ad3      	subs	r3, r2, r3
 8002b68:	1c59      	adds	r1, r3, #1
 8002b6a:	1e4b      	subs	r3, r1, #1
 8002b6c:	60fb      	str	r3, [r7, #12]
 8002b6e:	460a      	mov	r2, r1
 8002b70:	2300      	movs	r3, #0
 8002b72:	4690      	mov	r8, r2
 8002b74:	4699      	mov	r9, r3
 8002b76:	f04f 0200 	mov.w	r2, #0
 8002b7a:	f04f 0300 	mov.w	r3, #0
 8002b7e:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 8002b82:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 8002b86:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 8002b8a:	460a      	mov	r2, r1
 8002b8c:	2300      	movs	r3, #0
 8002b8e:	4614      	mov	r4, r2
 8002b90:	461d      	mov	r5, r3
 8002b92:	f04f 0200 	mov.w	r2, #0
 8002b96:	f04f 0300 	mov.w	r3, #0
 8002b9a:	00eb      	lsls	r3, r5, #3
 8002b9c:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 8002ba0:	00e2      	lsls	r2, r4, #3
 8002ba2:	460b      	mov	r3, r1
 8002ba4:	3307      	adds	r3, #7
 8002ba6:	08db      	lsrs	r3, r3, #3
 8002ba8:	00db      	lsls	r3, r3, #3
 8002baa:	ebad 0d03 	sub.w	sp, sp, r3
 8002bae:	466b      	mov	r3, sp
 8002bb0:	3300      	adds	r3, #0
 8002bb2:	60bb      	str	r3, [r7, #8]
        strncpy(intStr, value + startIndex, endIndex - startIndex);
 8002bb4:	69fb      	ldr	r3, [r7, #28]
 8002bb6:	683a      	ldr	r2, [r7, #0]
 8002bb8:	18d1      	adds	r1, r2, r3
 8002bba:	69ba      	ldr	r2, [r7, #24]
 8002bbc:	69fb      	ldr	r3, [r7, #28]
 8002bbe:	1ad3      	subs	r3, r2, r3
 8002bc0:	461a      	mov	r2, r3
 8002bc2:	68b8      	ldr	r0, [r7, #8]
 8002bc4:	f007 fb15 	bl	800a1f2 <strncpy>
        intStr[endIndex - startIndex] = '\0';
 8002bc8:	69ba      	ldr	r2, [r7, #24]
 8002bca:	69fb      	ldr	r3, [r7, #28]
 8002bcc:	1ad3      	subs	r3, r2, r3
 8002bce:	68ba      	ldr	r2, [r7, #8]
 8002bd0:	2100      	movs	r1, #0
 8002bd2:	54d1      	strb	r1, [r2, r3]
        return atoi(intStr);
 8002bd4:	68b8      	ldr	r0, [r7, #8]
 8002bd6:	f005 fc43 	bl	8008460 <atoi>
 8002bda:	4603      	mov	r3, r0
 8002bdc:	46b5      	mov	sp, r6
 8002bde:	e000      	b.n	8002be2 <extractIntValue+0x102>
    }
    return 0;
 8002be0:	2300      	movs	r3, #0
}
 8002be2:	4618      	mov	r0, r3
 8002be4:	3724      	adds	r7, #36	; 0x24
 8002be6:	46bd      	mov	sp, r7
 8002be8:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}

08002bec <sendDiamExt_impl>:
#include <stdio.h>
#include <string.h>


// Implementierung der Interface methoden
void sendDiamExt_impl(UART_HandleTypeDef *huart,float value) {
 8002bec:	b580      	push	{r7, lr}
 8002bee:	b08a      	sub	sp, #40	; 0x28
 8002bf0:	af00      	add	r7, sp, #0
 8002bf2:	6078      	str	r0, [r7, #4]
 8002bf4:	ed87 0a00 	vstr	s0, [r7]
	uint8_t tag[] = "DIAMEXT ";
 8002bf8:	4a21      	ldr	r2, [pc, #132]	; (8002c80 <sendDiamExt_impl+0x94>)
 8002bfa:	f107 031c 	add.w	r3, r7, #28
 8002bfe:	ca07      	ldmia	r2, {r0, r1, r2}
 8002c00:	c303      	stmia	r3!, {r0, r1}
 8002c02:	701a      	strb	r2, [r3, #0]
	uint8_t diameter[10];
	uint8_t endTag[] = " /r/n";
 8002c04:	4a1f      	ldr	r2, [pc, #124]	; (8002c84 <sendDiamExt_impl+0x98>)
 8002c06:	f107 0308 	add.w	r3, r7, #8
 8002c0a:	e892 0003 	ldmia.w	r2, {r0, r1}
 8002c0e:	6018      	str	r0, [r3, #0]
 8002c10:	3304      	adds	r3, #4
 8002c12:	8019      	strh	r1, [r3, #0]

	sprintf((char *)diameter, "%.2f", value);
 8002c14:	6838      	ldr	r0, [r7, #0]
 8002c16:	f7fd fc9f 	bl	8000558 <__aeabi_f2d>
 8002c1a:	4602      	mov	r2, r0
 8002c1c:	460b      	mov	r3, r1
 8002c1e:	f107 0010 	add.w	r0, r7, #16
 8002c22:	4919      	ldr	r1, [pc, #100]	; (8002c88 <sendDiamExt_impl+0x9c>)
 8002c24:	f007 fa68 	bl	800a0f8 <siprintf>

	HAL_UART_Transmit(huart, tag, strlen((char*)tag), 10);
 8002c28:	f107 031c 	add.w	r3, r7, #28
 8002c2c:	4618      	mov	r0, r3
 8002c2e:	f7fd fb27 	bl	8000280 <strlen>
 8002c32:	4603      	mov	r3, r0
 8002c34:	b29a      	uxth	r2, r3
 8002c36:	f107 011c 	add.w	r1, r7, #28
 8002c3a:	230a      	movs	r3, #10
 8002c3c:	6878      	ldr	r0, [r7, #4]
 8002c3e:	f004 fbe4 	bl	800740a <HAL_UART_Transmit>
   	HAL_UART_Transmit(huart, diameter, strlen((char*)diameter), 10);
 8002c42:	f107 0310 	add.w	r3, r7, #16
 8002c46:	4618      	mov	r0, r3
 8002c48:	f7fd fb1a 	bl	8000280 <strlen>
 8002c4c:	4603      	mov	r3, r0
 8002c4e:	b29a      	uxth	r2, r3
 8002c50:	f107 0110 	add.w	r1, r7, #16
 8002c54:	230a      	movs	r3, #10
 8002c56:	6878      	ldr	r0, [r7, #4]
 8002c58:	f004 fbd7 	bl	800740a <HAL_UART_Transmit>
	HAL_UART_Transmit(huart, endTag, strlen((char*)endTag), 10);
 8002c5c:	f107 0308 	add.w	r3, r7, #8
 8002c60:	4618      	mov	r0, r3
 8002c62:	f7fd fb0d 	bl	8000280 <strlen>
 8002c66:	4603      	mov	r3, r0
 8002c68:	b29a      	uxth	r2, r3
 8002c6a:	f107 0108 	add.w	r1, r7, #8
 8002c6e:	230a      	movs	r3, #10
 8002c70:	6878      	ldr	r0, [r7, #4]
 8002c72:	f004 fbca 	bl	800740a <HAL_UART_Transmit>
}
 8002c76:	bf00      	nop
 8002c78:	3728      	adds	r7, #40	; 0x28
 8002c7a:	46bd      	mov	sp, r7
 8002c7c:	bd80      	pop	{r7, pc}
 8002c7e:	bf00      	nop
 8002c80:	0800ce0c 	.word	0x0800ce0c
 8002c84:	0800ce18 	.word	0x0800ce18
 8002c88:	0800ce04 	.word	0x0800ce04

08002c8c <sendDiamBack_impl>:
void sendDiamBack_impl(UART_HandleTypeDef *huart,float value) {
 8002c8c:	b580      	push	{r7, lr}
 8002c8e:	b08a      	sub	sp, #40	; 0x28
 8002c90:	af00      	add	r7, sp, #0
 8002c92:	6078      	str	r0, [r7, #4]
 8002c94:	ed87 0a00 	vstr	s0, [r7]
	uint8_t tag[] = "DIAMBACK ";
 8002c98:	4a21      	ldr	r2, [pc, #132]	; (8002d20 <sendDiamBack_impl+0x94>)
 8002c9a:	f107 031c 	add.w	r3, r7, #28
 8002c9e:	ca07      	ldmia	r2, {r0, r1, r2}
 8002ca0:	c303      	stmia	r3!, {r0, r1}
 8002ca2:	801a      	strh	r2, [r3, #0]
	uint8_t diameter[10];
	uint8_t endTag[] = " /r/n";
 8002ca4:	4a1f      	ldr	r2, [pc, #124]	; (8002d24 <sendDiamBack_impl+0x98>)
 8002ca6:	f107 0308 	add.w	r3, r7, #8
 8002caa:	e892 0003 	ldmia.w	r2, {r0, r1}
 8002cae:	6018      	str	r0, [r3, #0]
 8002cb0:	3304      	adds	r3, #4
 8002cb2:	8019      	strh	r1, [r3, #0]

	sprintf((char *)diameter, "%.2f", value);
 8002cb4:	6838      	ldr	r0, [r7, #0]
 8002cb6:	f7fd fc4f 	bl	8000558 <__aeabi_f2d>
 8002cba:	4602      	mov	r2, r0
 8002cbc:	460b      	mov	r3, r1
 8002cbe:	f107 0010 	add.w	r0, r7, #16
 8002cc2:	4919      	ldr	r1, [pc, #100]	; (8002d28 <sendDiamBack_impl+0x9c>)
 8002cc4:	f007 fa18 	bl	800a0f8 <siprintf>

	HAL_UART_Transmit(huart, tag, strlen((char*)tag), 10);
 8002cc8:	f107 031c 	add.w	r3, r7, #28
 8002ccc:	4618      	mov	r0, r3
 8002cce:	f7fd fad7 	bl	8000280 <strlen>
 8002cd2:	4603      	mov	r3, r0
 8002cd4:	b29a      	uxth	r2, r3
 8002cd6:	f107 011c 	add.w	r1, r7, #28
 8002cda:	230a      	movs	r3, #10
 8002cdc:	6878      	ldr	r0, [r7, #4]
 8002cde:	f004 fb94 	bl	800740a <HAL_UART_Transmit>
   	HAL_UART_Transmit(huart, diameter, strlen((char*)diameter), 10);
 8002ce2:	f107 0310 	add.w	r3, r7, #16
 8002ce6:	4618      	mov	r0, r3
 8002ce8:	f7fd faca 	bl	8000280 <strlen>
 8002cec:	4603      	mov	r3, r0
 8002cee:	b29a      	uxth	r2, r3
 8002cf0:	f107 0110 	add.w	r1, r7, #16
 8002cf4:	230a      	movs	r3, #10
 8002cf6:	6878      	ldr	r0, [r7, #4]
 8002cf8:	f004 fb87 	bl	800740a <HAL_UART_Transmit>
	HAL_UART_Transmit(huart, endTag, strlen((char*)endTag), 10);
 8002cfc:	f107 0308 	add.w	r3, r7, #8
 8002d00:	4618      	mov	r0, r3
 8002d02:	f7fd fabd 	bl	8000280 <strlen>
 8002d06:	4603      	mov	r3, r0
 8002d08:	b29a      	uxth	r2, r3
 8002d0a:	f107 0108 	add.w	r1, r7, #8
 8002d0e:	230a      	movs	r3, #10
 8002d10:	6878      	ldr	r0, [r7, #4]
 8002d12:	f004 fb7a 	bl	800740a <HAL_UART_Transmit>
}
 8002d16:	bf00      	nop
 8002d18:	3728      	adds	r7, #40	; 0x28
 8002d1a:	46bd      	mov	sp, r7
 8002d1c:	bd80      	pop	{r7, pc}
 8002d1e:	bf00      	nop
 8002d20:	0800ce20 	.word	0x0800ce20
 8002d24:	0800ce18 	.word	0x0800ce18
 8002d28:	0800ce04 	.word	0x0800ce04

08002d2c <sendState_impl>:

void sendState_impl(UART_HandleTypeDef *huart, State state) {
 8002d2c:	b580      	push	{r7, lr}
 8002d2e:	b088      	sub	sp, #32
 8002d30:	af00      	add	r7, sp, #0
 8002d32:	6078      	str	r0, [r7, #4]
 8002d34:	460b      	mov	r3, r1
 8002d36:	70fb      	strb	r3, [r7, #3]
    uint8_t tag[] = "STATE ";
 8002d38:	4a22      	ldr	r2, [pc, #136]	; (8002dc4 <sendState_impl+0x98>)
 8002d3a:	f107 0318 	add.w	r3, r7, #24
 8002d3e:	e892 0003 	ldmia.w	r2, {r0, r1}
 8002d42:	6018      	str	r0, [r3, #0]
 8002d44:	3304      	adds	r3, #4
 8002d46:	8019      	strh	r1, [r3, #0]
 8002d48:	3302      	adds	r3, #2
 8002d4a:	0c0a      	lsrs	r2, r1, #16
 8002d4c:	701a      	strb	r2, [r3, #0]
    uint8_t stateStr[10];
    uint8_t endTag[] = "\r\n";
 8002d4e:	4a1e      	ldr	r2, [pc, #120]	; (8002dc8 <sendState_impl+0x9c>)
 8002d50:	f107 0308 	add.w	r3, r7, #8
 8002d54:	6812      	ldr	r2, [r2, #0]
 8002d56:	4611      	mov	r1, r2
 8002d58:	8019      	strh	r1, [r3, #0]
 8002d5a:	3302      	adds	r3, #2
 8002d5c:	0c12      	lsrs	r2, r2, #16
 8002d5e:	701a      	strb	r2, [r3, #0]

    sprintf((char *)stateStr, "%d", state);
 8002d60:	78fa      	ldrb	r2, [r7, #3]
 8002d62:	f107 030c 	add.w	r3, r7, #12
 8002d66:	4919      	ldr	r1, [pc, #100]	; (8002dcc <sendState_impl+0xa0>)
 8002d68:	4618      	mov	r0, r3
 8002d6a:	f007 f9c5 	bl	800a0f8 <siprintf>

    HAL_UART_Transmit(huart, tag, strlen((char*)tag), 10);
 8002d6e:	f107 0318 	add.w	r3, r7, #24
 8002d72:	4618      	mov	r0, r3
 8002d74:	f7fd fa84 	bl	8000280 <strlen>
 8002d78:	4603      	mov	r3, r0
 8002d7a:	b29a      	uxth	r2, r3
 8002d7c:	f107 0118 	add.w	r1, r7, #24
 8002d80:	230a      	movs	r3, #10
 8002d82:	6878      	ldr	r0, [r7, #4]
 8002d84:	f004 fb41 	bl	800740a <HAL_UART_Transmit>
    HAL_UART_Transmit(huart, stateStr, strlen((char*)stateStr), 10);
 8002d88:	f107 030c 	add.w	r3, r7, #12
 8002d8c:	4618      	mov	r0, r3
 8002d8e:	f7fd fa77 	bl	8000280 <strlen>
 8002d92:	4603      	mov	r3, r0
 8002d94:	b29a      	uxth	r2, r3
 8002d96:	f107 010c 	add.w	r1, r7, #12
 8002d9a:	230a      	movs	r3, #10
 8002d9c:	6878      	ldr	r0, [r7, #4]
 8002d9e:	f004 fb34 	bl	800740a <HAL_UART_Transmit>
    HAL_UART_Transmit(huart, endTag, strlen((char*)endTag), 10);
 8002da2:	f107 0308 	add.w	r3, r7, #8
 8002da6:	4618      	mov	r0, r3
 8002da8:	f7fd fa6a 	bl	8000280 <strlen>
 8002dac:	4603      	mov	r3, r0
 8002dae:	b29a      	uxth	r2, r3
 8002db0:	f107 0108 	add.w	r1, r7, #8
 8002db4:	230a      	movs	r3, #10
 8002db6:	6878      	ldr	r0, [r7, #4]
 8002db8:	f004 fb27 	bl	800740a <HAL_UART_Transmit>
}
 8002dbc:	bf00      	nop
 8002dbe:	3720      	adds	r7, #32
 8002dc0:	46bd      	mov	sp, r7
 8002dc2:	bd80      	pop	{r7, pc}
 8002dc4:	0800ce30 	.word	0x0800ce30
 8002dc8:	0800ce38 	.word	0x0800ce38
 8002dcc:	0800ce2c 	.word	0x0800ce2c

08002dd0 <sendSpeed_impl>:
void sendSpeed_impl(UART_HandleTypeDef *huart, float speed){
 8002dd0:	b580      	push	{r7, lr}
 8002dd2:	b088      	sub	sp, #32
 8002dd4:	af00      	add	r7, sp, #0
 8002dd6:	6078      	str	r0, [r7, #4]
 8002dd8:	ed87 0a00 	vstr	s0, [r7]
    uint8_t tag[] = "SPEED ";
 8002ddc:	4a24      	ldr	r2, [pc, #144]	; (8002e70 <sendSpeed_impl+0xa0>)
 8002dde:	f107 0318 	add.w	r3, r7, #24
 8002de2:	e892 0003 	ldmia.w	r2, {r0, r1}
 8002de6:	6018      	str	r0, [r3, #0]
 8002de8:	3304      	adds	r3, #4
 8002dea:	8019      	strh	r1, [r3, #0]
 8002dec:	3302      	adds	r3, #2
 8002dee:	0c0a      	lsrs	r2, r1, #16
 8002df0:	701a      	strb	r2, [r3, #0]
    uint8_t value[10];
    uint8_t endTag[] = "\r\n";
 8002df2:	4a20      	ldr	r2, [pc, #128]	; (8002e74 <sendSpeed_impl+0xa4>)
 8002df4:	f107 0308 	add.w	r3, r7, #8
 8002df8:	6812      	ldr	r2, [r2, #0]
 8002dfa:	4611      	mov	r1, r2
 8002dfc:	8019      	strh	r1, [r3, #0]
 8002dfe:	3302      	adds	r3, #2
 8002e00:	0c12      	lsrs	r2, r2, #16
 8002e02:	701a      	strb	r2, [r3, #0]

    sprintf((char *)value, "%.2f", speed);
 8002e04:	6838      	ldr	r0, [r7, #0]
 8002e06:	f7fd fba7 	bl	8000558 <__aeabi_f2d>
 8002e0a:	4602      	mov	r2, r0
 8002e0c:	460b      	mov	r3, r1
 8002e0e:	f107 000c 	add.w	r0, r7, #12
 8002e12:	4919      	ldr	r1, [pc, #100]	; (8002e78 <sendSpeed_impl+0xa8>)
 8002e14:	f007 f970 	bl	800a0f8 <siprintf>

    HAL_UART_Transmit(huart, tag, strlen((char*)tag), 10);
 8002e18:	f107 0318 	add.w	r3, r7, #24
 8002e1c:	4618      	mov	r0, r3
 8002e1e:	f7fd fa2f 	bl	8000280 <strlen>
 8002e22:	4603      	mov	r3, r0
 8002e24:	b29a      	uxth	r2, r3
 8002e26:	f107 0118 	add.w	r1, r7, #24
 8002e2a:	230a      	movs	r3, #10
 8002e2c:	6878      	ldr	r0, [r7, #4]
 8002e2e:	f004 faec 	bl	800740a <HAL_UART_Transmit>
    HAL_UART_Transmit(huart, value, strlen((char*)value), 10);
 8002e32:	f107 030c 	add.w	r3, r7, #12
 8002e36:	4618      	mov	r0, r3
 8002e38:	f7fd fa22 	bl	8000280 <strlen>
 8002e3c:	4603      	mov	r3, r0
 8002e3e:	b29a      	uxth	r2, r3
 8002e40:	f107 010c 	add.w	r1, r7, #12
 8002e44:	230a      	movs	r3, #10
 8002e46:	6878      	ldr	r0, [r7, #4]
 8002e48:	f004 fadf 	bl	800740a <HAL_UART_Transmit>
    HAL_UART_Transmit(huart, endTag, strlen((char*)endTag), 10);
 8002e4c:	f107 0308 	add.w	r3, r7, #8
 8002e50:	4618      	mov	r0, r3
 8002e52:	f7fd fa15 	bl	8000280 <strlen>
 8002e56:	4603      	mov	r3, r0
 8002e58:	b29a      	uxth	r2, r3
 8002e5a:	f107 0108 	add.w	r1, r7, #8
 8002e5e:	230a      	movs	r3, #10
 8002e60:	6878      	ldr	r0, [r7, #4]
 8002e62:	f004 fad2 	bl	800740a <HAL_UART_Transmit>

}
 8002e66:	bf00      	nop
 8002e68:	3720      	adds	r7, #32
 8002e6a:	46bd      	mov	sp, r7
 8002e6c:	bd80      	pop	{r7, pc}
 8002e6e:	bf00      	nop
 8002e70:	0800ce3c 	.word	0x0800ce3c
 8002e74:	0800ce38 	.word	0x0800ce38
 8002e78:	0800ce04 	.word	0x0800ce04

08002e7c <sendCPvalue_impl>:
void sendCPvalue_impl(UART_HandleTypeDef *huart, float cp){
 8002e7c:	b580      	push	{r7, lr}
 8002e7e:	b088      	sub	sp, #32
 8002e80:	af00      	add	r7, sp, #0
 8002e82:	6078      	str	r0, [r7, #4]
 8002e84:	ed87 0a00 	vstr	s0, [r7]
    uint8_t tag[] = "CP ";
 8002e88:	4b1f      	ldr	r3, [pc, #124]	; (8002f08 <sendCPvalue_impl+0x8c>)
 8002e8a:	61fb      	str	r3, [r7, #28]
    uint8_t value[10];
    uint8_t endTag[] = "\r\n";
 8002e8c:	4a1f      	ldr	r2, [pc, #124]	; (8002f0c <sendCPvalue_impl+0x90>)
 8002e8e:	f107 030c 	add.w	r3, r7, #12
 8002e92:	6812      	ldr	r2, [r2, #0]
 8002e94:	4611      	mov	r1, r2
 8002e96:	8019      	strh	r1, [r3, #0]
 8002e98:	3302      	adds	r3, #2
 8002e9a:	0c12      	lsrs	r2, r2, #16
 8002e9c:	701a      	strb	r2, [r3, #0]

    sprintf((char *)value, "%.2f", cp);
 8002e9e:	6838      	ldr	r0, [r7, #0]
 8002ea0:	f7fd fb5a 	bl	8000558 <__aeabi_f2d>
 8002ea4:	4602      	mov	r2, r0
 8002ea6:	460b      	mov	r3, r1
 8002ea8:	f107 0010 	add.w	r0, r7, #16
 8002eac:	4918      	ldr	r1, [pc, #96]	; (8002f10 <sendCPvalue_impl+0x94>)
 8002eae:	f007 f923 	bl	800a0f8 <siprintf>

    HAL_UART_Transmit(huart, tag, strlen((char*)tag), 10);
 8002eb2:	f107 031c 	add.w	r3, r7, #28
 8002eb6:	4618      	mov	r0, r3
 8002eb8:	f7fd f9e2 	bl	8000280 <strlen>
 8002ebc:	4603      	mov	r3, r0
 8002ebe:	b29a      	uxth	r2, r3
 8002ec0:	f107 011c 	add.w	r1, r7, #28
 8002ec4:	230a      	movs	r3, #10
 8002ec6:	6878      	ldr	r0, [r7, #4]
 8002ec8:	f004 fa9f 	bl	800740a <HAL_UART_Transmit>
    HAL_UART_Transmit(huart, value, strlen((char*)value), 10);
 8002ecc:	f107 0310 	add.w	r3, r7, #16
 8002ed0:	4618      	mov	r0, r3
 8002ed2:	f7fd f9d5 	bl	8000280 <strlen>
 8002ed6:	4603      	mov	r3, r0
 8002ed8:	b29a      	uxth	r2, r3
 8002eda:	f107 0110 	add.w	r1, r7, #16
 8002ede:	230a      	movs	r3, #10
 8002ee0:	6878      	ldr	r0, [r7, #4]
 8002ee2:	f004 fa92 	bl	800740a <HAL_UART_Transmit>
    HAL_UART_Transmit(huart, endTag, strlen((char*)endTag), 10);
 8002ee6:	f107 030c 	add.w	r3, r7, #12
 8002eea:	4618      	mov	r0, r3
 8002eec:	f7fd f9c8 	bl	8000280 <strlen>
 8002ef0:	4603      	mov	r3, r0
 8002ef2:	b29a      	uxth	r2, r3
 8002ef4:	f107 010c 	add.w	r1, r7, #12
 8002ef8:	230a      	movs	r3, #10
 8002efa:	6878      	ldr	r0, [r7, #4]
 8002efc:	f004 fa85 	bl	800740a <HAL_UART_Transmit>
}
 8002f00:	bf00      	nop
 8002f02:	3720      	adds	r7, #32
 8002f04:	46bd      	mov	sp, r7
 8002f06:	bd80      	pop	{r7, pc}
 8002f08:	00205043 	.word	0x00205043
 8002f0c:	0800ce38 	.word	0x0800ce38
 8002f10:	0800ce04 	.word	0x0800ce04

08002f14 <sendCIvalue_impl>:
void sendCIvalue_impl(UART_HandleTypeDef *huart, float ci){
 8002f14:	b580      	push	{r7, lr}
 8002f16:	b088      	sub	sp, #32
 8002f18:	af00      	add	r7, sp, #0
 8002f1a:	6078      	str	r0, [r7, #4]
 8002f1c:	ed87 0a00 	vstr	s0, [r7]
    uint8_t tag[] = "CI ";
 8002f20:	4b1f      	ldr	r3, [pc, #124]	; (8002fa0 <sendCIvalue_impl+0x8c>)
 8002f22:	61fb      	str	r3, [r7, #28]
    uint8_t value[10];
    uint8_t endTag[] = "\r\n";
 8002f24:	4a1f      	ldr	r2, [pc, #124]	; (8002fa4 <sendCIvalue_impl+0x90>)
 8002f26:	f107 030c 	add.w	r3, r7, #12
 8002f2a:	6812      	ldr	r2, [r2, #0]
 8002f2c:	4611      	mov	r1, r2
 8002f2e:	8019      	strh	r1, [r3, #0]
 8002f30:	3302      	adds	r3, #2
 8002f32:	0c12      	lsrs	r2, r2, #16
 8002f34:	701a      	strb	r2, [r3, #0]

    sprintf((char *)value, "%.2f", ci);
 8002f36:	6838      	ldr	r0, [r7, #0]
 8002f38:	f7fd fb0e 	bl	8000558 <__aeabi_f2d>
 8002f3c:	4602      	mov	r2, r0
 8002f3e:	460b      	mov	r3, r1
 8002f40:	f107 0010 	add.w	r0, r7, #16
 8002f44:	4918      	ldr	r1, [pc, #96]	; (8002fa8 <sendCIvalue_impl+0x94>)
 8002f46:	f007 f8d7 	bl	800a0f8 <siprintf>

    HAL_UART_Transmit(huart, tag, strlen((char*)tag), 10);
 8002f4a:	f107 031c 	add.w	r3, r7, #28
 8002f4e:	4618      	mov	r0, r3
 8002f50:	f7fd f996 	bl	8000280 <strlen>
 8002f54:	4603      	mov	r3, r0
 8002f56:	b29a      	uxth	r2, r3
 8002f58:	f107 011c 	add.w	r1, r7, #28
 8002f5c:	230a      	movs	r3, #10
 8002f5e:	6878      	ldr	r0, [r7, #4]
 8002f60:	f004 fa53 	bl	800740a <HAL_UART_Transmit>
    HAL_UART_Transmit(huart, value, strlen((char*)value), 10);
 8002f64:	f107 0310 	add.w	r3, r7, #16
 8002f68:	4618      	mov	r0, r3
 8002f6a:	f7fd f989 	bl	8000280 <strlen>
 8002f6e:	4603      	mov	r3, r0
 8002f70:	b29a      	uxth	r2, r3
 8002f72:	f107 0110 	add.w	r1, r7, #16
 8002f76:	230a      	movs	r3, #10
 8002f78:	6878      	ldr	r0, [r7, #4]
 8002f7a:	f004 fa46 	bl	800740a <HAL_UART_Transmit>
    HAL_UART_Transmit(huart, endTag, strlen((char*)endTag), 10);
 8002f7e:	f107 030c 	add.w	r3, r7, #12
 8002f82:	4618      	mov	r0, r3
 8002f84:	f7fd f97c 	bl	8000280 <strlen>
 8002f88:	4603      	mov	r3, r0
 8002f8a:	b29a      	uxth	r2, r3
 8002f8c:	f107 010c 	add.w	r1, r7, #12
 8002f90:	230a      	movs	r3, #10
 8002f92:	6878      	ldr	r0, [r7, #4]
 8002f94:	f004 fa39 	bl	800740a <HAL_UART_Transmit>
}
 8002f98:	bf00      	nop
 8002f9a:	3720      	adds	r7, #32
 8002f9c:	46bd      	mov	sp, r7
 8002f9e:	bd80      	pop	{r7, pc}
 8002fa0:	00204943 	.word	0x00204943
 8002fa4:	0800ce38 	.word	0x0800ce38
 8002fa8:	0800ce04 	.word	0x0800ce04

08002fac <sendCDvalue_impl>:
void sendCDvalue_impl(UART_HandleTypeDef *huart, float cd){
 8002fac:	b580      	push	{r7, lr}
 8002fae:	b088      	sub	sp, #32
 8002fb0:	af00      	add	r7, sp, #0
 8002fb2:	6078      	str	r0, [r7, #4]
 8002fb4:	ed87 0a00 	vstr	s0, [r7]
    uint8_t tag[] = "CD ";
 8002fb8:	4b1f      	ldr	r3, [pc, #124]	; (8003038 <sendCDvalue_impl+0x8c>)
 8002fba:	61fb      	str	r3, [r7, #28]
    uint8_t value[10];
    uint8_t endTag[] = "\r\n";
 8002fbc:	4a1f      	ldr	r2, [pc, #124]	; (800303c <sendCDvalue_impl+0x90>)
 8002fbe:	f107 030c 	add.w	r3, r7, #12
 8002fc2:	6812      	ldr	r2, [r2, #0]
 8002fc4:	4611      	mov	r1, r2
 8002fc6:	8019      	strh	r1, [r3, #0]
 8002fc8:	3302      	adds	r3, #2
 8002fca:	0c12      	lsrs	r2, r2, #16
 8002fcc:	701a      	strb	r2, [r3, #0]

    sprintf((char *)value, "%.2f", cd);
 8002fce:	6838      	ldr	r0, [r7, #0]
 8002fd0:	f7fd fac2 	bl	8000558 <__aeabi_f2d>
 8002fd4:	4602      	mov	r2, r0
 8002fd6:	460b      	mov	r3, r1
 8002fd8:	f107 0010 	add.w	r0, r7, #16
 8002fdc:	4918      	ldr	r1, [pc, #96]	; (8003040 <sendCDvalue_impl+0x94>)
 8002fde:	f007 f88b 	bl	800a0f8 <siprintf>

    HAL_UART_Transmit(huart, tag, strlen((char*)tag), 10);
 8002fe2:	f107 031c 	add.w	r3, r7, #28
 8002fe6:	4618      	mov	r0, r3
 8002fe8:	f7fd f94a 	bl	8000280 <strlen>
 8002fec:	4603      	mov	r3, r0
 8002fee:	b29a      	uxth	r2, r3
 8002ff0:	f107 011c 	add.w	r1, r7, #28
 8002ff4:	230a      	movs	r3, #10
 8002ff6:	6878      	ldr	r0, [r7, #4]
 8002ff8:	f004 fa07 	bl	800740a <HAL_UART_Transmit>
    HAL_UART_Transmit(huart, value, strlen((char*)value), 10);
 8002ffc:	f107 0310 	add.w	r3, r7, #16
 8003000:	4618      	mov	r0, r3
 8003002:	f7fd f93d 	bl	8000280 <strlen>
 8003006:	4603      	mov	r3, r0
 8003008:	b29a      	uxth	r2, r3
 800300a:	f107 0110 	add.w	r1, r7, #16
 800300e:	230a      	movs	r3, #10
 8003010:	6878      	ldr	r0, [r7, #4]
 8003012:	f004 f9fa 	bl	800740a <HAL_UART_Transmit>
    HAL_UART_Transmit(huart, endTag, strlen((char*)endTag), 10);
 8003016:	f107 030c 	add.w	r3, r7, #12
 800301a:	4618      	mov	r0, r3
 800301c:	f7fd f930 	bl	8000280 <strlen>
 8003020:	4603      	mov	r3, r0
 8003022:	b29a      	uxth	r2, r3
 8003024:	f107 010c 	add.w	r1, r7, #12
 8003028:	230a      	movs	r3, #10
 800302a:	6878      	ldr	r0, [r7, #4]
 800302c:	f004 f9ed 	bl	800740a <HAL_UART_Transmit>
}
 8003030:	bf00      	nop
 8003032:	3720      	adds	r7, #32
 8003034:	46bd      	mov	sp, r7
 8003036:	bd80      	pop	{r7, pc}
 8003038:	00204443 	.word	0x00204443
 800303c:	0800ce38 	.word	0x0800ce38
 8003040:	0800ce04 	.word	0x0800ce04

08003044 <createPcSendHandler>:
PcSendHandler createPcSendHandler(uint32_t timeout) {
 8003044:	b4b0      	push	{r4, r5, r7}
 8003046:	b08b      	sub	sp, #44	; 0x2c
 8003048:	af00      	add	r7, sp, #0
 800304a:	6078      	str	r0, [r7, #4]
 800304c:	6039      	str	r1, [r7, #0]
	PcSendHandler handler;
    handler.interface.sendDiamExt	= sendDiamExt_impl;
 800304e:	4b0f      	ldr	r3, [pc, #60]	; (800308c <createPcSendHandler+0x48>)
 8003050:	60bb      	str	r3, [r7, #8]
    handler.interface.sendDiamBack	= sendDiamBack_impl;
 8003052:	4b0f      	ldr	r3, [pc, #60]	; (8003090 <createPcSendHandler+0x4c>)
 8003054:	60fb      	str	r3, [r7, #12]
    handler.interface.sendState		= sendState_impl;
 8003056:	4b0f      	ldr	r3, [pc, #60]	; (8003094 <createPcSendHandler+0x50>)
 8003058:	613b      	str	r3, [r7, #16]
    handler.interface.sendSpeed		= sendSpeed_impl;
 800305a:	4b0f      	ldr	r3, [pc, #60]	; (8003098 <createPcSendHandler+0x54>)
 800305c:	617b      	str	r3, [r7, #20]
    handler.interface.sendCPvalue	= sendCPvalue_impl;
 800305e:	4b0f      	ldr	r3, [pc, #60]	; (800309c <createPcSendHandler+0x58>)
 8003060:	61bb      	str	r3, [r7, #24]
    handler.interface.sendCIvalue	= sendCIvalue_impl;
 8003062:	4b0f      	ldr	r3, [pc, #60]	; (80030a0 <createPcSendHandler+0x5c>)
 8003064:	61fb      	str	r3, [r7, #28]
    handler.interface.sendCDvalue	= sendCDvalue_impl;
 8003066:	4b0f      	ldr	r3, [pc, #60]	; (80030a4 <createPcSendHandler+0x60>)
 8003068:	623b      	str	r3, [r7, #32]

    handler.interface.timeout = timeout;
 800306a:	683b      	ldr	r3, [r7, #0]
 800306c:	627b      	str	r3, [r7, #36]	; 0x24
    return handler;
 800306e:	687b      	ldr	r3, [r7, #4]
 8003070:	461d      	mov	r5, r3
 8003072:	f107 0408 	add.w	r4, r7, #8
 8003076:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8003078:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 800307a:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
 800307e:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
}
 8003082:	6878      	ldr	r0, [r7, #4]
 8003084:	372c      	adds	r7, #44	; 0x2c
 8003086:	46bd      	mov	sp, r7
 8003088:	bcb0      	pop	{r4, r5, r7}
 800308a:	4770      	bx	lr
 800308c:	08002bed 	.word	0x08002bed
 8003090:	08002c8d 	.word	0x08002c8d
 8003094:	08002d2d 	.word	0x08002d2d
 8003098:	08002dd1 	.word	0x08002dd1
 800309c:	08002e7d 	.word	0x08002e7d
 80030a0:	08002f15 	.word	0x08002f15
 80030a4:	08002fad 	.word	0x08002fad

080030a8 <createSensorReceiveHandler>:
 80030a8:	b590      	push	{r4, r7, lr}
 80030aa:	b089      	sub	sp, #36	; 0x24
 80030ac:	af00      	add	r7, sp, #0
 80030ae:	60f8      	str	r0, [r7, #12]
 80030b0:	60b9      	str	r1, [r7, #8]
 80030b2:	607a      	str	r2, [r7, #4]
 80030b4:	68bb      	ldr	r3, [r7, #8]
 80030b6:	617b      	str	r3, [r7, #20]
 80030b8:	687b      	ldr	r3, [r7, #4]
 80030ba:	61bb      	str	r3, [r7, #24]
 80030bc:	4b0b      	ldr	r3, [pc, #44]	; (80030ec <createSensorReceiveHandler+0x44>)
 80030be:	461c      	mov	r4, r3
 80030c0:	f107 0314 	add.w	r3, r7, #20
 80030c4:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 80030c8:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 80030cc:	4808      	ldr	r0, [pc, #32]	; (80030f0 <createSensorReceiveHandler+0x48>)
 80030ce:	f000 f98f 	bl	80033f0 <createUartProcessor>
 80030d2:	61f8      	str	r0, [r7, #28]
 80030d4:	68fb      	ldr	r3, [r7, #12]
 80030d6:	461c      	mov	r4, r3
 80030d8:	f107 0314 	add.w	r3, r7, #20
 80030dc:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 80030e0:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 80030e4:	68f8      	ldr	r0, [r7, #12]
 80030e6:	3724      	adds	r7, #36	; 0x24
 80030e8:	46bd      	mov	sp, r7
 80030ea:	bd90      	pop	{r4, r7, pc}
 80030ec:	20000368 	.word	0x20000368
 80030f0:	2000005c 	.word	0x2000005c

080030f4 <handleDiamRecieved>:
 80030f4:	b580      	push	{r7, lr}
 80030f6:	b086      	sub	sp, #24
 80030f8:	af00      	add	r7, sp, #0
 80030fa:	4603      	mov	r3, r0
 80030fc:	6039      	str	r1, [r7, #0]
 80030fe:	71fb      	strb	r3, [r7, #7]
 8003100:	4b1d      	ldr	r3, [pc, #116]	; (8003178 <handleDiamRecieved+0x84>)
 8003102:	681b      	ldr	r3, [r3, #0]
 8003104:	691b      	ldr	r3, [r3, #16]
 8003106:	4a1c      	ldr	r2, [pc, #112]	; (8003178 <handleDiamRecieved+0x84>)
 8003108:	6812      	ldr	r2, [r2, #0]
 800310a:	4610      	mov	r0, r2
 800310c:	4798      	blx	r3
 800310e:	4603      	mov	r3, r0
 8003110:	75fb      	strb	r3, [r7, #23]
 8003112:	4b19      	ldr	r3, [pc, #100]	; (8003178 <handleDiamRecieved+0x84>)
 8003114:	685b      	ldr	r3, [r3, #4]
 8003116:	691b      	ldr	r3, [r3, #16]
 8003118:	4a17      	ldr	r2, [pc, #92]	; (8003178 <handleDiamRecieved+0x84>)
 800311a:	6852      	ldr	r2, [r2, #4]
 800311c:	4610      	mov	r0, r2
 800311e:	4798      	blx	r3
 8003120:	4603      	mov	r3, r0
 8003122:	75bb      	strb	r3, [r7, #22]
 8003124:	7dfa      	ldrb	r2, [r7, #23]
 8003126:	79fb      	ldrb	r3, [r7, #7]
 8003128:	429a      	cmp	r2, r3
 800312a:	d10e      	bne.n	800314a <handleDiamRecieved+0x56>
 800312c:	6838      	ldr	r0, [r7, #0]
 800312e:	f000 f825 	bl	800317c <getFloatFromMessage>
 8003132:	ed87 0a03 	vstr	s0, [r7, #12]
 8003136:	4b10      	ldr	r3, [pc, #64]	; (8003178 <handleDiamRecieved+0x84>)
 8003138:	681b      	ldr	r3, [r3, #0]
 800313a:	695b      	ldr	r3, [r3, #20]
 800313c:	4a0e      	ldr	r2, [pc, #56]	; (8003178 <handleDiamRecieved+0x84>)
 800313e:	6812      	ldr	r2, [r2, #0]
 8003140:	ed97 0a03 	vldr	s0, [r7, #12]
 8003144:	4610      	mov	r0, r2
 8003146:	4798      	blx	r3
 8003148:	e011      	b.n	800316e <handleDiamRecieved+0x7a>
 800314a:	7dba      	ldrb	r2, [r7, #22]
 800314c:	79fb      	ldrb	r3, [r7, #7]
 800314e:	429a      	cmp	r2, r3
 8003150:	d10d      	bne.n	800316e <handleDiamRecieved+0x7a>
 8003152:	6838      	ldr	r0, [r7, #0]
 8003154:	f000 f812 	bl	800317c <getFloatFromMessage>
 8003158:	ed87 0a04 	vstr	s0, [r7, #16]
 800315c:	4b06      	ldr	r3, [pc, #24]	; (8003178 <handleDiamRecieved+0x84>)
 800315e:	685b      	ldr	r3, [r3, #4]
 8003160:	695b      	ldr	r3, [r3, #20]
 8003162:	4a05      	ldr	r2, [pc, #20]	; (8003178 <handleDiamRecieved+0x84>)
 8003164:	6852      	ldr	r2, [r2, #4]
 8003166:	ed97 0a04 	vldr	s0, [r7, #16]
 800316a:	4610      	mov	r0, r2
 800316c:	4798      	blx	r3
 800316e:	bf00      	nop
 8003170:	3718      	adds	r7, #24
 8003172:	46bd      	mov	sp, r7
 8003174:	bd80      	pop	{r7, pc}
 8003176:	bf00      	nop
 8003178:	20000368 	.word	0x20000368

0800317c <getFloatFromMessage>:
 800317c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8003180:	b089      	sub	sp, #36	; 0x24
 8003182:	af00      	add	r7, sp, #0
 8003184:	6078      	str	r0, [r7, #4]
 8003186:	6878      	ldr	r0, [r7, #4]
 8003188:	f7fd f87a 	bl	8000280 <strlen>
 800318c:	4603      	mov	r3, r0
 800318e:	613b      	str	r3, [r7, #16]
 8003190:	f04f 33ff 	mov.w	r3, #4294967295
 8003194:	61fb      	str	r3, [r7, #28]
 8003196:	f04f 33ff 	mov.w	r3, #4294967295
 800319a:	61bb      	str	r3, [r7, #24]
 800319c:	2300      	movs	r3, #0
 800319e:	617b      	str	r3, [r7, #20]
 80031a0:	e019      	b.n	80031d6 <getFloatFromMessage+0x5a>
 80031a2:	697b      	ldr	r3, [r7, #20]
 80031a4:	687a      	ldr	r2, [r7, #4]
 80031a6:	4413      	add	r3, r2
 80031a8:	781b      	ldrb	r3, [r3, #0]
 80031aa:	2b20      	cmp	r3, #32
 80031ac:	d005      	beq.n	80031ba <getFloatFromMessage+0x3e>
 80031ae:	697b      	ldr	r3, [r7, #20]
 80031b0:	687a      	ldr	r2, [r7, #4]
 80031b2:	4413      	add	r3, r2
 80031b4:	781b      	ldrb	r3, [r3, #0]
 80031b6:	2b0d      	cmp	r3, #13
 80031b8:	d10a      	bne.n	80031d0 <getFloatFromMessage+0x54>
 80031ba:	69fb      	ldr	r3, [r7, #28]
 80031bc:	f1b3 3fff 	cmp.w	r3, #4294967295
 80031c0:	d103      	bne.n	80031ca <getFloatFromMessage+0x4e>
 80031c2:	697b      	ldr	r3, [r7, #20]
 80031c4:	3301      	adds	r3, #1
 80031c6:	61fb      	str	r3, [r7, #28]
 80031c8:	e002      	b.n	80031d0 <getFloatFromMessage+0x54>
 80031ca:	697b      	ldr	r3, [r7, #20]
 80031cc:	61bb      	str	r3, [r7, #24]
 80031ce:	e006      	b.n	80031de <getFloatFromMessage+0x62>
 80031d0:	697b      	ldr	r3, [r7, #20]
 80031d2:	3301      	adds	r3, #1
 80031d4:	617b      	str	r3, [r7, #20]
 80031d6:	697a      	ldr	r2, [r7, #20]
 80031d8:	693b      	ldr	r3, [r7, #16]
 80031da:	429a      	cmp	r2, r3
 80031dc:	dbe1      	blt.n	80031a2 <getFloatFromMessage+0x26>
 80031de:	69fb      	ldr	r3, [r7, #28]
 80031e0:	f1b3 3fff 	cmp.w	r3, #4294967295
 80031e4:	d04a      	beq.n	800327c <getFloatFromMessage+0x100>
 80031e6:	69bb      	ldr	r3, [r7, #24]
 80031e8:	f1b3 3fff 	cmp.w	r3, #4294967295
 80031ec:	d046      	beq.n	800327c <getFloatFromMessage+0x100>
 80031ee:	69fa      	ldr	r2, [r7, #28]
 80031f0:	69bb      	ldr	r3, [r7, #24]
 80031f2:	429a      	cmp	r2, r3
 80031f4:	da42      	bge.n	800327c <getFloatFromMessage+0x100>
 80031f6:	466b      	mov	r3, sp
 80031f8:	461e      	mov	r6, r3
 80031fa:	69ba      	ldr	r2, [r7, #24]
 80031fc:	69fb      	ldr	r3, [r7, #28]
 80031fe:	1ad3      	subs	r3, r2, r3
 8003200:	1c59      	adds	r1, r3, #1
 8003202:	1e4b      	subs	r3, r1, #1
 8003204:	60fb      	str	r3, [r7, #12]
 8003206:	460a      	mov	r2, r1
 8003208:	2300      	movs	r3, #0
 800320a:	4690      	mov	r8, r2
 800320c:	4699      	mov	r9, r3
 800320e:	f04f 0200 	mov.w	r2, #0
 8003212:	f04f 0300 	mov.w	r3, #0
 8003216:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 800321a:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 800321e:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 8003222:	460a      	mov	r2, r1
 8003224:	2300      	movs	r3, #0
 8003226:	4614      	mov	r4, r2
 8003228:	461d      	mov	r5, r3
 800322a:	f04f 0200 	mov.w	r2, #0
 800322e:	f04f 0300 	mov.w	r3, #0
 8003232:	00eb      	lsls	r3, r5, #3
 8003234:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 8003238:	00e2      	lsls	r2, r4, #3
 800323a:	460b      	mov	r3, r1
 800323c:	3307      	adds	r3, #7
 800323e:	08db      	lsrs	r3, r3, #3
 8003240:	00db      	lsls	r3, r3, #3
 8003242:	ebad 0d03 	sub.w	sp, sp, r3
 8003246:	466b      	mov	r3, sp
 8003248:	3300      	adds	r3, #0
 800324a:	60bb      	str	r3, [r7, #8]
 800324c:	69fb      	ldr	r3, [r7, #28]
 800324e:	687a      	ldr	r2, [r7, #4]
 8003250:	18d1      	adds	r1, r2, r3
 8003252:	69ba      	ldr	r2, [r7, #24]
 8003254:	69fb      	ldr	r3, [r7, #28]
 8003256:	1ad3      	subs	r3, r2, r3
 8003258:	461a      	mov	r2, r3
 800325a:	68b8      	ldr	r0, [r7, #8]
 800325c:	f006 ffc9 	bl	800a1f2 <strncpy>
 8003260:	69ba      	ldr	r2, [r7, #24]
 8003262:	69fb      	ldr	r3, [r7, #28]
 8003264:	1ad3      	subs	r3, r2, r3
 8003266:	68ba      	ldr	r2, [r7, #8]
 8003268:	2100      	movs	r1, #0
 800326a:	54d1      	strb	r1, [r2, r3]
 800326c:	2100      	movs	r1, #0
 800326e:	68b8      	ldr	r0, [r7, #8]
 8003270:	f005 ff0c 	bl	800908c <strtof>
 8003274:	eef0 7a40 	vmov.f32	s15, s0
 8003278:	46b5      	mov	sp, r6
 800327a:	e001      	b.n	8003280 <getFloatFromMessage+0x104>
 800327c:	eddf 7a03 	vldr	s15, [pc, #12]	; 800328c <getFloatFromMessage+0x110>
 8003280:	eeb0 0a67 	vmov.f32	s0, s15
 8003284:	3724      	adds	r7, #36	; 0x24
 8003286:	46bd      	mov	sp, r7
 8003288:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800328c:	00000000 	.word	0x00000000

08003290 <processSensorInterfaceMessage>:
 8003290:	b580      	push	{r7, lr}
 8003292:	b084      	sub	sp, #16
 8003294:	af00      	add	r7, sp, #0
 8003296:	60b9      	str	r1, [r7, #8]
 8003298:	607a      	str	r2, [r7, #4]
 800329a:	461a      	mov	r2, r3
 800329c:	4603      	mov	r3, r0
 800329e:	73fb      	strb	r3, [r7, #15]
 80032a0:	4613      	mov	r3, r2
 80032a2:	73bb      	strb	r3, [r7, #14]
 80032a4:	68bb      	ldr	r3, [r7, #8]
 80032a6:	f103 0108 	add.w	r1, r3, #8
 80032aa:	7bbb      	ldrb	r3, [r7, #14]
 80032ac:	7bf8      	ldrb	r0, [r7, #15]
 80032ae:	687a      	ldr	r2, [r7, #4]
 80032b0:	f000 f8dc 	bl	800346c <processCommand>
 80032b4:	bf00      	nop
 80032b6:	3710      	adds	r7, #16
 80032b8:	46bd      	mov	sp, r7
 80032ba:	bd80      	pop	{r7, pc}

080032bc <getReceivedData>:


#include <Kommunikation/uart_data.h>

// Getter-Methoden
const uint8_t* getReceivedData(const UartData* uartData) {
 80032bc:	b480      	push	{r7}
 80032be:	b083      	sub	sp, #12
 80032c0:	af00      	add	r7, sp, #0
 80032c2:	6078      	str	r0, [r7, #4]
    return uartData->receivedData;
 80032c4:	687b      	ldr	r3, [r7, #4]
}
 80032c6:	4618      	mov	r0, r3
 80032c8:	370c      	adds	r7, #12
 80032ca:	46bd      	mov	sp, r7
 80032cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80032d0:	4770      	bx	lr

080032d2 <getDataIndex>:

int getDataIndex(const UartData* uartData) {
 80032d2:	b480      	push	{r7}
 80032d4:	b083      	sub	sp, #12
 80032d6:	af00      	add	r7, sp, #0
 80032d8:	6078      	str	r0, [r7, #4]
    return uartData->dataIndex;
 80032da:	687b      	ldr	r3, [r7, #4]
 80032dc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
}
 80032de:	4618      	mov	r0, r3
 80032e0:	370c      	adds	r7, #12
 80032e2:	46bd      	mov	sp, r7
 80032e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80032e8:	4770      	bx	lr

080032ea <getMessageComplete>:

int getMessageComplete(const UartData* uartData) {
 80032ea:	b480      	push	{r7}
 80032ec:	b083      	sub	sp, #12
 80032ee:	af00      	add	r7, sp, #0
 80032f0:	6078      	str	r0, [r7, #4]
    return uartData->messageComplete;
 80032f2:	687b      	ldr	r3, [r7, #4]
 80032f4:	6c5b      	ldr	r3, [r3, #68]	; 0x44
}
 80032f6:	4618      	mov	r0, r3
 80032f8:	370c      	adds	r7, #12
 80032fa:	46bd      	mov	sp, r7
 80032fc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003300:	4770      	bx	lr

08003302 <setReceivedData>:

// Setter-Methoden
void setReceivedData(UartData* uartData, const uint8_t* receivedData) {
 8003302:	b480      	push	{r7}
 8003304:	b085      	sub	sp, #20
 8003306:	af00      	add	r7, sp, #0
 8003308:	6078      	str	r0, [r7, #4]
 800330a:	6039      	str	r1, [r7, #0]
    // Kopiere die Daten
    for (int i = 0; i < 64; i++) {
 800330c:	2300      	movs	r3, #0
 800330e:	60fb      	str	r3, [r7, #12]
 8003310:	e00b      	b.n	800332a <setReceivedData+0x28>
        uartData->receivedData[i] = receivedData[i];
 8003312:	68fb      	ldr	r3, [r7, #12]
 8003314:	683a      	ldr	r2, [r7, #0]
 8003316:	4413      	add	r3, r2
 8003318:	7819      	ldrb	r1, [r3, #0]
 800331a:	687a      	ldr	r2, [r7, #4]
 800331c:	68fb      	ldr	r3, [r7, #12]
 800331e:	4413      	add	r3, r2
 8003320:	460a      	mov	r2, r1
 8003322:	701a      	strb	r2, [r3, #0]
    for (int i = 0; i < 64; i++) {
 8003324:	68fb      	ldr	r3, [r7, #12]
 8003326:	3301      	adds	r3, #1
 8003328:	60fb      	str	r3, [r7, #12]
 800332a:	68fb      	ldr	r3, [r7, #12]
 800332c:	2b3f      	cmp	r3, #63	; 0x3f
 800332e:	ddf0      	ble.n	8003312 <setReceivedData+0x10>
    }
}
 8003330:	bf00      	nop
 8003332:	bf00      	nop
 8003334:	3714      	adds	r7, #20
 8003336:	46bd      	mov	sp, r7
 8003338:	f85d 7b04 	ldr.w	r7, [sp], #4
 800333c:	4770      	bx	lr

0800333e <setDataIndex>:

void setDataIndex(UartData* uartData, int dataIndex) {
 800333e:	b480      	push	{r7}
 8003340:	b083      	sub	sp, #12
 8003342:	af00      	add	r7, sp, #0
 8003344:	6078      	str	r0, [r7, #4]
 8003346:	6039      	str	r1, [r7, #0]
    uartData->dataIndex = dataIndex;
 8003348:	687b      	ldr	r3, [r7, #4]
 800334a:	683a      	ldr	r2, [r7, #0]
 800334c:	641a      	str	r2, [r3, #64]	; 0x40
}
 800334e:	bf00      	nop
 8003350:	370c      	adds	r7, #12
 8003352:	46bd      	mov	sp, r7
 8003354:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003358:	4770      	bx	lr

0800335a <setMessageComplete>:

void setMessageComplete(UartData* uartData, int messageComplete) {
 800335a:	b480      	push	{r7}
 800335c:	b083      	sub	sp, #12
 800335e:	af00      	add	r7, sp, #0
 8003360:	6078      	str	r0, [r7, #4]
 8003362:	6039      	str	r1, [r7, #0]
    uartData->messageComplete = messageComplete;
 8003364:	687b      	ldr	r3, [r7, #4]
 8003366:	683a      	ldr	r2, [r7, #0]
 8003368:	645a      	str	r2, [r3, #68]	; 0x44
}
 800336a:	bf00      	nop
 800336c:	370c      	adds	r7, #12
 800336e:	46bd      	mov	sp, r7
 8003370:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003374:	4770      	bx	lr
	...

08003378 <createUartDataObject>:

// Konstruktor
UartDataObject createUartDataObject() {
 8003378:	b580      	push	{r7, lr}
 800337a:	b09c      	sub	sp, #112	; 0x70
 800337c:	af00      	add	r7, sp, #0
 800337e:	6078      	str	r0, [r7, #4]
    UartDataObject uartDataObject;
    uartDataObject.getReceivedData = &getReceivedData;
 8003380:	4b15      	ldr	r3, [pc, #84]	; (80033d8 <createUartDataObject+0x60>)
 8003382:	657b      	str	r3, [r7, #84]	; 0x54
    uartDataObject.getDataIndex = &getDataIndex;
 8003384:	4b15      	ldr	r3, [pc, #84]	; (80033dc <createUartDataObject+0x64>)
 8003386:	65bb      	str	r3, [r7, #88]	; 0x58
    uartDataObject.getMessageComplete = &getMessageComplete;
 8003388:	4b15      	ldr	r3, [pc, #84]	; (80033e0 <createUartDataObject+0x68>)
 800338a:	65fb      	str	r3, [r7, #92]	; 0x5c
    uartDataObject.setReceivedData = &setReceivedData;
 800338c:	4b15      	ldr	r3, [pc, #84]	; (80033e4 <createUartDataObject+0x6c>)
 800338e:	663b      	str	r3, [r7, #96]	; 0x60
    uartDataObject.setDataIndex = &setDataIndex;
 8003390:	4b15      	ldr	r3, [pc, #84]	; (80033e8 <createUartDataObject+0x70>)
 8003392:	667b      	str	r3, [r7, #100]	; 0x64
    uartDataObject.setMessageComplete = &setMessageComplete;
 8003394:	4b15      	ldr	r3, [pc, #84]	; (80033ec <createUartDataObject+0x74>)
 8003396:	66bb      	str	r3, [r7, #104]	; 0x68

    // Initialisiere die Daten
    for (int i = 0; i < 64; i++) {
 8003398:	2300      	movs	r3, #0
 800339a:	66fb      	str	r3, [r7, #108]	; 0x6c
 800339c:	e008      	b.n	80033b0 <createUartDataObject+0x38>
        uartDataObject.data.receivedData[i] = 0;
 800339e:	f107 020c 	add.w	r2, r7, #12
 80033a2:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 80033a4:	4413      	add	r3, r2
 80033a6:	2200      	movs	r2, #0
 80033a8:	701a      	strb	r2, [r3, #0]
    for (int i = 0; i < 64; i++) {
 80033aa:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 80033ac:	3301      	adds	r3, #1
 80033ae:	66fb      	str	r3, [r7, #108]	; 0x6c
 80033b0:	6efb      	ldr	r3, [r7, #108]	; 0x6c
 80033b2:	2b3f      	cmp	r3, #63	; 0x3f
 80033b4:	ddf3      	ble.n	800339e <createUartDataObject+0x26>
    }
    uartDataObject.data.dataIndex = 0;
 80033b6:	2300      	movs	r3, #0
 80033b8:	64fb      	str	r3, [r7, #76]	; 0x4c
    uartDataObject.data.messageComplete = 0;
 80033ba:	2300      	movs	r3, #0
 80033bc:	653b      	str	r3, [r7, #80]	; 0x50

    return uartDataObject;
 80033be:	687b      	ldr	r3, [r7, #4]
 80033c0:	4618      	mov	r0, r3
 80033c2:	f107 030c 	add.w	r3, r7, #12
 80033c6:	2260      	movs	r2, #96	; 0x60
 80033c8:	4619      	mov	r1, r3
 80033ca:	f006 ff9c 	bl	800a306 <memcpy>
}
 80033ce:	6878      	ldr	r0, [r7, #4]
 80033d0:	3770      	adds	r7, #112	; 0x70
 80033d2:	46bd      	mov	sp, r7
 80033d4:	bd80      	pop	{r7, pc}
 80033d6:	bf00      	nop
 80033d8:	080032bd 	.word	0x080032bd
 80033dc:	080032d3 	.word	0x080032d3
 80033e0:	080032eb 	.word	0x080032eb
 80033e4:	08003303 	.word	0x08003303
 80033e8:	0800333f 	.word	0x0800333f
 80033ec:	0800335b 	.word	0x0800335b

080033f0 <createUartProcessor>:
#include <string.h>



// Funktion zur Initialisierung des UART-Prozessors
UartProcessor createUartProcessor(CommandEntry* dictionary) {
 80033f0:	b480      	push	{r7}
 80033f2:	b085      	sub	sp, #20
 80033f4:	af00      	add	r7, sp, #0
 80033f6:	6078      	str	r0, [r7, #4]
    UartProcessor uartProcessor;
    uartProcessor.commandDictionary = dictionary;
 80033f8:	687b      	ldr	r3, [r7, #4]
 80033fa:	60fb      	str	r3, [r7, #12]
    return uartProcessor;
 80033fc:	68fb      	ldr	r3, [r7, #12]
}
 80033fe:	4618      	mov	r0, r3
 8003400:	3714      	adds	r7, #20
 8003402:	46bd      	mov	sp, r7
 8003404:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003408:	4770      	bx	lr

0800340a <strncasecmp>:

// Case-insensitive String-Vergleich
int strnicmp(const char *s1, const char *s2, size_t n) {
 800340a:	b590      	push	{r4, r7, lr}
 800340c:	b085      	sub	sp, #20
 800340e:	af00      	add	r7, sp, #0
 8003410:	60f8      	str	r0, [r7, #12]
 8003412:	60b9      	str	r1, [r7, #8]
 8003414:	607a      	str	r2, [r7, #4]
    while (*s1 && *s2 && n > 0) {
 8003416:	e019      	b.n	800344c <strncasecmp+0x42>
        if (tolower(*s1) != tolower(*s2))
 8003418:	68fb      	ldr	r3, [r7, #12]
 800341a:	781b      	ldrb	r3, [r3, #0]
 800341c:	4618      	mov	r0, r3
 800341e:	f005 ff29 	bl	8009274 <tolower>
 8003422:	4604      	mov	r4, r0
 8003424:	68bb      	ldr	r3, [r7, #8]
 8003426:	781b      	ldrb	r3, [r3, #0]
 8003428:	4618      	mov	r0, r3
 800342a:	f005 ff23 	bl	8009274 <tolower>
 800342e:	4603      	mov	r3, r0
 8003430:	429c      	cmp	r4, r3
 8003432:	d002      	beq.n	800343a <strncasecmp+0x30>
            return -1;
 8003434:	f04f 33ff 	mov.w	r3, #4294967295
 8003438:	e014      	b.n	8003464 <strncasecmp+0x5a>
        s1++;
 800343a:	68fb      	ldr	r3, [r7, #12]
 800343c:	3301      	adds	r3, #1
 800343e:	60fb      	str	r3, [r7, #12]
        s2++;
 8003440:	68bb      	ldr	r3, [r7, #8]
 8003442:	3301      	adds	r3, #1
 8003444:	60bb      	str	r3, [r7, #8]
        n--;
 8003446:	687b      	ldr	r3, [r7, #4]
 8003448:	3b01      	subs	r3, #1
 800344a:	607b      	str	r3, [r7, #4]
    while (*s1 && *s2 && n > 0) {
 800344c:	68fb      	ldr	r3, [r7, #12]
 800344e:	781b      	ldrb	r3, [r3, #0]
 8003450:	2b00      	cmp	r3, #0
 8003452:	d006      	beq.n	8003462 <strncasecmp+0x58>
 8003454:	68bb      	ldr	r3, [r7, #8]
 8003456:	781b      	ldrb	r3, [r3, #0]
 8003458:	2b00      	cmp	r3, #0
 800345a:	d002      	beq.n	8003462 <strncasecmp+0x58>
 800345c:	687b      	ldr	r3, [r7, #4]
 800345e:	2b00      	cmp	r3, #0
 8003460:	d1da      	bne.n	8003418 <strncasecmp+0xe>
    }
    return 0;
 8003462:	2300      	movs	r3, #0
}
 8003464:	4618      	mov	r0, r3
 8003466:	3714      	adds	r7, #20
 8003468:	46bd      	mov	sp, r7
 800346a:	bd90      	pop	{r4, r7, pc}

0800346c <processCommand>:

void processCommand(uint8_t uartNr, UartProcessor* uartProcessor,uint8_t* receivedData,uint8_t receivedDataIndex) {
 800346c:	b590      	push	{r4, r7, lr}
 800346e:	b087      	sub	sp, #28
 8003470:	af00      	add	r7, sp, #0
 8003472:	60b9      	str	r1, [r7, #8]
 8003474:	607a      	str	r2, [r7, #4]
 8003476:	461a      	mov	r2, r3
 8003478:	4603      	mov	r3, r0
 800347a:	73fb      	strb	r3, [r7, #15]
 800347c:	4613      	mov	r3, r2
 800347e:	73bb      	strb	r3, [r7, #14]
    for (int i = 0; uartProcessor->commandDictionary[i].command != NULL; ++i) {
 8003480:	2300      	movs	r3, #0
 8003482:	617b      	str	r3, [r7, #20]
 8003484:	e025      	b.n	80034d2 <processCommand+0x66>
    	if (strnicmp((char*)receivedData, uartProcessor->commandDictionary[i].command, strlen(uartProcessor->commandDictionary[i].command)) == 0) {
 8003486:	68bb      	ldr	r3, [r7, #8]
 8003488:	681a      	ldr	r2, [r3, #0]
 800348a:	697b      	ldr	r3, [r7, #20]
 800348c:	00db      	lsls	r3, r3, #3
 800348e:	4413      	add	r3, r2
 8003490:	681c      	ldr	r4, [r3, #0]
 8003492:	68bb      	ldr	r3, [r7, #8]
 8003494:	681a      	ldr	r2, [r3, #0]
 8003496:	697b      	ldr	r3, [r7, #20]
 8003498:	00db      	lsls	r3, r3, #3
 800349a:	4413      	add	r3, r2
 800349c:	681b      	ldr	r3, [r3, #0]
 800349e:	4618      	mov	r0, r3
 80034a0:	f7fc feee 	bl	8000280 <strlen>
 80034a4:	4603      	mov	r3, r0
 80034a6:	461a      	mov	r2, r3
 80034a8:	4621      	mov	r1, r4
 80034aa:	6878      	ldr	r0, [r7, #4]
 80034ac:	f7ff ffad 	bl	800340a <strncasecmp>
 80034b0:	4603      	mov	r3, r0
 80034b2:	2b00      	cmp	r3, #0
 80034b4:	d10a      	bne.n	80034cc <processCommand+0x60>
            // Rufe den entsprechenden Handler auf
    		uartProcessor->commandDictionary[i].functionPointer(uartNr, (char*)receivedData);
 80034b6:	68bb      	ldr	r3, [r7, #8]
 80034b8:	681a      	ldr	r2, [r3, #0]
 80034ba:	697b      	ldr	r3, [r7, #20]
 80034bc:	00db      	lsls	r3, r3, #3
 80034be:	4413      	add	r3, r2
 80034c0:	685b      	ldr	r3, [r3, #4]
 80034c2:	7bfa      	ldrb	r2, [r7, #15]
 80034c4:	6879      	ldr	r1, [r7, #4]
 80034c6:	4610      	mov	r0, r2
 80034c8:	4798      	blx	r3
            return;
 80034ca:	e00a      	b.n	80034e2 <processCommand+0x76>
    for (int i = 0; uartProcessor->commandDictionary[i].command != NULL; ++i) {
 80034cc:	697b      	ldr	r3, [r7, #20]
 80034ce:	3301      	adds	r3, #1
 80034d0:	617b      	str	r3, [r7, #20]
 80034d2:	68bb      	ldr	r3, [r7, #8]
 80034d4:	681a      	ldr	r2, [r3, #0]
 80034d6:	697b      	ldr	r3, [r7, #20]
 80034d8:	00db      	lsls	r3, r3, #3
 80034da:	4413      	add	r3, r2
 80034dc:	681b      	ldr	r3, [r3, #0]
 80034de:	2b00      	cmp	r3, #0
 80034e0:	d1d1      	bne.n	8003486 <processCommand+0x1a>
        }
    }
}
 80034e2:	371c      	adds	r7, #28
 80034e4:	46bd      	mov	sp, r7
 80034e6:	bd90      	pop	{r4, r7, pc}

080034e8 <changeState>:
 */

#include <Management/global_state_machine.h>

// Change the state of the State Machine
static void changeState(StateMachine *machine, State newState) {
 80034e8:	b580      	push	{r7, lr}
 80034ea:	b082      	sub	sp, #8
 80034ec:	af00      	add	r7, sp, #0
 80034ee:	6078      	str	r0, [r7, #4]
 80034f0:	460b      	mov	r3, r1
 80034f2:	70fb      	strb	r3, [r7, #3]
    switch (newState) {
 80034f4:	78fb      	ldrb	r3, [r7, #3]
 80034f6:	2b02      	cmp	r3, #2
 80034f8:	d00f      	beq.n	800351a <changeState+0x32>
 80034fa:	2b02      	cmp	r3, #2
 80034fc:	dc0f      	bgt.n	800351e <changeState+0x36>
 80034fe:	2b00      	cmp	r3, #0
 8003500:	d002      	beq.n	8003508 <changeState+0x20>
 8003502:	2b01      	cmp	r3, #1
 8003504:	d00d      	beq.n	8003522 <changeState+0x3a>
        case STATE_AUTOMATIC_MODE:
            // TODO: Logik für Regelung implementieren
            break;
        default:
            // Handle unknown state
            break;
 8003506:	e00a      	b.n	800351e <changeState+0x36>
            machine->info.motor->setSpeed(machine->info.motor, 0);
 8003508:	687b      	ldr	r3, [r7, #4]
 800350a:	685b      	ldr	r3, [r3, #4]
 800350c:	68db      	ldr	r3, [r3, #12]
 800350e:	687a      	ldr	r2, [r7, #4]
 8003510:	6852      	ldr	r2, [r2, #4]
 8003512:	2100      	movs	r1, #0
 8003514:	4610      	mov	r0, r2
 8003516:	4798      	blx	r3
            break;
 8003518:	e004      	b.n	8003524 <changeState+0x3c>
            break;
 800351a:	bf00      	nop
 800351c:	e002      	b.n	8003524 <changeState+0x3c>
            break;
 800351e:	bf00      	nop
 8003520:	e000      	b.n	8003524 <changeState+0x3c>
            break;
 8003522:	bf00      	nop
    }
    machine->info.currentState = newState;
 8003524:	687b      	ldr	r3, [r7, #4]
 8003526:	78fa      	ldrb	r2, [r7, #3]
 8003528:	701a      	strb	r2, [r3, #0]
}
 800352a:	bf00      	nop
 800352c:	3708      	adds	r7, #8
 800352e:	46bd      	mov	sp, r7
 8003530:	bd80      	pop	{r7, pc}

08003532 <getState>:
// Get the current state of the State Machine
static State getState(const StateMachine *machine) {
 8003532:	b480      	push	{r7}
 8003534:	b083      	sub	sp, #12
 8003536:	af00      	add	r7, sp, #0
 8003538:	6078      	str	r0, [r7, #4]
    return machine->info.currentState;
 800353a:	687b      	ldr	r3, [r7, #4]
 800353c:	781b      	ldrb	r3, [r3, #0]
}
 800353e:	4618      	mov	r0, r3
 8003540:	370c      	adds	r7, #12
 8003542:	46bd      	mov	sp, r7
 8003544:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003548:	4770      	bx	lr

0800354a <setBlobDetected>:
void setBlobDetected(struct StateMachine *machine, int blobDetected){
 800354a:	b480      	push	{r7}
 800354c:	b083      	sub	sp, #12
 800354e:	af00      	add	r7, sp, #0
 8003550:	6078      	str	r0, [r7, #4]
 8003552:	6039      	str	r1, [r7, #0]
	machine->info.blobDetected = blobDetected;
 8003554:	687b      	ldr	r3, [r7, #4]
 8003556:	683a      	ldr	r2, [r7, #0]
 8003558:	609a      	str	r2, [r3, #8]
	if(blobDetected == 1){
 800355a:	683b      	ldr	r3, [r7, #0]
 800355c:	2b01      	cmp	r3, #1
 800355e:	d102      	bne.n	8003566 <setBlobDetected+0x1c>
		machine->info.currentState = STATE_IDLE;
 8003560:	687b      	ldr	r3, [r7, #4]
 8003562:	2200      	movs	r2, #0
 8003564:	701a      	strb	r2, [r3, #0]
	}
}
 8003566:	bf00      	nop
 8003568:	370c      	adds	r7, #12
 800356a:	46bd      	mov	sp, r7
 800356c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003570:	4770      	bx	lr

08003572 <getBlobDetected>:
static int getBlobDetected(const struct StateMachine *machine){
 8003572:	b480      	push	{r7}
 8003574:	b083      	sub	sp, #12
 8003576:	af00      	add	r7, sp, #0
 8003578:	6078      	str	r0, [r7, #4]
	return machine->info.blobDetected;
 800357a:	687b      	ldr	r3, [r7, #4]
 800357c:	689b      	ldr	r3, [r3, #8]
}
 800357e:	4618      	mov	r0, r3
 8003580:	370c      	adds	r7, #12
 8003582:	46bd      	mov	sp, r7
 8003584:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003588:	4770      	bx	lr
	...

0800358c <initStateMachine>:



// Initialization function for the State Machine
StateMachine initStateMachine(Motor* motor) {
 800358c:	b4b0      	push	{r4, r5, r7}
 800358e:	b08b      	sub	sp, #44	; 0x2c
 8003590:	af00      	add	r7, sp, #0
 8003592:	6078      	str	r0, [r7, #4]
 8003594:	6039      	str	r1, [r7, #0]
    StateMachine machine;

    machine.info.motor = motor;
 8003596:	683b      	ldr	r3, [r7, #0]
 8003598:	60fb      	str	r3, [r7, #12]

    machine.changeState = changeState;
 800359a:	4b0d      	ldr	r3, [pc, #52]	; (80035d0 <initStateMachine+0x44>)
 800359c:	61bb      	str	r3, [r7, #24]
    machine.getState = getState;
 800359e:	4b0d      	ldr	r3, [pc, #52]	; (80035d4 <initStateMachine+0x48>)
 80035a0:	61fb      	str	r3, [r7, #28]
    machine.setBlobDetected = setBlobDetected;
 80035a2:	4b0d      	ldr	r3, [pc, #52]	; (80035d8 <initStateMachine+0x4c>)
 80035a4:	627b      	str	r3, [r7, #36]	; 0x24
    machine.getBlobDetected = getBlobDetected;
 80035a6:	4b0d      	ldr	r3, [pc, #52]	; (80035dc <initStateMachine+0x50>)
 80035a8:	623b      	str	r3, [r7, #32]

    // Set initial state and initialize motor
    machine.info.currentState = STATE_IDLE;
 80035aa:	2300      	movs	r3, #0
 80035ac:	723b      	strb	r3, [r7, #8]
    machine.info.blobDetected = 0;
 80035ae:	2300      	movs	r3, #0
 80035b0:	613b      	str	r3, [r7, #16]


    return machine;
 80035b2:	687b      	ldr	r3, [r7, #4]
 80035b4:	461d      	mov	r5, r3
 80035b6:	f107 0408 	add.w	r4, r7, #8
 80035ba:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80035bc:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 80035be:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
 80035c2:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
}
 80035c6:	6878      	ldr	r0, [r7, #4]
 80035c8:	372c      	adds	r7, #44	; 0x2c
 80035ca:	46bd      	mov	sp, r7
 80035cc:	bcb0      	pop	{r4, r5, r7}
 80035ce:	4770      	bx	lr
 80035d0:	080034e9 	.word	0x080034e9
 80035d4:	08003533 	.word	0x08003533
 80035d8:	0800354b 	.word	0x0800354b
 80035dc:	08003573 	.word	0x08003573

080035e0 <set_kp>:
 *  Created on: Jan 3, 2024
 *      Author: Daniel Alf
 */
#include "Regelung/pid_controller.h"

void set_kp(PIDController *pid, float kp) {
 80035e0:	b480      	push	{r7}
 80035e2:	b083      	sub	sp, #12
 80035e4:	af00      	add	r7, sp, #0
 80035e6:	6078      	str	r0, [r7, #4]
 80035e8:	ed87 0a00 	vstr	s0, [r7]
    pid->data.kp = kp;
 80035ec:	687b      	ldr	r3, [r7, #4]
 80035ee:	683a      	ldr	r2, [r7, #0]
 80035f0:	601a      	str	r2, [r3, #0]
}
 80035f2:	bf00      	nop
 80035f4:	370c      	adds	r7, #12
 80035f6:	46bd      	mov	sp, r7
 80035f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80035fc:	4770      	bx	lr

080035fe <get_kp>:

float get_kp(const PIDController *pid) {
 80035fe:	b480      	push	{r7}
 8003600:	b083      	sub	sp, #12
 8003602:	af00      	add	r7, sp, #0
 8003604:	6078      	str	r0, [r7, #4]
    return pid->data.kp;
 8003606:	687b      	ldr	r3, [r7, #4]
 8003608:	681b      	ldr	r3, [r3, #0]
 800360a:	ee07 3a90 	vmov	s15, r3
}
 800360e:	eeb0 0a67 	vmov.f32	s0, s15
 8003612:	370c      	adds	r7, #12
 8003614:	46bd      	mov	sp, r7
 8003616:	f85d 7b04 	ldr.w	r7, [sp], #4
 800361a:	4770      	bx	lr

0800361c <set_ki>:

void set_ki(PIDController *pid, float ki) {
 800361c:	b480      	push	{r7}
 800361e:	b083      	sub	sp, #12
 8003620:	af00      	add	r7, sp, #0
 8003622:	6078      	str	r0, [r7, #4]
 8003624:	ed87 0a00 	vstr	s0, [r7]
	pid->data.ki = ki;
 8003628:	687b      	ldr	r3, [r7, #4]
 800362a:	683a      	ldr	r2, [r7, #0]
 800362c:	605a      	str	r2, [r3, #4]
}
 800362e:	bf00      	nop
 8003630:	370c      	adds	r7, #12
 8003632:	46bd      	mov	sp, r7
 8003634:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003638:	4770      	bx	lr

0800363a <get_ki>:

float get_ki(const PIDController *pid) {
 800363a:	b480      	push	{r7}
 800363c:	b083      	sub	sp, #12
 800363e:	af00      	add	r7, sp, #0
 8003640:	6078      	str	r0, [r7, #4]
    return pid->data.ki;
 8003642:	687b      	ldr	r3, [r7, #4]
 8003644:	685b      	ldr	r3, [r3, #4]
 8003646:	ee07 3a90 	vmov	s15, r3
}
 800364a:	eeb0 0a67 	vmov.f32	s0, s15
 800364e:	370c      	adds	r7, #12
 8003650:	46bd      	mov	sp, r7
 8003652:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003656:	4770      	bx	lr

08003658 <set_kd>:

void set_kd(PIDController *pid, float kd) {
 8003658:	b480      	push	{r7}
 800365a:	b083      	sub	sp, #12
 800365c:	af00      	add	r7, sp, #0
 800365e:	6078      	str	r0, [r7, #4]
 8003660:	ed87 0a00 	vstr	s0, [r7]
	pid->data.kd = kd;
 8003664:	687b      	ldr	r3, [r7, #4]
 8003666:	683a      	ldr	r2, [r7, #0]
 8003668:	609a      	str	r2, [r3, #8]
}
 800366a:	bf00      	nop
 800366c:	370c      	adds	r7, #12
 800366e:	46bd      	mov	sp, r7
 8003670:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003674:	4770      	bx	lr

08003676 <get_kd>:

float get_kd(const PIDController *pid) {
 8003676:	b480      	push	{r7}
 8003678:	b083      	sub	sp, #12
 800367a:	af00      	add	r7, sp, #0
 800367c:	6078      	str	r0, [r7, #4]
    return pid->data.kd;
 800367e:	687b      	ldr	r3, [r7, #4]
 8003680:	689b      	ldr	r3, [r3, #8]
 8003682:	ee07 3a90 	vmov	s15, r3
}
 8003686:	eeb0 0a67 	vmov.f32	s0, s15
 800368a:	370c      	adds	r7, #12
 800368c:	46bd      	mov	sp, r7
 800368e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003692:	4770      	bx	lr

08003694 <set_setPoint>:
void set_setPoint(PIDController *pid, float setPoint) {
 8003694:	b480      	push	{r7}
 8003696:	b083      	sub	sp, #12
 8003698:	af00      	add	r7, sp, #0
 800369a:	6078      	str	r0, [r7, #4]
 800369c:	ed87 0a00 	vstr	s0, [r7]
	pid->data.setpoint = setPoint;
 80036a0:	687b      	ldr	r3, [r7, #4]
 80036a2:	683a      	ldr	r2, [r7, #0]
 80036a4:	60da      	str	r2, [r3, #12]
}
 80036a6:	bf00      	nop
 80036a8:	370c      	adds	r7, #12
 80036aa:	46bd      	mov	sp, r7
 80036ac:	f85d 7b04 	ldr.w	r7, [sp], #4
 80036b0:	4770      	bx	lr

080036b2 <get_setPoint>:

float get_setPoint(const PIDController *pid) {
 80036b2:	b480      	push	{r7}
 80036b4:	b083      	sub	sp, #12
 80036b6:	af00      	add	r7, sp, #0
 80036b8:	6078      	str	r0, [r7, #4]
    return pid->data.setpoint;
 80036ba:	687b      	ldr	r3, [r7, #4]
 80036bc:	68db      	ldr	r3, [r3, #12]
 80036be:	ee07 3a90 	vmov	s15, r3
}
 80036c2:	eeb0 0a67 	vmov.f32	s0, s15
 80036c6:	370c      	adds	r7, #12
 80036c8:	46bd      	mov	sp, r7
 80036ca:	f85d 7b04 	ldr.w	r7, [sp], #4
 80036ce:	4770      	bx	lr

080036d0 <pid_init>:

PIDController pid_init(float kp, float ki, float kd, float setpoint) {
 80036d0:	b4b0      	push	{r4, r5, r7}
 80036d2:	b097      	sub	sp, #92	; 0x5c
 80036d4:	af00      	add	r7, sp, #0
 80036d6:	6178      	str	r0, [r7, #20]
 80036d8:	ed87 0a04 	vstr	s0, [r7, #16]
 80036dc:	edc7 0a03 	vstr	s1, [r7, #12]
 80036e0:	ed87 1a02 	vstr	s2, [r7, #8]
 80036e4:	edc7 1a01 	vstr	s3, [r7, #4]
    PIDController pidController;
    pidController.data.kp = kp;
 80036e8:	693b      	ldr	r3, [r7, #16]
 80036ea:	61fb      	str	r3, [r7, #28]
    pidController.data.ki = ki;
 80036ec:	68fb      	ldr	r3, [r7, #12]
 80036ee:	623b      	str	r3, [r7, #32]
    pidController.data.kd = kd;
 80036f0:	68bb      	ldr	r3, [r7, #8]
 80036f2:	627b      	str	r3, [r7, #36]	; 0x24
    pidController.data.setpoint = 0.0;
 80036f4:	f04f 0300 	mov.w	r3, #0
 80036f8:	62bb      	str	r3, [r7, #40]	; 0x28
    pidController.data.last_error = 0.0;
 80036fa:	f04f 0300 	mov.w	r3, #0
 80036fe:	62fb      	str	r3, [r7, #44]	; 0x2c
    pidController.data.integral = 0.0;
 8003700:	f04f 0300 	mov.w	r3, #0
 8003704:	633b      	str	r3, [r7, #48]	; 0x30
    pidController.data.setpoint = setpoint;
 8003706:	687b      	ldr	r3, [r7, #4]
 8003708:	62bb      	str	r3, [r7, #40]	; 0x28

    //Initialisierung der getter FUnktionen
    pidController.get_kp = get_kp;
 800370a:	4b11      	ldr	r3, [pc, #68]	; (8003750 <pid_init+0x80>)
 800370c:	637b      	str	r3, [r7, #52]	; 0x34
    pidController.get_ki = get_ki;
 800370e:	4b11      	ldr	r3, [pc, #68]	; (8003754 <pid_init+0x84>)
 8003710:	63bb      	str	r3, [r7, #56]	; 0x38
    pidController.get_kd = get_kd;
 8003712:	4b11      	ldr	r3, [pc, #68]	; (8003758 <pid_init+0x88>)
 8003714:	63fb      	str	r3, [r7, #60]	; 0x3c
    pidController.get_setPoint = get_setPoint;
 8003716:	4b11      	ldr	r3, [pc, #68]	; (800375c <pid_init+0x8c>)
 8003718:	643b      	str	r3, [r7, #64]	; 0x40

    //Initialisierung der setter Funktionen
    pidController.set_kp = set_kp;
 800371a:	4b11      	ldr	r3, [pc, #68]	; (8003760 <pid_init+0x90>)
 800371c:	647b      	str	r3, [r7, #68]	; 0x44
    pidController.set_ki = set_ki;
 800371e:	4b11      	ldr	r3, [pc, #68]	; (8003764 <pid_init+0x94>)
 8003720:	64bb      	str	r3, [r7, #72]	; 0x48
    pidController.set_kd = set_kd;
 8003722:	4b11      	ldr	r3, [pc, #68]	; (8003768 <pid_init+0x98>)
 8003724:	64fb      	str	r3, [r7, #76]	; 0x4c
    pidController.set_setPoint = set_setPoint;
 8003726:	4b11      	ldr	r3, [pc, #68]	; (800376c <pid_init+0x9c>)
 8003728:	653b      	str	r3, [r7, #80]	; 0x50

    return pidController;
 800372a:	697b      	ldr	r3, [r7, #20]
 800372c:	461d      	mov	r5, r3
 800372e:	f107 041c 	add.w	r4, r7, #28
 8003732:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8003734:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8003736:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8003738:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 800373a:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800373c:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 800373e:	e894 0007 	ldmia.w	r4, {r0, r1, r2}
 8003742:	e885 0007 	stmia.w	r5, {r0, r1, r2}
}
 8003746:	6978      	ldr	r0, [r7, #20]
 8003748:	375c      	adds	r7, #92	; 0x5c
 800374a:	46bd      	mov	sp, r7
 800374c:	bcb0      	pop	{r4, r5, r7}
 800374e:	4770      	bx	lr
 8003750:	080035ff 	.word	0x080035ff
 8003754:	0800363b 	.word	0x0800363b
 8003758:	08003677 	.word	0x08003677
 800375c:	080036b3 	.word	0x080036b3
 8003760:	080035e1 	.word	0x080035e1
 8003764:	0800361d 	.word	0x0800361d
 8003768:	08003659 	.word	0x08003659
 800376c:	08003695 	.word	0x08003695

08003770 <getSpeed>:
 8003770:	b480      	push	{r7}
 8003772:	b083      	sub	sp, #12
 8003774:	af00      	add	r7, sp, #0
 8003776:	6078      	str	r0, [r7, #4]
 8003778:	687b      	ldr	r3, [r7, #4]
 800377a:	681b      	ldr	r3, [r3, #0]
 800377c:	4618      	mov	r0, r3
 800377e:	370c      	adds	r7, #12
 8003780:	46bd      	mov	sp, r7
 8003782:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003786:	4770      	bx	lr

08003788 <setSpeed>:
 8003788:	b580      	push	{r7, lr}
 800378a:	b084      	sub	sp, #16
 800378c:	af00      	add	r7, sp, #0
 800378e:	6078      	str	r0, [r7, #4]
 8003790:	6039      	str	r1, [r7, #0]
 8003792:	683b      	ldr	r3, [r7, #0]
 8003794:	2b00      	cmp	r3, #0
 8003796:	dc09      	bgt.n	80037ac <setSpeed+0x24>
 8003798:	687b      	ldr	r3, [r7, #4]
 800379a:	685b      	ldr	r3, [r3, #4]
 800379c:	2100      	movs	r1, #0
 800379e:	4618      	mov	r0, r3
 80037a0:	f003 f86c 	bl	800687c <HAL_TIM_PWM_Stop>
 80037a4:	687b      	ldr	r3, [r7, #4]
 80037a6:	2200      	movs	r2, #0
 80037a8:	601a      	str	r2, [r3, #0]
 80037aa:	e01e      	b.n	80037ea <setSpeed+0x62>
 80037ac:	683b      	ldr	r3, [r7, #0]
 80037ae:	2b64      	cmp	r3, #100	; 0x64
 80037b0:	dc1a      	bgt.n	80037e8 <setSpeed+0x60>
 80037b2:	687b      	ldr	r3, [r7, #4]
 80037b4:	683a      	ldr	r2, [r7, #0]
 80037b6:	601a      	str	r2, [r3, #0]
 80037b8:	683b      	ldr	r3, [r7, #0]
 80037ba:	f44f 6248 	mov.w	r2, #3200	; 0xc80
 80037be:	fb02 f303 	mul.w	r3, r2, r3
 80037c2:	4a0b      	ldr	r2, [pc, #44]	; (80037f0 <setSpeed+0x68>)
 80037c4:	fb82 1203 	smull	r1, r2, r2, r3
 80037c8:	441a      	add	r2, r3
 80037ca:	1152      	asrs	r2, r2, #5
 80037cc:	17db      	asrs	r3, r3, #31
 80037ce:	1ad3      	subs	r3, r2, r3
 80037d0:	60fb      	str	r3, [r7, #12]
 80037d2:	68f9      	ldr	r1, [r7, #12]
 80037d4:	6878      	ldr	r0, [r7, #4]
 80037d6:	f000 f80d 	bl	80037f4 <generatePWM>
 80037da:	687b      	ldr	r3, [r7, #4]
 80037dc:	685b      	ldr	r3, [r3, #4]
 80037de:	2100      	movs	r1, #0
 80037e0:	4618      	mov	r0, r3
 80037e2:	f002 ff9b 	bl	800671c <HAL_TIM_PWM_Start>
 80037e6:	e000      	b.n	80037ea <setSpeed+0x62>
 80037e8:	bf00      	nop
 80037ea:	3710      	adds	r7, #16
 80037ec:	46bd      	mov	sp, r7
 80037ee:	bd80      	pop	{r7, pc}
 80037f0:	88888889 	.word	0x88888889

080037f4 <generatePWM>:
 80037f4:	b580      	push	{r7, lr}
 80037f6:	b090      	sub	sp, #64	; 0x40
 80037f8:	af00      	add	r7, sp, #0
 80037fa:	6078      	str	r0, [r7, #4]
 80037fc:	6039      	str	r1, [r7, #0]
 80037fe:	f002 f909 	bl	8005a14 <HAL_RCC_GetHCLKFreq>
 8003802:	4601      	mov	r1, r0
 8003804:	687b      	ldr	r3, [r7, #4]
 8003806:	685b      	ldr	r3, [r3, #4]
 8003808:	685b      	ldr	r3, [r3, #4]
 800380a:	3301      	adds	r3, #1
 800380c:	683a      	ldr	r2, [r7, #0]
 800380e:	fb02 f303 	mul.w	r3, r2, r3
 8003812:	fbb1 f3f3 	udiv	r3, r1, r3
 8003816:	3b01      	subs	r3, #1
 8003818:	63fb      	str	r3, [r7, #60]	; 0x3c
 800381a:	f107 032c 	add.w	r3, r7, #44	; 0x2c
 800381e:	2200      	movs	r2, #0
 8003820:	601a      	str	r2, [r3, #0]
 8003822:	605a      	str	r2, [r3, #4]
 8003824:	609a      	str	r2, [r3, #8]
 8003826:	60da      	str	r2, [r3, #12]
 8003828:	f107 0324 	add.w	r3, r7, #36	; 0x24
 800382c:	2200      	movs	r2, #0
 800382e:	601a      	str	r2, [r3, #0]
 8003830:	605a      	str	r2, [r3, #4]
 8003832:	f107 0308 	add.w	r3, r7, #8
 8003836:	2200      	movs	r2, #0
 8003838:	601a      	str	r2, [r3, #0]
 800383a:	605a      	str	r2, [r3, #4]
 800383c:	609a      	str	r2, [r3, #8]
 800383e:	60da      	str	r2, [r3, #12]
 8003840:	611a      	str	r2, [r3, #16]
 8003842:	615a      	str	r2, [r3, #20]
 8003844:	619a      	str	r2, [r3, #24]
 8003846:	687b      	ldr	r3, [r7, #4]
 8003848:	685b      	ldr	r3, [r3, #4]
 800384a:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 800384c:	60da      	str	r2, [r3, #12]
 800384e:	687b      	ldr	r3, [r7, #4]
 8003850:	685b      	ldr	r3, [r3, #4]
 8003852:	4618      	mov	r0, r3
 8003854:	f002 feba 	bl	80065cc <HAL_TIM_Base_Init>
 8003858:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 800385c:	62fb      	str	r3, [r7, #44]	; 0x2c
 800385e:	687b      	ldr	r3, [r7, #4]
 8003860:	685b      	ldr	r3, [r3, #4]
 8003862:	f107 022c 	add.w	r2, r7, #44	; 0x2c
 8003866:	4611      	mov	r1, r2
 8003868:	4618      	mov	r0, r3
 800386a:	f003 f92d 	bl	8006ac8 <HAL_TIM_ConfigClockSource>
 800386e:	687b      	ldr	r3, [r7, #4]
 8003870:	685b      	ldr	r3, [r3, #4]
 8003872:	4618      	mov	r0, r3
 8003874:	f002 fef9 	bl	800666a <HAL_TIM_PWM_Init>
 8003878:	2300      	movs	r3, #0
 800387a:	627b      	str	r3, [r7, #36]	; 0x24
 800387c:	2300      	movs	r3, #0
 800387e:	62bb      	str	r3, [r7, #40]	; 0x28
 8003880:	687b      	ldr	r3, [r7, #4]
 8003882:	685b      	ldr	r3, [r3, #4]
 8003884:	f107 0224 	add.w	r2, r7, #36	; 0x24
 8003888:	4611      	mov	r1, r2
 800388a:	4618      	mov	r0, r3
 800388c:	f003 fcb0 	bl	80071f0 <HAL_TIMEx_MasterConfigSynchronization>
 8003890:	2360      	movs	r3, #96	; 0x60
 8003892:	60bb      	str	r3, [r7, #8]
 8003894:	687b      	ldr	r3, [r7, #4]
 8003896:	685b      	ldr	r3, [r3, #4]
 8003898:	68db      	ldr	r3, [r3, #12]
 800389a:	085b      	lsrs	r3, r3, #1
 800389c:	60fb      	str	r3, [r7, #12]
 800389e:	687b      	ldr	r3, [r7, #4]
 80038a0:	685b      	ldr	r3, [r3, #4]
 80038a2:	f107 0108 	add.w	r1, r7, #8
 80038a6:	2200      	movs	r2, #0
 80038a8:	4618      	mov	r0, r3
 80038aa:	f003 f84b 	bl	8006944 <HAL_TIM_PWM_ConfigChannel>
 80038ae:	687b      	ldr	r3, [r7, #4]
 80038b0:	685b      	ldr	r3, [r3, #4]
 80038b2:	4618      	mov	r0, r3
 80038b4:	f000 fe04 	bl	80044c0 <HAL_TIM_MspPostInit>
 80038b8:	bf00      	nop
 80038ba:	3740      	adds	r7, #64	; 0x40
 80038bc:	46bd      	mov	sp, r7
 80038be:	bd80      	pop	{r7, pc}

080038c0 <initMotor>:
 80038c0:	b490      	push	{r4, r7}
 80038c2:	b086      	sub	sp, #24
 80038c4:	af00      	add	r7, sp, #0
 80038c6:	6078      	str	r0, [r7, #4]
 80038c8:	6039      	str	r1, [r7, #0]
 80038ca:	2300      	movs	r3, #0
 80038cc:	60bb      	str	r3, [r7, #8]
 80038ce:	683b      	ldr	r3, [r7, #0]
 80038d0:	60fb      	str	r3, [r7, #12]
 80038d2:	4b08      	ldr	r3, [pc, #32]	; (80038f4 <initMotor+0x34>)
 80038d4:	613b      	str	r3, [r7, #16]
 80038d6:	4b08      	ldr	r3, [pc, #32]	; (80038f8 <initMotor+0x38>)
 80038d8:	617b      	str	r3, [r7, #20]
 80038da:	687b      	ldr	r3, [r7, #4]
 80038dc:	461c      	mov	r4, r3
 80038de:	f107 0308 	add.w	r3, r7, #8
 80038e2:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 80038e4:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 80038e8:	6878      	ldr	r0, [r7, #4]
 80038ea:	3718      	adds	r7, #24
 80038ec:	46bd      	mov	sp, r7
 80038ee:	bc90      	pop	{r4, r7}
 80038f0:	4770      	bx	lr
 80038f2:	bf00      	nop
 80038f4:	08003771 	.word	0x08003771
 80038f8:	08003789 	.word	0x08003789

080038fc <getDiameter>:
#include <stdlib.h>
#include <stdint.h>
#include <SensorActuators/sensor.h>

// Getter-Methoden
float getDiameter(const Sensor* sensor) {
 80038fc:	b480      	push	{r7}
 80038fe:	b083      	sub	sp, #12
 8003900:	af00      	add	r7, sp, #0
 8003902:	6078      	str	r0, [r7, #4]
    return sensor->info.diameter;
 8003904:	687b      	ldr	r3, [r7, #4]
 8003906:	681b      	ldr	r3, [r3, #0]
 8003908:	ee07 3a90 	vmov	s15, r3
}
 800390c:	eeb0 0a67 	vmov.f32	s0, s15
 8003910:	370c      	adds	r7, #12
 8003912:	46bd      	mov	sp, r7
 8003914:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003918:	4770      	bx	lr

0800391a <getUartPort>:
char getPosition(const Sensor* sensor) {
	return sensor->info.position;
}
uint8_t getUartPort(const Sensor* sensor) {
 800391a:	b480      	push	{r7}
 800391c:	b083      	sub	sp, #12
 800391e:	af00      	add	r7, sp, #0
 8003920:	6078      	str	r0, [r7, #4]
	return sensor->info.uartPort;
 8003922:	687b      	ldr	r3, [r7, #4]
 8003924:	795b      	ldrb	r3, [r3, #5]
}
 8003926:	4618      	mov	r0, r3
 8003928:	370c      	adds	r7, #12
 800392a:	46bd      	mov	sp, r7
 800392c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003930:	4770      	bx	lr

08003932 <setDiameter>:

// Setter-Methoden
void setDiameter(Sensor* sensor, float diameter) {
 8003932:	b480      	push	{r7}
 8003934:	b083      	sub	sp, #12
 8003936:	af00      	add	r7, sp, #0
 8003938:	6078      	str	r0, [r7, #4]
 800393a:	ed87 0a00 	vstr	s0, [r7]
    sensor->info.diameter = diameter;
 800393e:	687b      	ldr	r3, [r7, #4]
 8003940:	683a      	ldr	r2, [r7, #0]
 8003942:	601a      	str	r2, [r3, #0]
}
 8003944:	bf00      	nop
 8003946:	370c      	adds	r7, #12
 8003948:	46bd      	mov	sp, r7
 800394a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800394e:	4770      	bx	lr

08003950 <initSensor>:
}
void setUartPort(Sensor* sensor, uint8_t port){
	sensor->info.uartPort = port;
}
// Konstruktor
Sensor initSensor(float diameter, uint8_t port) {
 8003950:	b4b0      	push	{r4, r5, r7}
 8003952:	b08d      	sub	sp, #52	; 0x34
 8003954:	af00      	add	r7, sp, #0
 8003956:	60f8      	str	r0, [r7, #12]
 8003958:	ed87 0a02 	vstr	s0, [r7, #8]
 800395c:	460b      	mov	r3, r1
 800395e:	71fb      	strb	r3, [r7, #7]
    Sensor sensor;
    sensor.info.diameter = diameter;
 8003960:	68bb      	ldr	r3, [r7, #8]
 8003962:	613b      	str	r3, [r7, #16]
    sensor.info.uartPort = port;
 8003964:	79fb      	ldrb	r3, [r7, #7]
 8003966:	757b      	strb	r3, [r7, #21]

    // Initialisiere die Getter-Funktionen
    sensor.getDiameter = getDiameter;
 8003968:	4b0a      	ldr	r3, [pc, #40]	; (8003994 <initSensor+0x44>)
 800396a:	61bb      	str	r3, [r7, #24]
    sensor.getUartPort = getUartPort;
 800396c:	4b0a      	ldr	r3, [pc, #40]	; (8003998 <initSensor+0x48>)
 800396e:	623b      	str	r3, [r7, #32]

    // Initialisiere die Setter-Funktionen
    sensor.setDiameter = setDiameter;
 8003970:	4b0a      	ldr	r3, [pc, #40]	; (800399c <initSensor+0x4c>)
 8003972:	627b      	str	r3, [r7, #36]	; 0x24

    return sensor;
 8003974:	68fb      	ldr	r3, [r7, #12]
 8003976:	461d      	mov	r5, r3
 8003978:	f107 0410 	add.w	r4, r7, #16
 800397c:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800397e:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8003980:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
 8003984:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
}
 8003988:	68f8      	ldr	r0, [r7, #12]
 800398a:	3734      	adds	r7, #52	; 0x34
 800398c:	46bd      	mov	sp, r7
 800398e:	bcb0      	pop	{r4, r5, r7}
 8003990:	4770      	bx	lr
 8003992:	bf00      	nop
 8003994:	080038fd 	.word	0x080038fd
 8003998:	0800391b 	.word	0x0800391b
 800399c:	08003933 	.word	0x08003933

080039a0 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 80039a0:	b5b0      	push	{r4, r5, r7, lr}
 80039a2:	b09c      	sub	sp, #112	; 0x70
 80039a4:	af04      	add	r7, sp, #16
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 80039a6:	f000 fff9 	bl	800499c <HAL_Init>

  /* USER CODE BEGIN Init */
  sensorExtruder = initSensor(1.57, 2);
 80039aa:	4ca2      	ldr	r4, [pc, #648]	; (8003c34 <main+0x294>)
 80039ac:	f107 0340 	add.w	r3, r7, #64	; 0x40
 80039b0:	2102      	movs	r1, #2
 80039b2:	ed9f 0aa1 	vldr	s0, [pc, #644]	; 8003c38 <main+0x298>
 80039b6:	4618      	mov	r0, r3
 80039b8:	f7ff ffca 	bl	8003950 <initSensor>
 80039bc:	4625      	mov	r5, r4
 80039be:	f107 0440 	add.w	r4, r7, #64	; 0x40
 80039c2:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80039c4:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 80039c6:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
 80039ca:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
  sensorBack 	 = initSensor(2.56, 6);
 80039ce:	4c9b      	ldr	r4, [pc, #620]	; (8003c3c <main+0x29c>)
 80039d0:	f107 0340 	add.w	r3, r7, #64	; 0x40
 80039d4:	2106      	movs	r1, #6
 80039d6:	ed9f 0a9a 	vldr	s0, [pc, #616]	; 8003c40 <main+0x2a0>
 80039da:	4618      	mov	r0, r3
 80039dc:	f7ff ffb8 	bl	8003950 <initSensor>
 80039e0:	4625      	mov	r5, r4
 80039e2:	f107 0440 	add.w	r4, r7, #64	; 0x40
 80039e6:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80039e8:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 80039ea:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
 80039ee:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
  motor 		 = initMotor(&htim1);
 80039f2:	4c94      	ldr	r4, [pc, #592]	; (8003c44 <main+0x2a4>)
 80039f4:	f107 0340 	add.w	r3, r7, #64	; 0x40
 80039f8:	4993      	ldr	r1, [pc, #588]	; (8003c48 <main+0x2a8>)
 80039fa:	4618      	mov	r0, r3
 80039fc:	f7ff ff60 	bl	80038c0 <initMotor>
 8003a00:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8003a04:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8003a06:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8003a0a:	f000 f945 	bl	8003c98 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8003a0e:	f000 fb39 	bl	8004084 <MX_GPIO_Init>
  MX_USART2_UART_Init();
 8003a12:	f000 fae3 	bl	8003fdc <MX_USART2_UART_Init>
  MX_USART1_UART_Init();
 8003a16:	f000 fab7 	bl	8003f88 <MX_USART1_UART_Init>
  MX_USART6_UART_Init();
 8003a1a:	f000 fb09 	bl	8004030 <MX_USART6_UART_Init>
  MX_TIM1_Init();
 8003a1e:	f000 fa11 	bl	8003e44 <MX_TIM1_Init>
  MX_SPI1_Init();
 8003a22:	f000 f9a3 	bl	8003d6c <MX_SPI1_Init>
  MX_SPI2_Init();
 8003a26:	f000 f9d7 	bl	8003dd8 <MX_SPI2_Init>
  /* USER CODE BEGIN 2 */
  ILI9341_Init(&hspi1, LCD_CS_GPIO_Port, LCD_CS_Pin, LCD_DC_GPIO_Port, LCD_DC_Pin, LCD_RST_GPIO_Port, LCD_RST_Pin);
 8003a2a:	2380      	movs	r3, #128	; 0x80
 8003a2c:	9302      	str	r3, [sp, #8]
 8003a2e:	4b87      	ldr	r3, [pc, #540]	; (8003c4c <main+0x2ac>)
 8003a30:	9301      	str	r3, [sp, #4]
 8003a32:	f44f 7300 	mov.w	r3, #512	; 0x200
 8003a36:	9300      	str	r3, [sp, #0]
 8003a38:	4b85      	ldr	r3, [pc, #532]	; (8003c50 <main+0x2b0>)
 8003a3a:	2240      	movs	r2, #64	; 0x40
 8003a3c:	4985      	ldr	r1, [pc, #532]	; (8003c54 <main+0x2b4>)
 8003a3e:	4886      	ldr	r0, [pc, #536]	; (8003c58 <main+0x2b8>)
 8003a40:	f7fd fb92 	bl	8001168 <ILI9341_Init>
  ILI9341_setRotation(2);
 8003a44:	2002      	movs	r0, #2
 8003a46:	f7fe f81b 	bl	8001a80 <ILI9341_setRotation>
  ILI9341_Fill(COLOR_NAVY);
 8003a4a:	200f      	movs	r0, #15
 8003a4c:	f7fd fc6c 	bl	8001328 <ILI9341_Fill>
  TSC2046_Begin(&hspi2, TS_CS_GPIO_Port, TS_CS_Pin);
 8003a50:	2220      	movs	r2, #32
 8003a52:	4980      	ldr	r1, [pc, #512]	; (8003c54 <main+0x2b4>)
 8003a54:	4881      	ldr	r0, [pc, #516]	; (8003c5c <main+0x2bc>)
 8003a56:	f7fe fa5f 	bl	8001f18 <TSC2046_Begin>


  HMI_init(&stateMachine, &sensorExtruder, &sensorBack, &pidController);
 8003a5a:	f107 0040 	add.w	r0, r7, #64	; 0x40
 8003a5e:	4b80      	ldr	r3, [pc, #512]	; (8003c60 <main+0x2c0>)
 8003a60:	9300      	str	r3, [sp, #0]
 8003a62:	4b76      	ldr	r3, [pc, #472]	; (8003c3c <main+0x29c>)
 8003a64:	4a73      	ldr	r2, [pc, #460]	; (8003c34 <main+0x294>)
 8003a66:	497f      	ldr	r1, [pc, #508]	; (8003c64 <main+0x2c4>)
 8003a68:	f7fe fb6a 	bl	8002140 <HMI_init>
  HAL_TIM_PWM_Start(&htim1, 0);
 8003a6c:	2100      	movs	r1, #0
 8003a6e:	4876      	ldr	r0, [pc, #472]	; (8003c48 <main+0x2a8>)
 8003a70:	f002 fe54 	bl	800671c <HAL_TIM_PWM_Start>
  stateMachine = initStateMachine(&motor);
 8003a74:	4c7b      	ldr	r4, [pc, #492]	; (8003c64 <main+0x2c4>)
 8003a76:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8003a7a:	4972      	ldr	r1, [pc, #456]	; (8003c44 <main+0x2a4>)
 8003a7c:	4618      	mov	r0, r3
 8003a7e:	f7ff fd85 	bl	800358c <initStateMachine>
 8003a82:	4625      	mov	r5, r4
 8003a84:	f107 0440 	add.w	r4, r7, #64	; 0x40
 8003a88:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8003a8a:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8003a8c:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
 8003a90:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
  pidController = pid_init(1.0, 0.0,0.0, 1.75);
 8003a94:	4c72      	ldr	r4, [pc, #456]	; (8003c60 <main+0x2c0>)
 8003a96:	463b      	mov	r3, r7
 8003a98:	eef7 1a0c 	vmov.f32	s3, #124	; 0x3fe00000  1.750
 8003a9c:	ed9f 1a72 	vldr	s2, [pc, #456]	; 8003c68 <main+0x2c8>
 8003aa0:	eddf 0a71 	vldr	s1, [pc, #452]	; 8003c68 <main+0x2c8>
 8003aa4:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 8003aa8:	4618      	mov	r0, r3
 8003aaa:	f7ff fe11 	bl	80036d0 <pid_init>
 8003aae:	4625      	mov	r5, r4
 8003ab0:	463c      	mov	r4, r7
 8003ab2:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8003ab4:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8003ab6:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8003ab8:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8003aba:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8003abc:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8003abe:	e894 0007 	ldmia.w	r4, {r0, r1, r2}
 8003ac2:	e885 0007 	stmia.w	r5, {r0, r1, r2}
  uartDataPc 		     = createUartDataObject();
 8003ac6:	4c69      	ldr	r4, [pc, #420]	; (8003c6c <main+0x2cc>)
 8003ac8:	463b      	mov	r3, r7
 8003aca:	4618      	mov	r0, r3
 8003acc:	f7ff fc54 	bl	8003378 <createUartDataObject>
 8003ad0:	4620      	mov	r0, r4
 8003ad2:	463b      	mov	r3, r7
 8003ad4:	2260      	movs	r2, #96	; 0x60
 8003ad6:	4619      	mov	r1, r3
 8003ad8:	f006 fc15 	bl	800a306 <memcpy>
  uartDataSensorExtruder = createUartDataObject();
 8003adc:	4c64      	ldr	r4, [pc, #400]	; (8003c70 <main+0x2d0>)
 8003ade:	463b      	mov	r3, r7
 8003ae0:	4618      	mov	r0, r3
 8003ae2:	f7ff fc49 	bl	8003378 <createUartDataObject>
 8003ae6:	4620      	mov	r0, r4
 8003ae8:	463b      	mov	r3, r7
 8003aea:	2260      	movs	r2, #96	; 0x60
 8003aec:	4619      	mov	r1, r3
 8003aee:	f006 fc0a 	bl	800a306 <memcpy>
  uartDataSensorBack	 = createUartDataObject();
 8003af2:	4c60      	ldr	r4, [pc, #384]	; (8003c74 <main+0x2d4>)
 8003af4:	463b      	mov	r3, r7
 8003af6:	4618      	mov	r0, r3
 8003af8:	f7ff fc3e 	bl	8003378 <createUartDataObject>
 8003afc:	4620      	mov	r0, r4
 8003afe:	463b      	mov	r3, r7
 8003b00:	2260      	movs	r2, #96	; 0x60
 8003b02:	4619      	mov	r1, r3
 8003b04:	f006 fbff 	bl	800a306 <memcpy>
  pcSender 		= createPcSendHandler(10);
 8003b08:	4c5b      	ldr	r4, [pc, #364]	; (8003c78 <main+0x2d8>)
 8003b0a:	463b      	mov	r3, r7
 8003b0c:	210a      	movs	r1, #10
 8003b0e:	4618      	mov	r0, r3
 8003b10:	f7ff fa98 	bl	8003044 <createPcSendHandler>
 8003b14:	4625      	mov	r5, r4
 8003b16:	463c      	mov	r4, r7
 8003b18:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8003b1a:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8003b1c:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
 8003b20:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
  pcReciever 	= createPcReceiveHandler(&stateMachine,&pidController, &motor, &pcSender, &huart2);
 8003b24:	4c55      	ldr	r4, [pc, #340]	; (8003c7c <main+0x2dc>)
 8003b26:	4638      	mov	r0, r7
 8003b28:	4b55      	ldr	r3, [pc, #340]	; (8003c80 <main+0x2e0>)
 8003b2a:	9301      	str	r3, [sp, #4]
 8003b2c:	4b52      	ldr	r3, [pc, #328]	; (8003c78 <main+0x2d8>)
 8003b2e:	9300      	str	r3, [sp, #0]
 8003b30:	4b44      	ldr	r3, [pc, #272]	; (8003c44 <main+0x2a4>)
 8003b32:	4a4b      	ldr	r2, [pc, #300]	; (8003c60 <main+0x2c0>)
 8003b34:	494b      	ldr	r1, [pc, #300]	; (8003c64 <main+0x2c4>)
 8003b36:	f7fe fdc9 	bl	80026cc <createPcReceiveHandler>
 8003b3a:	4625      	mov	r5, r4
 8003b3c:	463c      	mov	r4, r7
 8003b3e:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8003b40:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8003b42:	e894 0003 	ldmia.w	r4, {r0, r1}
 8003b46:	e885 0003 	stmia.w	r5, {r0, r1}
  sensorReciever = createSensorReceiveHandler(&sensorExtruder, &sensorBack);
 8003b4a:	4c4e      	ldr	r4, [pc, #312]	; (8003c84 <main+0x2e4>)
 8003b4c:	463b      	mov	r3, r7
 8003b4e:	4a3b      	ldr	r2, [pc, #236]	; (8003c3c <main+0x29c>)
 8003b50:	4938      	ldr	r1, [pc, #224]	; (8003c34 <main+0x294>)
 8003b52:	4618      	mov	r0, r3
 8003b54:	f7ff faa8 	bl	80030a8 <createSensorReceiveHandler>
 8003b58:	463b      	mov	r3, r7
 8003b5a:	e893 0007 	ldmia.w	r3, {r0, r1, r2}
 8003b5e:	e884 0007 	stmia.w	r4, {r0, r1, r2}
  HAL_UART_Receive_IT(&huart1, (uint8_t *)uartDataSensorExtruder.data.receivedData, 1);
 8003b62:	2201      	movs	r2, #1
 8003b64:	4942      	ldr	r1, [pc, #264]	; (8003c70 <main+0x2d0>)
 8003b66:	4848      	ldr	r0, [pc, #288]	; (8003c88 <main+0x2e8>)
 8003b68:	f003 fce1 	bl	800752e <HAL_UART_Receive_IT>
  HAL_UART_Receive_IT(&huart6, (uint8_t *)uartDataSensorBack.data.receivedData, 1);
 8003b6c:	2201      	movs	r2, #1
 8003b6e:	4941      	ldr	r1, [pc, #260]	; (8003c74 <main+0x2d4>)
 8003b70:	4846      	ldr	r0, [pc, #280]	; (8003c8c <main+0x2ec>)
 8003b72:	f003 fcdc 	bl	800752e <HAL_UART_Receive_IT>
  HAL_UART_Receive_IT(&huart2, (uint8_t *)uartDataPc.data.receivedData, 1);
 8003b76:	2201      	movs	r2, #1
 8003b78:	493c      	ldr	r1, [pc, #240]	; (8003c6c <main+0x2cc>)
 8003b7a:	4841      	ldr	r0, [pc, #260]	; (8003c80 <main+0x2e0>)
 8003b7c:	f003 fcd7 	bl	800752e <HAL_UART_Receive_IT>
  while (1)
  {
    /* USER CODE END WHILE */

    /* USER CODE BEGIN 3 */
	  myTS_Handle = TSC2046_GetTouchData();
 8003b80:	4c43      	ldr	r4, [pc, #268]	; (8003c90 <main+0x2f0>)
 8003b82:	463b      	mov	r3, r7
 8003b84:	4618      	mov	r0, r3
 8003b86:	f7fe fa6f 	bl	8002068 <TSC2046_GetTouchData>
 8003b8a:	4622      	mov	r2, r4
 8003b8c:	463b      	mov	r3, r7
 8003b8e:	6818      	ldr	r0, [r3, #0]
 8003b90:	6010      	str	r0, [r2, #0]
 8003b92:	889b      	ldrh	r3, [r3, #4]
 8003b94:	8093      	strh	r3, [r2, #4]
	  HMI_getTouch(&hmi, myTS_Handle, &stateMachine, &pidController);
 8003b96:	4a3e      	ldr	r2, [pc, #248]	; (8003c90 <main+0x2f0>)
 8003b98:	4b31      	ldr	r3, [pc, #196]	; (8003c60 <main+0x2c0>)
 8003b9a:	9300      	str	r3, [sp, #0]
 8003b9c:	4b31      	ldr	r3, [pc, #196]	; (8003c64 <main+0x2c4>)
 8003b9e:	ca06      	ldmia	r2, {r1, r2}
 8003ba0:	483c      	ldr	r0, [pc, #240]	; (8003c94 <main+0x2f4>)
 8003ba2:	f7fe fb7d 	bl	80022a0 <HMI_getTouch>


	  if(uartDataPc.data.messageComplete){
 8003ba6:	4b31      	ldr	r3, [pc, #196]	; (8003c6c <main+0x2cc>)
 8003ba8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8003baa:	2b00      	cmp	r3, #0
 8003bac:	d012      	beq.n	8003bd4 <main+0x234>
		processPcInterfaceMessage(&pcReciever, uartDataPc.data.receivedData, uartDataPc.data.dataIndex);
 8003bae:	4b2f      	ldr	r3, [pc, #188]	; (8003c6c <main+0x2cc>)
 8003bb0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003bb2:	b2db      	uxtb	r3, r3
 8003bb4:	461a      	mov	r2, r3
 8003bb6:	492d      	ldr	r1, [pc, #180]	; (8003c6c <main+0x2cc>)
 8003bb8:	4830      	ldr	r0, [pc, #192]	; (8003c7c <main+0x2dc>)
 8003bba:	f7fe fef1 	bl	80029a0 <processPcInterfaceMessage>
		// Zurücksetzen für die nächste Nachricht
		uartDataPc.data.messageComplete = 0;
 8003bbe:	4b2b      	ldr	r3, [pc, #172]	; (8003c6c <main+0x2cc>)
 8003bc0:	2200      	movs	r2, #0
 8003bc2:	645a      	str	r2, [r3, #68]	; 0x44
		uartDataPc.data.dataIndex = 0;
 8003bc4:	4b29      	ldr	r3, [pc, #164]	; (8003c6c <main+0x2cc>)
 8003bc6:	2200      	movs	r2, #0
 8003bc8:	641a      	str	r2, [r3, #64]	; 0x40
		HAL_UART_Receive_IT(&huart2, (uint8_t *)uartDataPc.data.receivedData, 1);
 8003bca:	2201      	movs	r2, #1
 8003bcc:	4927      	ldr	r1, [pc, #156]	; (8003c6c <main+0x2cc>)
 8003bce:	482c      	ldr	r0, [pc, #176]	; (8003c80 <main+0x2e0>)
 8003bd0:	f003 fcad 	bl	800752e <HAL_UART_Receive_IT>

	  }
	  if(uartDataSensorExtruder.data.messageComplete){
 8003bd4:	4b26      	ldr	r3, [pc, #152]	; (8003c70 <main+0x2d0>)
 8003bd6:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8003bd8:	2b00      	cmp	r3, #0
 8003bda:	d012      	beq.n	8003c02 <main+0x262>
		processSensorInterfaceMessage(1,&sensorReciever, uartDataSensorExtruder.data.receivedData, uartDataSensorExtruder.data.dataIndex);
 8003bdc:	4b24      	ldr	r3, [pc, #144]	; (8003c70 <main+0x2d0>)
 8003bde:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003be0:	b2db      	uxtb	r3, r3
 8003be2:	4a23      	ldr	r2, [pc, #140]	; (8003c70 <main+0x2d0>)
 8003be4:	4927      	ldr	r1, [pc, #156]	; (8003c84 <main+0x2e4>)
 8003be6:	2001      	movs	r0, #1
 8003be8:	f7ff fb52 	bl	8003290 <processSensorInterfaceMessage>
		// Zurücksetzen für die nächste Nachricht
		uartDataSensorExtruder.data.messageComplete = 0;
 8003bec:	4b20      	ldr	r3, [pc, #128]	; (8003c70 <main+0x2d0>)
 8003bee:	2200      	movs	r2, #0
 8003bf0:	645a      	str	r2, [r3, #68]	; 0x44
		uartDataSensorExtruder.data.dataIndex = 0;
 8003bf2:	4b1f      	ldr	r3, [pc, #124]	; (8003c70 <main+0x2d0>)
 8003bf4:	2200      	movs	r2, #0
 8003bf6:	641a      	str	r2, [r3, #64]	; 0x40
		HAL_UART_Receive_IT(&huart1, (uint8_t *)uartDataSensorExtruder.data.receivedData, 1);
 8003bf8:	2201      	movs	r2, #1
 8003bfa:	491d      	ldr	r1, [pc, #116]	; (8003c70 <main+0x2d0>)
 8003bfc:	4822      	ldr	r0, [pc, #136]	; (8003c88 <main+0x2e8>)
 8003bfe:	f003 fc96 	bl	800752e <HAL_UART_Receive_IT>
	  }
	  if(uartDataSensorBack.data.messageComplete){
 8003c02:	4b1c      	ldr	r3, [pc, #112]	; (8003c74 <main+0x2d4>)
 8003c04:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8003c06:	2b00      	cmp	r3, #0
 8003c08:	d0ba      	beq.n	8003b80 <main+0x1e0>
		processSensorInterfaceMessage(6,&sensorReciever, uartDataSensorBack.data.receivedData, uartDataSensorBack.data.dataIndex);
 8003c0a:	4b1a      	ldr	r3, [pc, #104]	; (8003c74 <main+0x2d4>)
 8003c0c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003c0e:	b2db      	uxtb	r3, r3
 8003c10:	4a18      	ldr	r2, [pc, #96]	; (8003c74 <main+0x2d4>)
 8003c12:	491c      	ldr	r1, [pc, #112]	; (8003c84 <main+0x2e4>)
 8003c14:	2006      	movs	r0, #6
 8003c16:	f7ff fb3b 	bl	8003290 <processSensorInterfaceMessage>
		// Zurücksetzen für die nächste Nachricht
		uartDataSensorBack.data.messageComplete = 0;
 8003c1a:	4b16      	ldr	r3, [pc, #88]	; (8003c74 <main+0x2d4>)
 8003c1c:	2200      	movs	r2, #0
 8003c1e:	645a      	str	r2, [r3, #68]	; 0x44
		uartDataSensorBack.data.dataIndex = 0;
 8003c20:	4b14      	ldr	r3, [pc, #80]	; (8003c74 <main+0x2d4>)
 8003c22:	2200      	movs	r2, #0
 8003c24:	641a      	str	r2, [r3, #64]	; 0x40
		HAL_UART_Receive_IT(&huart6, (uint8_t *)uartDataSensorBack.data.receivedData, 1);
 8003c26:	2201      	movs	r2, #1
 8003c28:	4912      	ldr	r1, [pc, #72]	; (8003c74 <main+0x2d4>)
 8003c2a:	4818      	ldr	r0, [pc, #96]	; (8003c8c <main+0x2ec>)
 8003c2c:	f003 fc7f 	bl	800752e <HAL_UART_Receive_IT>
	  myTS_Handle = TSC2046_GetTouchData();
 8003c30:	e7a6      	b.n	8003b80 <main+0x1e0>
 8003c32:	bf00      	nop
 8003c34:	20000538 	.word	0x20000538
 8003c38:	3fc8f5c3 	.word	0x3fc8f5c3
 8003c3c:	20000558 	.word	0x20000558
 8003c40:	4023d70a 	.word	0x4023d70a
 8003c44:	20000578 	.word	0x20000578
 8003c48:	20000424 	.word	0x20000424
 8003c4c:	40020800 	.word	0x40020800
 8003c50:	40020000 	.word	0x40020000
 8003c54:	40020400 	.word	0x40020400
 8003c58:	20000374 	.word	0x20000374
 8003c5c:	200003cc 	.word	0x200003cc
 8003c60:	200005a8 	.word	0x200005a8
 8003c64:	20000588 	.word	0x20000588
 8003c68:	00000000 	.word	0x00000000
 8003c6c:	20000628 	.word	0x20000628
 8003c70:	20000688 	.word	0x20000688
 8003c74:	200006e8 	.word	0x200006e8
 8003c78:	20000608 	.word	0x20000608
 8003c7c:	200005f0 	.word	0x200005f0
 8003c80:	200004b0 	.word	0x200004b0
 8003c84:	200005e4 	.word	0x200005e4
 8003c88:	2000046c 	.word	0x2000046c
 8003c8c:	200004f4 	.word	0x200004f4
 8003c90:	20000754 	.word	0x20000754
 8003c94:	20000748 	.word	0x20000748

08003c98 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8003c98:	b580      	push	{r7, lr}
 8003c9a:	b094      	sub	sp, #80	; 0x50
 8003c9c:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8003c9e:	f107 0320 	add.w	r3, r7, #32
 8003ca2:	2230      	movs	r2, #48	; 0x30
 8003ca4:	2100      	movs	r1, #0
 8003ca6:	4618      	mov	r0, r3
 8003ca8:	f006 fa89 	bl	800a1be <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8003cac:	f107 030c 	add.w	r3, r7, #12
 8003cb0:	2200      	movs	r2, #0
 8003cb2:	601a      	str	r2, [r3, #0]
 8003cb4:	605a      	str	r2, [r3, #4]
 8003cb6:	609a      	str	r2, [r3, #8]
 8003cb8:	60da      	str	r2, [r3, #12]
 8003cba:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 8003cbc:	2300      	movs	r3, #0
 8003cbe:	60bb      	str	r3, [r7, #8]
 8003cc0:	4b28      	ldr	r3, [pc, #160]	; (8003d64 <SystemClock_Config+0xcc>)
 8003cc2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003cc4:	4a27      	ldr	r2, [pc, #156]	; (8003d64 <SystemClock_Config+0xcc>)
 8003cc6:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8003cca:	6413      	str	r3, [r2, #64]	; 0x40
 8003ccc:	4b25      	ldr	r3, [pc, #148]	; (8003d64 <SystemClock_Config+0xcc>)
 8003cce:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8003cd0:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8003cd4:	60bb      	str	r3, [r7, #8]
 8003cd6:	68bb      	ldr	r3, [r7, #8]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8003cd8:	2300      	movs	r3, #0
 8003cda:	607b      	str	r3, [r7, #4]
 8003cdc:	4b22      	ldr	r3, [pc, #136]	; (8003d68 <SystemClock_Config+0xd0>)
 8003cde:	681b      	ldr	r3, [r3, #0]
 8003ce0:	4a21      	ldr	r2, [pc, #132]	; (8003d68 <SystemClock_Config+0xd0>)
 8003ce2:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8003ce6:	6013      	str	r3, [r2, #0]
 8003ce8:	4b1f      	ldr	r3, [pc, #124]	; (8003d68 <SystemClock_Config+0xd0>)
 8003cea:	681b      	ldr	r3, [r3, #0]
 8003cec:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 8003cf0:	607b      	str	r3, [r7, #4]
 8003cf2:	687b      	ldr	r3, [r7, #4]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 8003cf4:	2302      	movs	r3, #2
 8003cf6:	623b      	str	r3, [r7, #32]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8003cf8:	2301      	movs	r3, #1
 8003cfa:	62fb      	str	r3, [r7, #44]	; 0x2c
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 8003cfc:	2310      	movs	r3, #16
 8003cfe:	633b      	str	r3, [r7, #48]	; 0x30
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8003d00:	2302      	movs	r3, #2
 8003d02:	63bb      	str	r3, [r7, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 8003d04:	2300      	movs	r3, #0
 8003d06:	63fb      	str	r3, [r7, #60]	; 0x3c
  RCC_OscInitStruct.PLL.PLLM = 16;
 8003d08:	2310      	movs	r3, #16
 8003d0a:	643b      	str	r3, [r7, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLN = 336;
 8003d0c:	f44f 73a8 	mov.w	r3, #336	; 0x150
 8003d10:	647b      	str	r3, [r7, #68]	; 0x44
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV4;
 8003d12:	2304      	movs	r3, #4
 8003d14:	64bb      	str	r3, [r7, #72]	; 0x48
  RCC_OscInitStruct.PLL.PLLQ = 4;
 8003d16:	2304      	movs	r3, #4
 8003d18:	64fb      	str	r3, [r7, #76]	; 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8003d1a:	f107 0320 	add.w	r3, r7, #32
 8003d1e:	4618      	mov	r0, r3
 8003d20:	f001 fa14 	bl	800514c <HAL_RCC_OscConfig>
 8003d24:	4603      	mov	r3, r0
 8003d26:	2b00      	cmp	r3, #0
 8003d28:	d001      	beq.n	8003d2e <SystemClock_Config+0x96>
  {
    Error_Handler();
 8003d2a:	f000 fabd 	bl	80042a8 <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8003d2e:	230f      	movs	r3, #15
 8003d30:	60fb      	str	r3, [r7, #12]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8003d32:	2302      	movs	r3, #2
 8003d34:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8003d36:	2300      	movs	r3, #0
 8003d38:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 8003d3a:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8003d3e:	61bb      	str	r3, [r7, #24]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 8003d40:	2300      	movs	r3, #0
 8003d42:	61fb      	str	r3, [r7, #28]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 8003d44:	f107 030c 	add.w	r3, r7, #12
 8003d48:	2102      	movs	r1, #2
 8003d4a:	4618      	mov	r0, r3
 8003d4c:	f001 fc76 	bl	800563c <HAL_RCC_ClockConfig>
 8003d50:	4603      	mov	r3, r0
 8003d52:	2b00      	cmp	r3, #0
 8003d54:	d001      	beq.n	8003d5a <SystemClock_Config+0xc2>
  {
    Error_Handler();
 8003d56:	f000 faa7 	bl	80042a8 <Error_Handler>
  }
}
 8003d5a:	bf00      	nop
 8003d5c:	3750      	adds	r7, #80	; 0x50
 8003d5e:	46bd      	mov	sp, r7
 8003d60:	bd80      	pop	{r7, pc}
 8003d62:	bf00      	nop
 8003d64:	40023800 	.word	0x40023800
 8003d68:	40007000 	.word	0x40007000

08003d6c <MX_SPI1_Init>:
  * @brief SPI1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_SPI1_Init(void)
{
 8003d6c:	b580      	push	{r7, lr}
 8003d6e:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN SPI1_Init 1 */

  /* USER CODE END SPI1_Init 1 */
  /* SPI1 parameter configuration*/
  hspi1.Instance = SPI1;
 8003d70:	4b17      	ldr	r3, [pc, #92]	; (8003dd0 <MX_SPI1_Init+0x64>)
 8003d72:	4a18      	ldr	r2, [pc, #96]	; (8003dd4 <MX_SPI1_Init+0x68>)
 8003d74:	601a      	str	r2, [r3, #0]
  hspi1.Init.Mode = SPI_MODE_MASTER;
 8003d76:	4b16      	ldr	r3, [pc, #88]	; (8003dd0 <MX_SPI1_Init+0x64>)
 8003d78:	f44f 7282 	mov.w	r2, #260	; 0x104
 8003d7c:	605a      	str	r2, [r3, #4]
  hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 8003d7e:	4b14      	ldr	r3, [pc, #80]	; (8003dd0 <MX_SPI1_Init+0x64>)
 8003d80:	2200      	movs	r2, #0
 8003d82:	609a      	str	r2, [r3, #8]
  hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 8003d84:	4b12      	ldr	r3, [pc, #72]	; (8003dd0 <MX_SPI1_Init+0x64>)
 8003d86:	2200      	movs	r2, #0
 8003d88:	60da      	str	r2, [r3, #12]
  hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 8003d8a:	4b11      	ldr	r3, [pc, #68]	; (8003dd0 <MX_SPI1_Init+0x64>)
 8003d8c:	2200      	movs	r2, #0
 8003d8e:	611a      	str	r2, [r3, #16]
  hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 8003d90:	4b0f      	ldr	r3, [pc, #60]	; (8003dd0 <MX_SPI1_Init+0x64>)
 8003d92:	2200      	movs	r2, #0
 8003d94:	615a      	str	r2, [r3, #20]
  hspi1.Init.NSS = SPI_NSS_SOFT;
 8003d96:	4b0e      	ldr	r3, [pc, #56]	; (8003dd0 <MX_SPI1_Init+0x64>)
 8003d98:	f44f 7200 	mov.w	r2, #512	; 0x200
 8003d9c:	619a      	str	r2, [r3, #24]
  hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 8003d9e:	4b0c      	ldr	r3, [pc, #48]	; (8003dd0 <MX_SPI1_Init+0x64>)
 8003da0:	2200      	movs	r2, #0
 8003da2:	61da      	str	r2, [r3, #28]
  hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 8003da4:	4b0a      	ldr	r3, [pc, #40]	; (8003dd0 <MX_SPI1_Init+0x64>)
 8003da6:	2200      	movs	r2, #0
 8003da8:	621a      	str	r2, [r3, #32]
  hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 8003daa:	4b09      	ldr	r3, [pc, #36]	; (8003dd0 <MX_SPI1_Init+0x64>)
 8003dac:	2200      	movs	r2, #0
 8003dae:	625a      	str	r2, [r3, #36]	; 0x24
  hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8003db0:	4b07      	ldr	r3, [pc, #28]	; (8003dd0 <MX_SPI1_Init+0x64>)
 8003db2:	2200      	movs	r2, #0
 8003db4:	629a      	str	r2, [r3, #40]	; 0x28
  hspi1.Init.CRCPolynomial = 10;
 8003db6:	4b06      	ldr	r3, [pc, #24]	; (8003dd0 <MX_SPI1_Init+0x64>)
 8003db8:	220a      	movs	r2, #10
 8003dba:	62da      	str	r2, [r3, #44]	; 0x2c
  if (HAL_SPI_Init(&hspi1) != HAL_OK)
 8003dbc:	4804      	ldr	r0, [pc, #16]	; (8003dd0 <MX_SPI1_Init+0x64>)
 8003dbe:	f001 fe5d 	bl	8005a7c <HAL_SPI_Init>
 8003dc2:	4603      	mov	r3, r0
 8003dc4:	2b00      	cmp	r3, #0
 8003dc6:	d001      	beq.n	8003dcc <MX_SPI1_Init+0x60>
  {
    Error_Handler();
 8003dc8:	f000 fa6e 	bl	80042a8 <Error_Handler>
  }
  /* USER CODE BEGIN SPI1_Init 2 */

  /* USER CODE END SPI1_Init 2 */

}
 8003dcc:	bf00      	nop
 8003dce:	bd80      	pop	{r7, pc}
 8003dd0:	20000374 	.word	0x20000374
 8003dd4:	40013000 	.word	0x40013000

08003dd8 <MX_SPI2_Init>:
  * @brief SPI2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_SPI2_Init(void)
{
 8003dd8:	b580      	push	{r7, lr}
 8003dda:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN SPI2_Init 1 */

  /* USER CODE END SPI2_Init 1 */
  /* SPI2 parameter configuration*/
  hspi2.Instance = SPI2;
 8003ddc:	4b17      	ldr	r3, [pc, #92]	; (8003e3c <MX_SPI2_Init+0x64>)
 8003dde:	4a18      	ldr	r2, [pc, #96]	; (8003e40 <MX_SPI2_Init+0x68>)
 8003de0:	601a      	str	r2, [r3, #0]
  hspi2.Init.Mode = SPI_MODE_MASTER;
 8003de2:	4b16      	ldr	r3, [pc, #88]	; (8003e3c <MX_SPI2_Init+0x64>)
 8003de4:	f44f 7282 	mov.w	r2, #260	; 0x104
 8003de8:	605a      	str	r2, [r3, #4]
  hspi2.Init.Direction = SPI_DIRECTION_2LINES;
 8003dea:	4b14      	ldr	r3, [pc, #80]	; (8003e3c <MX_SPI2_Init+0x64>)
 8003dec:	2200      	movs	r2, #0
 8003dee:	609a      	str	r2, [r3, #8]
  hspi2.Init.DataSize = SPI_DATASIZE_8BIT;
 8003df0:	4b12      	ldr	r3, [pc, #72]	; (8003e3c <MX_SPI2_Init+0x64>)
 8003df2:	2200      	movs	r2, #0
 8003df4:	60da      	str	r2, [r3, #12]
  hspi2.Init.CLKPolarity = SPI_POLARITY_LOW;
 8003df6:	4b11      	ldr	r3, [pc, #68]	; (8003e3c <MX_SPI2_Init+0x64>)
 8003df8:	2200      	movs	r2, #0
 8003dfa:	611a      	str	r2, [r3, #16]
  hspi2.Init.CLKPhase = SPI_PHASE_1EDGE;
 8003dfc:	4b0f      	ldr	r3, [pc, #60]	; (8003e3c <MX_SPI2_Init+0x64>)
 8003dfe:	2200      	movs	r2, #0
 8003e00:	615a      	str	r2, [r3, #20]
  hspi2.Init.NSS = SPI_NSS_SOFT;
 8003e02:	4b0e      	ldr	r3, [pc, #56]	; (8003e3c <MX_SPI2_Init+0x64>)
 8003e04:	f44f 7200 	mov.w	r2, #512	; 0x200
 8003e08:	619a      	str	r2, [r3, #24]
  hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_8;
 8003e0a:	4b0c      	ldr	r3, [pc, #48]	; (8003e3c <MX_SPI2_Init+0x64>)
 8003e0c:	2210      	movs	r2, #16
 8003e0e:	61da      	str	r2, [r3, #28]
  hspi2.Init.FirstBit = SPI_FIRSTBIT_MSB;
 8003e10:	4b0a      	ldr	r3, [pc, #40]	; (8003e3c <MX_SPI2_Init+0x64>)
 8003e12:	2200      	movs	r2, #0
 8003e14:	621a      	str	r2, [r3, #32]
  hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
 8003e16:	4b09      	ldr	r3, [pc, #36]	; (8003e3c <MX_SPI2_Init+0x64>)
 8003e18:	2200      	movs	r2, #0
 8003e1a:	625a      	str	r2, [r3, #36]	; 0x24
  hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8003e1c:	4b07      	ldr	r3, [pc, #28]	; (8003e3c <MX_SPI2_Init+0x64>)
 8003e1e:	2200      	movs	r2, #0
 8003e20:	629a      	str	r2, [r3, #40]	; 0x28
  hspi2.Init.CRCPolynomial = 10;
 8003e22:	4b06      	ldr	r3, [pc, #24]	; (8003e3c <MX_SPI2_Init+0x64>)
 8003e24:	220a      	movs	r2, #10
 8003e26:	62da      	str	r2, [r3, #44]	; 0x2c
  if (HAL_SPI_Init(&hspi2) != HAL_OK)
 8003e28:	4804      	ldr	r0, [pc, #16]	; (8003e3c <MX_SPI2_Init+0x64>)
 8003e2a:	f001 fe27 	bl	8005a7c <HAL_SPI_Init>
 8003e2e:	4603      	mov	r3, r0
 8003e30:	2b00      	cmp	r3, #0
 8003e32:	d001      	beq.n	8003e38 <MX_SPI2_Init+0x60>
  {
    Error_Handler();
 8003e34:	f000 fa38 	bl	80042a8 <Error_Handler>
  }
  /* USER CODE BEGIN SPI2_Init 2 */

  /* USER CODE END SPI2_Init 2 */

}
 8003e38:	bf00      	nop
 8003e3a:	bd80      	pop	{r7, pc}
 8003e3c:	200003cc 	.word	0x200003cc
 8003e40:	40003800 	.word	0x40003800

08003e44 <MX_TIM1_Init>:
  * @brief TIM1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM1_Init(void)
{
 8003e44:	b580      	push	{r7, lr}
 8003e46:	b096      	sub	sp, #88	; 0x58
 8003e48:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM1_Init 0 */

  /* USER CODE END TIM1_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8003e4a:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8003e4e:	2200      	movs	r2, #0
 8003e50:	601a      	str	r2, [r3, #0]
 8003e52:	605a      	str	r2, [r3, #4]
 8003e54:	609a      	str	r2, [r3, #8]
 8003e56:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8003e58:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8003e5c:	2200      	movs	r2, #0
 8003e5e:	601a      	str	r2, [r3, #0]
 8003e60:	605a      	str	r2, [r3, #4]
  TIM_OC_InitTypeDef sConfigOC = {0};
 8003e62:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8003e66:	2200      	movs	r2, #0
 8003e68:	601a      	str	r2, [r3, #0]
 8003e6a:	605a      	str	r2, [r3, #4]
 8003e6c:	609a      	str	r2, [r3, #8]
 8003e6e:	60da      	str	r2, [r3, #12]
 8003e70:	611a      	str	r2, [r3, #16]
 8003e72:	615a      	str	r2, [r3, #20]
 8003e74:	619a      	str	r2, [r3, #24]
  TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 8003e76:	1d3b      	adds	r3, r7, #4
 8003e78:	2220      	movs	r2, #32
 8003e7a:	2100      	movs	r1, #0
 8003e7c:	4618      	mov	r0, r3
 8003e7e:	f006 f99e 	bl	800a1be <memset>

  /* USER CODE BEGIN TIM1_Init 1 */

  /* USER CODE END TIM1_Init 1 */
  htim1.Instance = TIM1;
 8003e82:	4b3f      	ldr	r3, [pc, #252]	; (8003f80 <MX_TIM1_Init+0x13c>)
 8003e84:	4a3f      	ldr	r2, [pc, #252]	; (8003f84 <MX_TIM1_Init+0x140>)
 8003e86:	601a      	str	r2, [r3, #0]
  htim1.Init.Prescaler = 4;
 8003e88:	4b3d      	ldr	r3, [pc, #244]	; (8003f80 <MX_TIM1_Init+0x13c>)
 8003e8a:	2204      	movs	r2, #4
 8003e8c:	605a      	str	r2, [r3, #4]
  htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 8003e8e:	4b3c      	ldr	r3, [pc, #240]	; (8003f80 <MX_TIM1_Init+0x13c>)
 8003e90:	2200      	movs	r2, #0
 8003e92:	609a      	str	r2, [r3, #8]
  htim1.Init.Period = 65535;
 8003e94:	4b3a      	ldr	r3, [pc, #232]	; (8003f80 <MX_TIM1_Init+0x13c>)
 8003e96:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8003e9a:	60da      	str	r2, [r3, #12]
  htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8003e9c:	4b38      	ldr	r3, [pc, #224]	; (8003f80 <MX_TIM1_Init+0x13c>)
 8003e9e:	2200      	movs	r2, #0
 8003ea0:	611a      	str	r2, [r3, #16]
  htim1.Init.RepetitionCounter = 0;
 8003ea2:	4b37      	ldr	r3, [pc, #220]	; (8003f80 <MX_TIM1_Init+0x13c>)
 8003ea4:	2200      	movs	r2, #0
 8003ea6:	615a      	str	r2, [r3, #20]
  htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8003ea8:	4b35      	ldr	r3, [pc, #212]	; (8003f80 <MX_TIM1_Init+0x13c>)
 8003eaa:	2200      	movs	r2, #0
 8003eac:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim1) != HAL_OK)
 8003eae:	4834      	ldr	r0, [pc, #208]	; (8003f80 <MX_TIM1_Init+0x13c>)
 8003eb0:	f002 fb8c 	bl	80065cc <HAL_TIM_Base_Init>
 8003eb4:	4603      	mov	r3, r0
 8003eb6:	2b00      	cmp	r3, #0
 8003eb8:	d001      	beq.n	8003ebe <MX_TIM1_Init+0x7a>
  {
    Error_Handler();
 8003eba:	f000 f9f5 	bl	80042a8 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8003ebe:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8003ec2:	64bb      	str	r3, [r7, #72]	; 0x48
  if (HAL_TIM_ConfigClockSource(&htim1, &sClockSourceConfig) != HAL_OK)
 8003ec4:	f107 0348 	add.w	r3, r7, #72	; 0x48
 8003ec8:	4619      	mov	r1, r3
 8003eca:	482d      	ldr	r0, [pc, #180]	; (8003f80 <MX_TIM1_Init+0x13c>)
 8003ecc:	f002 fdfc 	bl	8006ac8 <HAL_TIM_ConfigClockSource>
 8003ed0:	4603      	mov	r3, r0
 8003ed2:	2b00      	cmp	r3, #0
 8003ed4:	d001      	beq.n	8003eda <MX_TIM1_Init+0x96>
  {
    Error_Handler();
 8003ed6:	f000 f9e7 	bl	80042a8 <Error_Handler>
  }
  if (HAL_TIM_PWM_Init(&htim1) != HAL_OK)
 8003eda:	4829      	ldr	r0, [pc, #164]	; (8003f80 <MX_TIM1_Init+0x13c>)
 8003edc:	f002 fbc5 	bl	800666a <HAL_TIM_PWM_Init>
 8003ee0:	4603      	mov	r3, r0
 8003ee2:	2b00      	cmp	r3, #0
 8003ee4:	d001      	beq.n	8003eea <MX_TIM1_Init+0xa6>
  {
    Error_Handler();
 8003ee6:	f000 f9df 	bl	80042a8 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8003eea:	2300      	movs	r3, #0
 8003eec:	643b      	str	r3, [r7, #64]	; 0x40
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8003eee:	2300      	movs	r3, #0
 8003ef0:	647b      	str	r3, [r7, #68]	; 0x44
  if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 8003ef2:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8003ef6:	4619      	mov	r1, r3
 8003ef8:	4821      	ldr	r0, [pc, #132]	; (8003f80 <MX_TIM1_Init+0x13c>)
 8003efa:	f003 f979 	bl	80071f0 <HAL_TIMEx_MasterConfigSynchronization>
 8003efe:	4603      	mov	r3, r0
 8003f00:	2b00      	cmp	r3, #0
 8003f02:	d001      	beq.n	8003f08 <MX_TIM1_Init+0xc4>
  {
    Error_Handler();
 8003f04:	f000 f9d0 	bl	80042a8 <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8003f08:	2360      	movs	r3, #96	; 0x60
 8003f0a:	627b      	str	r3, [r7, #36]	; 0x24
  sConfigOC.Pulse = 13125-1;
 8003f0c:	f243 3344 	movw	r3, #13124	; 0x3344
 8003f10:	62bb      	str	r3, [r7, #40]	; 0x28
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8003f12:	2300      	movs	r3, #0
 8003f14:	62fb      	str	r3, [r7, #44]	; 0x2c
  sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 8003f16:	2300      	movs	r3, #0
 8003f18:	633b      	str	r3, [r7, #48]	; 0x30
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 8003f1a:	2300      	movs	r3, #0
 8003f1c:	637b      	str	r3, [r7, #52]	; 0x34
  sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 8003f1e:	2300      	movs	r3, #0
 8003f20:	63bb      	str	r3, [r7, #56]	; 0x38
  sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 8003f22:	2300      	movs	r3, #0
 8003f24:	63fb      	str	r3, [r7, #60]	; 0x3c
  if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8003f26:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8003f2a:	2200      	movs	r2, #0
 8003f2c:	4619      	mov	r1, r3
 8003f2e:	4814      	ldr	r0, [pc, #80]	; (8003f80 <MX_TIM1_Init+0x13c>)
 8003f30:	f002 fd08 	bl	8006944 <HAL_TIM_PWM_ConfigChannel>
 8003f34:	4603      	mov	r3, r0
 8003f36:	2b00      	cmp	r3, #0
 8003f38:	d001      	beq.n	8003f3e <MX_TIM1_Init+0xfa>
  {
    Error_Handler();
 8003f3a:	f000 f9b5 	bl	80042a8 <Error_Handler>
  }
  sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
 8003f3e:	2300      	movs	r3, #0
 8003f40:	607b      	str	r3, [r7, #4]
  sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 8003f42:	2300      	movs	r3, #0
 8003f44:	60bb      	str	r3, [r7, #8]
  sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 8003f46:	2300      	movs	r3, #0
 8003f48:	60fb      	str	r3, [r7, #12]
  sBreakDeadTimeConfig.DeadTime = 0;
 8003f4a:	2300      	movs	r3, #0
 8003f4c:	613b      	str	r3, [r7, #16]
  sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 8003f4e:	2300      	movs	r3, #0
 8003f50:	617b      	str	r3, [r7, #20]
  sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 8003f52:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8003f56:	61bb      	str	r3, [r7, #24]
  sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 8003f58:	2300      	movs	r3, #0
 8003f5a:	623b      	str	r3, [r7, #32]
  if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 8003f5c:	1d3b      	adds	r3, r7, #4
 8003f5e:	4619      	mov	r1, r3
 8003f60:	4807      	ldr	r0, [pc, #28]	; (8003f80 <MX_TIM1_Init+0x13c>)
 8003f62:	f003 f9b3 	bl	80072cc <HAL_TIMEx_ConfigBreakDeadTime>
 8003f66:	4603      	mov	r3, r0
 8003f68:	2b00      	cmp	r3, #0
 8003f6a:	d001      	beq.n	8003f70 <MX_TIM1_Init+0x12c>
  {
    Error_Handler();
 8003f6c:	f000 f99c 	bl	80042a8 <Error_Handler>
  }
  /* USER CODE BEGIN TIM1_Init 2 */

  /* USER CODE END TIM1_Init 2 */
  HAL_TIM_MspPostInit(&htim1);
 8003f70:	4803      	ldr	r0, [pc, #12]	; (8003f80 <MX_TIM1_Init+0x13c>)
 8003f72:	f000 faa5 	bl	80044c0 <HAL_TIM_MspPostInit>

}
 8003f76:	bf00      	nop
 8003f78:	3758      	adds	r7, #88	; 0x58
 8003f7a:	46bd      	mov	sp, r7
 8003f7c:	bd80      	pop	{r7, pc}
 8003f7e:	bf00      	nop
 8003f80:	20000424 	.word	0x20000424
 8003f84:	40010000 	.word	0x40010000

08003f88 <MX_USART1_UART_Init>:
  * @brief USART1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART1_UART_Init(void)
{
 8003f88:	b580      	push	{r7, lr}
 8003f8a:	af00      	add	r7, sp, #0
  /* USER CODE END USART1_Init 0 */

  /* USER CODE BEGIN USART1_Init 1 */

  /* USER CODE END USART1_Init 1 */
  huart1.Instance = USART1;
 8003f8c:	4b11      	ldr	r3, [pc, #68]	; (8003fd4 <MX_USART1_UART_Init+0x4c>)
 8003f8e:	4a12      	ldr	r2, [pc, #72]	; (8003fd8 <MX_USART1_UART_Init+0x50>)
 8003f90:	601a      	str	r2, [r3, #0]
  huart1.Init.BaudRate = 115200;
 8003f92:	4b10      	ldr	r3, [pc, #64]	; (8003fd4 <MX_USART1_UART_Init+0x4c>)
 8003f94:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 8003f98:	605a      	str	r2, [r3, #4]
  huart1.Init.WordLength = UART_WORDLENGTH_8B;
 8003f9a:	4b0e      	ldr	r3, [pc, #56]	; (8003fd4 <MX_USART1_UART_Init+0x4c>)
 8003f9c:	2200      	movs	r2, #0
 8003f9e:	609a      	str	r2, [r3, #8]
  huart1.Init.StopBits = UART_STOPBITS_1;
 8003fa0:	4b0c      	ldr	r3, [pc, #48]	; (8003fd4 <MX_USART1_UART_Init+0x4c>)
 8003fa2:	2200      	movs	r2, #0
 8003fa4:	60da      	str	r2, [r3, #12]
  huart1.Init.Parity = UART_PARITY_NONE;
 8003fa6:	4b0b      	ldr	r3, [pc, #44]	; (8003fd4 <MX_USART1_UART_Init+0x4c>)
 8003fa8:	2200      	movs	r2, #0
 8003faa:	611a      	str	r2, [r3, #16]
  huart1.Init.Mode = UART_MODE_TX_RX;
 8003fac:	4b09      	ldr	r3, [pc, #36]	; (8003fd4 <MX_USART1_UART_Init+0x4c>)
 8003fae:	220c      	movs	r2, #12
 8003fb0:	615a      	str	r2, [r3, #20]
  huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8003fb2:	4b08      	ldr	r3, [pc, #32]	; (8003fd4 <MX_USART1_UART_Init+0x4c>)
 8003fb4:	2200      	movs	r2, #0
 8003fb6:	619a      	str	r2, [r3, #24]
  huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 8003fb8:	4b06      	ldr	r3, [pc, #24]	; (8003fd4 <MX_USART1_UART_Init+0x4c>)
 8003fba:	2200      	movs	r2, #0
 8003fbc:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart1) != HAL_OK)
 8003fbe:	4805      	ldr	r0, [pc, #20]	; (8003fd4 <MX_USART1_UART_Init+0x4c>)
 8003fc0:	f003 f9d6 	bl	8007370 <HAL_UART_Init>
 8003fc4:	4603      	mov	r3, r0
 8003fc6:	2b00      	cmp	r3, #0
 8003fc8:	d001      	beq.n	8003fce <MX_USART1_UART_Init+0x46>
  {
    Error_Handler();
 8003fca:	f000 f96d 	bl	80042a8 <Error_Handler>
  }
  /* USER CODE BEGIN USART1_Init 2 */

  /* USER CODE END USART1_Init 2 */

}
 8003fce:	bf00      	nop
 8003fd0:	bd80      	pop	{r7, pc}
 8003fd2:	bf00      	nop
 8003fd4:	2000046c 	.word	0x2000046c
 8003fd8:	40011000 	.word	0x40011000

08003fdc <MX_USART2_UART_Init>:
  * @brief USART2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART2_UART_Init(void)
{
 8003fdc:	b580      	push	{r7, lr}
 8003fde:	af00      	add	r7, sp, #0
  /* USER CODE END USART2_Init 0 */

  /* USER CODE BEGIN USART2_Init 1 */

  /* USER CODE END USART2_Init 1 */
  huart2.Instance = USART2;
 8003fe0:	4b11      	ldr	r3, [pc, #68]	; (8004028 <MX_USART2_UART_Init+0x4c>)
 8003fe2:	4a12      	ldr	r2, [pc, #72]	; (800402c <MX_USART2_UART_Init+0x50>)
 8003fe4:	601a      	str	r2, [r3, #0]
  huart2.Init.BaudRate = 115200;
 8003fe6:	4b10      	ldr	r3, [pc, #64]	; (8004028 <MX_USART2_UART_Init+0x4c>)
 8003fe8:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 8003fec:	605a      	str	r2, [r3, #4]
  huart2.Init.WordLength = UART_WORDLENGTH_8B;
 8003fee:	4b0e      	ldr	r3, [pc, #56]	; (8004028 <MX_USART2_UART_Init+0x4c>)
 8003ff0:	2200      	movs	r2, #0
 8003ff2:	609a      	str	r2, [r3, #8]
  huart2.Init.StopBits = UART_STOPBITS_1;
 8003ff4:	4b0c      	ldr	r3, [pc, #48]	; (8004028 <MX_USART2_UART_Init+0x4c>)
 8003ff6:	2200      	movs	r2, #0
 8003ff8:	60da      	str	r2, [r3, #12]
  huart2.Init.Parity = UART_PARITY_NONE;
 8003ffa:	4b0b      	ldr	r3, [pc, #44]	; (8004028 <MX_USART2_UART_Init+0x4c>)
 8003ffc:	2200      	movs	r2, #0
 8003ffe:	611a      	str	r2, [r3, #16]
  huart2.Init.Mode = UART_MODE_TX_RX;
 8004000:	4b09      	ldr	r3, [pc, #36]	; (8004028 <MX_USART2_UART_Init+0x4c>)
 8004002:	220c      	movs	r2, #12
 8004004:	615a      	str	r2, [r3, #20]
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8004006:	4b08      	ldr	r3, [pc, #32]	; (8004028 <MX_USART2_UART_Init+0x4c>)
 8004008:	2200      	movs	r2, #0
 800400a:	619a      	str	r2, [r3, #24]
  huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 800400c:	4b06      	ldr	r3, [pc, #24]	; (8004028 <MX_USART2_UART_Init+0x4c>)
 800400e:	2200      	movs	r2, #0
 8004010:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart2) != HAL_OK)
 8004012:	4805      	ldr	r0, [pc, #20]	; (8004028 <MX_USART2_UART_Init+0x4c>)
 8004014:	f003 f9ac 	bl	8007370 <HAL_UART_Init>
 8004018:	4603      	mov	r3, r0
 800401a:	2b00      	cmp	r3, #0
 800401c:	d001      	beq.n	8004022 <MX_USART2_UART_Init+0x46>
  {
    Error_Handler();
 800401e:	f000 f943 	bl	80042a8 <Error_Handler>
  }
  /* USER CODE BEGIN USART2_Init 2 */

  /* USER CODE END USART2_Init 2 */

}
 8004022:	bf00      	nop
 8004024:	bd80      	pop	{r7, pc}
 8004026:	bf00      	nop
 8004028:	200004b0 	.word	0x200004b0
 800402c:	40004400 	.word	0x40004400

08004030 <MX_USART6_UART_Init>:
  * @brief USART6 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART6_UART_Init(void)
{
 8004030:	b580      	push	{r7, lr}
 8004032:	af00      	add	r7, sp, #0
  /* USER CODE END USART6_Init 0 */

  /* USER CODE BEGIN USART6_Init 1 */

  /* USER CODE END USART6_Init 1 */
  huart6.Instance = USART6;
 8004034:	4b11      	ldr	r3, [pc, #68]	; (800407c <MX_USART6_UART_Init+0x4c>)
 8004036:	4a12      	ldr	r2, [pc, #72]	; (8004080 <MX_USART6_UART_Init+0x50>)
 8004038:	601a      	str	r2, [r3, #0]
  huart6.Init.BaudRate = 115200;
 800403a:	4b10      	ldr	r3, [pc, #64]	; (800407c <MX_USART6_UART_Init+0x4c>)
 800403c:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 8004040:	605a      	str	r2, [r3, #4]
  huart6.Init.WordLength = UART_WORDLENGTH_8B;
 8004042:	4b0e      	ldr	r3, [pc, #56]	; (800407c <MX_USART6_UART_Init+0x4c>)
 8004044:	2200      	movs	r2, #0
 8004046:	609a      	str	r2, [r3, #8]
  huart6.Init.StopBits = UART_STOPBITS_1;
 8004048:	4b0c      	ldr	r3, [pc, #48]	; (800407c <MX_USART6_UART_Init+0x4c>)
 800404a:	2200      	movs	r2, #0
 800404c:	60da      	str	r2, [r3, #12]
  huart6.Init.Parity = UART_PARITY_NONE;
 800404e:	4b0b      	ldr	r3, [pc, #44]	; (800407c <MX_USART6_UART_Init+0x4c>)
 8004050:	2200      	movs	r2, #0
 8004052:	611a      	str	r2, [r3, #16]
  huart6.Init.Mode = UART_MODE_TX_RX;
 8004054:	4b09      	ldr	r3, [pc, #36]	; (800407c <MX_USART6_UART_Init+0x4c>)
 8004056:	220c      	movs	r2, #12
 8004058:	615a      	str	r2, [r3, #20]
  huart6.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 800405a:	4b08      	ldr	r3, [pc, #32]	; (800407c <MX_USART6_UART_Init+0x4c>)
 800405c:	2200      	movs	r2, #0
 800405e:	619a      	str	r2, [r3, #24]
  huart6.Init.OverSampling = UART_OVERSAMPLING_16;
 8004060:	4b06      	ldr	r3, [pc, #24]	; (800407c <MX_USART6_UART_Init+0x4c>)
 8004062:	2200      	movs	r2, #0
 8004064:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart6) != HAL_OK)
 8004066:	4805      	ldr	r0, [pc, #20]	; (800407c <MX_USART6_UART_Init+0x4c>)
 8004068:	f003 f982 	bl	8007370 <HAL_UART_Init>
 800406c:	4603      	mov	r3, r0
 800406e:	2b00      	cmp	r3, #0
 8004070:	d001      	beq.n	8004076 <MX_USART6_UART_Init+0x46>
  {
    Error_Handler();
 8004072:	f000 f919 	bl	80042a8 <Error_Handler>
  }
  /* USER CODE BEGIN USART6_Init 2 */

  /* USER CODE END USART6_Init 2 */

}
 8004076:	bf00      	nop
 8004078:	bd80      	pop	{r7, pc}
 800407a:	bf00      	nop
 800407c:	200004f4 	.word	0x200004f4
 8004080:	40011400 	.word	0x40011400

08004084 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8004084:	b580      	push	{r7, lr}
 8004086:	b08a      	sub	sp, #40	; 0x28
 8004088:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800408a:	f107 0314 	add.w	r3, r7, #20
 800408e:	2200      	movs	r2, #0
 8004090:	601a      	str	r2, [r3, #0]
 8004092:	605a      	str	r2, [r3, #4]
 8004094:	609a      	str	r2, [r3, #8]
 8004096:	60da      	str	r2, [r3, #12]
 8004098:	611a      	str	r2, [r3, #16]
/* USER CODE BEGIN MX_GPIO_Init_1 */
/* USER CODE END MX_GPIO_Init_1 */

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 800409a:	2300      	movs	r3, #0
 800409c:	613b      	str	r3, [r7, #16]
 800409e:	4b41      	ldr	r3, [pc, #260]	; (80041a4 <MX_GPIO_Init+0x120>)
 80040a0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80040a2:	4a40      	ldr	r2, [pc, #256]	; (80041a4 <MX_GPIO_Init+0x120>)
 80040a4:	f043 0304 	orr.w	r3, r3, #4
 80040a8:	6313      	str	r3, [r2, #48]	; 0x30
 80040aa:	4b3e      	ldr	r3, [pc, #248]	; (80041a4 <MX_GPIO_Init+0x120>)
 80040ac:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80040ae:	f003 0304 	and.w	r3, r3, #4
 80040b2:	613b      	str	r3, [r7, #16]
 80040b4:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 80040b6:	2300      	movs	r3, #0
 80040b8:	60fb      	str	r3, [r7, #12]
 80040ba:	4b3a      	ldr	r3, [pc, #232]	; (80041a4 <MX_GPIO_Init+0x120>)
 80040bc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80040be:	4a39      	ldr	r2, [pc, #228]	; (80041a4 <MX_GPIO_Init+0x120>)
 80040c0:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80040c4:	6313      	str	r3, [r2, #48]	; 0x30
 80040c6:	4b37      	ldr	r3, [pc, #220]	; (80041a4 <MX_GPIO_Init+0x120>)
 80040c8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80040ca:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80040ce:	60fb      	str	r3, [r7, #12]
 80040d0:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 80040d2:	2300      	movs	r3, #0
 80040d4:	60bb      	str	r3, [r7, #8]
 80040d6:	4b33      	ldr	r3, [pc, #204]	; (80041a4 <MX_GPIO_Init+0x120>)
 80040d8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80040da:	4a32      	ldr	r2, [pc, #200]	; (80041a4 <MX_GPIO_Init+0x120>)
 80040dc:	f043 0301 	orr.w	r3, r3, #1
 80040e0:	6313      	str	r3, [r2, #48]	; 0x30
 80040e2:	4b30      	ldr	r3, [pc, #192]	; (80041a4 <MX_GPIO_Init+0x120>)
 80040e4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80040e6:	f003 0301 	and.w	r3, r3, #1
 80040ea:	60bb      	str	r3, [r7, #8]
 80040ec:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 80040ee:	2300      	movs	r3, #0
 80040f0:	607b      	str	r3, [r7, #4]
 80040f2:	4b2c      	ldr	r3, [pc, #176]	; (80041a4 <MX_GPIO_Init+0x120>)
 80040f4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80040f6:	4a2b      	ldr	r2, [pc, #172]	; (80041a4 <MX_GPIO_Init+0x120>)
 80040f8:	f043 0302 	orr.w	r3, r3, #2
 80040fc:	6313      	str	r3, [r2, #48]	; 0x30
 80040fe:	4b29      	ldr	r3, [pc, #164]	; (80041a4 <MX_GPIO_Init+0x120>)
 8004100:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004102:	f003 0302 	and.w	r3, r3, #2
 8004106:	607b      	str	r3, [r7, #4]
 8004108:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, LED_Pin|LCD_DC_Pin, GPIO_PIN_RESET);
 800410a:	2200      	movs	r2, #0
 800410c:	f44f 7108 	mov.w	r1, #544	; 0x220
 8004110:	4825      	ldr	r0, [pc, #148]	; (80041a8 <MX_GPIO_Init+0x124>)
 8004112:	f001 f801 	bl	8005118 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(LCD_RST_GPIO_Port, LCD_RST_Pin, GPIO_PIN_RESET);
 8004116:	2200      	movs	r2, #0
 8004118:	2180      	movs	r1, #128	; 0x80
 800411a:	4824      	ldr	r0, [pc, #144]	; (80041ac <MX_GPIO_Init+0x128>)
 800411c:	f000 fffc 	bl	8005118 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, TS_CS_Pin|LCD_CS_Pin, GPIO_PIN_RESET);
 8004120:	2200      	movs	r2, #0
 8004122:	2160      	movs	r1, #96	; 0x60
 8004124:	4822      	ldr	r0, [pc, #136]	; (80041b0 <MX_GPIO_Init+0x12c>)
 8004126:	f000 fff7 	bl	8005118 <HAL_GPIO_WritePin>

  /*Configure GPIO pin : B1_Pin */
  GPIO_InitStruct.Pin = B1_Pin;
 800412a:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 800412e:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 8004130:	f44f 1304 	mov.w	r3, #2162688	; 0x210000
 8004134:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8004136:	2300      	movs	r3, #0
 8004138:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
 800413a:	f107 0314 	add.w	r3, r7, #20
 800413e:	4619      	mov	r1, r3
 8004140:	481a      	ldr	r0, [pc, #104]	; (80041ac <MX_GPIO_Init+0x128>)
 8004142:	f000 fe65 	bl	8004e10 <HAL_GPIO_Init>

  /*Configure GPIO pins : LED_Pin LCD_DC_Pin */
  GPIO_InitStruct.Pin = LED_Pin|LCD_DC_Pin;
 8004146:	f44f 7308 	mov.w	r3, #544	; 0x220
 800414a:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800414c:	2301      	movs	r3, #1
 800414e:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8004150:	2300      	movs	r3, #0
 8004152:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8004154:	2300      	movs	r3, #0
 8004156:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8004158:	f107 0314 	add.w	r3, r7, #20
 800415c:	4619      	mov	r1, r3
 800415e:	4812      	ldr	r0, [pc, #72]	; (80041a8 <MX_GPIO_Init+0x124>)
 8004160:	f000 fe56 	bl	8004e10 <HAL_GPIO_Init>

  /*Configure GPIO pin : LCD_RST_Pin */
  GPIO_InitStruct.Pin = LCD_RST_Pin;
 8004164:	2380      	movs	r3, #128	; 0x80
 8004166:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8004168:	2301      	movs	r3, #1
 800416a:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800416c:	2300      	movs	r3, #0
 800416e:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8004170:	2300      	movs	r3, #0
 8004172:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(LCD_RST_GPIO_Port, &GPIO_InitStruct);
 8004174:	f107 0314 	add.w	r3, r7, #20
 8004178:	4619      	mov	r1, r3
 800417a:	480c      	ldr	r0, [pc, #48]	; (80041ac <MX_GPIO_Init+0x128>)
 800417c:	f000 fe48 	bl	8004e10 <HAL_GPIO_Init>

  /*Configure GPIO pins : TS_CS_Pin LCD_CS_Pin */
  GPIO_InitStruct.Pin = TS_CS_Pin|LCD_CS_Pin;
 8004180:	2360      	movs	r3, #96	; 0x60
 8004182:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8004184:	2301      	movs	r3, #1
 8004186:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8004188:	2300      	movs	r3, #0
 800418a:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800418c:	2300      	movs	r3, #0
 800418e:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8004190:	f107 0314 	add.w	r3, r7, #20
 8004194:	4619      	mov	r1, r3
 8004196:	4806      	ldr	r0, [pc, #24]	; (80041b0 <MX_GPIO_Init+0x12c>)
 8004198:	f000 fe3a 	bl	8004e10 <HAL_GPIO_Init>

/* USER CODE BEGIN MX_GPIO_Init_2 */
/* USER CODE END MX_GPIO_Init_2 */
}
 800419c:	bf00      	nop
 800419e:	3728      	adds	r7, #40	; 0x28
 80041a0:	46bd      	mov	sp, r7
 80041a2:	bd80      	pop	{r7, pc}
 80041a4:	40023800 	.word	0x40023800
 80041a8:	40020000 	.word	0x40020000
 80041ac:	40020800 	.word	0x40020800
 80041b0:	40020400 	.word	0x40020400

080041b4 <processUartData>:

/* USER CODE BEGIN 4 */
void processUartData(UART_HandleTypeDef *huart, UartDataObject *uartData) {
 80041b4:	b580      	push	{r7, lr}
 80041b6:	b082      	sub	sp, #8
 80041b8:	af00      	add	r7, sp, #0
 80041ba:	6078      	str	r0, [r7, #4]
 80041bc:	6039      	str	r1, [r7, #0]
  if (uartData->data.dataIndex == 0 && uartData->data.receivedData[0] != '?' && uartData->data.receivedData[0] != '!') {
 80041be:	683b      	ldr	r3, [r7, #0]
 80041c0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80041c2:	2b00      	cmp	r3, #0
 80041c4:	d111      	bne.n	80041ea <processUartData+0x36>
 80041c6:	683b      	ldr	r3, [r7, #0]
 80041c8:	781b      	ldrb	r3, [r3, #0]
 80041ca:	2b3f      	cmp	r3, #63	; 0x3f
 80041cc:	d00d      	beq.n	80041ea <processUartData+0x36>
 80041ce:	683b      	ldr	r3, [r7, #0]
 80041d0:	781b      	ldrb	r3, [r3, #0]
 80041d2:	2b21      	cmp	r3, #33	; 0x21
 80041d4:	d009      	beq.n	80041ea <processUartData+0x36>
    // Fehlerhafte Startbyte, Nachricht ignorieren
    uartData->data.dataIndex = 0;
 80041d6:	683b      	ldr	r3, [r7, #0]
 80041d8:	2200      	movs	r2, #0
 80041da:	641a      	str	r2, [r3, #64]	; 0x40
    HAL_UART_Receive_IT(huart, &uartData->data.receivedData[0], 1);
 80041dc:	683b      	ldr	r3, [r7, #0]
 80041de:	2201      	movs	r2, #1
 80041e0:	4619      	mov	r1, r3
 80041e2:	6878      	ldr	r0, [r7, #4]
 80041e4:	f003 f9a3 	bl	800752e <HAL_UART_Receive_IT>
    HAL_UART_Receive_IT(huart, &uartData->data.receivedData[0], 1);
  } else {
    uartData->data.dataIndex++;
    HAL_UART_Receive_IT(huart, (uint8_t *)&uartData->data.receivedData[uartData->data.dataIndex], 1);
  }
}
 80041e8:	e02b      	b.n	8004242 <processUartData+0x8e>
  } else if (uartData->data.receivedData[uartData->data.dataIndex] == '\r') {
 80041ea:	683b      	ldr	r3, [r7, #0]
 80041ec:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80041ee:	683a      	ldr	r2, [r7, #0]
 80041f0:	5cd3      	ldrb	r3, [r2, r3]
 80041f2:	2b0d      	cmp	r3, #13
 80041f4:	d109      	bne.n	800420a <processUartData+0x56>
    uartData->data.receivedData[uartData->data.dataIndex + 1] = '\0';  // Null-Terminierung hinzufügen
 80041f6:	683b      	ldr	r3, [r7, #0]
 80041f8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80041fa:	3301      	adds	r3, #1
 80041fc:	683a      	ldr	r2, [r7, #0]
 80041fe:	2100      	movs	r1, #0
 8004200:	54d1      	strb	r1, [r2, r3]
    uartData->data.messageComplete = 1;
 8004202:	683b      	ldr	r3, [r7, #0]
 8004204:	2201      	movs	r2, #1
 8004206:	645a      	str	r2, [r3, #68]	; 0x44
}
 8004208:	e01b      	b.n	8004242 <processUartData+0x8e>
  } else if (uartData->data.dataIndex >= sizeof(uartData->data.receivedData) - 1) {
 800420a:	683b      	ldr	r3, [r7, #0]
 800420c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800420e:	2b3e      	cmp	r3, #62	; 0x3e
 8004210:	d909      	bls.n	8004226 <processUartData+0x72>
    uartData->data.dataIndex = 0;
 8004212:	683b      	ldr	r3, [r7, #0]
 8004214:	2200      	movs	r2, #0
 8004216:	641a      	str	r2, [r3, #64]	; 0x40
    HAL_UART_Receive_IT(huart, &uartData->data.receivedData[0], 1);
 8004218:	683b      	ldr	r3, [r7, #0]
 800421a:	2201      	movs	r2, #1
 800421c:	4619      	mov	r1, r3
 800421e:	6878      	ldr	r0, [r7, #4]
 8004220:	f003 f985 	bl	800752e <HAL_UART_Receive_IT>
}
 8004224:	e00d      	b.n	8004242 <processUartData+0x8e>
    uartData->data.dataIndex++;
 8004226:	683b      	ldr	r3, [r7, #0]
 8004228:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800422a:	1c5a      	adds	r2, r3, #1
 800422c:	683b      	ldr	r3, [r7, #0]
 800422e:	641a      	str	r2, [r3, #64]	; 0x40
    HAL_UART_Receive_IT(huart, (uint8_t *)&uartData->data.receivedData[uartData->data.dataIndex], 1);
 8004230:	683b      	ldr	r3, [r7, #0]
 8004232:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004234:	683a      	ldr	r2, [r7, #0]
 8004236:	4413      	add	r3, r2
 8004238:	2201      	movs	r2, #1
 800423a:	4619      	mov	r1, r3
 800423c:	6878      	ldr	r0, [r7, #4]
 800423e:	f003 f976 	bl	800752e <HAL_UART_Receive_IT>
}
 8004242:	bf00      	nop
 8004244:	3708      	adds	r7, #8
 8004246:	46bd      	mov	sp, r7
 8004248:	bd80      	pop	{r7, pc}
	...

0800424c <HAL_UART_RxCpltCallback>:

void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart) {
 800424c:	b580      	push	{r7, lr}
 800424e:	b082      	sub	sp, #8
 8004250:	af00      	add	r7, sp, #0
 8004252:	6078      	str	r0, [r7, #4]
  if (huart == &huart2) {
 8004254:	687b      	ldr	r3, [r7, #4]
 8004256:	4a0e      	ldr	r2, [pc, #56]	; (8004290 <HAL_UART_RxCpltCallback+0x44>)
 8004258:	4293      	cmp	r3, r2
 800425a:	d104      	bne.n	8004266 <HAL_UART_RxCpltCallback+0x1a>
    processUartData(&huart2, &uartDataPc);
 800425c:	490d      	ldr	r1, [pc, #52]	; (8004294 <HAL_UART_RxCpltCallback+0x48>)
 800425e:	480c      	ldr	r0, [pc, #48]	; (8004290 <HAL_UART_RxCpltCallback+0x44>)
 8004260:	f7ff ffa8 	bl	80041b4 <processUartData>
  }else if (huart == &huart1){
	processUartData(&huart1, &uartDataSensorExtruder);
  }else if (huart == &huart6){
	  processUartData(&huart6, &uartDataSensorBack);
  }
}
 8004264:	e010      	b.n	8004288 <HAL_UART_RxCpltCallback+0x3c>
  }else if (huart == &huart1){
 8004266:	687b      	ldr	r3, [r7, #4]
 8004268:	4a0b      	ldr	r2, [pc, #44]	; (8004298 <HAL_UART_RxCpltCallback+0x4c>)
 800426a:	4293      	cmp	r3, r2
 800426c:	d104      	bne.n	8004278 <HAL_UART_RxCpltCallback+0x2c>
	processUartData(&huart1, &uartDataSensorExtruder);
 800426e:	490b      	ldr	r1, [pc, #44]	; (800429c <HAL_UART_RxCpltCallback+0x50>)
 8004270:	4809      	ldr	r0, [pc, #36]	; (8004298 <HAL_UART_RxCpltCallback+0x4c>)
 8004272:	f7ff ff9f 	bl	80041b4 <processUartData>
}
 8004276:	e007      	b.n	8004288 <HAL_UART_RxCpltCallback+0x3c>
  }else if (huart == &huart6){
 8004278:	687b      	ldr	r3, [r7, #4]
 800427a:	4a09      	ldr	r2, [pc, #36]	; (80042a0 <HAL_UART_RxCpltCallback+0x54>)
 800427c:	4293      	cmp	r3, r2
 800427e:	d103      	bne.n	8004288 <HAL_UART_RxCpltCallback+0x3c>
	  processUartData(&huart6, &uartDataSensorBack);
 8004280:	4908      	ldr	r1, [pc, #32]	; (80042a4 <HAL_UART_RxCpltCallback+0x58>)
 8004282:	4807      	ldr	r0, [pc, #28]	; (80042a0 <HAL_UART_RxCpltCallback+0x54>)
 8004284:	f7ff ff96 	bl	80041b4 <processUartData>
}
 8004288:	bf00      	nop
 800428a:	3708      	adds	r7, #8
 800428c:	46bd      	mov	sp, r7
 800428e:	bd80      	pop	{r7, pc}
 8004290:	200004b0 	.word	0x200004b0
 8004294:	20000628 	.word	0x20000628
 8004298:	2000046c 	.word	0x2000046c
 800429c:	20000688 	.word	0x20000688
 80042a0:	200004f4 	.word	0x200004f4
 80042a4:	200006e8 	.word	0x200006e8

080042a8 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 80042a8:	b480      	push	{r7}
 80042aa:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 80042ac:	b672      	cpsid	i
}
 80042ae:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 80042b0:	e7fe      	b.n	80042b0 <Error_Handler+0x8>
	...

080042b4 <HAL_MspInit>:
 80042b4:	b580      	push	{r7, lr}
 80042b6:	b082      	sub	sp, #8
 80042b8:	af00      	add	r7, sp, #0
 80042ba:	2300      	movs	r3, #0
 80042bc:	607b      	str	r3, [r7, #4]
 80042be:	4b10      	ldr	r3, [pc, #64]	; (8004300 <HAL_MspInit+0x4c>)
 80042c0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80042c2:	4a0f      	ldr	r2, [pc, #60]	; (8004300 <HAL_MspInit+0x4c>)
 80042c4:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80042c8:	6453      	str	r3, [r2, #68]	; 0x44
 80042ca:	4b0d      	ldr	r3, [pc, #52]	; (8004300 <HAL_MspInit+0x4c>)
 80042cc:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80042ce:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 80042d2:	607b      	str	r3, [r7, #4]
 80042d4:	687b      	ldr	r3, [r7, #4]
 80042d6:	2300      	movs	r3, #0
 80042d8:	603b      	str	r3, [r7, #0]
 80042da:	4b09      	ldr	r3, [pc, #36]	; (8004300 <HAL_MspInit+0x4c>)
 80042dc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80042de:	4a08      	ldr	r2, [pc, #32]	; (8004300 <HAL_MspInit+0x4c>)
 80042e0:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80042e4:	6413      	str	r3, [r2, #64]	; 0x40
 80042e6:	4b06      	ldr	r3, [pc, #24]	; (8004300 <HAL_MspInit+0x4c>)
 80042e8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80042ea:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80042ee:	603b      	str	r3, [r7, #0]
 80042f0:	683b      	ldr	r3, [r7, #0]
 80042f2:	2007      	movs	r0, #7
 80042f4:	f000 fcb8 	bl	8004c68 <HAL_NVIC_SetPriorityGrouping>
 80042f8:	bf00      	nop
 80042fa:	3708      	adds	r7, #8
 80042fc:	46bd      	mov	sp, r7
 80042fe:	bd80      	pop	{r7, pc}
 8004300:	40023800 	.word	0x40023800

08004304 <HAL_SPI_MspInit>:
 8004304:	b580      	push	{r7, lr}
 8004306:	b08e      	sub	sp, #56	; 0x38
 8004308:	af00      	add	r7, sp, #0
 800430a:	6078      	str	r0, [r7, #4]
 800430c:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8004310:	2200      	movs	r2, #0
 8004312:	601a      	str	r2, [r3, #0]
 8004314:	605a      	str	r2, [r3, #4]
 8004316:	609a      	str	r2, [r3, #8]
 8004318:	60da      	str	r2, [r3, #12]
 800431a:	611a      	str	r2, [r3, #16]
 800431c:	687b      	ldr	r3, [r7, #4]
 800431e:	681b      	ldr	r3, [r3, #0]
 8004320:	4a50      	ldr	r2, [pc, #320]	; (8004464 <HAL_SPI_MspInit+0x160>)
 8004322:	4293      	cmp	r3, r2
 8004324:	d14a      	bne.n	80043bc <HAL_SPI_MspInit+0xb8>
 8004326:	2300      	movs	r3, #0
 8004328:	623b      	str	r3, [r7, #32]
 800432a:	4b4f      	ldr	r3, [pc, #316]	; (8004468 <HAL_SPI_MspInit+0x164>)
 800432c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800432e:	4a4e      	ldr	r2, [pc, #312]	; (8004468 <HAL_SPI_MspInit+0x164>)
 8004330:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8004334:	6453      	str	r3, [r2, #68]	; 0x44
 8004336:	4b4c      	ldr	r3, [pc, #304]	; (8004468 <HAL_SPI_MspInit+0x164>)
 8004338:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800433a:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 800433e:	623b      	str	r3, [r7, #32]
 8004340:	6a3b      	ldr	r3, [r7, #32]
 8004342:	2300      	movs	r3, #0
 8004344:	61fb      	str	r3, [r7, #28]
 8004346:	4b48      	ldr	r3, [pc, #288]	; (8004468 <HAL_SPI_MspInit+0x164>)
 8004348:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800434a:	4a47      	ldr	r2, [pc, #284]	; (8004468 <HAL_SPI_MspInit+0x164>)
 800434c:	f043 0301 	orr.w	r3, r3, #1
 8004350:	6313      	str	r3, [r2, #48]	; 0x30
 8004352:	4b45      	ldr	r3, [pc, #276]	; (8004468 <HAL_SPI_MspInit+0x164>)
 8004354:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004356:	f003 0301 	and.w	r3, r3, #1
 800435a:	61fb      	str	r3, [r7, #28]
 800435c:	69fb      	ldr	r3, [r7, #28]
 800435e:	2300      	movs	r3, #0
 8004360:	61bb      	str	r3, [r7, #24]
 8004362:	4b41      	ldr	r3, [pc, #260]	; (8004468 <HAL_SPI_MspInit+0x164>)
 8004364:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004366:	4a40      	ldr	r2, [pc, #256]	; (8004468 <HAL_SPI_MspInit+0x164>)
 8004368:	f043 0302 	orr.w	r3, r3, #2
 800436c:	6313      	str	r3, [r2, #48]	; 0x30
 800436e:	4b3e      	ldr	r3, [pc, #248]	; (8004468 <HAL_SPI_MspInit+0x164>)
 8004370:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004372:	f003 0302 	and.w	r3, r3, #2
 8004376:	61bb      	str	r3, [r7, #24]
 8004378:	69bb      	ldr	r3, [r7, #24]
 800437a:	23c0      	movs	r3, #192	; 0xc0
 800437c:	627b      	str	r3, [r7, #36]	; 0x24
 800437e:	2302      	movs	r3, #2
 8004380:	62bb      	str	r3, [r7, #40]	; 0x28
 8004382:	2300      	movs	r3, #0
 8004384:	62fb      	str	r3, [r7, #44]	; 0x2c
 8004386:	2303      	movs	r3, #3
 8004388:	633b      	str	r3, [r7, #48]	; 0x30
 800438a:	2305      	movs	r3, #5
 800438c:	637b      	str	r3, [r7, #52]	; 0x34
 800438e:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8004392:	4619      	mov	r1, r3
 8004394:	4835      	ldr	r0, [pc, #212]	; (800446c <HAL_SPI_MspInit+0x168>)
 8004396:	f000 fd3b 	bl	8004e10 <HAL_GPIO_Init>
 800439a:	2308      	movs	r3, #8
 800439c:	627b      	str	r3, [r7, #36]	; 0x24
 800439e:	2302      	movs	r3, #2
 80043a0:	62bb      	str	r3, [r7, #40]	; 0x28
 80043a2:	2300      	movs	r3, #0
 80043a4:	62fb      	str	r3, [r7, #44]	; 0x2c
 80043a6:	2303      	movs	r3, #3
 80043a8:	633b      	str	r3, [r7, #48]	; 0x30
 80043aa:	2305      	movs	r3, #5
 80043ac:	637b      	str	r3, [r7, #52]	; 0x34
 80043ae:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80043b2:	4619      	mov	r1, r3
 80043b4:	482e      	ldr	r0, [pc, #184]	; (8004470 <HAL_SPI_MspInit+0x16c>)
 80043b6:	f000 fd2b 	bl	8004e10 <HAL_GPIO_Init>
 80043ba:	e04f      	b.n	800445c <HAL_SPI_MspInit+0x158>
 80043bc:	687b      	ldr	r3, [r7, #4]
 80043be:	681b      	ldr	r3, [r3, #0]
 80043c0:	4a2c      	ldr	r2, [pc, #176]	; (8004474 <HAL_SPI_MspInit+0x170>)
 80043c2:	4293      	cmp	r3, r2
 80043c4:	d14a      	bne.n	800445c <HAL_SPI_MspInit+0x158>
 80043c6:	2300      	movs	r3, #0
 80043c8:	617b      	str	r3, [r7, #20]
 80043ca:	4b27      	ldr	r3, [pc, #156]	; (8004468 <HAL_SPI_MspInit+0x164>)
 80043cc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80043ce:	4a26      	ldr	r2, [pc, #152]	; (8004468 <HAL_SPI_MspInit+0x164>)
 80043d0:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80043d4:	6413      	str	r3, [r2, #64]	; 0x40
 80043d6:	4b24      	ldr	r3, [pc, #144]	; (8004468 <HAL_SPI_MspInit+0x164>)
 80043d8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80043da:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 80043de:	617b      	str	r3, [r7, #20]
 80043e0:	697b      	ldr	r3, [r7, #20]
 80043e2:	2300      	movs	r3, #0
 80043e4:	613b      	str	r3, [r7, #16]
 80043e6:	4b20      	ldr	r3, [pc, #128]	; (8004468 <HAL_SPI_MspInit+0x164>)
 80043e8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80043ea:	4a1f      	ldr	r2, [pc, #124]	; (8004468 <HAL_SPI_MspInit+0x164>)
 80043ec:	f043 0304 	orr.w	r3, r3, #4
 80043f0:	6313      	str	r3, [r2, #48]	; 0x30
 80043f2:	4b1d      	ldr	r3, [pc, #116]	; (8004468 <HAL_SPI_MspInit+0x164>)
 80043f4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80043f6:	f003 0304 	and.w	r3, r3, #4
 80043fa:	613b      	str	r3, [r7, #16]
 80043fc:	693b      	ldr	r3, [r7, #16]
 80043fe:	2300      	movs	r3, #0
 8004400:	60fb      	str	r3, [r7, #12]
 8004402:	4b19      	ldr	r3, [pc, #100]	; (8004468 <HAL_SPI_MspInit+0x164>)
 8004404:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004406:	4a18      	ldr	r2, [pc, #96]	; (8004468 <HAL_SPI_MspInit+0x164>)
 8004408:	f043 0302 	orr.w	r3, r3, #2
 800440c:	6313      	str	r3, [r2, #48]	; 0x30
 800440e:	4b16      	ldr	r3, [pc, #88]	; (8004468 <HAL_SPI_MspInit+0x164>)
 8004410:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004412:	f003 0302 	and.w	r3, r3, #2
 8004416:	60fb      	str	r3, [r7, #12]
 8004418:	68fb      	ldr	r3, [r7, #12]
 800441a:	230c      	movs	r3, #12
 800441c:	627b      	str	r3, [r7, #36]	; 0x24
 800441e:	2302      	movs	r3, #2
 8004420:	62bb      	str	r3, [r7, #40]	; 0x28
 8004422:	2300      	movs	r3, #0
 8004424:	62fb      	str	r3, [r7, #44]	; 0x2c
 8004426:	2303      	movs	r3, #3
 8004428:	633b      	str	r3, [r7, #48]	; 0x30
 800442a:	2305      	movs	r3, #5
 800442c:	637b      	str	r3, [r7, #52]	; 0x34
 800442e:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8004432:	4619      	mov	r1, r3
 8004434:	4810      	ldr	r0, [pc, #64]	; (8004478 <HAL_SPI_MspInit+0x174>)
 8004436:	f000 fceb 	bl	8004e10 <HAL_GPIO_Init>
 800443a:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800443e:	627b      	str	r3, [r7, #36]	; 0x24
 8004440:	2302      	movs	r3, #2
 8004442:	62bb      	str	r3, [r7, #40]	; 0x28
 8004444:	2300      	movs	r3, #0
 8004446:	62fb      	str	r3, [r7, #44]	; 0x2c
 8004448:	2303      	movs	r3, #3
 800444a:	633b      	str	r3, [r7, #48]	; 0x30
 800444c:	2305      	movs	r3, #5
 800444e:	637b      	str	r3, [r7, #52]	; 0x34
 8004450:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8004454:	4619      	mov	r1, r3
 8004456:	4806      	ldr	r0, [pc, #24]	; (8004470 <HAL_SPI_MspInit+0x16c>)
 8004458:	f000 fcda 	bl	8004e10 <HAL_GPIO_Init>
 800445c:	bf00      	nop
 800445e:	3738      	adds	r7, #56	; 0x38
 8004460:	46bd      	mov	sp, r7
 8004462:	bd80      	pop	{r7, pc}
 8004464:	40013000 	.word	0x40013000
 8004468:	40023800 	.word	0x40023800
 800446c:	40020000 	.word	0x40020000
 8004470:	40020400 	.word	0x40020400
 8004474:	40003800 	.word	0x40003800
 8004478:	40020800 	.word	0x40020800

0800447c <HAL_TIM_Base_MspInit>:
 800447c:	b480      	push	{r7}
 800447e:	b085      	sub	sp, #20
 8004480:	af00      	add	r7, sp, #0
 8004482:	6078      	str	r0, [r7, #4]
 8004484:	687b      	ldr	r3, [r7, #4]
 8004486:	681b      	ldr	r3, [r3, #0]
 8004488:	4a0b      	ldr	r2, [pc, #44]	; (80044b8 <HAL_TIM_Base_MspInit+0x3c>)
 800448a:	4293      	cmp	r3, r2
 800448c:	d10d      	bne.n	80044aa <HAL_TIM_Base_MspInit+0x2e>
 800448e:	2300      	movs	r3, #0
 8004490:	60fb      	str	r3, [r7, #12]
 8004492:	4b0a      	ldr	r3, [pc, #40]	; (80044bc <HAL_TIM_Base_MspInit+0x40>)
 8004494:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8004496:	4a09      	ldr	r2, [pc, #36]	; (80044bc <HAL_TIM_Base_MspInit+0x40>)
 8004498:	f043 0301 	orr.w	r3, r3, #1
 800449c:	6453      	str	r3, [r2, #68]	; 0x44
 800449e:	4b07      	ldr	r3, [pc, #28]	; (80044bc <HAL_TIM_Base_MspInit+0x40>)
 80044a0:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 80044a2:	f003 0301 	and.w	r3, r3, #1
 80044a6:	60fb      	str	r3, [r7, #12]
 80044a8:	68fb      	ldr	r3, [r7, #12]
 80044aa:	bf00      	nop
 80044ac:	3714      	adds	r7, #20
 80044ae:	46bd      	mov	sp, r7
 80044b0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80044b4:	4770      	bx	lr
 80044b6:	bf00      	nop
 80044b8:	40010000 	.word	0x40010000
 80044bc:	40023800 	.word	0x40023800

080044c0 <HAL_TIM_MspPostInit>:
 80044c0:	b580      	push	{r7, lr}
 80044c2:	b088      	sub	sp, #32
 80044c4:	af00      	add	r7, sp, #0
 80044c6:	6078      	str	r0, [r7, #4]
 80044c8:	f107 030c 	add.w	r3, r7, #12
 80044cc:	2200      	movs	r2, #0
 80044ce:	601a      	str	r2, [r3, #0]
 80044d0:	605a      	str	r2, [r3, #4]
 80044d2:	609a      	str	r2, [r3, #8]
 80044d4:	60da      	str	r2, [r3, #12]
 80044d6:	611a      	str	r2, [r3, #16]
 80044d8:	687b      	ldr	r3, [r7, #4]
 80044da:	681b      	ldr	r3, [r3, #0]
 80044dc:	4a12      	ldr	r2, [pc, #72]	; (8004528 <HAL_TIM_MspPostInit+0x68>)
 80044de:	4293      	cmp	r3, r2
 80044e0:	d11e      	bne.n	8004520 <HAL_TIM_MspPostInit+0x60>
 80044e2:	2300      	movs	r3, #0
 80044e4:	60bb      	str	r3, [r7, #8]
 80044e6:	4b11      	ldr	r3, [pc, #68]	; (800452c <HAL_TIM_MspPostInit+0x6c>)
 80044e8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80044ea:	4a10      	ldr	r2, [pc, #64]	; (800452c <HAL_TIM_MspPostInit+0x6c>)
 80044ec:	f043 0301 	orr.w	r3, r3, #1
 80044f0:	6313      	str	r3, [r2, #48]	; 0x30
 80044f2:	4b0e      	ldr	r3, [pc, #56]	; (800452c <HAL_TIM_MspPostInit+0x6c>)
 80044f4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80044f6:	f003 0301 	and.w	r3, r3, #1
 80044fa:	60bb      	str	r3, [r7, #8]
 80044fc:	68bb      	ldr	r3, [r7, #8]
 80044fe:	f44f 7380 	mov.w	r3, #256	; 0x100
 8004502:	60fb      	str	r3, [r7, #12]
 8004504:	2302      	movs	r3, #2
 8004506:	613b      	str	r3, [r7, #16]
 8004508:	2300      	movs	r3, #0
 800450a:	617b      	str	r3, [r7, #20]
 800450c:	2300      	movs	r3, #0
 800450e:	61bb      	str	r3, [r7, #24]
 8004510:	2301      	movs	r3, #1
 8004512:	61fb      	str	r3, [r7, #28]
 8004514:	f107 030c 	add.w	r3, r7, #12
 8004518:	4619      	mov	r1, r3
 800451a:	4805      	ldr	r0, [pc, #20]	; (8004530 <HAL_TIM_MspPostInit+0x70>)
 800451c:	f000 fc78 	bl	8004e10 <HAL_GPIO_Init>
 8004520:	bf00      	nop
 8004522:	3720      	adds	r7, #32
 8004524:	46bd      	mov	sp, r7
 8004526:	bd80      	pop	{r7, pc}
 8004528:	40010000 	.word	0x40010000
 800452c:	40023800 	.word	0x40023800
 8004530:	40020000 	.word	0x40020000

08004534 <HAL_UART_MspInit>:
 8004534:	b580      	push	{r7, lr}
 8004536:	b08e      	sub	sp, #56	; 0x38
 8004538:	af00      	add	r7, sp, #0
 800453a:	6078      	str	r0, [r7, #4]
 800453c:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8004540:	2200      	movs	r2, #0
 8004542:	601a      	str	r2, [r3, #0]
 8004544:	605a      	str	r2, [r3, #4]
 8004546:	609a      	str	r2, [r3, #8]
 8004548:	60da      	str	r2, [r3, #12]
 800454a:	611a      	str	r2, [r3, #16]
 800454c:	687b      	ldr	r3, [r7, #4]
 800454e:	681b      	ldr	r3, [r3, #0]
 8004550:	4a67      	ldr	r2, [pc, #412]	; (80046f0 <HAL_UART_MspInit+0x1bc>)
 8004552:	4293      	cmp	r3, r2
 8004554:	d135      	bne.n	80045c2 <HAL_UART_MspInit+0x8e>
 8004556:	2300      	movs	r3, #0
 8004558:	623b      	str	r3, [r7, #32]
 800455a:	4b66      	ldr	r3, [pc, #408]	; (80046f4 <HAL_UART_MspInit+0x1c0>)
 800455c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800455e:	4a65      	ldr	r2, [pc, #404]	; (80046f4 <HAL_UART_MspInit+0x1c0>)
 8004560:	f043 0310 	orr.w	r3, r3, #16
 8004564:	6453      	str	r3, [r2, #68]	; 0x44
 8004566:	4b63      	ldr	r3, [pc, #396]	; (80046f4 <HAL_UART_MspInit+0x1c0>)
 8004568:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800456a:	f003 0310 	and.w	r3, r3, #16
 800456e:	623b      	str	r3, [r7, #32]
 8004570:	6a3b      	ldr	r3, [r7, #32]
 8004572:	2300      	movs	r3, #0
 8004574:	61fb      	str	r3, [r7, #28]
 8004576:	4b5f      	ldr	r3, [pc, #380]	; (80046f4 <HAL_UART_MspInit+0x1c0>)
 8004578:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800457a:	4a5e      	ldr	r2, [pc, #376]	; (80046f4 <HAL_UART_MspInit+0x1c0>)
 800457c:	f043 0301 	orr.w	r3, r3, #1
 8004580:	6313      	str	r3, [r2, #48]	; 0x30
 8004582:	4b5c      	ldr	r3, [pc, #368]	; (80046f4 <HAL_UART_MspInit+0x1c0>)
 8004584:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004586:	f003 0301 	and.w	r3, r3, #1
 800458a:	61fb      	str	r3, [r7, #28]
 800458c:	69fb      	ldr	r3, [r7, #28]
 800458e:	f44f 4304 	mov.w	r3, #33792	; 0x8400
 8004592:	627b      	str	r3, [r7, #36]	; 0x24
 8004594:	2302      	movs	r3, #2
 8004596:	62bb      	str	r3, [r7, #40]	; 0x28
 8004598:	2300      	movs	r3, #0
 800459a:	62fb      	str	r3, [r7, #44]	; 0x2c
 800459c:	2303      	movs	r3, #3
 800459e:	633b      	str	r3, [r7, #48]	; 0x30
 80045a0:	2307      	movs	r3, #7
 80045a2:	637b      	str	r3, [r7, #52]	; 0x34
 80045a4:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80045a8:	4619      	mov	r1, r3
 80045aa:	4853      	ldr	r0, [pc, #332]	; (80046f8 <HAL_UART_MspInit+0x1c4>)
 80045ac:	f000 fc30 	bl	8004e10 <HAL_GPIO_Init>
 80045b0:	2200      	movs	r2, #0
 80045b2:	2100      	movs	r1, #0
 80045b4:	2025      	movs	r0, #37	; 0x25
 80045b6:	f000 fb62 	bl	8004c7e <HAL_NVIC_SetPriority>
 80045ba:	2025      	movs	r0, #37	; 0x25
 80045bc:	f000 fb7b 	bl	8004cb6 <HAL_NVIC_EnableIRQ>
 80045c0:	e091      	b.n	80046e6 <HAL_UART_MspInit+0x1b2>
 80045c2:	687b      	ldr	r3, [r7, #4]
 80045c4:	681b      	ldr	r3, [r3, #0]
 80045c6:	4a4d      	ldr	r2, [pc, #308]	; (80046fc <HAL_UART_MspInit+0x1c8>)
 80045c8:	4293      	cmp	r3, r2
 80045ca:	d134      	bne.n	8004636 <HAL_UART_MspInit+0x102>
 80045cc:	2300      	movs	r3, #0
 80045ce:	61bb      	str	r3, [r7, #24]
 80045d0:	4b48      	ldr	r3, [pc, #288]	; (80046f4 <HAL_UART_MspInit+0x1c0>)
 80045d2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80045d4:	4a47      	ldr	r2, [pc, #284]	; (80046f4 <HAL_UART_MspInit+0x1c0>)
 80045d6:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80045da:	6413      	str	r3, [r2, #64]	; 0x40
 80045dc:	4b45      	ldr	r3, [pc, #276]	; (80046f4 <HAL_UART_MspInit+0x1c0>)
 80045de:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80045e0:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80045e4:	61bb      	str	r3, [r7, #24]
 80045e6:	69bb      	ldr	r3, [r7, #24]
 80045e8:	2300      	movs	r3, #0
 80045ea:	617b      	str	r3, [r7, #20]
 80045ec:	4b41      	ldr	r3, [pc, #260]	; (80046f4 <HAL_UART_MspInit+0x1c0>)
 80045ee:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80045f0:	4a40      	ldr	r2, [pc, #256]	; (80046f4 <HAL_UART_MspInit+0x1c0>)
 80045f2:	f043 0301 	orr.w	r3, r3, #1
 80045f6:	6313      	str	r3, [r2, #48]	; 0x30
 80045f8:	4b3e      	ldr	r3, [pc, #248]	; (80046f4 <HAL_UART_MspInit+0x1c0>)
 80045fa:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80045fc:	f003 0301 	and.w	r3, r3, #1
 8004600:	617b      	str	r3, [r7, #20]
 8004602:	697b      	ldr	r3, [r7, #20]
 8004604:	230c      	movs	r3, #12
 8004606:	627b      	str	r3, [r7, #36]	; 0x24
 8004608:	2302      	movs	r3, #2
 800460a:	62bb      	str	r3, [r7, #40]	; 0x28
 800460c:	2300      	movs	r3, #0
 800460e:	62fb      	str	r3, [r7, #44]	; 0x2c
 8004610:	2303      	movs	r3, #3
 8004612:	633b      	str	r3, [r7, #48]	; 0x30
 8004614:	2307      	movs	r3, #7
 8004616:	637b      	str	r3, [r7, #52]	; 0x34
 8004618:	f107 0324 	add.w	r3, r7, #36	; 0x24
 800461c:	4619      	mov	r1, r3
 800461e:	4836      	ldr	r0, [pc, #216]	; (80046f8 <HAL_UART_MspInit+0x1c4>)
 8004620:	f000 fbf6 	bl	8004e10 <HAL_GPIO_Init>
 8004624:	2200      	movs	r2, #0
 8004626:	2100      	movs	r1, #0
 8004628:	2026      	movs	r0, #38	; 0x26
 800462a:	f000 fb28 	bl	8004c7e <HAL_NVIC_SetPriority>
 800462e:	2026      	movs	r0, #38	; 0x26
 8004630:	f000 fb41 	bl	8004cb6 <HAL_NVIC_EnableIRQ>
 8004634:	e057      	b.n	80046e6 <HAL_UART_MspInit+0x1b2>
 8004636:	687b      	ldr	r3, [r7, #4]
 8004638:	681b      	ldr	r3, [r3, #0]
 800463a:	4a31      	ldr	r2, [pc, #196]	; (8004700 <HAL_UART_MspInit+0x1cc>)
 800463c:	4293      	cmp	r3, r2
 800463e:	d152      	bne.n	80046e6 <HAL_UART_MspInit+0x1b2>
 8004640:	2300      	movs	r3, #0
 8004642:	613b      	str	r3, [r7, #16]
 8004644:	4b2b      	ldr	r3, [pc, #172]	; (80046f4 <HAL_UART_MspInit+0x1c0>)
 8004646:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8004648:	4a2a      	ldr	r2, [pc, #168]	; (80046f4 <HAL_UART_MspInit+0x1c0>)
 800464a:	f043 0320 	orr.w	r3, r3, #32
 800464e:	6453      	str	r3, [r2, #68]	; 0x44
 8004650:	4b28      	ldr	r3, [pc, #160]	; (80046f4 <HAL_UART_MspInit+0x1c0>)
 8004652:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8004654:	f003 0320 	and.w	r3, r3, #32
 8004658:	613b      	str	r3, [r7, #16]
 800465a:	693b      	ldr	r3, [r7, #16]
 800465c:	2300      	movs	r3, #0
 800465e:	60fb      	str	r3, [r7, #12]
 8004660:	4b24      	ldr	r3, [pc, #144]	; (80046f4 <HAL_UART_MspInit+0x1c0>)
 8004662:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004664:	4a23      	ldr	r2, [pc, #140]	; (80046f4 <HAL_UART_MspInit+0x1c0>)
 8004666:	f043 0304 	orr.w	r3, r3, #4
 800466a:	6313      	str	r3, [r2, #48]	; 0x30
 800466c:	4b21      	ldr	r3, [pc, #132]	; (80046f4 <HAL_UART_MspInit+0x1c0>)
 800466e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004670:	f003 0304 	and.w	r3, r3, #4
 8004674:	60fb      	str	r3, [r7, #12]
 8004676:	68fb      	ldr	r3, [r7, #12]
 8004678:	2300      	movs	r3, #0
 800467a:	60bb      	str	r3, [r7, #8]
 800467c:	4b1d      	ldr	r3, [pc, #116]	; (80046f4 <HAL_UART_MspInit+0x1c0>)
 800467e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8004680:	4a1c      	ldr	r2, [pc, #112]	; (80046f4 <HAL_UART_MspInit+0x1c0>)
 8004682:	f043 0301 	orr.w	r3, r3, #1
 8004686:	6313      	str	r3, [r2, #48]	; 0x30
 8004688:	4b1a      	ldr	r3, [pc, #104]	; (80046f4 <HAL_UART_MspInit+0x1c0>)
 800468a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800468c:	f003 0301 	and.w	r3, r3, #1
 8004690:	60bb      	str	r3, [r7, #8]
 8004692:	68bb      	ldr	r3, [r7, #8]
 8004694:	2340      	movs	r3, #64	; 0x40
 8004696:	627b      	str	r3, [r7, #36]	; 0x24
 8004698:	2302      	movs	r3, #2
 800469a:	62bb      	str	r3, [r7, #40]	; 0x28
 800469c:	2300      	movs	r3, #0
 800469e:	62fb      	str	r3, [r7, #44]	; 0x2c
 80046a0:	2303      	movs	r3, #3
 80046a2:	633b      	str	r3, [r7, #48]	; 0x30
 80046a4:	2308      	movs	r3, #8
 80046a6:	637b      	str	r3, [r7, #52]	; 0x34
 80046a8:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80046ac:	4619      	mov	r1, r3
 80046ae:	4815      	ldr	r0, [pc, #84]	; (8004704 <HAL_UART_MspInit+0x1d0>)
 80046b0:	f000 fbae 	bl	8004e10 <HAL_GPIO_Init>
 80046b4:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80046b8:	627b      	str	r3, [r7, #36]	; 0x24
 80046ba:	2302      	movs	r3, #2
 80046bc:	62bb      	str	r3, [r7, #40]	; 0x28
 80046be:	2300      	movs	r3, #0
 80046c0:	62fb      	str	r3, [r7, #44]	; 0x2c
 80046c2:	2303      	movs	r3, #3
 80046c4:	633b      	str	r3, [r7, #48]	; 0x30
 80046c6:	2308      	movs	r3, #8
 80046c8:	637b      	str	r3, [r7, #52]	; 0x34
 80046ca:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80046ce:	4619      	mov	r1, r3
 80046d0:	4809      	ldr	r0, [pc, #36]	; (80046f8 <HAL_UART_MspInit+0x1c4>)
 80046d2:	f000 fb9d 	bl	8004e10 <HAL_GPIO_Init>
 80046d6:	2200      	movs	r2, #0
 80046d8:	2100      	movs	r1, #0
 80046da:	2047      	movs	r0, #71	; 0x47
 80046dc:	f000 facf 	bl	8004c7e <HAL_NVIC_SetPriority>
 80046e0:	2047      	movs	r0, #71	; 0x47
 80046e2:	f000 fae8 	bl	8004cb6 <HAL_NVIC_EnableIRQ>
 80046e6:	bf00      	nop
 80046e8:	3738      	adds	r7, #56	; 0x38
 80046ea:	46bd      	mov	sp, r7
 80046ec:	bd80      	pop	{r7, pc}
 80046ee:	bf00      	nop
 80046f0:	40011000 	.word	0x40011000
 80046f4:	40023800 	.word	0x40023800
 80046f8:	40020000 	.word	0x40020000
 80046fc:	40004400 	.word	0x40004400
 8004700:	40011400 	.word	0x40011400
 8004704:	40020800 	.word	0x40020800

08004708 <NMI_Handler>:
 8004708:	b480      	push	{r7}
 800470a:	af00      	add	r7, sp, #0
 800470c:	e7fe      	b.n	800470c <NMI_Handler+0x4>

0800470e <HardFault_Handler>:
 800470e:	b480      	push	{r7}
 8004710:	af00      	add	r7, sp, #0
 8004712:	e7fe      	b.n	8004712 <HardFault_Handler+0x4>

08004714 <MemManage_Handler>:
 8004714:	b480      	push	{r7}
 8004716:	af00      	add	r7, sp, #0
 8004718:	e7fe      	b.n	8004718 <MemManage_Handler+0x4>

0800471a <BusFault_Handler>:
 800471a:	b480      	push	{r7}
 800471c:	af00      	add	r7, sp, #0
 800471e:	e7fe      	b.n	800471e <BusFault_Handler+0x4>

08004720 <UsageFault_Handler>:
 8004720:	b480      	push	{r7}
 8004722:	af00      	add	r7, sp, #0
 8004724:	e7fe      	b.n	8004724 <UsageFault_Handler+0x4>

08004726 <SVC_Handler>:
 8004726:	b480      	push	{r7}
 8004728:	af00      	add	r7, sp, #0
 800472a:	bf00      	nop
 800472c:	46bd      	mov	sp, r7
 800472e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004732:	4770      	bx	lr

08004734 <DebugMon_Handler>:
 8004734:	b480      	push	{r7}
 8004736:	af00      	add	r7, sp, #0
 8004738:	bf00      	nop
 800473a:	46bd      	mov	sp, r7
 800473c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004740:	4770      	bx	lr

08004742 <PendSV_Handler>:
 8004742:	b480      	push	{r7}
 8004744:	af00      	add	r7, sp, #0
 8004746:	bf00      	nop
 8004748:	46bd      	mov	sp, r7
 800474a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800474e:	4770      	bx	lr

08004750 <SysTick_Handler>:
 8004750:	b580      	push	{r7, lr}
 8004752:	af00      	add	r7, sp, #0
 8004754:	f000 f974 	bl	8004a40 <HAL_IncTick>
 8004758:	bf00      	nop
 800475a:	bd80      	pop	{r7, pc}

0800475c <USART1_IRQHandler>:
 800475c:	b580      	push	{r7, lr}
 800475e:	af00      	add	r7, sp, #0
 8004760:	4802      	ldr	r0, [pc, #8]	; (800476c <USART1_IRQHandler+0x10>)
 8004762:	f002 ff15 	bl	8007590 <HAL_UART_IRQHandler>
 8004766:	bf00      	nop
 8004768:	bd80      	pop	{r7, pc}
 800476a:	bf00      	nop
 800476c:	2000046c 	.word	0x2000046c

08004770 <USART2_IRQHandler>:
 8004770:	b580      	push	{r7, lr}
 8004772:	af00      	add	r7, sp, #0
 8004774:	4802      	ldr	r0, [pc, #8]	; (8004780 <USART2_IRQHandler+0x10>)
 8004776:	f002 ff0b 	bl	8007590 <HAL_UART_IRQHandler>
 800477a:	bf00      	nop
 800477c:	bd80      	pop	{r7, pc}
 800477e:	bf00      	nop
 8004780:	200004b0 	.word	0x200004b0

08004784 <USART6_IRQHandler>:
 8004784:	b580      	push	{r7, lr}
 8004786:	af00      	add	r7, sp, #0
 8004788:	4802      	ldr	r0, [pc, #8]	; (8004794 <USART6_IRQHandler+0x10>)
 800478a:	f002 ff01 	bl	8007590 <HAL_UART_IRQHandler>
 800478e:	bf00      	nop
 8004790:	bd80      	pop	{r7, pc}
 8004792:	bf00      	nop
 8004794:	200004f4 	.word	0x200004f4

08004798 <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 8004798:	b480      	push	{r7}
 800479a:	af00      	add	r7, sp, #0
  return 1;
 800479c:	2301      	movs	r3, #1
}
 800479e:	4618      	mov	r0, r3
 80047a0:	46bd      	mov	sp, r7
 80047a2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80047a6:	4770      	bx	lr

080047a8 <_kill>:

int _kill(int pid, int sig)
{
 80047a8:	b580      	push	{r7, lr}
 80047aa:	b082      	sub	sp, #8
 80047ac:	af00      	add	r7, sp, #0
 80047ae:	6078      	str	r0, [r7, #4]
 80047b0:	6039      	str	r1, [r7, #0]
  (void)pid;
  (void)sig;
  errno = EINVAL;
 80047b2:	f005 fd7b 	bl	800a2ac <__errno>
 80047b6:	4603      	mov	r3, r0
 80047b8:	2216      	movs	r2, #22
 80047ba:	601a      	str	r2, [r3, #0]
  return -1;
 80047bc:	f04f 33ff 	mov.w	r3, #4294967295
}
 80047c0:	4618      	mov	r0, r3
 80047c2:	3708      	adds	r7, #8
 80047c4:	46bd      	mov	sp, r7
 80047c6:	bd80      	pop	{r7, pc}

080047c8 <_exit>:

void _exit (int status)
{
 80047c8:	b580      	push	{r7, lr}
 80047ca:	b082      	sub	sp, #8
 80047cc:	af00      	add	r7, sp, #0
 80047ce:	6078      	str	r0, [r7, #4]
  _kill(status, -1);
 80047d0:	f04f 31ff 	mov.w	r1, #4294967295
 80047d4:	6878      	ldr	r0, [r7, #4]
 80047d6:	f7ff ffe7 	bl	80047a8 <_kill>
  while (1) {}    /* Make sure we hang here */
 80047da:	e7fe      	b.n	80047da <_exit+0x12>

080047dc <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 80047dc:	b580      	push	{r7, lr}
 80047de:	b086      	sub	sp, #24
 80047e0:	af00      	add	r7, sp, #0
 80047e2:	60f8      	str	r0, [r7, #12]
 80047e4:	60b9      	str	r1, [r7, #8]
 80047e6:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80047e8:	2300      	movs	r3, #0
 80047ea:	617b      	str	r3, [r7, #20]
 80047ec:	e00a      	b.n	8004804 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 80047ee:	f3af 8000 	nop.w
 80047f2:	4601      	mov	r1, r0
 80047f4:	68bb      	ldr	r3, [r7, #8]
 80047f6:	1c5a      	adds	r2, r3, #1
 80047f8:	60ba      	str	r2, [r7, #8]
 80047fa:	b2ca      	uxtb	r2, r1
 80047fc:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 80047fe:	697b      	ldr	r3, [r7, #20]
 8004800:	3301      	adds	r3, #1
 8004802:	617b      	str	r3, [r7, #20]
 8004804:	697a      	ldr	r2, [r7, #20]
 8004806:	687b      	ldr	r3, [r7, #4]
 8004808:	429a      	cmp	r2, r3
 800480a:	dbf0      	blt.n	80047ee <_read+0x12>
  }

  return len;
 800480c:	687b      	ldr	r3, [r7, #4]
}
 800480e:	4618      	mov	r0, r3
 8004810:	3718      	adds	r7, #24
 8004812:	46bd      	mov	sp, r7
 8004814:	bd80      	pop	{r7, pc}

08004816 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8004816:	b580      	push	{r7, lr}
 8004818:	b086      	sub	sp, #24
 800481a:	af00      	add	r7, sp, #0
 800481c:	60f8      	str	r0, [r7, #12]
 800481e:	60b9      	str	r1, [r7, #8]
 8004820:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8004822:	2300      	movs	r3, #0
 8004824:	617b      	str	r3, [r7, #20]
 8004826:	e009      	b.n	800483c <_write+0x26>
  {
    __io_putchar(*ptr++);
 8004828:	68bb      	ldr	r3, [r7, #8]
 800482a:	1c5a      	adds	r2, r3, #1
 800482c:	60ba      	str	r2, [r7, #8]
 800482e:	781b      	ldrb	r3, [r3, #0]
 8004830:	4618      	mov	r0, r3
 8004832:	f3af 8000 	nop.w
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8004836:	697b      	ldr	r3, [r7, #20]
 8004838:	3301      	adds	r3, #1
 800483a:	617b      	str	r3, [r7, #20]
 800483c:	697a      	ldr	r2, [r7, #20]
 800483e:	687b      	ldr	r3, [r7, #4]
 8004840:	429a      	cmp	r2, r3
 8004842:	dbf1      	blt.n	8004828 <_write+0x12>
  }
  return len;
 8004844:	687b      	ldr	r3, [r7, #4]
}
 8004846:	4618      	mov	r0, r3
 8004848:	3718      	adds	r7, #24
 800484a:	46bd      	mov	sp, r7
 800484c:	bd80      	pop	{r7, pc}

0800484e <_close>:

int _close(int file)
{
 800484e:	b480      	push	{r7}
 8004850:	b083      	sub	sp, #12
 8004852:	af00      	add	r7, sp, #0
 8004854:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 8004856:	f04f 33ff 	mov.w	r3, #4294967295
}
 800485a:	4618      	mov	r0, r3
 800485c:	370c      	adds	r7, #12
 800485e:	46bd      	mov	sp, r7
 8004860:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004864:	4770      	bx	lr

08004866 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8004866:	b480      	push	{r7}
 8004868:	b083      	sub	sp, #12
 800486a:	af00      	add	r7, sp, #0
 800486c:	6078      	str	r0, [r7, #4]
 800486e:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 8004870:	683b      	ldr	r3, [r7, #0]
 8004872:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8004876:	605a      	str	r2, [r3, #4]
  return 0;
 8004878:	2300      	movs	r3, #0
}
 800487a:	4618      	mov	r0, r3
 800487c:	370c      	adds	r7, #12
 800487e:	46bd      	mov	sp, r7
 8004880:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004884:	4770      	bx	lr

08004886 <_isatty>:

int _isatty(int file)
{
 8004886:	b480      	push	{r7}
 8004888:	b083      	sub	sp, #12
 800488a:	af00      	add	r7, sp, #0
 800488c:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 800488e:	2301      	movs	r3, #1
}
 8004890:	4618      	mov	r0, r3
 8004892:	370c      	adds	r7, #12
 8004894:	46bd      	mov	sp, r7
 8004896:	f85d 7b04 	ldr.w	r7, [sp], #4
 800489a:	4770      	bx	lr

0800489c <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 800489c:	b480      	push	{r7}
 800489e:	b085      	sub	sp, #20
 80048a0:	af00      	add	r7, sp, #0
 80048a2:	60f8      	str	r0, [r7, #12]
 80048a4:	60b9      	str	r1, [r7, #8]
 80048a6:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 80048a8:	2300      	movs	r3, #0
}
 80048aa:	4618      	mov	r0, r3
 80048ac:	3714      	adds	r7, #20
 80048ae:	46bd      	mov	sp, r7
 80048b0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80048b4:	4770      	bx	lr
	...

080048b8 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80048b8:	b580      	push	{r7, lr}
 80048ba:	b086      	sub	sp, #24
 80048bc:	af00      	add	r7, sp, #0
 80048be:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80048c0:	4a14      	ldr	r2, [pc, #80]	; (8004914 <_sbrk+0x5c>)
 80048c2:	4b15      	ldr	r3, [pc, #84]	; (8004918 <_sbrk+0x60>)
 80048c4:	1ad3      	subs	r3, r2, r3
 80048c6:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80048c8:	697b      	ldr	r3, [r7, #20]
 80048ca:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80048cc:	4b13      	ldr	r3, [pc, #76]	; (800491c <_sbrk+0x64>)
 80048ce:	681b      	ldr	r3, [r3, #0]
 80048d0:	2b00      	cmp	r3, #0
 80048d2:	d102      	bne.n	80048da <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 80048d4:	4b11      	ldr	r3, [pc, #68]	; (800491c <_sbrk+0x64>)
 80048d6:	4a12      	ldr	r2, [pc, #72]	; (8004920 <_sbrk+0x68>)
 80048d8:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 80048da:	4b10      	ldr	r3, [pc, #64]	; (800491c <_sbrk+0x64>)
 80048dc:	681a      	ldr	r2, [r3, #0]
 80048de:	687b      	ldr	r3, [r7, #4]
 80048e0:	4413      	add	r3, r2
 80048e2:	693a      	ldr	r2, [r7, #16]
 80048e4:	429a      	cmp	r2, r3
 80048e6:	d207      	bcs.n	80048f8 <_sbrk+0x40>
  {
    errno = ENOMEM;
 80048e8:	f005 fce0 	bl	800a2ac <__errno>
 80048ec:	4603      	mov	r3, r0
 80048ee:	220c      	movs	r2, #12
 80048f0:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 80048f2:	f04f 33ff 	mov.w	r3, #4294967295
 80048f6:	e009      	b.n	800490c <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 80048f8:	4b08      	ldr	r3, [pc, #32]	; (800491c <_sbrk+0x64>)
 80048fa:	681b      	ldr	r3, [r3, #0]
 80048fc:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 80048fe:	4b07      	ldr	r3, [pc, #28]	; (800491c <_sbrk+0x64>)
 8004900:	681a      	ldr	r2, [r3, #0]
 8004902:	687b      	ldr	r3, [r7, #4]
 8004904:	4413      	add	r3, r2
 8004906:	4a05      	ldr	r2, [pc, #20]	; (800491c <_sbrk+0x64>)
 8004908:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 800490a:	68fb      	ldr	r3, [r7, #12]
}
 800490c:	4618      	mov	r0, r3
 800490e:	3718      	adds	r7, #24
 8004910:	46bd      	mov	sp, r7
 8004912:	bd80      	pop	{r7, pc}
 8004914:	20020000 	.word	0x20020000
 8004918:	00000400 	.word	0x00000400
 800491c:	2000075c 	.word	0x2000075c
 8004920:	200008b0 	.word	0x200008b0

08004924 <SystemInit>:
 8004924:	b480      	push	{r7}
 8004926:	af00      	add	r7, sp, #0
 8004928:	4b06      	ldr	r3, [pc, #24]	; (8004944 <SystemInit+0x20>)
 800492a:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800492e:	4a05      	ldr	r2, [pc, #20]	; (8004944 <SystemInit+0x20>)
 8004930:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8004934:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
 8004938:	bf00      	nop
 800493a:	46bd      	mov	sp, r7
 800493c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004940:	4770      	bx	lr
 8004942:	bf00      	nop
 8004944:	e000ed00 	.word	0xe000ed00

08004948 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack    		 /* set stack pointer */
 8004948:	f8df d034 	ldr.w	sp, [pc, #52]	; 8004980 <LoopFillZerobss+0x12>

/* Copy the data segment initializers from flash to SRAM */  
  ldr r0, =_sdata
 800494c:	480d      	ldr	r0, [pc, #52]	; (8004984 <LoopFillZerobss+0x16>)
  ldr r1, =_edata
 800494e:	490e      	ldr	r1, [pc, #56]	; (8004988 <LoopFillZerobss+0x1a>)
  ldr r2, =_sidata
 8004950:	4a0e      	ldr	r2, [pc, #56]	; (800498c <LoopFillZerobss+0x1e>)
  movs r3, #0
 8004952:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8004954:	e002      	b.n	800495c <LoopCopyDataInit>

08004956 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8004956:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8004958:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800495a:	3304      	adds	r3, #4

0800495c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 800495c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800495e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8004960:	d3f9      	bcc.n	8004956 <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8004962:	4a0b      	ldr	r2, [pc, #44]	; (8004990 <LoopFillZerobss+0x22>)
  ldr r4, =_ebss
 8004964:	4c0b      	ldr	r4, [pc, #44]	; (8004994 <LoopFillZerobss+0x26>)
  movs r3, #0
 8004966:	2300      	movs	r3, #0
  b LoopFillZerobss
 8004968:	e001      	b.n	800496e <LoopFillZerobss>

0800496a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800496a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 800496c:	3204      	adds	r2, #4

0800496e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800496e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8004970:	d3fb      	bcc.n	800496a <FillZerobss>

/* Call the clock system initialization function.*/
  bl  SystemInit   
 8004972:	f7ff ffd7 	bl	8004924 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 8004976:	f005 fc9f 	bl	800a2b8 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 800497a:	f7ff f811 	bl	80039a0 <main>
  bx  lr    
 800497e:	4770      	bx	lr
  ldr   sp, =_estack    		 /* set stack pointer */
 8004980:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8004984:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8004988:	20000240 	.word	0x20000240
  ldr r2, =_sidata
 800498c:	0800d79c 	.word	0x0800d79c
  ldr r2, =_sbss
 8004990:	20000240 	.word	0x20000240
  ldr r4, =_ebss
 8004994:	200008b0 	.word	0x200008b0

08004998 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 8004998:	e7fe      	b.n	8004998 <ADC_IRQHandler>
	...

0800499c <HAL_Init>:
 800499c:	b580      	push	{r7, lr}
 800499e:	af00      	add	r7, sp, #0
 80049a0:	4b0e      	ldr	r3, [pc, #56]	; (80049dc <HAL_Init+0x40>)
 80049a2:	681b      	ldr	r3, [r3, #0]
 80049a4:	4a0d      	ldr	r2, [pc, #52]	; (80049dc <HAL_Init+0x40>)
 80049a6:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 80049aa:	6013      	str	r3, [r2, #0]
 80049ac:	4b0b      	ldr	r3, [pc, #44]	; (80049dc <HAL_Init+0x40>)
 80049ae:	681b      	ldr	r3, [r3, #0]
 80049b0:	4a0a      	ldr	r2, [pc, #40]	; (80049dc <HAL_Init+0x40>)
 80049b2:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 80049b6:	6013      	str	r3, [r2, #0]
 80049b8:	4b08      	ldr	r3, [pc, #32]	; (80049dc <HAL_Init+0x40>)
 80049ba:	681b      	ldr	r3, [r3, #0]
 80049bc:	4a07      	ldr	r2, [pc, #28]	; (80049dc <HAL_Init+0x40>)
 80049be:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80049c2:	6013      	str	r3, [r2, #0]
 80049c4:	2003      	movs	r0, #3
 80049c6:	f000 f94f 	bl	8004c68 <HAL_NVIC_SetPriorityGrouping>
 80049ca:	2000      	movs	r0, #0
 80049cc:	f000 f808 	bl	80049e0 <HAL_InitTick>
 80049d0:	f7ff fc70 	bl	80042b4 <HAL_MspInit>
 80049d4:	2300      	movs	r3, #0
 80049d6:	4618      	mov	r0, r3
 80049d8:	bd80      	pop	{r7, pc}
 80049da:	bf00      	nop
 80049dc:	40023c00 	.word	0x40023c00

080049e0 <HAL_InitTick>:
 80049e0:	b580      	push	{r7, lr}
 80049e2:	b082      	sub	sp, #8
 80049e4:	af00      	add	r7, sp, #0
 80049e6:	6078      	str	r0, [r7, #4]
 80049e8:	4b12      	ldr	r3, [pc, #72]	; (8004a34 <HAL_InitTick+0x54>)
 80049ea:	681a      	ldr	r2, [r3, #0]
 80049ec:	4b12      	ldr	r3, [pc, #72]	; (8004a38 <HAL_InitTick+0x58>)
 80049ee:	781b      	ldrb	r3, [r3, #0]
 80049f0:	4619      	mov	r1, r3
 80049f2:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 80049f6:	fbb3 f3f1 	udiv	r3, r3, r1
 80049fa:	fbb2 f3f3 	udiv	r3, r2, r3
 80049fe:	4618      	mov	r0, r3
 8004a00:	f000 f967 	bl	8004cd2 <HAL_SYSTICK_Config>
 8004a04:	4603      	mov	r3, r0
 8004a06:	2b00      	cmp	r3, #0
 8004a08:	d001      	beq.n	8004a0e <HAL_InitTick+0x2e>
 8004a0a:	2301      	movs	r3, #1
 8004a0c:	e00e      	b.n	8004a2c <HAL_InitTick+0x4c>
 8004a0e:	687b      	ldr	r3, [r7, #4]
 8004a10:	2b0f      	cmp	r3, #15
 8004a12:	d80a      	bhi.n	8004a2a <HAL_InitTick+0x4a>
 8004a14:	2200      	movs	r2, #0
 8004a16:	6879      	ldr	r1, [r7, #4]
 8004a18:	f04f 30ff 	mov.w	r0, #4294967295
 8004a1c:	f000 f92f 	bl	8004c7e <HAL_NVIC_SetPriority>
 8004a20:	4a06      	ldr	r2, [pc, #24]	; (8004a3c <HAL_InitTick+0x5c>)
 8004a22:	687b      	ldr	r3, [r7, #4]
 8004a24:	6013      	str	r3, [r2, #0]
 8004a26:	2300      	movs	r3, #0
 8004a28:	e000      	b.n	8004a2c <HAL_InitTick+0x4c>
 8004a2a:	2301      	movs	r3, #1
 8004a2c:	4618      	mov	r0, r3
 8004a2e:	3708      	adds	r7, #8
 8004a30:	46bd      	mov	sp, r7
 8004a32:	bd80      	pop	{r7, pc}
 8004a34:	2000006c 	.word	0x2000006c
 8004a38:	20000074 	.word	0x20000074
 8004a3c:	20000070 	.word	0x20000070

08004a40 <HAL_IncTick>:
 8004a40:	b480      	push	{r7}
 8004a42:	af00      	add	r7, sp, #0
 8004a44:	4b06      	ldr	r3, [pc, #24]	; (8004a60 <HAL_IncTick+0x20>)
 8004a46:	781b      	ldrb	r3, [r3, #0]
 8004a48:	461a      	mov	r2, r3
 8004a4a:	4b06      	ldr	r3, [pc, #24]	; (8004a64 <HAL_IncTick+0x24>)
 8004a4c:	681b      	ldr	r3, [r3, #0]
 8004a4e:	4413      	add	r3, r2
 8004a50:	4a04      	ldr	r2, [pc, #16]	; (8004a64 <HAL_IncTick+0x24>)
 8004a52:	6013      	str	r3, [r2, #0]
 8004a54:	bf00      	nop
 8004a56:	46bd      	mov	sp, r7
 8004a58:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004a5c:	4770      	bx	lr
 8004a5e:	bf00      	nop
 8004a60:	20000074 	.word	0x20000074
 8004a64:	20000760 	.word	0x20000760

08004a68 <HAL_GetTick>:
 8004a68:	b480      	push	{r7}
 8004a6a:	af00      	add	r7, sp, #0
 8004a6c:	4b03      	ldr	r3, [pc, #12]	; (8004a7c <HAL_GetTick+0x14>)
 8004a6e:	681b      	ldr	r3, [r3, #0]
 8004a70:	4618      	mov	r0, r3
 8004a72:	46bd      	mov	sp, r7
 8004a74:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004a78:	4770      	bx	lr
 8004a7a:	bf00      	nop
 8004a7c:	20000760 	.word	0x20000760

08004a80 <HAL_Delay>:
 8004a80:	b580      	push	{r7, lr}
 8004a82:	b084      	sub	sp, #16
 8004a84:	af00      	add	r7, sp, #0
 8004a86:	6078      	str	r0, [r7, #4]
 8004a88:	f7ff ffee 	bl	8004a68 <HAL_GetTick>
 8004a8c:	60b8      	str	r0, [r7, #8]
 8004a8e:	687b      	ldr	r3, [r7, #4]
 8004a90:	60fb      	str	r3, [r7, #12]
 8004a92:	68fb      	ldr	r3, [r7, #12]
 8004a94:	f1b3 3fff 	cmp.w	r3, #4294967295
 8004a98:	d005      	beq.n	8004aa6 <HAL_Delay+0x26>
 8004a9a:	4b0a      	ldr	r3, [pc, #40]	; (8004ac4 <HAL_Delay+0x44>)
 8004a9c:	781b      	ldrb	r3, [r3, #0]
 8004a9e:	461a      	mov	r2, r3
 8004aa0:	68fb      	ldr	r3, [r7, #12]
 8004aa2:	4413      	add	r3, r2
 8004aa4:	60fb      	str	r3, [r7, #12]
 8004aa6:	bf00      	nop
 8004aa8:	f7ff ffde 	bl	8004a68 <HAL_GetTick>
 8004aac:	4602      	mov	r2, r0
 8004aae:	68bb      	ldr	r3, [r7, #8]
 8004ab0:	1ad3      	subs	r3, r2, r3
 8004ab2:	68fa      	ldr	r2, [r7, #12]
 8004ab4:	429a      	cmp	r2, r3
 8004ab6:	d8f7      	bhi.n	8004aa8 <HAL_Delay+0x28>
 8004ab8:	bf00      	nop
 8004aba:	bf00      	nop
 8004abc:	3710      	adds	r7, #16
 8004abe:	46bd      	mov	sp, r7
 8004ac0:	bd80      	pop	{r7, pc}
 8004ac2:	bf00      	nop
 8004ac4:	20000074 	.word	0x20000074

08004ac8 <__NVIC_SetPriorityGrouping>:
 8004ac8:	b480      	push	{r7}
 8004aca:	b085      	sub	sp, #20
 8004acc:	af00      	add	r7, sp, #0
 8004ace:	6078      	str	r0, [r7, #4]
 8004ad0:	687b      	ldr	r3, [r7, #4]
 8004ad2:	f003 0307 	and.w	r3, r3, #7
 8004ad6:	60fb      	str	r3, [r7, #12]
 8004ad8:	4b0c      	ldr	r3, [pc, #48]	; (8004b0c <__NVIC_SetPriorityGrouping+0x44>)
 8004ada:	68db      	ldr	r3, [r3, #12]
 8004adc:	60bb      	str	r3, [r7, #8]
 8004ade:	68ba      	ldr	r2, [r7, #8]
 8004ae0:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 8004ae4:	4013      	ands	r3, r2
 8004ae6:	60bb      	str	r3, [r7, #8]
 8004ae8:	68fb      	ldr	r3, [r7, #12]
 8004aea:	021a      	lsls	r2, r3, #8
 8004aec:	68bb      	ldr	r3, [r7, #8]
 8004aee:	4313      	orrs	r3, r2
 8004af0:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8004af4:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8004af8:	60bb      	str	r3, [r7, #8]
 8004afa:	4a04      	ldr	r2, [pc, #16]	; (8004b0c <__NVIC_SetPriorityGrouping+0x44>)
 8004afc:	68bb      	ldr	r3, [r7, #8]
 8004afe:	60d3      	str	r3, [r2, #12]
 8004b00:	bf00      	nop
 8004b02:	3714      	adds	r7, #20
 8004b04:	46bd      	mov	sp, r7
 8004b06:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004b0a:	4770      	bx	lr
 8004b0c:	e000ed00 	.word	0xe000ed00

08004b10 <__NVIC_GetPriorityGrouping>:
 8004b10:	b480      	push	{r7}
 8004b12:	af00      	add	r7, sp, #0
 8004b14:	4b04      	ldr	r3, [pc, #16]	; (8004b28 <__NVIC_GetPriorityGrouping+0x18>)
 8004b16:	68db      	ldr	r3, [r3, #12]
 8004b18:	0a1b      	lsrs	r3, r3, #8
 8004b1a:	f003 0307 	and.w	r3, r3, #7
 8004b1e:	4618      	mov	r0, r3
 8004b20:	46bd      	mov	sp, r7
 8004b22:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004b26:	4770      	bx	lr
 8004b28:	e000ed00 	.word	0xe000ed00

08004b2c <__NVIC_EnableIRQ>:
 8004b2c:	b480      	push	{r7}
 8004b2e:	b083      	sub	sp, #12
 8004b30:	af00      	add	r7, sp, #0
 8004b32:	4603      	mov	r3, r0
 8004b34:	71fb      	strb	r3, [r7, #7]
 8004b36:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8004b3a:	2b00      	cmp	r3, #0
 8004b3c:	db0b      	blt.n	8004b56 <__NVIC_EnableIRQ+0x2a>
 8004b3e:	79fb      	ldrb	r3, [r7, #7]
 8004b40:	f003 021f 	and.w	r2, r3, #31
 8004b44:	4907      	ldr	r1, [pc, #28]	; (8004b64 <__NVIC_EnableIRQ+0x38>)
 8004b46:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8004b4a:	095b      	lsrs	r3, r3, #5
 8004b4c:	2001      	movs	r0, #1
 8004b4e:	fa00 f202 	lsl.w	r2, r0, r2
 8004b52:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8004b56:	bf00      	nop
 8004b58:	370c      	adds	r7, #12
 8004b5a:	46bd      	mov	sp, r7
 8004b5c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004b60:	4770      	bx	lr
 8004b62:	bf00      	nop
 8004b64:	e000e100 	.word	0xe000e100

08004b68 <__NVIC_SetPriority>:
 8004b68:	b480      	push	{r7}
 8004b6a:	b083      	sub	sp, #12
 8004b6c:	af00      	add	r7, sp, #0
 8004b6e:	4603      	mov	r3, r0
 8004b70:	6039      	str	r1, [r7, #0]
 8004b72:	71fb      	strb	r3, [r7, #7]
 8004b74:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8004b78:	2b00      	cmp	r3, #0
 8004b7a:	db0a      	blt.n	8004b92 <__NVIC_SetPriority+0x2a>
 8004b7c:	683b      	ldr	r3, [r7, #0]
 8004b7e:	b2da      	uxtb	r2, r3
 8004b80:	490c      	ldr	r1, [pc, #48]	; (8004bb4 <__NVIC_SetPriority+0x4c>)
 8004b82:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8004b86:	0112      	lsls	r2, r2, #4
 8004b88:	b2d2      	uxtb	r2, r2
 8004b8a:	440b      	add	r3, r1
 8004b8c:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 8004b90:	e00a      	b.n	8004ba8 <__NVIC_SetPriority+0x40>
 8004b92:	683b      	ldr	r3, [r7, #0]
 8004b94:	b2da      	uxtb	r2, r3
 8004b96:	4908      	ldr	r1, [pc, #32]	; (8004bb8 <__NVIC_SetPriority+0x50>)
 8004b98:	79fb      	ldrb	r3, [r7, #7]
 8004b9a:	f003 030f 	and.w	r3, r3, #15
 8004b9e:	3b04      	subs	r3, #4
 8004ba0:	0112      	lsls	r2, r2, #4
 8004ba2:	b2d2      	uxtb	r2, r2
 8004ba4:	440b      	add	r3, r1
 8004ba6:	761a      	strb	r2, [r3, #24]
 8004ba8:	bf00      	nop
 8004baa:	370c      	adds	r7, #12
 8004bac:	46bd      	mov	sp, r7
 8004bae:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004bb2:	4770      	bx	lr
 8004bb4:	e000e100 	.word	0xe000e100
 8004bb8:	e000ed00 	.word	0xe000ed00

08004bbc <NVIC_EncodePriority>:
 8004bbc:	b480      	push	{r7}
 8004bbe:	b089      	sub	sp, #36	; 0x24
 8004bc0:	af00      	add	r7, sp, #0
 8004bc2:	60f8      	str	r0, [r7, #12]
 8004bc4:	60b9      	str	r1, [r7, #8]
 8004bc6:	607a      	str	r2, [r7, #4]
 8004bc8:	68fb      	ldr	r3, [r7, #12]
 8004bca:	f003 0307 	and.w	r3, r3, #7
 8004bce:	61fb      	str	r3, [r7, #28]
 8004bd0:	69fb      	ldr	r3, [r7, #28]
 8004bd2:	f1c3 0307 	rsb	r3, r3, #7
 8004bd6:	2b04      	cmp	r3, #4
 8004bd8:	bf28      	it	cs
 8004bda:	2304      	movcs	r3, #4
 8004bdc:	61bb      	str	r3, [r7, #24]
 8004bde:	69fb      	ldr	r3, [r7, #28]
 8004be0:	3304      	adds	r3, #4
 8004be2:	2b06      	cmp	r3, #6
 8004be4:	d902      	bls.n	8004bec <NVIC_EncodePriority+0x30>
 8004be6:	69fb      	ldr	r3, [r7, #28]
 8004be8:	3b03      	subs	r3, #3
 8004bea:	e000      	b.n	8004bee <NVIC_EncodePriority+0x32>
 8004bec:	2300      	movs	r3, #0
 8004bee:	617b      	str	r3, [r7, #20]
 8004bf0:	f04f 32ff 	mov.w	r2, #4294967295
 8004bf4:	69bb      	ldr	r3, [r7, #24]
 8004bf6:	fa02 f303 	lsl.w	r3, r2, r3
 8004bfa:	43da      	mvns	r2, r3
 8004bfc:	68bb      	ldr	r3, [r7, #8]
 8004bfe:	401a      	ands	r2, r3
 8004c00:	697b      	ldr	r3, [r7, #20]
 8004c02:	409a      	lsls	r2, r3
 8004c04:	f04f 31ff 	mov.w	r1, #4294967295
 8004c08:	697b      	ldr	r3, [r7, #20]
 8004c0a:	fa01 f303 	lsl.w	r3, r1, r3
 8004c0e:	43d9      	mvns	r1, r3
 8004c10:	687b      	ldr	r3, [r7, #4]
 8004c12:	400b      	ands	r3, r1
 8004c14:	4313      	orrs	r3, r2
 8004c16:	4618      	mov	r0, r3
 8004c18:	3724      	adds	r7, #36	; 0x24
 8004c1a:	46bd      	mov	sp, r7
 8004c1c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004c20:	4770      	bx	lr
	...

08004c24 <SysTick_Config>:
 8004c24:	b580      	push	{r7, lr}
 8004c26:	b082      	sub	sp, #8
 8004c28:	af00      	add	r7, sp, #0
 8004c2a:	6078      	str	r0, [r7, #4]
 8004c2c:	687b      	ldr	r3, [r7, #4]
 8004c2e:	3b01      	subs	r3, #1
 8004c30:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8004c34:	d301      	bcc.n	8004c3a <SysTick_Config+0x16>
 8004c36:	2301      	movs	r3, #1
 8004c38:	e00f      	b.n	8004c5a <SysTick_Config+0x36>
 8004c3a:	4a0a      	ldr	r2, [pc, #40]	; (8004c64 <SysTick_Config+0x40>)
 8004c3c:	687b      	ldr	r3, [r7, #4]
 8004c3e:	3b01      	subs	r3, #1
 8004c40:	6053      	str	r3, [r2, #4]
 8004c42:	210f      	movs	r1, #15
 8004c44:	f04f 30ff 	mov.w	r0, #4294967295
 8004c48:	f7ff ff8e 	bl	8004b68 <__NVIC_SetPriority>
 8004c4c:	4b05      	ldr	r3, [pc, #20]	; (8004c64 <SysTick_Config+0x40>)
 8004c4e:	2200      	movs	r2, #0
 8004c50:	609a      	str	r2, [r3, #8]
 8004c52:	4b04      	ldr	r3, [pc, #16]	; (8004c64 <SysTick_Config+0x40>)
 8004c54:	2207      	movs	r2, #7
 8004c56:	601a      	str	r2, [r3, #0]
 8004c58:	2300      	movs	r3, #0
 8004c5a:	4618      	mov	r0, r3
 8004c5c:	3708      	adds	r7, #8
 8004c5e:	46bd      	mov	sp, r7
 8004c60:	bd80      	pop	{r7, pc}
 8004c62:	bf00      	nop
 8004c64:	e000e010 	.word	0xe000e010

08004c68 <HAL_NVIC_SetPriorityGrouping>:
 8004c68:	b580      	push	{r7, lr}
 8004c6a:	b082      	sub	sp, #8
 8004c6c:	af00      	add	r7, sp, #0
 8004c6e:	6078      	str	r0, [r7, #4]
 8004c70:	6878      	ldr	r0, [r7, #4]
 8004c72:	f7ff ff29 	bl	8004ac8 <__NVIC_SetPriorityGrouping>
 8004c76:	bf00      	nop
 8004c78:	3708      	adds	r7, #8
 8004c7a:	46bd      	mov	sp, r7
 8004c7c:	bd80      	pop	{r7, pc}

08004c7e <HAL_NVIC_SetPriority>:
 8004c7e:	b580      	push	{r7, lr}
 8004c80:	b086      	sub	sp, #24
 8004c82:	af00      	add	r7, sp, #0
 8004c84:	4603      	mov	r3, r0
 8004c86:	60b9      	str	r1, [r7, #8]
 8004c88:	607a      	str	r2, [r7, #4]
 8004c8a:	73fb      	strb	r3, [r7, #15]
 8004c8c:	2300      	movs	r3, #0
 8004c8e:	617b      	str	r3, [r7, #20]
 8004c90:	f7ff ff3e 	bl	8004b10 <__NVIC_GetPriorityGrouping>
 8004c94:	6178      	str	r0, [r7, #20]
 8004c96:	687a      	ldr	r2, [r7, #4]
 8004c98:	68b9      	ldr	r1, [r7, #8]
 8004c9a:	6978      	ldr	r0, [r7, #20]
 8004c9c:	f7ff ff8e 	bl	8004bbc <NVIC_EncodePriority>
 8004ca0:	4602      	mov	r2, r0
 8004ca2:	f997 300f 	ldrsb.w	r3, [r7, #15]
 8004ca6:	4611      	mov	r1, r2
 8004ca8:	4618      	mov	r0, r3
 8004caa:	f7ff ff5d 	bl	8004b68 <__NVIC_SetPriority>
 8004cae:	bf00      	nop
 8004cb0:	3718      	adds	r7, #24
 8004cb2:	46bd      	mov	sp, r7
 8004cb4:	bd80      	pop	{r7, pc}

08004cb6 <HAL_NVIC_EnableIRQ>:
 8004cb6:	b580      	push	{r7, lr}
 8004cb8:	b082      	sub	sp, #8
 8004cba:	af00      	add	r7, sp, #0
 8004cbc:	4603      	mov	r3, r0
 8004cbe:	71fb      	strb	r3, [r7, #7]
 8004cc0:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8004cc4:	4618      	mov	r0, r3
 8004cc6:	f7ff ff31 	bl	8004b2c <__NVIC_EnableIRQ>
 8004cca:	bf00      	nop
 8004ccc:	3708      	adds	r7, #8
 8004cce:	46bd      	mov	sp, r7
 8004cd0:	bd80      	pop	{r7, pc}

08004cd2 <HAL_SYSTICK_Config>:
 8004cd2:	b580      	push	{r7, lr}
 8004cd4:	b082      	sub	sp, #8
 8004cd6:	af00      	add	r7, sp, #0
 8004cd8:	6078      	str	r0, [r7, #4]
 8004cda:	6878      	ldr	r0, [r7, #4]
 8004cdc:	f7ff ffa2 	bl	8004c24 <SysTick_Config>
 8004ce0:	4603      	mov	r3, r0
 8004ce2:	4618      	mov	r0, r3
 8004ce4:	3708      	adds	r7, #8
 8004ce6:	46bd      	mov	sp, r7
 8004ce8:	bd80      	pop	{r7, pc}

08004cea <HAL_DMA_Abort>:
 8004cea:	b580      	push	{r7, lr}
 8004cec:	b084      	sub	sp, #16
 8004cee:	af00      	add	r7, sp, #0
 8004cf0:	6078      	str	r0, [r7, #4]
 8004cf2:	687b      	ldr	r3, [r7, #4]
 8004cf4:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8004cf6:	60fb      	str	r3, [r7, #12]
 8004cf8:	f7ff feb6 	bl	8004a68 <HAL_GetTick>
 8004cfc:	60b8      	str	r0, [r7, #8]
 8004cfe:	687b      	ldr	r3, [r7, #4]
 8004d00:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 8004d04:	b2db      	uxtb	r3, r3
 8004d06:	2b02      	cmp	r3, #2
 8004d08:	d008      	beq.n	8004d1c <HAL_DMA_Abort+0x32>
 8004d0a:	687b      	ldr	r3, [r7, #4]
 8004d0c:	2280      	movs	r2, #128	; 0x80
 8004d0e:	655a      	str	r2, [r3, #84]	; 0x54
 8004d10:	687b      	ldr	r3, [r7, #4]
 8004d12:	2200      	movs	r2, #0
 8004d14:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8004d18:	2301      	movs	r3, #1
 8004d1a:	e052      	b.n	8004dc2 <HAL_DMA_Abort+0xd8>
 8004d1c:	687b      	ldr	r3, [r7, #4]
 8004d1e:	681b      	ldr	r3, [r3, #0]
 8004d20:	681a      	ldr	r2, [r3, #0]
 8004d22:	687b      	ldr	r3, [r7, #4]
 8004d24:	681b      	ldr	r3, [r3, #0]
 8004d26:	f022 0216 	bic.w	r2, r2, #22
 8004d2a:	601a      	str	r2, [r3, #0]
 8004d2c:	687b      	ldr	r3, [r7, #4]
 8004d2e:	681b      	ldr	r3, [r3, #0]
 8004d30:	695a      	ldr	r2, [r3, #20]
 8004d32:	687b      	ldr	r3, [r7, #4]
 8004d34:	681b      	ldr	r3, [r3, #0]
 8004d36:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8004d3a:	615a      	str	r2, [r3, #20]
 8004d3c:	687b      	ldr	r3, [r7, #4]
 8004d3e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8004d40:	2b00      	cmp	r3, #0
 8004d42:	d103      	bne.n	8004d4c <HAL_DMA_Abort+0x62>
 8004d44:	687b      	ldr	r3, [r7, #4]
 8004d46:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 8004d48:	2b00      	cmp	r3, #0
 8004d4a:	d007      	beq.n	8004d5c <HAL_DMA_Abort+0x72>
 8004d4c:	687b      	ldr	r3, [r7, #4]
 8004d4e:	681b      	ldr	r3, [r3, #0]
 8004d50:	681a      	ldr	r2, [r3, #0]
 8004d52:	687b      	ldr	r3, [r7, #4]
 8004d54:	681b      	ldr	r3, [r3, #0]
 8004d56:	f022 0208 	bic.w	r2, r2, #8
 8004d5a:	601a      	str	r2, [r3, #0]
 8004d5c:	687b      	ldr	r3, [r7, #4]
 8004d5e:	681b      	ldr	r3, [r3, #0]
 8004d60:	681a      	ldr	r2, [r3, #0]
 8004d62:	687b      	ldr	r3, [r7, #4]
 8004d64:	681b      	ldr	r3, [r3, #0]
 8004d66:	f022 0201 	bic.w	r2, r2, #1
 8004d6a:	601a      	str	r2, [r3, #0]
 8004d6c:	e013      	b.n	8004d96 <HAL_DMA_Abort+0xac>
 8004d6e:	f7ff fe7b 	bl	8004a68 <HAL_GetTick>
 8004d72:	4602      	mov	r2, r0
 8004d74:	68bb      	ldr	r3, [r7, #8]
 8004d76:	1ad3      	subs	r3, r2, r3
 8004d78:	2b05      	cmp	r3, #5
 8004d7a:	d90c      	bls.n	8004d96 <HAL_DMA_Abort+0xac>
 8004d7c:	687b      	ldr	r3, [r7, #4]
 8004d7e:	2220      	movs	r2, #32
 8004d80:	655a      	str	r2, [r3, #84]	; 0x54
 8004d82:	687b      	ldr	r3, [r7, #4]
 8004d84:	2203      	movs	r2, #3
 8004d86:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8004d8a:	687b      	ldr	r3, [r7, #4]
 8004d8c:	2200      	movs	r2, #0
 8004d8e:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8004d92:	2303      	movs	r3, #3
 8004d94:	e015      	b.n	8004dc2 <HAL_DMA_Abort+0xd8>
 8004d96:	687b      	ldr	r3, [r7, #4]
 8004d98:	681b      	ldr	r3, [r3, #0]
 8004d9a:	681b      	ldr	r3, [r3, #0]
 8004d9c:	f003 0301 	and.w	r3, r3, #1
 8004da0:	2b00      	cmp	r3, #0
 8004da2:	d1e4      	bne.n	8004d6e <HAL_DMA_Abort+0x84>
 8004da4:	687b      	ldr	r3, [r7, #4]
 8004da6:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8004da8:	223f      	movs	r2, #63	; 0x3f
 8004daa:	409a      	lsls	r2, r3
 8004dac:	68fb      	ldr	r3, [r7, #12]
 8004dae:	609a      	str	r2, [r3, #8]
 8004db0:	687b      	ldr	r3, [r7, #4]
 8004db2:	2201      	movs	r2, #1
 8004db4:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8004db8:	687b      	ldr	r3, [r7, #4]
 8004dba:	2200      	movs	r2, #0
 8004dbc:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 8004dc0:	2300      	movs	r3, #0
 8004dc2:	4618      	mov	r0, r3
 8004dc4:	3710      	adds	r7, #16
 8004dc6:	46bd      	mov	sp, r7
 8004dc8:	bd80      	pop	{r7, pc}

08004dca <HAL_DMA_Abort_IT>:
 8004dca:	b480      	push	{r7}
 8004dcc:	b083      	sub	sp, #12
 8004dce:	af00      	add	r7, sp, #0
 8004dd0:	6078      	str	r0, [r7, #4]
 8004dd2:	687b      	ldr	r3, [r7, #4]
 8004dd4:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 8004dd8:	b2db      	uxtb	r3, r3
 8004dda:	2b02      	cmp	r3, #2
 8004ddc:	d004      	beq.n	8004de8 <HAL_DMA_Abort_IT+0x1e>
 8004dde:	687b      	ldr	r3, [r7, #4]
 8004de0:	2280      	movs	r2, #128	; 0x80
 8004de2:	655a      	str	r2, [r3, #84]	; 0x54
 8004de4:	2301      	movs	r3, #1
 8004de6:	e00c      	b.n	8004e02 <HAL_DMA_Abort_IT+0x38>
 8004de8:	687b      	ldr	r3, [r7, #4]
 8004dea:	2205      	movs	r2, #5
 8004dec:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
 8004df0:	687b      	ldr	r3, [r7, #4]
 8004df2:	681b      	ldr	r3, [r3, #0]
 8004df4:	681a      	ldr	r2, [r3, #0]
 8004df6:	687b      	ldr	r3, [r7, #4]
 8004df8:	681b      	ldr	r3, [r3, #0]
 8004dfa:	f022 0201 	bic.w	r2, r2, #1
 8004dfe:	601a      	str	r2, [r3, #0]
 8004e00:	2300      	movs	r3, #0
 8004e02:	4618      	mov	r0, r3
 8004e04:	370c      	adds	r7, #12
 8004e06:	46bd      	mov	sp, r7
 8004e08:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004e0c:	4770      	bx	lr
	...

08004e10 <HAL_GPIO_Init>:
 8004e10:	b480      	push	{r7}
 8004e12:	b089      	sub	sp, #36	; 0x24
 8004e14:	af00      	add	r7, sp, #0
 8004e16:	6078      	str	r0, [r7, #4]
 8004e18:	6039      	str	r1, [r7, #0]
 8004e1a:	2300      	movs	r3, #0
 8004e1c:	617b      	str	r3, [r7, #20]
 8004e1e:	2300      	movs	r3, #0
 8004e20:	613b      	str	r3, [r7, #16]
 8004e22:	2300      	movs	r3, #0
 8004e24:	61bb      	str	r3, [r7, #24]
 8004e26:	2300      	movs	r3, #0
 8004e28:	61fb      	str	r3, [r7, #28]
 8004e2a:	e159      	b.n	80050e0 <HAL_GPIO_Init+0x2d0>
 8004e2c:	2201      	movs	r2, #1
 8004e2e:	69fb      	ldr	r3, [r7, #28]
 8004e30:	fa02 f303 	lsl.w	r3, r2, r3
 8004e34:	617b      	str	r3, [r7, #20]
 8004e36:	683b      	ldr	r3, [r7, #0]
 8004e38:	681b      	ldr	r3, [r3, #0]
 8004e3a:	697a      	ldr	r2, [r7, #20]
 8004e3c:	4013      	ands	r3, r2
 8004e3e:	613b      	str	r3, [r7, #16]
 8004e40:	693a      	ldr	r2, [r7, #16]
 8004e42:	697b      	ldr	r3, [r7, #20]
 8004e44:	429a      	cmp	r2, r3
 8004e46:	f040 8148 	bne.w	80050da <HAL_GPIO_Init+0x2ca>
 8004e4a:	683b      	ldr	r3, [r7, #0]
 8004e4c:	685b      	ldr	r3, [r3, #4]
 8004e4e:	f003 0303 	and.w	r3, r3, #3
 8004e52:	2b01      	cmp	r3, #1
 8004e54:	d005      	beq.n	8004e62 <HAL_GPIO_Init+0x52>
 8004e56:	683b      	ldr	r3, [r7, #0]
 8004e58:	685b      	ldr	r3, [r3, #4]
 8004e5a:	f003 0303 	and.w	r3, r3, #3
 8004e5e:	2b02      	cmp	r3, #2
 8004e60:	d130      	bne.n	8004ec4 <HAL_GPIO_Init+0xb4>
 8004e62:	687b      	ldr	r3, [r7, #4]
 8004e64:	689b      	ldr	r3, [r3, #8]
 8004e66:	61bb      	str	r3, [r7, #24]
 8004e68:	69fb      	ldr	r3, [r7, #28]
 8004e6a:	005b      	lsls	r3, r3, #1
 8004e6c:	2203      	movs	r2, #3
 8004e6e:	fa02 f303 	lsl.w	r3, r2, r3
 8004e72:	43db      	mvns	r3, r3
 8004e74:	69ba      	ldr	r2, [r7, #24]
 8004e76:	4013      	ands	r3, r2
 8004e78:	61bb      	str	r3, [r7, #24]
 8004e7a:	683b      	ldr	r3, [r7, #0]
 8004e7c:	68da      	ldr	r2, [r3, #12]
 8004e7e:	69fb      	ldr	r3, [r7, #28]
 8004e80:	005b      	lsls	r3, r3, #1
 8004e82:	fa02 f303 	lsl.w	r3, r2, r3
 8004e86:	69ba      	ldr	r2, [r7, #24]
 8004e88:	4313      	orrs	r3, r2
 8004e8a:	61bb      	str	r3, [r7, #24]
 8004e8c:	687b      	ldr	r3, [r7, #4]
 8004e8e:	69ba      	ldr	r2, [r7, #24]
 8004e90:	609a      	str	r2, [r3, #8]
 8004e92:	687b      	ldr	r3, [r7, #4]
 8004e94:	685b      	ldr	r3, [r3, #4]
 8004e96:	61bb      	str	r3, [r7, #24]
 8004e98:	2201      	movs	r2, #1
 8004e9a:	69fb      	ldr	r3, [r7, #28]
 8004e9c:	fa02 f303 	lsl.w	r3, r2, r3
 8004ea0:	43db      	mvns	r3, r3
 8004ea2:	69ba      	ldr	r2, [r7, #24]
 8004ea4:	4013      	ands	r3, r2
 8004ea6:	61bb      	str	r3, [r7, #24]
 8004ea8:	683b      	ldr	r3, [r7, #0]
 8004eaa:	685b      	ldr	r3, [r3, #4]
 8004eac:	091b      	lsrs	r3, r3, #4
 8004eae:	f003 0201 	and.w	r2, r3, #1
 8004eb2:	69fb      	ldr	r3, [r7, #28]
 8004eb4:	fa02 f303 	lsl.w	r3, r2, r3
 8004eb8:	69ba      	ldr	r2, [r7, #24]
 8004eba:	4313      	orrs	r3, r2
 8004ebc:	61bb      	str	r3, [r7, #24]
 8004ebe:	687b      	ldr	r3, [r7, #4]
 8004ec0:	69ba      	ldr	r2, [r7, #24]
 8004ec2:	605a      	str	r2, [r3, #4]
 8004ec4:	683b      	ldr	r3, [r7, #0]
 8004ec6:	685b      	ldr	r3, [r3, #4]
 8004ec8:	f003 0303 	and.w	r3, r3, #3
 8004ecc:	2b03      	cmp	r3, #3
 8004ece:	d017      	beq.n	8004f00 <HAL_GPIO_Init+0xf0>
 8004ed0:	687b      	ldr	r3, [r7, #4]
 8004ed2:	68db      	ldr	r3, [r3, #12]
 8004ed4:	61bb      	str	r3, [r7, #24]
 8004ed6:	69fb      	ldr	r3, [r7, #28]
 8004ed8:	005b      	lsls	r3, r3, #1
 8004eda:	2203      	movs	r2, #3
 8004edc:	fa02 f303 	lsl.w	r3, r2, r3
 8004ee0:	43db      	mvns	r3, r3
 8004ee2:	69ba      	ldr	r2, [r7, #24]
 8004ee4:	4013      	ands	r3, r2
 8004ee6:	61bb      	str	r3, [r7, #24]
 8004ee8:	683b      	ldr	r3, [r7, #0]
 8004eea:	689a      	ldr	r2, [r3, #8]
 8004eec:	69fb      	ldr	r3, [r7, #28]
 8004eee:	005b      	lsls	r3, r3, #1
 8004ef0:	fa02 f303 	lsl.w	r3, r2, r3
 8004ef4:	69ba      	ldr	r2, [r7, #24]
 8004ef6:	4313      	orrs	r3, r2
 8004ef8:	61bb      	str	r3, [r7, #24]
 8004efa:	687b      	ldr	r3, [r7, #4]
 8004efc:	69ba      	ldr	r2, [r7, #24]
 8004efe:	60da      	str	r2, [r3, #12]
 8004f00:	683b      	ldr	r3, [r7, #0]
 8004f02:	685b      	ldr	r3, [r3, #4]
 8004f04:	f003 0303 	and.w	r3, r3, #3
 8004f08:	2b02      	cmp	r3, #2
 8004f0a:	d123      	bne.n	8004f54 <HAL_GPIO_Init+0x144>
 8004f0c:	69fb      	ldr	r3, [r7, #28]
 8004f0e:	08da      	lsrs	r2, r3, #3
 8004f10:	687b      	ldr	r3, [r7, #4]
 8004f12:	3208      	adds	r2, #8
 8004f14:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8004f18:	61bb      	str	r3, [r7, #24]
 8004f1a:	69fb      	ldr	r3, [r7, #28]
 8004f1c:	f003 0307 	and.w	r3, r3, #7
 8004f20:	009b      	lsls	r3, r3, #2
 8004f22:	220f      	movs	r2, #15
 8004f24:	fa02 f303 	lsl.w	r3, r2, r3
 8004f28:	43db      	mvns	r3, r3
 8004f2a:	69ba      	ldr	r2, [r7, #24]
 8004f2c:	4013      	ands	r3, r2
 8004f2e:	61bb      	str	r3, [r7, #24]
 8004f30:	683b      	ldr	r3, [r7, #0]
 8004f32:	691a      	ldr	r2, [r3, #16]
 8004f34:	69fb      	ldr	r3, [r7, #28]
 8004f36:	f003 0307 	and.w	r3, r3, #7
 8004f3a:	009b      	lsls	r3, r3, #2
 8004f3c:	fa02 f303 	lsl.w	r3, r2, r3
 8004f40:	69ba      	ldr	r2, [r7, #24]
 8004f42:	4313      	orrs	r3, r2
 8004f44:	61bb      	str	r3, [r7, #24]
 8004f46:	69fb      	ldr	r3, [r7, #28]
 8004f48:	08da      	lsrs	r2, r3, #3
 8004f4a:	687b      	ldr	r3, [r7, #4]
 8004f4c:	3208      	adds	r2, #8
 8004f4e:	69b9      	ldr	r1, [r7, #24]
 8004f50:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8004f54:	687b      	ldr	r3, [r7, #4]
 8004f56:	681b      	ldr	r3, [r3, #0]
 8004f58:	61bb      	str	r3, [r7, #24]
 8004f5a:	69fb      	ldr	r3, [r7, #28]
 8004f5c:	005b      	lsls	r3, r3, #1
 8004f5e:	2203      	movs	r2, #3
 8004f60:	fa02 f303 	lsl.w	r3, r2, r3
 8004f64:	43db      	mvns	r3, r3
 8004f66:	69ba      	ldr	r2, [r7, #24]
 8004f68:	4013      	ands	r3, r2
 8004f6a:	61bb      	str	r3, [r7, #24]
 8004f6c:	683b      	ldr	r3, [r7, #0]
 8004f6e:	685b      	ldr	r3, [r3, #4]
 8004f70:	f003 0203 	and.w	r2, r3, #3
 8004f74:	69fb      	ldr	r3, [r7, #28]
 8004f76:	005b      	lsls	r3, r3, #1
 8004f78:	fa02 f303 	lsl.w	r3, r2, r3
 8004f7c:	69ba      	ldr	r2, [r7, #24]
 8004f7e:	4313      	orrs	r3, r2
 8004f80:	61bb      	str	r3, [r7, #24]
 8004f82:	687b      	ldr	r3, [r7, #4]
 8004f84:	69ba      	ldr	r2, [r7, #24]
 8004f86:	601a      	str	r2, [r3, #0]
 8004f88:	683b      	ldr	r3, [r7, #0]
 8004f8a:	685b      	ldr	r3, [r3, #4]
 8004f8c:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 8004f90:	2b00      	cmp	r3, #0
 8004f92:	f000 80a2 	beq.w	80050da <HAL_GPIO_Init+0x2ca>
 8004f96:	2300      	movs	r3, #0
 8004f98:	60fb      	str	r3, [r7, #12]
 8004f9a:	4b57      	ldr	r3, [pc, #348]	; (80050f8 <HAL_GPIO_Init+0x2e8>)
 8004f9c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8004f9e:	4a56      	ldr	r2, [pc, #344]	; (80050f8 <HAL_GPIO_Init+0x2e8>)
 8004fa0:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8004fa4:	6453      	str	r3, [r2, #68]	; 0x44
 8004fa6:	4b54      	ldr	r3, [pc, #336]	; (80050f8 <HAL_GPIO_Init+0x2e8>)
 8004fa8:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8004faa:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 8004fae:	60fb      	str	r3, [r7, #12]
 8004fb0:	68fb      	ldr	r3, [r7, #12]
 8004fb2:	4a52      	ldr	r2, [pc, #328]	; (80050fc <HAL_GPIO_Init+0x2ec>)
 8004fb4:	69fb      	ldr	r3, [r7, #28]
 8004fb6:	089b      	lsrs	r3, r3, #2
 8004fb8:	3302      	adds	r3, #2
 8004fba:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8004fbe:	61bb      	str	r3, [r7, #24]
 8004fc0:	69fb      	ldr	r3, [r7, #28]
 8004fc2:	f003 0303 	and.w	r3, r3, #3
 8004fc6:	009b      	lsls	r3, r3, #2
 8004fc8:	220f      	movs	r2, #15
 8004fca:	fa02 f303 	lsl.w	r3, r2, r3
 8004fce:	43db      	mvns	r3, r3
 8004fd0:	69ba      	ldr	r2, [r7, #24]
 8004fd2:	4013      	ands	r3, r2
 8004fd4:	61bb      	str	r3, [r7, #24]
 8004fd6:	687b      	ldr	r3, [r7, #4]
 8004fd8:	4a49      	ldr	r2, [pc, #292]	; (8005100 <HAL_GPIO_Init+0x2f0>)
 8004fda:	4293      	cmp	r3, r2
 8004fdc:	d019      	beq.n	8005012 <HAL_GPIO_Init+0x202>
 8004fde:	687b      	ldr	r3, [r7, #4]
 8004fe0:	4a48      	ldr	r2, [pc, #288]	; (8005104 <HAL_GPIO_Init+0x2f4>)
 8004fe2:	4293      	cmp	r3, r2
 8004fe4:	d013      	beq.n	800500e <HAL_GPIO_Init+0x1fe>
 8004fe6:	687b      	ldr	r3, [r7, #4]
 8004fe8:	4a47      	ldr	r2, [pc, #284]	; (8005108 <HAL_GPIO_Init+0x2f8>)
 8004fea:	4293      	cmp	r3, r2
 8004fec:	d00d      	beq.n	800500a <HAL_GPIO_Init+0x1fa>
 8004fee:	687b      	ldr	r3, [r7, #4]
 8004ff0:	4a46      	ldr	r2, [pc, #280]	; (800510c <HAL_GPIO_Init+0x2fc>)
 8004ff2:	4293      	cmp	r3, r2
 8004ff4:	d007      	beq.n	8005006 <HAL_GPIO_Init+0x1f6>
 8004ff6:	687b      	ldr	r3, [r7, #4]
 8004ff8:	4a45      	ldr	r2, [pc, #276]	; (8005110 <HAL_GPIO_Init+0x300>)
 8004ffa:	4293      	cmp	r3, r2
 8004ffc:	d101      	bne.n	8005002 <HAL_GPIO_Init+0x1f2>
 8004ffe:	2304      	movs	r3, #4
 8005000:	e008      	b.n	8005014 <HAL_GPIO_Init+0x204>
 8005002:	2307      	movs	r3, #7
 8005004:	e006      	b.n	8005014 <HAL_GPIO_Init+0x204>
 8005006:	2303      	movs	r3, #3
 8005008:	e004      	b.n	8005014 <HAL_GPIO_Init+0x204>
 800500a:	2302      	movs	r3, #2
 800500c:	e002      	b.n	8005014 <HAL_GPIO_Init+0x204>
 800500e:	2301      	movs	r3, #1
 8005010:	e000      	b.n	8005014 <HAL_GPIO_Init+0x204>
 8005012:	2300      	movs	r3, #0
 8005014:	69fa      	ldr	r2, [r7, #28]
 8005016:	f002 0203 	and.w	r2, r2, #3
 800501a:	0092      	lsls	r2, r2, #2
 800501c:	4093      	lsls	r3, r2
 800501e:	69ba      	ldr	r2, [r7, #24]
 8005020:	4313      	orrs	r3, r2
 8005022:	61bb      	str	r3, [r7, #24]
 8005024:	4935      	ldr	r1, [pc, #212]	; (80050fc <HAL_GPIO_Init+0x2ec>)
 8005026:	69fb      	ldr	r3, [r7, #28]
 8005028:	089b      	lsrs	r3, r3, #2
 800502a:	3302      	adds	r3, #2
 800502c:	69ba      	ldr	r2, [r7, #24]
 800502e:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8005032:	4b38      	ldr	r3, [pc, #224]	; (8005114 <HAL_GPIO_Init+0x304>)
 8005034:	689b      	ldr	r3, [r3, #8]
 8005036:	61bb      	str	r3, [r7, #24]
 8005038:	693b      	ldr	r3, [r7, #16]
 800503a:	43db      	mvns	r3, r3
 800503c:	69ba      	ldr	r2, [r7, #24]
 800503e:	4013      	ands	r3, r2
 8005040:	61bb      	str	r3, [r7, #24]
 8005042:	683b      	ldr	r3, [r7, #0]
 8005044:	685b      	ldr	r3, [r3, #4]
 8005046:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 800504a:	2b00      	cmp	r3, #0
 800504c:	d003      	beq.n	8005056 <HAL_GPIO_Init+0x246>
 800504e:	69ba      	ldr	r2, [r7, #24]
 8005050:	693b      	ldr	r3, [r7, #16]
 8005052:	4313      	orrs	r3, r2
 8005054:	61bb      	str	r3, [r7, #24]
 8005056:	4a2f      	ldr	r2, [pc, #188]	; (8005114 <HAL_GPIO_Init+0x304>)
 8005058:	69bb      	ldr	r3, [r7, #24]
 800505a:	6093      	str	r3, [r2, #8]
 800505c:	4b2d      	ldr	r3, [pc, #180]	; (8005114 <HAL_GPIO_Init+0x304>)
 800505e:	68db      	ldr	r3, [r3, #12]
 8005060:	61bb      	str	r3, [r7, #24]
 8005062:	693b      	ldr	r3, [r7, #16]
 8005064:	43db      	mvns	r3, r3
 8005066:	69ba      	ldr	r2, [r7, #24]
 8005068:	4013      	ands	r3, r2
 800506a:	61bb      	str	r3, [r7, #24]
 800506c:	683b      	ldr	r3, [r7, #0]
 800506e:	685b      	ldr	r3, [r3, #4]
 8005070:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8005074:	2b00      	cmp	r3, #0
 8005076:	d003      	beq.n	8005080 <HAL_GPIO_Init+0x270>
 8005078:	69ba      	ldr	r2, [r7, #24]
 800507a:	693b      	ldr	r3, [r7, #16]
 800507c:	4313      	orrs	r3, r2
 800507e:	61bb      	str	r3, [r7, #24]
 8005080:	4a24      	ldr	r2, [pc, #144]	; (8005114 <HAL_GPIO_Init+0x304>)
 8005082:	69bb      	ldr	r3, [r7, #24]
 8005084:	60d3      	str	r3, [r2, #12]
 8005086:	4b23      	ldr	r3, [pc, #140]	; (8005114 <HAL_GPIO_Init+0x304>)
 8005088:	685b      	ldr	r3, [r3, #4]
 800508a:	61bb      	str	r3, [r7, #24]
 800508c:	693b      	ldr	r3, [r7, #16]
 800508e:	43db      	mvns	r3, r3
 8005090:	69ba      	ldr	r2, [r7, #24]
 8005092:	4013      	ands	r3, r2
 8005094:	61bb      	str	r3, [r7, #24]
 8005096:	683b      	ldr	r3, [r7, #0]
 8005098:	685b      	ldr	r3, [r3, #4]
 800509a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800509e:	2b00      	cmp	r3, #0
 80050a0:	d003      	beq.n	80050aa <HAL_GPIO_Init+0x29a>
 80050a2:	69ba      	ldr	r2, [r7, #24]
 80050a4:	693b      	ldr	r3, [r7, #16]
 80050a6:	4313      	orrs	r3, r2
 80050a8:	61bb      	str	r3, [r7, #24]
 80050aa:	4a1a      	ldr	r2, [pc, #104]	; (8005114 <HAL_GPIO_Init+0x304>)
 80050ac:	69bb      	ldr	r3, [r7, #24]
 80050ae:	6053      	str	r3, [r2, #4]
 80050b0:	4b18      	ldr	r3, [pc, #96]	; (8005114 <HAL_GPIO_Init+0x304>)
 80050b2:	681b      	ldr	r3, [r3, #0]
 80050b4:	61bb      	str	r3, [r7, #24]
 80050b6:	693b      	ldr	r3, [r7, #16]
 80050b8:	43db      	mvns	r3, r3
 80050ba:	69ba      	ldr	r2, [r7, #24]
 80050bc:	4013      	ands	r3, r2
 80050be:	61bb      	str	r3, [r7, #24]
 80050c0:	683b      	ldr	r3, [r7, #0]
 80050c2:	685b      	ldr	r3, [r3, #4]
 80050c4:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 80050c8:	2b00      	cmp	r3, #0
 80050ca:	d003      	beq.n	80050d4 <HAL_GPIO_Init+0x2c4>
 80050cc:	69ba      	ldr	r2, [r7, #24]
 80050ce:	693b      	ldr	r3, [r7, #16]
 80050d0:	4313      	orrs	r3, r2
 80050d2:	61bb      	str	r3, [r7, #24]
 80050d4:	4a0f      	ldr	r2, [pc, #60]	; (8005114 <HAL_GPIO_Init+0x304>)
 80050d6:	69bb      	ldr	r3, [r7, #24]
 80050d8:	6013      	str	r3, [r2, #0]
 80050da:	69fb      	ldr	r3, [r7, #28]
 80050dc:	3301      	adds	r3, #1
 80050de:	61fb      	str	r3, [r7, #28]
 80050e0:	69fb      	ldr	r3, [r7, #28]
 80050e2:	2b0f      	cmp	r3, #15
 80050e4:	f67f aea2 	bls.w	8004e2c <HAL_GPIO_Init+0x1c>
 80050e8:	bf00      	nop
 80050ea:	bf00      	nop
 80050ec:	3724      	adds	r7, #36	; 0x24
 80050ee:	46bd      	mov	sp, r7
 80050f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80050f4:	4770      	bx	lr
 80050f6:	bf00      	nop
 80050f8:	40023800 	.word	0x40023800
 80050fc:	40013800 	.word	0x40013800
 8005100:	40020000 	.word	0x40020000
 8005104:	40020400 	.word	0x40020400
 8005108:	40020800 	.word	0x40020800
 800510c:	40020c00 	.word	0x40020c00
 8005110:	40021000 	.word	0x40021000
 8005114:	40013c00 	.word	0x40013c00

08005118 <HAL_GPIO_WritePin>:
 8005118:	b480      	push	{r7}
 800511a:	b083      	sub	sp, #12
 800511c:	af00      	add	r7, sp, #0
 800511e:	6078      	str	r0, [r7, #4]
 8005120:	460b      	mov	r3, r1
 8005122:	807b      	strh	r3, [r7, #2]
 8005124:	4613      	mov	r3, r2
 8005126:	707b      	strb	r3, [r7, #1]
 8005128:	787b      	ldrb	r3, [r7, #1]
 800512a:	2b00      	cmp	r3, #0
 800512c:	d003      	beq.n	8005136 <HAL_GPIO_WritePin+0x1e>
 800512e:	887a      	ldrh	r2, [r7, #2]
 8005130:	687b      	ldr	r3, [r7, #4]
 8005132:	619a      	str	r2, [r3, #24]
 8005134:	e003      	b.n	800513e <HAL_GPIO_WritePin+0x26>
 8005136:	887b      	ldrh	r3, [r7, #2]
 8005138:	041a      	lsls	r2, r3, #16
 800513a:	687b      	ldr	r3, [r7, #4]
 800513c:	619a      	str	r2, [r3, #24]
 800513e:	bf00      	nop
 8005140:	370c      	adds	r7, #12
 8005142:	46bd      	mov	sp, r7
 8005144:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005148:	4770      	bx	lr
	...

0800514c <HAL_RCC_OscConfig>:
 800514c:	b580      	push	{r7, lr}
 800514e:	b086      	sub	sp, #24
 8005150:	af00      	add	r7, sp, #0
 8005152:	6078      	str	r0, [r7, #4]
 8005154:	687b      	ldr	r3, [r7, #4]
 8005156:	2b00      	cmp	r3, #0
 8005158:	d101      	bne.n	800515e <HAL_RCC_OscConfig+0x12>
 800515a:	2301      	movs	r3, #1
 800515c:	e267      	b.n	800562e <HAL_RCC_OscConfig+0x4e2>
 800515e:	687b      	ldr	r3, [r7, #4]
 8005160:	681b      	ldr	r3, [r3, #0]
 8005162:	f003 0301 	and.w	r3, r3, #1
 8005166:	2b00      	cmp	r3, #0
 8005168:	d075      	beq.n	8005256 <HAL_RCC_OscConfig+0x10a>
 800516a:	4b88      	ldr	r3, [pc, #544]	; (800538c <HAL_RCC_OscConfig+0x240>)
 800516c:	689b      	ldr	r3, [r3, #8]
 800516e:	f003 030c 	and.w	r3, r3, #12
 8005172:	2b04      	cmp	r3, #4
 8005174:	d00c      	beq.n	8005190 <HAL_RCC_OscConfig+0x44>
 8005176:	4b85      	ldr	r3, [pc, #532]	; (800538c <HAL_RCC_OscConfig+0x240>)
 8005178:	689b      	ldr	r3, [r3, #8]
 800517a:	f003 030c 	and.w	r3, r3, #12
 800517e:	2b08      	cmp	r3, #8
 8005180:	d112      	bne.n	80051a8 <HAL_RCC_OscConfig+0x5c>
 8005182:	4b82      	ldr	r3, [pc, #520]	; (800538c <HAL_RCC_OscConfig+0x240>)
 8005184:	685b      	ldr	r3, [r3, #4]
 8005186:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 800518a:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 800518e:	d10b      	bne.n	80051a8 <HAL_RCC_OscConfig+0x5c>
 8005190:	4b7e      	ldr	r3, [pc, #504]	; (800538c <HAL_RCC_OscConfig+0x240>)
 8005192:	681b      	ldr	r3, [r3, #0]
 8005194:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8005198:	2b00      	cmp	r3, #0
 800519a:	d05b      	beq.n	8005254 <HAL_RCC_OscConfig+0x108>
 800519c:	687b      	ldr	r3, [r7, #4]
 800519e:	685b      	ldr	r3, [r3, #4]
 80051a0:	2b00      	cmp	r3, #0
 80051a2:	d157      	bne.n	8005254 <HAL_RCC_OscConfig+0x108>
 80051a4:	2301      	movs	r3, #1
 80051a6:	e242      	b.n	800562e <HAL_RCC_OscConfig+0x4e2>
 80051a8:	687b      	ldr	r3, [r7, #4]
 80051aa:	685b      	ldr	r3, [r3, #4]
 80051ac:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80051b0:	d106      	bne.n	80051c0 <HAL_RCC_OscConfig+0x74>
 80051b2:	4b76      	ldr	r3, [pc, #472]	; (800538c <HAL_RCC_OscConfig+0x240>)
 80051b4:	681b      	ldr	r3, [r3, #0]
 80051b6:	4a75      	ldr	r2, [pc, #468]	; (800538c <HAL_RCC_OscConfig+0x240>)
 80051b8:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80051bc:	6013      	str	r3, [r2, #0]
 80051be:	e01d      	b.n	80051fc <HAL_RCC_OscConfig+0xb0>
 80051c0:	687b      	ldr	r3, [r7, #4]
 80051c2:	685b      	ldr	r3, [r3, #4]
 80051c4:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 80051c8:	d10c      	bne.n	80051e4 <HAL_RCC_OscConfig+0x98>
 80051ca:	4b70      	ldr	r3, [pc, #448]	; (800538c <HAL_RCC_OscConfig+0x240>)
 80051cc:	681b      	ldr	r3, [r3, #0]
 80051ce:	4a6f      	ldr	r2, [pc, #444]	; (800538c <HAL_RCC_OscConfig+0x240>)
 80051d0:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 80051d4:	6013      	str	r3, [r2, #0]
 80051d6:	4b6d      	ldr	r3, [pc, #436]	; (800538c <HAL_RCC_OscConfig+0x240>)
 80051d8:	681b      	ldr	r3, [r3, #0]
 80051da:	4a6c      	ldr	r2, [pc, #432]	; (800538c <HAL_RCC_OscConfig+0x240>)
 80051dc:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80051e0:	6013      	str	r3, [r2, #0]
 80051e2:	e00b      	b.n	80051fc <HAL_RCC_OscConfig+0xb0>
 80051e4:	4b69      	ldr	r3, [pc, #420]	; (800538c <HAL_RCC_OscConfig+0x240>)
 80051e6:	681b      	ldr	r3, [r3, #0]
 80051e8:	4a68      	ldr	r2, [pc, #416]	; (800538c <HAL_RCC_OscConfig+0x240>)
 80051ea:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 80051ee:	6013      	str	r3, [r2, #0]
 80051f0:	4b66      	ldr	r3, [pc, #408]	; (800538c <HAL_RCC_OscConfig+0x240>)
 80051f2:	681b      	ldr	r3, [r3, #0]
 80051f4:	4a65      	ldr	r2, [pc, #404]	; (800538c <HAL_RCC_OscConfig+0x240>)
 80051f6:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 80051fa:	6013      	str	r3, [r2, #0]
 80051fc:	687b      	ldr	r3, [r7, #4]
 80051fe:	685b      	ldr	r3, [r3, #4]
 8005200:	2b00      	cmp	r3, #0
 8005202:	d013      	beq.n	800522c <HAL_RCC_OscConfig+0xe0>
 8005204:	f7ff fc30 	bl	8004a68 <HAL_GetTick>
 8005208:	6138      	str	r0, [r7, #16]
 800520a:	e008      	b.n	800521e <HAL_RCC_OscConfig+0xd2>
 800520c:	f7ff fc2c 	bl	8004a68 <HAL_GetTick>
 8005210:	4602      	mov	r2, r0
 8005212:	693b      	ldr	r3, [r7, #16]
 8005214:	1ad3      	subs	r3, r2, r3
 8005216:	2b64      	cmp	r3, #100	; 0x64
 8005218:	d901      	bls.n	800521e <HAL_RCC_OscConfig+0xd2>
 800521a:	2303      	movs	r3, #3
 800521c:	e207      	b.n	800562e <HAL_RCC_OscConfig+0x4e2>
 800521e:	4b5b      	ldr	r3, [pc, #364]	; (800538c <HAL_RCC_OscConfig+0x240>)
 8005220:	681b      	ldr	r3, [r3, #0]
 8005222:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8005226:	2b00      	cmp	r3, #0
 8005228:	d0f0      	beq.n	800520c <HAL_RCC_OscConfig+0xc0>
 800522a:	e014      	b.n	8005256 <HAL_RCC_OscConfig+0x10a>
 800522c:	f7ff fc1c 	bl	8004a68 <HAL_GetTick>
 8005230:	6138      	str	r0, [r7, #16]
 8005232:	e008      	b.n	8005246 <HAL_RCC_OscConfig+0xfa>
 8005234:	f7ff fc18 	bl	8004a68 <HAL_GetTick>
 8005238:	4602      	mov	r2, r0
 800523a:	693b      	ldr	r3, [r7, #16]
 800523c:	1ad3      	subs	r3, r2, r3
 800523e:	2b64      	cmp	r3, #100	; 0x64
 8005240:	d901      	bls.n	8005246 <HAL_RCC_OscConfig+0xfa>
 8005242:	2303      	movs	r3, #3
 8005244:	e1f3      	b.n	800562e <HAL_RCC_OscConfig+0x4e2>
 8005246:	4b51      	ldr	r3, [pc, #324]	; (800538c <HAL_RCC_OscConfig+0x240>)
 8005248:	681b      	ldr	r3, [r3, #0]
 800524a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800524e:	2b00      	cmp	r3, #0
 8005250:	d1f0      	bne.n	8005234 <HAL_RCC_OscConfig+0xe8>
 8005252:	e000      	b.n	8005256 <HAL_RCC_OscConfig+0x10a>
 8005254:	bf00      	nop
 8005256:	687b      	ldr	r3, [r7, #4]
 8005258:	681b      	ldr	r3, [r3, #0]
 800525a:	f003 0302 	and.w	r3, r3, #2
 800525e:	2b00      	cmp	r3, #0
 8005260:	d063      	beq.n	800532a <HAL_RCC_OscConfig+0x1de>
 8005262:	4b4a      	ldr	r3, [pc, #296]	; (800538c <HAL_RCC_OscConfig+0x240>)
 8005264:	689b      	ldr	r3, [r3, #8]
 8005266:	f003 030c 	and.w	r3, r3, #12
 800526a:	2b00      	cmp	r3, #0
 800526c:	d00b      	beq.n	8005286 <HAL_RCC_OscConfig+0x13a>
 800526e:	4b47      	ldr	r3, [pc, #284]	; (800538c <HAL_RCC_OscConfig+0x240>)
 8005270:	689b      	ldr	r3, [r3, #8]
 8005272:	f003 030c 	and.w	r3, r3, #12
 8005276:	2b08      	cmp	r3, #8
 8005278:	d11c      	bne.n	80052b4 <HAL_RCC_OscConfig+0x168>
 800527a:	4b44      	ldr	r3, [pc, #272]	; (800538c <HAL_RCC_OscConfig+0x240>)
 800527c:	685b      	ldr	r3, [r3, #4]
 800527e:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8005282:	2b00      	cmp	r3, #0
 8005284:	d116      	bne.n	80052b4 <HAL_RCC_OscConfig+0x168>
 8005286:	4b41      	ldr	r3, [pc, #260]	; (800538c <HAL_RCC_OscConfig+0x240>)
 8005288:	681b      	ldr	r3, [r3, #0]
 800528a:	f003 0302 	and.w	r3, r3, #2
 800528e:	2b00      	cmp	r3, #0
 8005290:	d005      	beq.n	800529e <HAL_RCC_OscConfig+0x152>
 8005292:	687b      	ldr	r3, [r7, #4]
 8005294:	68db      	ldr	r3, [r3, #12]
 8005296:	2b01      	cmp	r3, #1
 8005298:	d001      	beq.n	800529e <HAL_RCC_OscConfig+0x152>
 800529a:	2301      	movs	r3, #1
 800529c:	e1c7      	b.n	800562e <HAL_RCC_OscConfig+0x4e2>
 800529e:	4b3b      	ldr	r3, [pc, #236]	; (800538c <HAL_RCC_OscConfig+0x240>)
 80052a0:	681b      	ldr	r3, [r3, #0]
 80052a2:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 80052a6:	687b      	ldr	r3, [r7, #4]
 80052a8:	691b      	ldr	r3, [r3, #16]
 80052aa:	00db      	lsls	r3, r3, #3
 80052ac:	4937      	ldr	r1, [pc, #220]	; (800538c <HAL_RCC_OscConfig+0x240>)
 80052ae:	4313      	orrs	r3, r2
 80052b0:	600b      	str	r3, [r1, #0]
 80052b2:	e03a      	b.n	800532a <HAL_RCC_OscConfig+0x1de>
 80052b4:	687b      	ldr	r3, [r7, #4]
 80052b6:	68db      	ldr	r3, [r3, #12]
 80052b8:	2b00      	cmp	r3, #0
 80052ba:	d020      	beq.n	80052fe <HAL_RCC_OscConfig+0x1b2>
 80052bc:	4b34      	ldr	r3, [pc, #208]	; (8005390 <HAL_RCC_OscConfig+0x244>)
 80052be:	2201      	movs	r2, #1
 80052c0:	601a      	str	r2, [r3, #0]
 80052c2:	f7ff fbd1 	bl	8004a68 <HAL_GetTick>
 80052c6:	6138      	str	r0, [r7, #16]
 80052c8:	e008      	b.n	80052dc <HAL_RCC_OscConfig+0x190>
 80052ca:	f7ff fbcd 	bl	8004a68 <HAL_GetTick>
 80052ce:	4602      	mov	r2, r0
 80052d0:	693b      	ldr	r3, [r7, #16]
 80052d2:	1ad3      	subs	r3, r2, r3
 80052d4:	2b02      	cmp	r3, #2
 80052d6:	d901      	bls.n	80052dc <HAL_RCC_OscConfig+0x190>
 80052d8:	2303      	movs	r3, #3
 80052da:	e1a8      	b.n	800562e <HAL_RCC_OscConfig+0x4e2>
 80052dc:	4b2b      	ldr	r3, [pc, #172]	; (800538c <HAL_RCC_OscConfig+0x240>)
 80052de:	681b      	ldr	r3, [r3, #0]
 80052e0:	f003 0302 	and.w	r3, r3, #2
 80052e4:	2b00      	cmp	r3, #0
 80052e6:	d0f0      	beq.n	80052ca <HAL_RCC_OscConfig+0x17e>
 80052e8:	4b28      	ldr	r3, [pc, #160]	; (800538c <HAL_RCC_OscConfig+0x240>)
 80052ea:	681b      	ldr	r3, [r3, #0]
 80052ec:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 80052f0:	687b      	ldr	r3, [r7, #4]
 80052f2:	691b      	ldr	r3, [r3, #16]
 80052f4:	00db      	lsls	r3, r3, #3
 80052f6:	4925      	ldr	r1, [pc, #148]	; (800538c <HAL_RCC_OscConfig+0x240>)
 80052f8:	4313      	orrs	r3, r2
 80052fa:	600b      	str	r3, [r1, #0]
 80052fc:	e015      	b.n	800532a <HAL_RCC_OscConfig+0x1de>
 80052fe:	4b24      	ldr	r3, [pc, #144]	; (8005390 <HAL_RCC_OscConfig+0x244>)
 8005300:	2200      	movs	r2, #0
 8005302:	601a      	str	r2, [r3, #0]
 8005304:	f7ff fbb0 	bl	8004a68 <HAL_GetTick>
 8005308:	6138      	str	r0, [r7, #16]
 800530a:	e008      	b.n	800531e <HAL_RCC_OscConfig+0x1d2>
 800530c:	f7ff fbac 	bl	8004a68 <HAL_GetTick>
 8005310:	4602      	mov	r2, r0
 8005312:	693b      	ldr	r3, [r7, #16]
 8005314:	1ad3      	subs	r3, r2, r3
 8005316:	2b02      	cmp	r3, #2
 8005318:	d901      	bls.n	800531e <HAL_RCC_OscConfig+0x1d2>
 800531a:	2303      	movs	r3, #3
 800531c:	e187      	b.n	800562e <HAL_RCC_OscConfig+0x4e2>
 800531e:	4b1b      	ldr	r3, [pc, #108]	; (800538c <HAL_RCC_OscConfig+0x240>)
 8005320:	681b      	ldr	r3, [r3, #0]
 8005322:	f003 0302 	and.w	r3, r3, #2
 8005326:	2b00      	cmp	r3, #0
 8005328:	d1f0      	bne.n	800530c <HAL_RCC_OscConfig+0x1c0>
 800532a:	687b      	ldr	r3, [r7, #4]
 800532c:	681b      	ldr	r3, [r3, #0]
 800532e:	f003 0308 	and.w	r3, r3, #8
 8005332:	2b00      	cmp	r3, #0
 8005334:	d036      	beq.n	80053a4 <HAL_RCC_OscConfig+0x258>
 8005336:	687b      	ldr	r3, [r7, #4]
 8005338:	695b      	ldr	r3, [r3, #20]
 800533a:	2b00      	cmp	r3, #0
 800533c:	d016      	beq.n	800536c <HAL_RCC_OscConfig+0x220>
 800533e:	4b15      	ldr	r3, [pc, #84]	; (8005394 <HAL_RCC_OscConfig+0x248>)
 8005340:	2201      	movs	r2, #1
 8005342:	601a      	str	r2, [r3, #0]
 8005344:	f7ff fb90 	bl	8004a68 <HAL_GetTick>
 8005348:	6138      	str	r0, [r7, #16]
 800534a:	e008      	b.n	800535e <HAL_RCC_OscConfig+0x212>
 800534c:	f7ff fb8c 	bl	8004a68 <HAL_GetTick>
 8005350:	4602      	mov	r2, r0
 8005352:	693b      	ldr	r3, [r7, #16]
 8005354:	1ad3      	subs	r3, r2, r3
 8005356:	2b02      	cmp	r3, #2
 8005358:	d901      	bls.n	800535e <HAL_RCC_OscConfig+0x212>
 800535a:	2303      	movs	r3, #3
 800535c:	e167      	b.n	800562e <HAL_RCC_OscConfig+0x4e2>
 800535e:	4b0b      	ldr	r3, [pc, #44]	; (800538c <HAL_RCC_OscConfig+0x240>)
 8005360:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8005362:	f003 0302 	and.w	r3, r3, #2
 8005366:	2b00      	cmp	r3, #0
 8005368:	d0f0      	beq.n	800534c <HAL_RCC_OscConfig+0x200>
 800536a:	e01b      	b.n	80053a4 <HAL_RCC_OscConfig+0x258>
 800536c:	4b09      	ldr	r3, [pc, #36]	; (8005394 <HAL_RCC_OscConfig+0x248>)
 800536e:	2200      	movs	r2, #0
 8005370:	601a      	str	r2, [r3, #0]
 8005372:	f7ff fb79 	bl	8004a68 <HAL_GetTick>
 8005376:	6138      	str	r0, [r7, #16]
 8005378:	e00e      	b.n	8005398 <HAL_RCC_OscConfig+0x24c>
 800537a:	f7ff fb75 	bl	8004a68 <HAL_GetTick>
 800537e:	4602      	mov	r2, r0
 8005380:	693b      	ldr	r3, [r7, #16]
 8005382:	1ad3      	subs	r3, r2, r3
 8005384:	2b02      	cmp	r3, #2
 8005386:	d907      	bls.n	8005398 <HAL_RCC_OscConfig+0x24c>
 8005388:	2303      	movs	r3, #3
 800538a:	e150      	b.n	800562e <HAL_RCC_OscConfig+0x4e2>
 800538c:	40023800 	.word	0x40023800
 8005390:	42470000 	.word	0x42470000
 8005394:	42470e80 	.word	0x42470e80
 8005398:	4b88      	ldr	r3, [pc, #544]	; (80055bc <HAL_RCC_OscConfig+0x470>)
 800539a:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800539c:	f003 0302 	and.w	r3, r3, #2
 80053a0:	2b00      	cmp	r3, #0
 80053a2:	d1ea      	bne.n	800537a <HAL_RCC_OscConfig+0x22e>
 80053a4:	687b      	ldr	r3, [r7, #4]
 80053a6:	681b      	ldr	r3, [r3, #0]
 80053a8:	f003 0304 	and.w	r3, r3, #4
 80053ac:	2b00      	cmp	r3, #0
 80053ae:	f000 8097 	beq.w	80054e0 <HAL_RCC_OscConfig+0x394>
 80053b2:	2300      	movs	r3, #0
 80053b4:	75fb      	strb	r3, [r7, #23]
 80053b6:	4b81      	ldr	r3, [pc, #516]	; (80055bc <HAL_RCC_OscConfig+0x470>)
 80053b8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80053ba:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80053be:	2b00      	cmp	r3, #0
 80053c0:	d10f      	bne.n	80053e2 <HAL_RCC_OscConfig+0x296>
 80053c2:	2300      	movs	r3, #0
 80053c4:	60bb      	str	r3, [r7, #8]
 80053c6:	4b7d      	ldr	r3, [pc, #500]	; (80055bc <HAL_RCC_OscConfig+0x470>)
 80053c8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80053ca:	4a7c      	ldr	r2, [pc, #496]	; (80055bc <HAL_RCC_OscConfig+0x470>)
 80053cc:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80053d0:	6413      	str	r3, [r2, #64]	; 0x40
 80053d2:	4b7a      	ldr	r3, [pc, #488]	; (80055bc <HAL_RCC_OscConfig+0x470>)
 80053d4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80053d6:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 80053da:	60bb      	str	r3, [r7, #8]
 80053dc:	68bb      	ldr	r3, [r7, #8]
 80053de:	2301      	movs	r3, #1
 80053e0:	75fb      	strb	r3, [r7, #23]
 80053e2:	4b77      	ldr	r3, [pc, #476]	; (80055c0 <HAL_RCC_OscConfig+0x474>)
 80053e4:	681b      	ldr	r3, [r3, #0]
 80053e6:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80053ea:	2b00      	cmp	r3, #0
 80053ec:	d118      	bne.n	8005420 <HAL_RCC_OscConfig+0x2d4>
 80053ee:	4b74      	ldr	r3, [pc, #464]	; (80055c0 <HAL_RCC_OscConfig+0x474>)
 80053f0:	681b      	ldr	r3, [r3, #0]
 80053f2:	4a73      	ldr	r2, [pc, #460]	; (80055c0 <HAL_RCC_OscConfig+0x474>)
 80053f4:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80053f8:	6013      	str	r3, [r2, #0]
 80053fa:	f7ff fb35 	bl	8004a68 <HAL_GetTick>
 80053fe:	6138      	str	r0, [r7, #16]
 8005400:	e008      	b.n	8005414 <HAL_RCC_OscConfig+0x2c8>
 8005402:	f7ff fb31 	bl	8004a68 <HAL_GetTick>
 8005406:	4602      	mov	r2, r0
 8005408:	693b      	ldr	r3, [r7, #16]
 800540a:	1ad3      	subs	r3, r2, r3
 800540c:	2b02      	cmp	r3, #2
 800540e:	d901      	bls.n	8005414 <HAL_RCC_OscConfig+0x2c8>
 8005410:	2303      	movs	r3, #3
 8005412:	e10c      	b.n	800562e <HAL_RCC_OscConfig+0x4e2>
 8005414:	4b6a      	ldr	r3, [pc, #424]	; (80055c0 <HAL_RCC_OscConfig+0x474>)
 8005416:	681b      	ldr	r3, [r3, #0]
 8005418:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800541c:	2b00      	cmp	r3, #0
 800541e:	d0f0      	beq.n	8005402 <HAL_RCC_OscConfig+0x2b6>
 8005420:	687b      	ldr	r3, [r7, #4]
 8005422:	689b      	ldr	r3, [r3, #8]
 8005424:	2b01      	cmp	r3, #1
 8005426:	d106      	bne.n	8005436 <HAL_RCC_OscConfig+0x2ea>
 8005428:	4b64      	ldr	r3, [pc, #400]	; (80055bc <HAL_RCC_OscConfig+0x470>)
 800542a:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800542c:	4a63      	ldr	r2, [pc, #396]	; (80055bc <HAL_RCC_OscConfig+0x470>)
 800542e:	f043 0301 	orr.w	r3, r3, #1
 8005432:	6713      	str	r3, [r2, #112]	; 0x70
 8005434:	e01c      	b.n	8005470 <HAL_RCC_OscConfig+0x324>
 8005436:	687b      	ldr	r3, [r7, #4]
 8005438:	689b      	ldr	r3, [r3, #8]
 800543a:	2b05      	cmp	r3, #5
 800543c:	d10c      	bne.n	8005458 <HAL_RCC_OscConfig+0x30c>
 800543e:	4b5f      	ldr	r3, [pc, #380]	; (80055bc <HAL_RCC_OscConfig+0x470>)
 8005440:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8005442:	4a5e      	ldr	r2, [pc, #376]	; (80055bc <HAL_RCC_OscConfig+0x470>)
 8005444:	f043 0304 	orr.w	r3, r3, #4
 8005448:	6713      	str	r3, [r2, #112]	; 0x70
 800544a:	4b5c      	ldr	r3, [pc, #368]	; (80055bc <HAL_RCC_OscConfig+0x470>)
 800544c:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800544e:	4a5b      	ldr	r2, [pc, #364]	; (80055bc <HAL_RCC_OscConfig+0x470>)
 8005450:	f043 0301 	orr.w	r3, r3, #1
 8005454:	6713      	str	r3, [r2, #112]	; 0x70
 8005456:	e00b      	b.n	8005470 <HAL_RCC_OscConfig+0x324>
 8005458:	4b58      	ldr	r3, [pc, #352]	; (80055bc <HAL_RCC_OscConfig+0x470>)
 800545a:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800545c:	4a57      	ldr	r2, [pc, #348]	; (80055bc <HAL_RCC_OscConfig+0x470>)
 800545e:	f023 0301 	bic.w	r3, r3, #1
 8005462:	6713      	str	r3, [r2, #112]	; 0x70
 8005464:	4b55      	ldr	r3, [pc, #340]	; (80055bc <HAL_RCC_OscConfig+0x470>)
 8005466:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8005468:	4a54      	ldr	r2, [pc, #336]	; (80055bc <HAL_RCC_OscConfig+0x470>)
 800546a:	f023 0304 	bic.w	r3, r3, #4
 800546e:	6713      	str	r3, [r2, #112]	; 0x70
 8005470:	687b      	ldr	r3, [r7, #4]
 8005472:	689b      	ldr	r3, [r3, #8]
 8005474:	2b00      	cmp	r3, #0
 8005476:	d015      	beq.n	80054a4 <HAL_RCC_OscConfig+0x358>
 8005478:	f7ff faf6 	bl	8004a68 <HAL_GetTick>
 800547c:	6138      	str	r0, [r7, #16]
 800547e:	e00a      	b.n	8005496 <HAL_RCC_OscConfig+0x34a>
 8005480:	f7ff faf2 	bl	8004a68 <HAL_GetTick>
 8005484:	4602      	mov	r2, r0
 8005486:	693b      	ldr	r3, [r7, #16]
 8005488:	1ad3      	subs	r3, r2, r3
 800548a:	f241 3288 	movw	r2, #5000	; 0x1388
 800548e:	4293      	cmp	r3, r2
 8005490:	d901      	bls.n	8005496 <HAL_RCC_OscConfig+0x34a>
 8005492:	2303      	movs	r3, #3
 8005494:	e0cb      	b.n	800562e <HAL_RCC_OscConfig+0x4e2>
 8005496:	4b49      	ldr	r3, [pc, #292]	; (80055bc <HAL_RCC_OscConfig+0x470>)
 8005498:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 800549a:	f003 0302 	and.w	r3, r3, #2
 800549e:	2b00      	cmp	r3, #0
 80054a0:	d0ee      	beq.n	8005480 <HAL_RCC_OscConfig+0x334>
 80054a2:	e014      	b.n	80054ce <HAL_RCC_OscConfig+0x382>
 80054a4:	f7ff fae0 	bl	8004a68 <HAL_GetTick>
 80054a8:	6138      	str	r0, [r7, #16]
 80054aa:	e00a      	b.n	80054c2 <HAL_RCC_OscConfig+0x376>
 80054ac:	f7ff fadc 	bl	8004a68 <HAL_GetTick>
 80054b0:	4602      	mov	r2, r0
 80054b2:	693b      	ldr	r3, [r7, #16]
 80054b4:	1ad3      	subs	r3, r2, r3
 80054b6:	f241 3288 	movw	r2, #5000	; 0x1388
 80054ba:	4293      	cmp	r3, r2
 80054bc:	d901      	bls.n	80054c2 <HAL_RCC_OscConfig+0x376>
 80054be:	2303      	movs	r3, #3
 80054c0:	e0b5      	b.n	800562e <HAL_RCC_OscConfig+0x4e2>
 80054c2:	4b3e      	ldr	r3, [pc, #248]	; (80055bc <HAL_RCC_OscConfig+0x470>)
 80054c4:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80054c6:	f003 0302 	and.w	r3, r3, #2
 80054ca:	2b00      	cmp	r3, #0
 80054cc:	d1ee      	bne.n	80054ac <HAL_RCC_OscConfig+0x360>
 80054ce:	7dfb      	ldrb	r3, [r7, #23]
 80054d0:	2b01      	cmp	r3, #1
 80054d2:	d105      	bne.n	80054e0 <HAL_RCC_OscConfig+0x394>
 80054d4:	4b39      	ldr	r3, [pc, #228]	; (80055bc <HAL_RCC_OscConfig+0x470>)
 80054d6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80054d8:	4a38      	ldr	r2, [pc, #224]	; (80055bc <HAL_RCC_OscConfig+0x470>)
 80054da:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 80054de:	6413      	str	r3, [r2, #64]	; 0x40
 80054e0:	687b      	ldr	r3, [r7, #4]
 80054e2:	699b      	ldr	r3, [r3, #24]
 80054e4:	2b00      	cmp	r3, #0
 80054e6:	f000 80a1 	beq.w	800562c <HAL_RCC_OscConfig+0x4e0>
 80054ea:	4b34      	ldr	r3, [pc, #208]	; (80055bc <HAL_RCC_OscConfig+0x470>)
 80054ec:	689b      	ldr	r3, [r3, #8]
 80054ee:	f003 030c 	and.w	r3, r3, #12
 80054f2:	2b08      	cmp	r3, #8
 80054f4:	d05c      	beq.n	80055b0 <HAL_RCC_OscConfig+0x464>
 80054f6:	687b      	ldr	r3, [r7, #4]
 80054f8:	699b      	ldr	r3, [r3, #24]
 80054fa:	2b02      	cmp	r3, #2
 80054fc:	d141      	bne.n	8005582 <HAL_RCC_OscConfig+0x436>
 80054fe:	4b31      	ldr	r3, [pc, #196]	; (80055c4 <HAL_RCC_OscConfig+0x478>)
 8005500:	2200      	movs	r2, #0
 8005502:	601a      	str	r2, [r3, #0]
 8005504:	f7ff fab0 	bl	8004a68 <HAL_GetTick>
 8005508:	6138      	str	r0, [r7, #16]
 800550a:	e008      	b.n	800551e <HAL_RCC_OscConfig+0x3d2>
 800550c:	f7ff faac 	bl	8004a68 <HAL_GetTick>
 8005510:	4602      	mov	r2, r0
 8005512:	693b      	ldr	r3, [r7, #16]
 8005514:	1ad3      	subs	r3, r2, r3
 8005516:	2b02      	cmp	r3, #2
 8005518:	d901      	bls.n	800551e <HAL_RCC_OscConfig+0x3d2>
 800551a:	2303      	movs	r3, #3
 800551c:	e087      	b.n	800562e <HAL_RCC_OscConfig+0x4e2>
 800551e:	4b27      	ldr	r3, [pc, #156]	; (80055bc <HAL_RCC_OscConfig+0x470>)
 8005520:	681b      	ldr	r3, [r3, #0]
 8005522:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8005526:	2b00      	cmp	r3, #0
 8005528:	d1f0      	bne.n	800550c <HAL_RCC_OscConfig+0x3c0>
 800552a:	687b      	ldr	r3, [r7, #4]
 800552c:	69da      	ldr	r2, [r3, #28]
 800552e:	687b      	ldr	r3, [r7, #4]
 8005530:	6a1b      	ldr	r3, [r3, #32]
 8005532:	431a      	orrs	r2, r3
 8005534:	687b      	ldr	r3, [r7, #4]
 8005536:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005538:	019b      	lsls	r3, r3, #6
 800553a:	431a      	orrs	r2, r3
 800553c:	687b      	ldr	r3, [r7, #4]
 800553e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8005540:	085b      	lsrs	r3, r3, #1
 8005542:	3b01      	subs	r3, #1
 8005544:	041b      	lsls	r3, r3, #16
 8005546:	431a      	orrs	r2, r3
 8005548:	687b      	ldr	r3, [r7, #4]
 800554a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800554c:	061b      	lsls	r3, r3, #24
 800554e:	491b      	ldr	r1, [pc, #108]	; (80055bc <HAL_RCC_OscConfig+0x470>)
 8005550:	4313      	orrs	r3, r2
 8005552:	604b      	str	r3, [r1, #4]
 8005554:	4b1b      	ldr	r3, [pc, #108]	; (80055c4 <HAL_RCC_OscConfig+0x478>)
 8005556:	2201      	movs	r2, #1
 8005558:	601a      	str	r2, [r3, #0]
 800555a:	f7ff fa85 	bl	8004a68 <HAL_GetTick>
 800555e:	6138      	str	r0, [r7, #16]
 8005560:	e008      	b.n	8005574 <HAL_RCC_OscConfig+0x428>
 8005562:	f7ff fa81 	bl	8004a68 <HAL_GetTick>
 8005566:	4602      	mov	r2, r0
 8005568:	693b      	ldr	r3, [r7, #16]
 800556a:	1ad3      	subs	r3, r2, r3
 800556c:	2b02      	cmp	r3, #2
 800556e:	d901      	bls.n	8005574 <HAL_RCC_OscConfig+0x428>
 8005570:	2303      	movs	r3, #3
 8005572:	e05c      	b.n	800562e <HAL_RCC_OscConfig+0x4e2>
 8005574:	4b11      	ldr	r3, [pc, #68]	; (80055bc <HAL_RCC_OscConfig+0x470>)
 8005576:	681b      	ldr	r3, [r3, #0]
 8005578:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800557c:	2b00      	cmp	r3, #0
 800557e:	d0f0      	beq.n	8005562 <HAL_RCC_OscConfig+0x416>
 8005580:	e054      	b.n	800562c <HAL_RCC_OscConfig+0x4e0>
 8005582:	4b10      	ldr	r3, [pc, #64]	; (80055c4 <HAL_RCC_OscConfig+0x478>)
 8005584:	2200      	movs	r2, #0
 8005586:	601a      	str	r2, [r3, #0]
 8005588:	f7ff fa6e 	bl	8004a68 <HAL_GetTick>
 800558c:	6138      	str	r0, [r7, #16]
 800558e:	e008      	b.n	80055a2 <HAL_RCC_OscConfig+0x456>
 8005590:	f7ff fa6a 	bl	8004a68 <HAL_GetTick>
 8005594:	4602      	mov	r2, r0
 8005596:	693b      	ldr	r3, [r7, #16]
 8005598:	1ad3      	subs	r3, r2, r3
 800559a:	2b02      	cmp	r3, #2
 800559c:	d901      	bls.n	80055a2 <HAL_RCC_OscConfig+0x456>
 800559e:	2303      	movs	r3, #3
 80055a0:	e045      	b.n	800562e <HAL_RCC_OscConfig+0x4e2>
 80055a2:	4b06      	ldr	r3, [pc, #24]	; (80055bc <HAL_RCC_OscConfig+0x470>)
 80055a4:	681b      	ldr	r3, [r3, #0]
 80055a6:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80055aa:	2b00      	cmp	r3, #0
 80055ac:	d1f0      	bne.n	8005590 <HAL_RCC_OscConfig+0x444>
 80055ae:	e03d      	b.n	800562c <HAL_RCC_OscConfig+0x4e0>
 80055b0:	687b      	ldr	r3, [r7, #4]
 80055b2:	699b      	ldr	r3, [r3, #24]
 80055b4:	2b01      	cmp	r3, #1
 80055b6:	d107      	bne.n	80055c8 <HAL_RCC_OscConfig+0x47c>
 80055b8:	2301      	movs	r3, #1
 80055ba:	e038      	b.n	800562e <HAL_RCC_OscConfig+0x4e2>
 80055bc:	40023800 	.word	0x40023800
 80055c0:	40007000 	.word	0x40007000
 80055c4:	42470060 	.word	0x42470060
 80055c8:	4b1b      	ldr	r3, [pc, #108]	; (8005638 <HAL_RCC_OscConfig+0x4ec>)
 80055ca:	685b      	ldr	r3, [r3, #4]
 80055cc:	60fb      	str	r3, [r7, #12]
 80055ce:	687b      	ldr	r3, [r7, #4]
 80055d0:	699b      	ldr	r3, [r3, #24]
 80055d2:	2b01      	cmp	r3, #1
 80055d4:	d028      	beq.n	8005628 <HAL_RCC_OscConfig+0x4dc>
 80055d6:	68fb      	ldr	r3, [r7, #12]
 80055d8:	f403 0280 	and.w	r2, r3, #4194304	; 0x400000
 80055dc:	687b      	ldr	r3, [r7, #4]
 80055de:	69db      	ldr	r3, [r3, #28]
 80055e0:	429a      	cmp	r2, r3
 80055e2:	d121      	bne.n	8005628 <HAL_RCC_OscConfig+0x4dc>
 80055e4:	68fb      	ldr	r3, [r7, #12]
 80055e6:	f003 023f 	and.w	r2, r3, #63	; 0x3f
 80055ea:	687b      	ldr	r3, [r7, #4]
 80055ec:	6a1b      	ldr	r3, [r3, #32]
 80055ee:	429a      	cmp	r2, r3
 80055f0:	d11a      	bne.n	8005628 <HAL_RCC_OscConfig+0x4dc>
 80055f2:	68fa      	ldr	r2, [r7, #12]
 80055f4:	f647 73c0 	movw	r3, #32704	; 0x7fc0
 80055f8:	4013      	ands	r3, r2
 80055fa:	687a      	ldr	r2, [r7, #4]
 80055fc:	6a52      	ldr	r2, [r2, #36]	; 0x24
 80055fe:	0192      	lsls	r2, r2, #6
 8005600:	4293      	cmp	r3, r2
 8005602:	d111      	bne.n	8005628 <HAL_RCC_OscConfig+0x4dc>
 8005604:	68fb      	ldr	r3, [r7, #12]
 8005606:	f403 3240 	and.w	r2, r3, #196608	; 0x30000
 800560a:	687b      	ldr	r3, [r7, #4]
 800560c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800560e:	085b      	lsrs	r3, r3, #1
 8005610:	3b01      	subs	r3, #1
 8005612:	041b      	lsls	r3, r3, #16
 8005614:	429a      	cmp	r2, r3
 8005616:	d107      	bne.n	8005628 <HAL_RCC_OscConfig+0x4dc>
 8005618:	68fb      	ldr	r3, [r7, #12]
 800561a:	f003 6270 	and.w	r2, r3, #251658240	; 0xf000000
 800561e:	687b      	ldr	r3, [r7, #4]
 8005620:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8005622:	061b      	lsls	r3, r3, #24
 8005624:	429a      	cmp	r2, r3
 8005626:	d001      	beq.n	800562c <HAL_RCC_OscConfig+0x4e0>
 8005628:	2301      	movs	r3, #1
 800562a:	e000      	b.n	800562e <HAL_RCC_OscConfig+0x4e2>
 800562c:	2300      	movs	r3, #0
 800562e:	4618      	mov	r0, r3
 8005630:	3718      	adds	r7, #24
 8005632:	46bd      	mov	sp, r7
 8005634:	bd80      	pop	{r7, pc}
 8005636:	bf00      	nop
 8005638:	40023800 	.word	0x40023800

0800563c <HAL_RCC_ClockConfig>:
 800563c:	b580      	push	{r7, lr}
 800563e:	b084      	sub	sp, #16
 8005640:	af00      	add	r7, sp, #0
 8005642:	6078      	str	r0, [r7, #4]
 8005644:	6039      	str	r1, [r7, #0]
 8005646:	687b      	ldr	r3, [r7, #4]
 8005648:	2b00      	cmp	r3, #0
 800564a:	d101      	bne.n	8005650 <HAL_RCC_ClockConfig+0x14>
 800564c:	2301      	movs	r3, #1
 800564e:	e0cc      	b.n	80057ea <HAL_RCC_ClockConfig+0x1ae>
 8005650:	4b68      	ldr	r3, [pc, #416]	; (80057f4 <HAL_RCC_ClockConfig+0x1b8>)
 8005652:	681b      	ldr	r3, [r3, #0]
 8005654:	f003 0307 	and.w	r3, r3, #7
 8005658:	683a      	ldr	r2, [r7, #0]
 800565a:	429a      	cmp	r2, r3
 800565c:	d90c      	bls.n	8005678 <HAL_RCC_ClockConfig+0x3c>
 800565e:	4b65      	ldr	r3, [pc, #404]	; (80057f4 <HAL_RCC_ClockConfig+0x1b8>)
 8005660:	683a      	ldr	r2, [r7, #0]
 8005662:	b2d2      	uxtb	r2, r2
 8005664:	701a      	strb	r2, [r3, #0]
 8005666:	4b63      	ldr	r3, [pc, #396]	; (80057f4 <HAL_RCC_ClockConfig+0x1b8>)
 8005668:	681b      	ldr	r3, [r3, #0]
 800566a:	f003 0307 	and.w	r3, r3, #7
 800566e:	683a      	ldr	r2, [r7, #0]
 8005670:	429a      	cmp	r2, r3
 8005672:	d001      	beq.n	8005678 <HAL_RCC_ClockConfig+0x3c>
 8005674:	2301      	movs	r3, #1
 8005676:	e0b8      	b.n	80057ea <HAL_RCC_ClockConfig+0x1ae>
 8005678:	687b      	ldr	r3, [r7, #4]
 800567a:	681b      	ldr	r3, [r3, #0]
 800567c:	f003 0302 	and.w	r3, r3, #2
 8005680:	2b00      	cmp	r3, #0
 8005682:	d020      	beq.n	80056c6 <HAL_RCC_ClockConfig+0x8a>
 8005684:	687b      	ldr	r3, [r7, #4]
 8005686:	681b      	ldr	r3, [r3, #0]
 8005688:	f003 0304 	and.w	r3, r3, #4
 800568c:	2b00      	cmp	r3, #0
 800568e:	d005      	beq.n	800569c <HAL_RCC_ClockConfig+0x60>
 8005690:	4b59      	ldr	r3, [pc, #356]	; (80057f8 <HAL_RCC_ClockConfig+0x1bc>)
 8005692:	689b      	ldr	r3, [r3, #8]
 8005694:	4a58      	ldr	r2, [pc, #352]	; (80057f8 <HAL_RCC_ClockConfig+0x1bc>)
 8005696:	f443 53e0 	orr.w	r3, r3, #7168	; 0x1c00
 800569a:	6093      	str	r3, [r2, #8]
 800569c:	687b      	ldr	r3, [r7, #4]
 800569e:	681b      	ldr	r3, [r3, #0]
 80056a0:	f003 0308 	and.w	r3, r3, #8
 80056a4:	2b00      	cmp	r3, #0
 80056a6:	d005      	beq.n	80056b4 <HAL_RCC_ClockConfig+0x78>
 80056a8:	4b53      	ldr	r3, [pc, #332]	; (80057f8 <HAL_RCC_ClockConfig+0x1bc>)
 80056aa:	689b      	ldr	r3, [r3, #8]
 80056ac:	4a52      	ldr	r2, [pc, #328]	; (80057f8 <HAL_RCC_ClockConfig+0x1bc>)
 80056ae:	f443 4360 	orr.w	r3, r3, #57344	; 0xe000
 80056b2:	6093      	str	r3, [r2, #8]
 80056b4:	4b50      	ldr	r3, [pc, #320]	; (80057f8 <HAL_RCC_ClockConfig+0x1bc>)
 80056b6:	689b      	ldr	r3, [r3, #8]
 80056b8:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 80056bc:	687b      	ldr	r3, [r7, #4]
 80056be:	689b      	ldr	r3, [r3, #8]
 80056c0:	494d      	ldr	r1, [pc, #308]	; (80057f8 <HAL_RCC_ClockConfig+0x1bc>)
 80056c2:	4313      	orrs	r3, r2
 80056c4:	608b      	str	r3, [r1, #8]
 80056c6:	687b      	ldr	r3, [r7, #4]
 80056c8:	681b      	ldr	r3, [r3, #0]
 80056ca:	f003 0301 	and.w	r3, r3, #1
 80056ce:	2b00      	cmp	r3, #0
 80056d0:	d044      	beq.n	800575c <HAL_RCC_ClockConfig+0x120>
 80056d2:	687b      	ldr	r3, [r7, #4]
 80056d4:	685b      	ldr	r3, [r3, #4]
 80056d6:	2b01      	cmp	r3, #1
 80056d8:	d107      	bne.n	80056ea <HAL_RCC_ClockConfig+0xae>
 80056da:	4b47      	ldr	r3, [pc, #284]	; (80057f8 <HAL_RCC_ClockConfig+0x1bc>)
 80056dc:	681b      	ldr	r3, [r3, #0]
 80056de:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80056e2:	2b00      	cmp	r3, #0
 80056e4:	d119      	bne.n	800571a <HAL_RCC_ClockConfig+0xde>
 80056e6:	2301      	movs	r3, #1
 80056e8:	e07f      	b.n	80057ea <HAL_RCC_ClockConfig+0x1ae>
 80056ea:	687b      	ldr	r3, [r7, #4]
 80056ec:	685b      	ldr	r3, [r3, #4]
 80056ee:	2b02      	cmp	r3, #2
 80056f0:	d003      	beq.n	80056fa <HAL_RCC_ClockConfig+0xbe>
 80056f2:	687b      	ldr	r3, [r7, #4]
 80056f4:	685b      	ldr	r3, [r3, #4]
 80056f6:	2b03      	cmp	r3, #3
 80056f8:	d107      	bne.n	800570a <HAL_RCC_ClockConfig+0xce>
 80056fa:	4b3f      	ldr	r3, [pc, #252]	; (80057f8 <HAL_RCC_ClockConfig+0x1bc>)
 80056fc:	681b      	ldr	r3, [r3, #0]
 80056fe:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8005702:	2b00      	cmp	r3, #0
 8005704:	d109      	bne.n	800571a <HAL_RCC_ClockConfig+0xde>
 8005706:	2301      	movs	r3, #1
 8005708:	e06f      	b.n	80057ea <HAL_RCC_ClockConfig+0x1ae>
 800570a:	4b3b      	ldr	r3, [pc, #236]	; (80057f8 <HAL_RCC_ClockConfig+0x1bc>)
 800570c:	681b      	ldr	r3, [r3, #0]
 800570e:	f003 0302 	and.w	r3, r3, #2
 8005712:	2b00      	cmp	r3, #0
 8005714:	d101      	bne.n	800571a <HAL_RCC_ClockConfig+0xde>
 8005716:	2301      	movs	r3, #1
 8005718:	e067      	b.n	80057ea <HAL_RCC_ClockConfig+0x1ae>
 800571a:	4b37      	ldr	r3, [pc, #220]	; (80057f8 <HAL_RCC_ClockConfig+0x1bc>)
 800571c:	689b      	ldr	r3, [r3, #8]
 800571e:	f023 0203 	bic.w	r2, r3, #3
 8005722:	687b      	ldr	r3, [r7, #4]
 8005724:	685b      	ldr	r3, [r3, #4]
 8005726:	4934      	ldr	r1, [pc, #208]	; (80057f8 <HAL_RCC_ClockConfig+0x1bc>)
 8005728:	4313      	orrs	r3, r2
 800572a:	608b      	str	r3, [r1, #8]
 800572c:	f7ff f99c 	bl	8004a68 <HAL_GetTick>
 8005730:	60f8      	str	r0, [r7, #12]
 8005732:	e00a      	b.n	800574a <HAL_RCC_ClockConfig+0x10e>
 8005734:	f7ff f998 	bl	8004a68 <HAL_GetTick>
 8005738:	4602      	mov	r2, r0
 800573a:	68fb      	ldr	r3, [r7, #12]
 800573c:	1ad3      	subs	r3, r2, r3
 800573e:	f241 3288 	movw	r2, #5000	; 0x1388
 8005742:	4293      	cmp	r3, r2
 8005744:	d901      	bls.n	800574a <HAL_RCC_ClockConfig+0x10e>
 8005746:	2303      	movs	r3, #3
 8005748:	e04f      	b.n	80057ea <HAL_RCC_ClockConfig+0x1ae>
 800574a:	4b2b      	ldr	r3, [pc, #172]	; (80057f8 <HAL_RCC_ClockConfig+0x1bc>)
 800574c:	689b      	ldr	r3, [r3, #8]
 800574e:	f003 020c 	and.w	r2, r3, #12
 8005752:	687b      	ldr	r3, [r7, #4]
 8005754:	685b      	ldr	r3, [r3, #4]
 8005756:	009b      	lsls	r3, r3, #2
 8005758:	429a      	cmp	r2, r3
 800575a:	d1eb      	bne.n	8005734 <HAL_RCC_ClockConfig+0xf8>
 800575c:	4b25      	ldr	r3, [pc, #148]	; (80057f4 <HAL_RCC_ClockConfig+0x1b8>)
 800575e:	681b      	ldr	r3, [r3, #0]
 8005760:	f003 0307 	and.w	r3, r3, #7
 8005764:	683a      	ldr	r2, [r7, #0]
 8005766:	429a      	cmp	r2, r3
 8005768:	d20c      	bcs.n	8005784 <HAL_RCC_ClockConfig+0x148>
 800576a:	4b22      	ldr	r3, [pc, #136]	; (80057f4 <HAL_RCC_ClockConfig+0x1b8>)
 800576c:	683a      	ldr	r2, [r7, #0]
 800576e:	b2d2      	uxtb	r2, r2
 8005770:	701a      	strb	r2, [r3, #0]
 8005772:	4b20      	ldr	r3, [pc, #128]	; (80057f4 <HAL_RCC_ClockConfig+0x1b8>)
 8005774:	681b      	ldr	r3, [r3, #0]
 8005776:	f003 0307 	and.w	r3, r3, #7
 800577a:	683a      	ldr	r2, [r7, #0]
 800577c:	429a      	cmp	r2, r3
 800577e:	d001      	beq.n	8005784 <HAL_RCC_ClockConfig+0x148>
 8005780:	2301      	movs	r3, #1
 8005782:	e032      	b.n	80057ea <HAL_RCC_ClockConfig+0x1ae>
 8005784:	687b      	ldr	r3, [r7, #4]
 8005786:	681b      	ldr	r3, [r3, #0]
 8005788:	f003 0304 	and.w	r3, r3, #4
 800578c:	2b00      	cmp	r3, #0
 800578e:	d008      	beq.n	80057a2 <HAL_RCC_ClockConfig+0x166>
 8005790:	4b19      	ldr	r3, [pc, #100]	; (80057f8 <HAL_RCC_ClockConfig+0x1bc>)
 8005792:	689b      	ldr	r3, [r3, #8]
 8005794:	f423 52e0 	bic.w	r2, r3, #7168	; 0x1c00
 8005798:	687b      	ldr	r3, [r7, #4]
 800579a:	68db      	ldr	r3, [r3, #12]
 800579c:	4916      	ldr	r1, [pc, #88]	; (80057f8 <HAL_RCC_ClockConfig+0x1bc>)
 800579e:	4313      	orrs	r3, r2
 80057a0:	608b      	str	r3, [r1, #8]
 80057a2:	687b      	ldr	r3, [r7, #4]
 80057a4:	681b      	ldr	r3, [r3, #0]
 80057a6:	f003 0308 	and.w	r3, r3, #8
 80057aa:	2b00      	cmp	r3, #0
 80057ac:	d009      	beq.n	80057c2 <HAL_RCC_ClockConfig+0x186>
 80057ae:	4b12      	ldr	r3, [pc, #72]	; (80057f8 <HAL_RCC_ClockConfig+0x1bc>)
 80057b0:	689b      	ldr	r3, [r3, #8]
 80057b2:	f423 4260 	bic.w	r2, r3, #57344	; 0xe000
 80057b6:	687b      	ldr	r3, [r7, #4]
 80057b8:	691b      	ldr	r3, [r3, #16]
 80057ba:	00db      	lsls	r3, r3, #3
 80057bc:	490e      	ldr	r1, [pc, #56]	; (80057f8 <HAL_RCC_ClockConfig+0x1bc>)
 80057be:	4313      	orrs	r3, r2
 80057c0:	608b      	str	r3, [r1, #8]
 80057c2:	f000 f821 	bl	8005808 <HAL_RCC_GetSysClockFreq>
 80057c6:	4602      	mov	r2, r0
 80057c8:	4b0b      	ldr	r3, [pc, #44]	; (80057f8 <HAL_RCC_ClockConfig+0x1bc>)
 80057ca:	689b      	ldr	r3, [r3, #8]
 80057cc:	091b      	lsrs	r3, r3, #4
 80057ce:	f003 030f 	and.w	r3, r3, #15
 80057d2:	490a      	ldr	r1, [pc, #40]	; (80057fc <HAL_RCC_ClockConfig+0x1c0>)
 80057d4:	5ccb      	ldrb	r3, [r1, r3]
 80057d6:	fa22 f303 	lsr.w	r3, r2, r3
 80057da:	4a09      	ldr	r2, [pc, #36]	; (8005800 <HAL_RCC_ClockConfig+0x1c4>)
 80057dc:	6013      	str	r3, [r2, #0]
 80057de:	4b09      	ldr	r3, [pc, #36]	; (8005804 <HAL_RCC_ClockConfig+0x1c8>)
 80057e0:	681b      	ldr	r3, [r3, #0]
 80057e2:	4618      	mov	r0, r3
 80057e4:	f7ff f8fc 	bl	80049e0 <HAL_InitTick>
 80057e8:	2300      	movs	r3, #0
 80057ea:	4618      	mov	r0, r3
 80057ec:	3710      	adds	r7, #16
 80057ee:	46bd      	mov	sp, r7
 80057f0:	bd80      	pop	{r7, pc}
 80057f2:	bf00      	nop
 80057f4:	40023c00 	.word	0x40023c00
 80057f8:	40023800 	.word	0x40023800
 80057fc:	0800d34c 	.word	0x0800d34c
 8005800:	2000006c 	.word	0x2000006c
 8005804:	20000070 	.word	0x20000070

08005808 <HAL_RCC_GetSysClockFreq>:
 8005808:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 800580c:	b094      	sub	sp, #80	; 0x50
 800580e:	af00      	add	r7, sp, #0
 8005810:	2300      	movs	r3, #0
 8005812:	647b      	str	r3, [r7, #68]	; 0x44
 8005814:	2300      	movs	r3, #0
 8005816:	64fb      	str	r3, [r7, #76]	; 0x4c
 8005818:	2300      	movs	r3, #0
 800581a:	643b      	str	r3, [r7, #64]	; 0x40
 800581c:	2300      	movs	r3, #0
 800581e:	64bb      	str	r3, [r7, #72]	; 0x48
 8005820:	4b79      	ldr	r3, [pc, #484]	; (8005a08 <HAL_RCC_GetSysClockFreq+0x200>)
 8005822:	689b      	ldr	r3, [r3, #8]
 8005824:	f003 030c 	and.w	r3, r3, #12
 8005828:	2b08      	cmp	r3, #8
 800582a:	d00d      	beq.n	8005848 <HAL_RCC_GetSysClockFreq+0x40>
 800582c:	2b08      	cmp	r3, #8
 800582e:	f200 80e1 	bhi.w	80059f4 <HAL_RCC_GetSysClockFreq+0x1ec>
 8005832:	2b00      	cmp	r3, #0
 8005834:	d002      	beq.n	800583c <HAL_RCC_GetSysClockFreq+0x34>
 8005836:	2b04      	cmp	r3, #4
 8005838:	d003      	beq.n	8005842 <HAL_RCC_GetSysClockFreq+0x3a>
 800583a:	e0db      	b.n	80059f4 <HAL_RCC_GetSysClockFreq+0x1ec>
 800583c:	4b73      	ldr	r3, [pc, #460]	; (8005a0c <HAL_RCC_GetSysClockFreq+0x204>)
 800583e:	64bb      	str	r3, [r7, #72]	; 0x48
 8005840:	e0db      	b.n	80059fa <HAL_RCC_GetSysClockFreq+0x1f2>
 8005842:	4b73      	ldr	r3, [pc, #460]	; (8005a10 <HAL_RCC_GetSysClockFreq+0x208>)
 8005844:	64bb      	str	r3, [r7, #72]	; 0x48
 8005846:	e0d8      	b.n	80059fa <HAL_RCC_GetSysClockFreq+0x1f2>
 8005848:	4b6f      	ldr	r3, [pc, #444]	; (8005a08 <HAL_RCC_GetSysClockFreq+0x200>)
 800584a:	685b      	ldr	r3, [r3, #4]
 800584c:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 8005850:	647b      	str	r3, [r7, #68]	; 0x44
 8005852:	4b6d      	ldr	r3, [pc, #436]	; (8005a08 <HAL_RCC_GetSysClockFreq+0x200>)
 8005854:	685b      	ldr	r3, [r3, #4]
 8005856:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 800585a:	2b00      	cmp	r3, #0
 800585c:	d063      	beq.n	8005926 <HAL_RCC_GetSysClockFreq+0x11e>
 800585e:	4b6a      	ldr	r3, [pc, #424]	; (8005a08 <HAL_RCC_GetSysClockFreq+0x200>)
 8005860:	685b      	ldr	r3, [r3, #4]
 8005862:	099b      	lsrs	r3, r3, #6
 8005864:	2200      	movs	r2, #0
 8005866:	63bb      	str	r3, [r7, #56]	; 0x38
 8005868:	63fa      	str	r2, [r7, #60]	; 0x3c
 800586a:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800586c:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8005870:	633b      	str	r3, [r7, #48]	; 0x30
 8005872:	2300      	movs	r3, #0
 8005874:	637b      	str	r3, [r7, #52]	; 0x34
 8005876:	e9d7 450c 	ldrd	r4, r5, [r7, #48]	; 0x30
 800587a:	4622      	mov	r2, r4
 800587c:	462b      	mov	r3, r5
 800587e:	f04f 0000 	mov.w	r0, #0
 8005882:	f04f 0100 	mov.w	r1, #0
 8005886:	0159      	lsls	r1, r3, #5
 8005888:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 800588c:	0150      	lsls	r0, r2, #5
 800588e:	4602      	mov	r2, r0
 8005890:	460b      	mov	r3, r1
 8005892:	4621      	mov	r1, r4
 8005894:	1a51      	subs	r1, r2, r1
 8005896:	6139      	str	r1, [r7, #16]
 8005898:	4629      	mov	r1, r5
 800589a:	eb63 0301 	sbc.w	r3, r3, r1
 800589e:	617b      	str	r3, [r7, #20]
 80058a0:	f04f 0200 	mov.w	r2, #0
 80058a4:	f04f 0300 	mov.w	r3, #0
 80058a8:	e9d7 ab04 	ldrd	sl, fp, [r7, #16]
 80058ac:	4659      	mov	r1, fp
 80058ae:	018b      	lsls	r3, r1, #6
 80058b0:	4651      	mov	r1, sl
 80058b2:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 80058b6:	4651      	mov	r1, sl
 80058b8:	018a      	lsls	r2, r1, #6
 80058ba:	4651      	mov	r1, sl
 80058bc:	ebb2 0801 	subs.w	r8, r2, r1
 80058c0:	4659      	mov	r1, fp
 80058c2:	eb63 0901 	sbc.w	r9, r3, r1
 80058c6:	f04f 0200 	mov.w	r2, #0
 80058ca:	f04f 0300 	mov.w	r3, #0
 80058ce:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 80058d2:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 80058d6:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 80058da:	4690      	mov	r8, r2
 80058dc:	4699      	mov	r9, r3
 80058de:	4623      	mov	r3, r4
 80058e0:	eb18 0303 	adds.w	r3, r8, r3
 80058e4:	60bb      	str	r3, [r7, #8]
 80058e6:	462b      	mov	r3, r5
 80058e8:	eb49 0303 	adc.w	r3, r9, r3
 80058ec:	60fb      	str	r3, [r7, #12]
 80058ee:	f04f 0200 	mov.w	r2, #0
 80058f2:	f04f 0300 	mov.w	r3, #0
 80058f6:	e9d7 4502 	ldrd	r4, r5, [r7, #8]
 80058fa:	4629      	mov	r1, r5
 80058fc:	024b      	lsls	r3, r1, #9
 80058fe:	4621      	mov	r1, r4
 8005900:	ea43 53d1 	orr.w	r3, r3, r1, lsr #23
 8005904:	4621      	mov	r1, r4
 8005906:	024a      	lsls	r2, r1, #9
 8005908:	4610      	mov	r0, r2
 800590a:	4619      	mov	r1, r3
 800590c:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 800590e:	2200      	movs	r2, #0
 8005910:	62bb      	str	r3, [r7, #40]	; 0x28
 8005912:	62fa      	str	r2, [r7, #44]	; 0x2c
 8005914:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	; 0x28
 8005918:	f7fb f9be 	bl	8000c98 <__aeabi_uldivmod>
 800591c:	4602      	mov	r2, r0
 800591e:	460b      	mov	r3, r1
 8005920:	4613      	mov	r3, r2
 8005922:	64fb      	str	r3, [r7, #76]	; 0x4c
 8005924:	e058      	b.n	80059d8 <HAL_RCC_GetSysClockFreq+0x1d0>
 8005926:	4b38      	ldr	r3, [pc, #224]	; (8005a08 <HAL_RCC_GetSysClockFreq+0x200>)
 8005928:	685b      	ldr	r3, [r3, #4]
 800592a:	099b      	lsrs	r3, r3, #6
 800592c:	2200      	movs	r2, #0
 800592e:	4618      	mov	r0, r3
 8005930:	4611      	mov	r1, r2
 8005932:	f3c0 0308 	ubfx	r3, r0, #0, #9
 8005936:	623b      	str	r3, [r7, #32]
 8005938:	2300      	movs	r3, #0
 800593a:	627b      	str	r3, [r7, #36]	; 0x24
 800593c:	e9d7 8908 	ldrd	r8, r9, [r7, #32]
 8005940:	4642      	mov	r2, r8
 8005942:	464b      	mov	r3, r9
 8005944:	f04f 0000 	mov.w	r0, #0
 8005948:	f04f 0100 	mov.w	r1, #0
 800594c:	0159      	lsls	r1, r3, #5
 800594e:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 8005952:	0150      	lsls	r0, r2, #5
 8005954:	4602      	mov	r2, r0
 8005956:	460b      	mov	r3, r1
 8005958:	4641      	mov	r1, r8
 800595a:	ebb2 0a01 	subs.w	sl, r2, r1
 800595e:	4649      	mov	r1, r9
 8005960:	eb63 0b01 	sbc.w	fp, r3, r1
 8005964:	f04f 0200 	mov.w	r2, #0
 8005968:	f04f 0300 	mov.w	r3, #0
 800596c:	ea4f 138b 	mov.w	r3, fp, lsl #6
 8005970:	ea43 639a 	orr.w	r3, r3, sl, lsr #26
 8005974:	ea4f 128a 	mov.w	r2, sl, lsl #6
 8005978:	ebb2 040a 	subs.w	r4, r2, sl
 800597c:	eb63 050b 	sbc.w	r5, r3, fp
 8005980:	f04f 0200 	mov.w	r2, #0
 8005984:	f04f 0300 	mov.w	r3, #0
 8005988:	00eb      	lsls	r3, r5, #3
 800598a:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 800598e:	00e2      	lsls	r2, r4, #3
 8005990:	4614      	mov	r4, r2
 8005992:	461d      	mov	r5, r3
 8005994:	4643      	mov	r3, r8
 8005996:	18e3      	adds	r3, r4, r3
 8005998:	603b      	str	r3, [r7, #0]
 800599a:	464b      	mov	r3, r9
 800599c:	eb45 0303 	adc.w	r3, r5, r3
 80059a0:	607b      	str	r3, [r7, #4]
 80059a2:	f04f 0200 	mov.w	r2, #0
 80059a6:	f04f 0300 	mov.w	r3, #0
 80059aa:	e9d7 4500 	ldrd	r4, r5, [r7]
 80059ae:	4629      	mov	r1, r5
 80059b0:	028b      	lsls	r3, r1, #10
 80059b2:	4621      	mov	r1, r4
 80059b4:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 80059b8:	4621      	mov	r1, r4
 80059ba:	028a      	lsls	r2, r1, #10
 80059bc:	4610      	mov	r0, r2
 80059be:	4619      	mov	r1, r3
 80059c0:	6c7b      	ldr	r3, [r7, #68]	; 0x44
 80059c2:	2200      	movs	r2, #0
 80059c4:	61bb      	str	r3, [r7, #24]
 80059c6:	61fa      	str	r2, [r7, #28]
 80059c8:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 80059cc:	f7fb f964 	bl	8000c98 <__aeabi_uldivmod>
 80059d0:	4602      	mov	r2, r0
 80059d2:	460b      	mov	r3, r1
 80059d4:	4613      	mov	r3, r2
 80059d6:	64fb      	str	r3, [r7, #76]	; 0x4c
 80059d8:	4b0b      	ldr	r3, [pc, #44]	; (8005a08 <HAL_RCC_GetSysClockFreq+0x200>)
 80059da:	685b      	ldr	r3, [r3, #4]
 80059dc:	0c1b      	lsrs	r3, r3, #16
 80059de:	f003 0303 	and.w	r3, r3, #3
 80059e2:	3301      	adds	r3, #1
 80059e4:	005b      	lsls	r3, r3, #1
 80059e6:	643b      	str	r3, [r7, #64]	; 0x40
 80059e8:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 80059ea:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 80059ec:	fbb2 f3f3 	udiv	r3, r2, r3
 80059f0:	64bb      	str	r3, [r7, #72]	; 0x48
 80059f2:	e002      	b.n	80059fa <HAL_RCC_GetSysClockFreq+0x1f2>
 80059f4:	4b05      	ldr	r3, [pc, #20]	; (8005a0c <HAL_RCC_GetSysClockFreq+0x204>)
 80059f6:	64bb      	str	r3, [r7, #72]	; 0x48
 80059f8:	bf00      	nop
 80059fa:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 80059fc:	4618      	mov	r0, r3
 80059fe:	3750      	adds	r7, #80	; 0x50
 8005a00:	46bd      	mov	sp, r7
 8005a02:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8005a06:	bf00      	nop
 8005a08:	40023800 	.word	0x40023800
 8005a0c:	00f42400 	.word	0x00f42400
 8005a10:	007a1200 	.word	0x007a1200

08005a14 <HAL_RCC_GetHCLKFreq>:
 8005a14:	b480      	push	{r7}
 8005a16:	af00      	add	r7, sp, #0
 8005a18:	4b03      	ldr	r3, [pc, #12]	; (8005a28 <HAL_RCC_GetHCLKFreq+0x14>)
 8005a1a:	681b      	ldr	r3, [r3, #0]
 8005a1c:	4618      	mov	r0, r3
 8005a1e:	46bd      	mov	sp, r7
 8005a20:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005a24:	4770      	bx	lr
 8005a26:	bf00      	nop
 8005a28:	2000006c 	.word	0x2000006c

08005a2c <HAL_RCC_GetPCLK1Freq>:
 8005a2c:	b580      	push	{r7, lr}
 8005a2e:	af00      	add	r7, sp, #0
 8005a30:	f7ff fff0 	bl	8005a14 <HAL_RCC_GetHCLKFreq>
 8005a34:	4602      	mov	r2, r0
 8005a36:	4b05      	ldr	r3, [pc, #20]	; (8005a4c <HAL_RCC_GetPCLK1Freq+0x20>)
 8005a38:	689b      	ldr	r3, [r3, #8]
 8005a3a:	0a9b      	lsrs	r3, r3, #10
 8005a3c:	f003 0307 	and.w	r3, r3, #7
 8005a40:	4903      	ldr	r1, [pc, #12]	; (8005a50 <HAL_RCC_GetPCLK1Freq+0x24>)
 8005a42:	5ccb      	ldrb	r3, [r1, r3]
 8005a44:	fa22 f303 	lsr.w	r3, r2, r3
 8005a48:	4618      	mov	r0, r3
 8005a4a:	bd80      	pop	{r7, pc}
 8005a4c:	40023800 	.word	0x40023800
 8005a50:	0800d35c 	.word	0x0800d35c

08005a54 <HAL_RCC_GetPCLK2Freq>:
 8005a54:	b580      	push	{r7, lr}
 8005a56:	af00      	add	r7, sp, #0
 8005a58:	f7ff ffdc 	bl	8005a14 <HAL_RCC_GetHCLKFreq>
 8005a5c:	4602      	mov	r2, r0
 8005a5e:	4b05      	ldr	r3, [pc, #20]	; (8005a74 <HAL_RCC_GetPCLK2Freq+0x20>)
 8005a60:	689b      	ldr	r3, [r3, #8]
 8005a62:	0b5b      	lsrs	r3, r3, #13
 8005a64:	f003 0307 	and.w	r3, r3, #7
 8005a68:	4903      	ldr	r1, [pc, #12]	; (8005a78 <HAL_RCC_GetPCLK2Freq+0x24>)
 8005a6a:	5ccb      	ldrb	r3, [r1, r3]
 8005a6c:	fa22 f303 	lsr.w	r3, r2, r3
 8005a70:	4618      	mov	r0, r3
 8005a72:	bd80      	pop	{r7, pc}
 8005a74:	40023800 	.word	0x40023800
 8005a78:	0800d35c 	.word	0x0800d35c

08005a7c <HAL_SPI_Init>:
 8005a7c:	b580      	push	{r7, lr}
 8005a7e:	b082      	sub	sp, #8
 8005a80:	af00      	add	r7, sp, #0
 8005a82:	6078      	str	r0, [r7, #4]
 8005a84:	687b      	ldr	r3, [r7, #4]
 8005a86:	2b00      	cmp	r3, #0
 8005a88:	d101      	bne.n	8005a8e <HAL_SPI_Init+0x12>
 8005a8a:	2301      	movs	r3, #1
 8005a8c:	e07b      	b.n	8005b86 <HAL_SPI_Init+0x10a>
 8005a8e:	687b      	ldr	r3, [r7, #4]
 8005a90:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005a92:	2b00      	cmp	r3, #0
 8005a94:	d108      	bne.n	8005aa8 <HAL_SPI_Init+0x2c>
 8005a96:	687b      	ldr	r3, [r7, #4]
 8005a98:	685b      	ldr	r3, [r3, #4]
 8005a9a:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8005a9e:	d009      	beq.n	8005ab4 <HAL_SPI_Init+0x38>
 8005aa0:	687b      	ldr	r3, [r7, #4]
 8005aa2:	2200      	movs	r2, #0
 8005aa4:	61da      	str	r2, [r3, #28]
 8005aa6:	e005      	b.n	8005ab4 <HAL_SPI_Init+0x38>
 8005aa8:	687b      	ldr	r3, [r7, #4]
 8005aaa:	2200      	movs	r2, #0
 8005aac:	611a      	str	r2, [r3, #16]
 8005aae:	687b      	ldr	r3, [r7, #4]
 8005ab0:	2200      	movs	r2, #0
 8005ab2:	615a      	str	r2, [r3, #20]
 8005ab4:	687b      	ldr	r3, [r7, #4]
 8005ab6:	2200      	movs	r2, #0
 8005ab8:	629a      	str	r2, [r3, #40]	; 0x28
 8005aba:	687b      	ldr	r3, [r7, #4]
 8005abc:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 8005ac0:	b2db      	uxtb	r3, r3
 8005ac2:	2b00      	cmp	r3, #0
 8005ac4:	d106      	bne.n	8005ad4 <HAL_SPI_Init+0x58>
 8005ac6:	687b      	ldr	r3, [r7, #4]
 8005ac8:	2200      	movs	r2, #0
 8005aca:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 8005ace:	6878      	ldr	r0, [r7, #4]
 8005ad0:	f7fe fc18 	bl	8004304 <HAL_SPI_MspInit>
 8005ad4:	687b      	ldr	r3, [r7, #4]
 8005ad6:	2202      	movs	r2, #2
 8005ad8:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8005adc:	687b      	ldr	r3, [r7, #4]
 8005ade:	681b      	ldr	r3, [r3, #0]
 8005ae0:	681a      	ldr	r2, [r3, #0]
 8005ae2:	687b      	ldr	r3, [r7, #4]
 8005ae4:	681b      	ldr	r3, [r3, #0]
 8005ae6:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8005aea:	601a      	str	r2, [r3, #0]
 8005aec:	687b      	ldr	r3, [r7, #4]
 8005aee:	685b      	ldr	r3, [r3, #4]
 8005af0:	f403 7282 	and.w	r2, r3, #260	; 0x104
 8005af4:	687b      	ldr	r3, [r7, #4]
 8005af6:	689b      	ldr	r3, [r3, #8]
 8005af8:	f403 4304 	and.w	r3, r3, #33792	; 0x8400
 8005afc:	431a      	orrs	r2, r3
 8005afe:	687b      	ldr	r3, [r7, #4]
 8005b00:	68db      	ldr	r3, [r3, #12]
 8005b02:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 8005b06:	431a      	orrs	r2, r3
 8005b08:	687b      	ldr	r3, [r7, #4]
 8005b0a:	691b      	ldr	r3, [r3, #16]
 8005b0c:	f003 0302 	and.w	r3, r3, #2
 8005b10:	431a      	orrs	r2, r3
 8005b12:	687b      	ldr	r3, [r7, #4]
 8005b14:	695b      	ldr	r3, [r3, #20]
 8005b16:	f003 0301 	and.w	r3, r3, #1
 8005b1a:	431a      	orrs	r2, r3
 8005b1c:	687b      	ldr	r3, [r7, #4]
 8005b1e:	699b      	ldr	r3, [r3, #24]
 8005b20:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8005b24:	431a      	orrs	r2, r3
 8005b26:	687b      	ldr	r3, [r7, #4]
 8005b28:	69db      	ldr	r3, [r3, #28]
 8005b2a:	f003 0338 	and.w	r3, r3, #56	; 0x38
 8005b2e:	431a      	orrs	r2, r3
 8005b30:	687b      	ldr	r3, [r7, #4]
 8005b32:	6a1b      	ldr	r3, [r3, #32]
 8005b34:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8005b38:	ea42 0103 	orr.w	r1, r2, r3
 8005b3c:	687b      	ldr	r3, [r7, #4]
 8005b3e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8005b40:	f403 5200 	and.w	r2, r3, #8192	; 0x2000
 8005b44:	687b      	ldr	r3, [r7, #4]
 8005b46:	681b      	ldr	r3, [r3, #0]
 8005b48:	430a      	orrs	r2, r1
 8005b4a:	601a      	str	r2, [r3, #0]
 8005b4c:	687b      	ldr	r3, [r7, #4]
 8005b4e:	699b      	ldr	r3, [r3, #24]
 8005b50:	0c1b      	lsrs	r3, r3, #16
 8005b52:	f003 0104 	and.w	r1, r3, #4
 8005b56:	687b      	ldr	r3, [r7, #4]
 8005b58:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005b5a:	f003 0210 	and.w	r2, r3, #16
 8005b5e:	687b      	ldr	r3, [r7, #4]
 8005b60:	681b      	ldr	r3, [r3, #0]
 8005b62:	430a      	orrs	r2, r1
 8005b64:	605a      	str	r2, [r3, #4]
 8005b66:	687b      	ldr	r3, [r7, #4]
 8005b68:	681b      	ldr	r3, [r3, #0]
 8005b6a:	69da      	ldr	r2, [r3, #28]
 8005b6c:	687b      	ldr	r3, [r7, #4]
 8005b6e:	681b      	ldr	r3, [r3, #0]
 8005b70:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8005b74:	61da      	str	r2, [r3, #28]
 8005b76:	687b      	ldr	r3, [r7, #4]
 8005b78:	2200      	movs	r2, #0
 8005b7a:	655a      	str	r2, [r3, #84]	; 0x54
 8005b7c:	687b      	ldr	r3, [r7, #4]
 8005b7e:	2201      	movs	r2, #1
 8005b80:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8005b84:	2300      	movs	r3, #0
 8005b86:	4618      	mov	r0, r3
 8005b88:	3708      	adds	r7, #8
 8005b8a:	46bd      	mov	sp, r7
 8005b8c:	bd80      	pop	{r7, pc}

08005b8e <HAL_SPI_Transmit>:
 8005b8e:	b580      	push	{r7, lr}
 8005b90:	b088      	sub	sp, #32
 8005b92:	af00      	add	r7, sp, #0
 8005b94:	60f8      	str	r0, [r7, #12]
 8005b96:	60b9      	str	r1, [r7, #8]
 8005b98:	603b      	str	r3, [r7, #0]
 8005b9a:	4613      	mov	r3, r2
 8005b9c:	80fb      	strh	r3, [r7, #6]
 8005b9e:	2300      	movs	r3, #0
 8005ba0:	77fb      	strb	r3, [r7, #31]
 8005ba2:	68fb      	ldr	r3, [r7, #12]
 8005ba4:	f893 3050 	ldrb.w	r3, [r3, #80]	; 0x50
 8005ba8:	2b01      	cmp	r3, #1
 8005baa:	d101      	bne.n	8005bb0 <HAL_SPI_Transmit+0x22>
 8005bac:	2302      	movs	r3, #2
 8005bae:	e126      	b.n	8005dfe <HAL_SPI_Transmit+0x270>
 8005bb0:	68fb      	ldr	r3, [r7, #12]
 8005bb2:	2201      	movs	r2, #1
 8005bb4:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 8005bb8:	f7fe ff56 	bl	8004a68 <HAL_GetTick>
 8005bbc:	61b8      	str	r0, [r7, #24]
 8005bbe:	88fb      	ldrh	r3, [r7, #6]
 8005bc0:	82fb      	strh	r3, [r7, #22]
 8005bc2:	68fb      	ldr	r3, [r7, #12]
 8005bc4:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 8005bc8:	b2db      	uxtb	r3, r3
 8005bca:	2b01      	cmp	r3, #1
 8005bcc:	d002      	beq.n	8005bd4 <HAL_SPI_Transmit+0x46>
 8005bce:	2302      	movs	r3, #2
 8005bd0:	77fb      	strb	r3, [r7, #31]
 8005bd2:	e10b      	b.n	8005dec <HAL_SPI_Transmit+0x25e>
 8005bd4:	68bb      	ldr	r3, [r7, #8]
 8005bd6:	2b00      	cmp	r3, #0
 8005bd8:	d002      	beq.n	8005be0 <HAL_SPI_Transmit+0x52>
 8005bda:	88fb      	ldrh	r3, [r7, #6]
 8005bdc:	2b00      	cmp	r3, #0
 8005bde:	d102      	bne.n	8005be6 <HAL_SPI_Transmit+0x58>
 8005be0:	2301      	movs	r3, #1
 8005be2:	77fb      	strb	r3, [r7, #31]
 8005be4:	e102      	b.n	8005dec <HAL_SPI_Transmit+0x25e>
 8005be6:	68fb      	ldr	r3, [r7, #12]
 8005be8:	2203      	movs	r2, #3
 8005bea:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8005bee:	68fb      	ldr	r3, [r7, #12]
 8005bf0:	2200      	movs	r2, #0
 8005bf2:	655a      	str	r2, [r3, #84]	; 0x54
 8005bf4:	68fb      	ldr	r3, [r7, #12]
 8005bf6:	68ba      	ldr	r2, [r7, #8]
 8005bf8:	631a      	str	r2, [r3, #48]	; 0x30
 8005bfa:	68fb      	ldr	r3, [r7, #12]
 8005bfc:	88fa      	ldrh	r2, [r7, #6]
 8005bfe:	869a      	strh	r2, [r3, #52]	; 0x34
 8005c00:	68fb      	ldr	r3, [r7, #12]
 8005c02:	88fa      	ldrh	r2, [r7, #6]
 8005c04:	86da      	strh	r2, [r3, #54]	; 0x36
 8005c06:	68fb      	ldr	r3, [r7, #12]
 8005c08:	2200      	movs	r2, #0
 8005c0a:	639a      	str	r2, [r3, #56]	; 0x38
 8005c0c:	68fb      	ldr	r3, [r7, #12]
 8005c0e:	2200      	movs	r2, #0
 8005c10:	879a      	strh	r2, [r3, #60]	; 0x3c
 8005c12:	68fb      	ldr	r3, [r7, #12]
 8005c14:	2200      	movs	r2, #0
 8005c16:	87da      	strh	r2, [r3, #62]	; 0x3e
 8005c18:	68fb      	ldr	r3, [r7, #12]
 8005c1a:	2200      	movs	r2, #0
 8005c1c:	645a      	str	r2, [r3, #68]	; 0x44
 8005c1e:	68fb      	ldr	r3, [r7, #12]
 8005c20:	2200      	movs	r2, #0
 8005c22:	641a      	str	r2, [r3, #64]	; 0x40
 8005c24:	68fb      	ldr	r3, [r7, #12]
 8005c26:	689b      	ldr	r3, [r3, #8]
 8005c28:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8005c2c:	d10f      	bne.n	8005c4e <HAL_SPI_Transmit+0xc0>
 8005c2e:	68fb      	ldr	r3, [r7, #12]
 8005c30:	681b      	ldr	r3, [r3, #0]
 8005c32:	681a      	ldr	r2, [r3, #0]
 8005c34:	68fb      	ldr	r3, [r7, #12]
 8005c36:	681b      	ldr	r3, [r3, #0]
 8005c38:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8005c3c:	601a      	str	r2, [r3, #0]
 8005c3e:	68fb      	ldr	r3, [r7, #12]
 8005c40:	681b      	ldr	r3, [r3, #0]
 8005c42:	681a      	ldr	r2, [r3, #0]
 8005c44:	68fb      	ldr	r3, [r7, #12]
 8005c46:	681b      	ldr	r3, [r3, #0]
 8005c48:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8005c4c:	601a      	str	r2, [r3, #0]
 8005c4e:	68fb      	ldr	r3, [r7, #12]
 8005c50:	681b      	ldr	r3, [r3, #0]
 8005c52:	681b      	ldr	r3, [r3, #0]
 8005c54:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8005c58:	2b40      	cmp	r3, #64	; 0x40
 8005c5a:	d007      	beq.n	8005c6c <HAL_SPI_Transmit+0xde>
 8005c5c:	68fb      	ldr	r3, [r7, #12]
 8005c5e:	681b      	ldr	r3, [r3, #0]
 8005c60:	681a      	ldr	r2, [r3, #0]
 8005c62:	68fb      	ldr	r3, [r7, #12]
 8005c64:	681b      	ldr	r3, [r3, #0]
 8005c66:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8005c6a:	601a      	str	r2, [r3, #0]
 8005c6c:	68fb      	ldr	r3, [r7, #12]
 8005c6e:	68db      	ldr	r3, [r3, #12]
 8005c70:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8005c74:	d14b      	bne.n	8005d0e <HAL_SPI_Transmit+0x180>
 8005c76:	68fb      	ldr	r3, [r7, #12]
 8005c78:	685b      	ldr	r3, [r3, #4]
 8005c7a:	2b00      	cmp	r3, #0
 8005c7c:	d002      	beq.n	8005c84 <HAL_SPI_Transmit+0xf6>
 8005c7e:	8afb      	ldrh	r3, [r7, #22]
 8005c80:	2b01      	cmp	r3, #1
 8005c82:	d13e      	bne.n	8005d02 <HAL_SPI_Transmit+0x174>
 8005c84:	68fb      	ldr	r3, [r7, #12]
 8005c86:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005c88:	881a      	ldrh	r2, [r3, #0]
 8005c8a:	68fb      	ldr	r3, [r7, #12]
 8005c8c:	681b      	ldr	r3, [r3, #0]
 8005c8e:	60da      	str	r2, [r3, #12]
 8005c90:	68fb      	ldr	r3, [r7, #12]
 8005c92:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005c94:	1c9a      	adds	r2, r3, #2
 8005c96:	68fb      	ldr	r3, [r7, #12]
 8005c98:	631a      	str	r2, [r3, #48]	; 0x30
 8005c9a:	68fb      	ldr	r3, [r7, #12]
 8005c9c:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8005c9e:	b29b      	uxth	r3, r3
 8005ca0:	3b01      	subs	r3, #1
 8005ca2:	b29a      	uxth	r2, r3
 8005ca4:	68fb      	ldr	r3, [r7, #12]
 8005ca6:	86da      	strh	r2, [r3, #54]	; 0x36
 8005ca8:	e02b      	b.n	8005d02 <HAL_SPI_Transmit+0x174>
 8005caa:	68fb      	ldr	r3, [r7, #12]
 8005cac:	681b      	ldr	r3, [r3, #0]
 8005cae:	689b      	ldr	r3, [r3, #8]
 8005cb0:	f003 0302 	and.w	r3, r3, #2
 8005cb4:	2b02      	cmp	r3, #2
 8005cb6:	d112      	bne.n	8005cde <HAL_SPI_Transmit+0x150>
 8005cb8:	68fb      	ldr	r3, [r7, #12]
 8005cba:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005cbc:	881a      	ldrh	r2, [r3, #0]
 8005cbe:	68fb      	ldr	r3, [r7, #12]
 8005cc0:	681b      	ldr	r3, [r3, #0]
 8005cc2:	60da      	str	r2, [r3, #12]
 8005cc4:	68fb      	ldr	r3, [r7, #12]
 8005cc6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005cc8:	1c9a      	adds	r2, r3, #2
 8005cca:	68fb      	ldr	r3, [r7, #12]
 8005ccc:	631a      	str	r2, [r3, #48]	; 0x30
 8005cce:	68fb      	ldr	r3, [r7, #12]
 8005cd0:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8005cd2:	b29b      	uxth	r3, r3
 8005cd4:	3b01      	subs	r3, #1
 8005cd6:	b29a      	uxth	r2, r3
 8005cd8:	68fb      	ldr	r3, [r7, #12]
 8005cda:	86da      	strh	r2, [r3, #54]	; 0x36
 8005cdc:	e011      	b.n	8005d02 <HAL_SPI_Transmit+0x174>
 8005cde:	f7fe fec3 	bl	8004a68 <HAL_GetTick>
 8005ce2:	4602      	mov	r2, r0
 8005ce4:	69bb      	ldr	r3, [r7, #24]
 8005ce6:	1ad3      	subs	r3, r2, r3
 8005ce8:	683a      	ldr	r2, [r7, #0]
 8005cea:	429a      	cmp	r2, r3
 8005cec:	d803      	bhi.n	8005cf6 <HAL_SPI_Transmit+0x168>
 8005cee:	683b      	ldr	r3, [r7, #0]
 8005cf0:	f1b3 3fff 	cmp.w	r3, #4294967295
 8005cf4:	d102      	bne.n	8005cfc <HAL_SPI_Transmit+0x16e>
 8005cf6:	683b      	ldr	r3, [r7, #0]
 8005cf8:	2b00      	cmp	r3, #0
 8005cfa:	d102      	bne.n	8005d02 <HAL_SPI_Transmit+0x174>
 8005cfc:	2303      	movs	r3, #3
 8005cfe:	77fb      	strb	r3, [r7, #31]
 8005d00:	e074      	b.n	8005dec <HAL_SPI_Transmit+0x25e>
 8005d02:	68fb      	ldr	r3, [r7, #12]
 8005d04:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8005d06:	b29b      	uxth	r3, r3
 8005d08:	2b00      	cmp	r3, #0
 8005d0a:	d1ce      	bne.n	8005caa <HAL_SPI_Transmit+0x11c>
 8005d0c:	e04c      	b.n	8005da8 <HAL_SPI_Transmit+0x21a>
 8005d0e:	68fb      	ldr	r3, [r7, #12]
 8005d10:	685b      	ldr	r3, [r3, #4]
 8005d12:	2b00      	cmp	r3, #0
 8005d14:	d002      	beq.n	8005d1c <HAL_SPI_Transmit+0x18e>
 8005d16:	8afb      	ldrh	r3, [r7, #22]
 8005d18:	2b01      	cmp	r3, #1
 8005d1a:	d140      	bne.n	8005d9e <HAL_SPI_Transmit+0x210>
 8005d1c:	68fb      	ldr	r3, [r7, #12]
 8005d1e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8005d20:	68fb      	ldr	r3, [r7, #12]
 8005d22:	681b      	ldr	r3, [r3, #0]
 8005d24:	330c      	adds	r3, #12
 8005d26:	7812      	ldrb	r2, [r2, #0]
 8005d28:	701a      	strb	r2, [r3, #0]
 8005d2a:	68fb      	ldr	r3, [r7, #12]
 8005d2c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005d2e:	1c5a      	adds	r2, r3, #1
 8005d30:	68fb      	ldr	r3, [r7, #12]
 8005d32:	631a      	str	r2, [r3, #48]	; 0x30
 8005d34:	68fb      	ldr	r3, [r7, #12]
 8005d36:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8005d38:	b29b      	uxth	r3, r3
 8005d3a:	3b01      	subs	r3, #1
 8005d3c:	b29a      	uxth	r2, r3
 8005d3e:	68fb      	ldr	r3, [r7, #12]
 8005d40:	86da      	strh	r2, [r3, #54]	; 0x36
 8005d42:	e02c      	b.n	8005d9e <HAL_SPI_Transmit+0x210>
 8005d44:	68fb      	ldr	r3, [r7, #12]
 8005d46:	681b      	ldr	r3, [r3, #0]
 8005d48:	689b      	ldr	r3, [r3, #8]
 8005d4a:	f003 0302 	and.w	r3, r3, #2
 8005d4e:	2b02      	cmp	r3, #2
 8005d50:	d113      	bne.n	8005d7a <HAL_SPI_Transmit+0x1ec>
 8005d52:	68fb      	ldr	r3, [r7, #12]
 8005d54:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8005d56:	68fb      	ldr	r3, [r7, #12]
 8005d58:	681b      	ldr	r3, [r3, #0]
 8005d5a:	330c      	adds	r3, #12
 8005d5c:	7812      	ldrb	r2, [r2, #0]
 8005d5e:	701a      	strb	r2, [r3, #0]
 8005d60:	68fb      	ldr	r3, [r7, #12]
 8005d62:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8005d64:	1c5a      	adds	r2, r3, #1
 8005d66:	68fb      	ldr	r3, [r7, #12]
 8005d68:	631a      	str	r2, [r3, #48]	; 0x30
 8005d6a:	68fb      	ldr	r3, [r7, #12]
 8005d6c:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8005d6e:	b29b      	uxth	r3, r3
 8005d70:	3b01      	subs	r3, #1
 8005d72:	b29a      	uxth	r2, r3
 8005d74:	68fb      	ldr	r3, [r7, #12]
 8005d76:	86da      	strh	r2, [r3, #54]	; 0x36
 8005d78:	e011      	b.n	8005d9e <HAL_SPI_Transmit+0x210>
 8005d7a:	f7fe fe75 	bl	8004a68 <HAL_GetTick>
 8005d7e:	4602      	mov	r2, r0
 8005d80:	69bb      	ldr	r3, [r7, #24]
 8005d82:	1ad3      	subs	r3, r2, r3
 8005d84:	683a      	ldr	r2, [r7, #0]
 8005d86:	429a      	cmp	r2, r3
 8005d88:	d803      	bhi.n	8005d92 <HAL_SPI_Transmit+0x204>
 8005d8a:	683b      	ldr	r3, [r7, #0]
 8005d8c:	f1b3 3fff 	cmp.w	r3, #4294967295
 8005d90:	d102      	bne.n	8005d98 <HAL_SPI_Transmit+0x20a>
 8005d92:	683b      	ldr	r3, [r7, #0]
 8005d94:	2b00      	cmp	r3, #0
 8005d96:	d102      	bne.n	8005d9e <HAL_SPI_Transmit+0x210>
 8005d98:	2303      	movs	r3, #3
 8005d9a:	77fb      	strb	r3, [r7, #31]
 8005d9c:	e026      	b.n	8005dec <HAL_SPI_Transmit+0x25e>
 8005d9e:	68fb      	ldr	r3, [r7, #12]
 8005da0:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8005da2:	b29b      	uxth	r3, r3
 8005da4:	2b00      	cmp	r3, #0
 8005da6:	d1cd      	bne.n	8005d44 <HAL_SPI_Transmit+0x1b6>
 8005da8:	69ba      	ldr	r2, [r7, #24]
 8005daa:	6839      	ldr	r1, [r7, #0]
 8005dac:	68f8      	ldr	r0, [r7, #12]
 8005dae:	f000 fbcb 	bl	8006548 <SPI_EndRxTxTransaction>
 8005db2:	4603      	mov	r3, r0
 8005db4:	2b00      	cmp	r3, #0
 8005db6:	d002      	beq.n	8005dbe <HAL_SPI_Transmit+0x230>
 8005db8:	68fb      	ldr	r3, [r7, #12]
 8005dba:	2220      	movs	r2, #32
 8005dbc:	655a      	str	r2, [r3, #84]	; 0x54
 8005dbe:	68fb      	ldr	r3, [r7, #12]
 8005dc0:	689b      	ldr	r3, [r3, #8]
 8005dc2:	2b00      	cmp	r3, #0
 8005dc4:	d10a      	bne.n	8005ddc <HAL_SPI_Transmit+0x24e>
 8005dc6:	2300      	movs	r3, #0
 8005dc8:	613b      	str	r3, [r7, #16]
 8005dca:	68fb      	ldr	r3, [r7, #12]
 8005dcc:	681b      	ldr	r3, [r3, #0]
 8005dce:	68db      	ldr	r3, [r3, #12]
 8005dd0:	613b      	str	r3, [r7, #16]
 8005dd2:	68fb      	ldr	r3, [r7, #12]
 8005dd4:	681b      	ldr	r3, [r3, #0]
 8005dd6:	689b      	ldr	r3, [r3, #8]
 8005dd8:	613b      	str	r3, [r7, #16]
 8005dda:	693b      	ldr	r3, [r7, #16]
 8005ddc:	68fb      	ldr	r3, [r7, #12]
 8005dde:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8005de0:	2b00      	cmp	r3, #0
 8005de2:	d002      	beq.n	8005dea <HAL_SPI_Transmit+0x25c>
 8005de4:	2301      	movs	r3, #1
 8005de6:	77fb      	strb	r3, [r7, #31]
 8005de8:	e000      	b.n	8005dec <HAL_SPI_Transmit+0x25e>
 8005dea:	bf00      	nop
 8005dec:	68fb      	ldr	r3, [r7, #12]
 8005dee:	2201      	movs	r2, #1
 8005df0:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8005df4:	68fb      	ldr	r3, [r7, #12]
 8005df6:	2200      	movs	r2, #0
 8005df8:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 8005dfc:	7ffb      	ldrb	r3, [r7, #31]
 8005dfe:	4618      	mov	r0, r3
 8005e00:	3720      	adds	r7, #32
 8005e02:	46bd      	mov	sp, r7
 8005e04:	bd80      	pop	{r7, pc}

08005e06 <HAL_SPI_Receive>:
 8005e06:	b580      	push	{r7, lr}
 8005e08:	b088      	sub	sp, #32
 8005e0a:	af02      	add	r7, sp, #8
 8005e0c:	60f8      	str	r0, [r7, #12]
 8005e0e:	60b9      	str	r1, [r7, #8]
 8005e10:	603b      	str	r3, [r7, #0]
 8005e12:	4613      	mov	r3, r2
 8005e14:	80fb      	strh	r3, [r7, #6]
 8005e16:	2300      	movs	r3, #0
 8005e18:	75fb      	strb	r3, [r7, #23]
 8005e1a:	68fb      	ldr	r3, [r7, #12]
 8005e1c:	685b      	ldr	r3, [r3, #4]
 8005e1e:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8005e22:	d112      	bne.n	8005e4a <HAL_SPI_Receive+0x44>
 8005e24:	68fb      	ldr	r3, [r7, #12]
 8005e26:	689b      	ldr	r3, [r3, #8]
 8005e28:	2b00      	cmp	r3, #0
 8005e2a:	d10e      	bne.n	8005e4a <HAL_SPI_Receive+0x44>
 8005e2c:	68fb      	ldr	r3, [r7, #12]
 8005e2e:	2204      	movs	r2, #4
 8005e30:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8005e34:	88fa      	ldrh	r2, [r7, #6]
 8005e36:	683b      	ldr	r3, [r7, #0]
 8005e38:	9300      	str	r3, [sp, #0]
 8005e3a:	4613      	mov	r3, r2
 8005e3c:	68ba      	ldr	r2, [r7, #8]
 8005e3e:	68b9      	ldr	r1, [r7, #8]
 8005e40:	68f8      	ldr	r0, [r7, #12]
 8005e42:	f000 f8f1 	bl	8006028 <HAL_SPI_TransmitReceive>
 8005e46:	4603      	mov	r3, r0
 8005e48:	e0ea      	b.n	8006020 <HAL_SPI_Receive+0x21a>
 8005e4a:	68fb      	ldr	r3, [r7, #12]
 8005e4c:	f893 3050 	ldrb.w	r3, [r3, #80]	; 0x50
 8005e50:	2b01      	cmp	r3, #1
 8005e52:	d101      	bne.n	8005e58 <HAL_SPI_Receive+0x52>
 8005e54:	2302      	movs	r3, #2
 8005e56:	e0e3      	b.n	8006020 <HAL_SPI_Receive+0x21a>
 8005e58:	68fb      	ldr	r3, [r7, #12]
 8005e5a:	2201      	movs	r2, #1
 8005e5c:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 8005e60:	f7fe fe02 	bl	8004a68 <HAL_GetTick>
 8005e64:	6138      	str	r0, [r7, #16]
 8005e66:	68fb      	ldr	r3, [r7, #12]
 8005e68:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 8005e6c:	b2db      	uxtb	r3, r3
 8005e6e:	2b01      	cmp	r3, #1
 8005e70:	d002      	beq.n	8005e78 <HAL_SPI_Receive+0x72>
 8005e72:	2302      	movs	r3, #2
 8005e74:	75fb      	strb	r3, [r7, #23]
 8005e76:	e0ca      	b.n	800600e <HAL_SPI_Receive+0x208>
 8005e78:	68bb      	ldr	r3, [r7, #8]
 8005e7a:	2b00      	cmp	r3, #0
 8005e7c:	d002      	beq.n	8005e84 <HAL_SPI_Receive+0x7e>
 8005e7e:	88fb      	ldrh	r3, [r7, #6]
 8005e80:	2b00      	cmp	r3, #0
 8005e82:	d102      	bne.n	8005e8a <HAL_SPI_Receive+0x84>
 8005e84:	2301      	movs	r3, #1
 8005e86:	75fb      	strb	r3, [r7, #23]
 8005e88:	e0c1      	b.n	800600e <HAL_SPI_Receive+0x208>
 8005e8a:	68fb      	ldr	r3, [r7, #12]
 8005e8c:	2204      	movs	r2, #4
 8005e8e:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8005e92:	68fb      	ldr	r3, [r7, #12]
 8005e94:	2200      	movs	r2, #0
 8005e96:	655a      	str	r2, [r3, #84]	; 0x54
 8005e98:	68fb      	ldr	r3, [r7, #12]
 8005e9a:	68ba      	ldr	r2, [r7, #8]
 8005e9c:	639a      	str	r2, [r3, #56]	; 0x38
 8005e9e:	68fb      	ldr	r3, [r7, #12]
 8005ea0:	88fa      	ldrh	r2, [r7, #6]
 8005ea2:	879a      	strh	r2, [r3, #60]	; 0x3c
 8005ea4:	68fb      	ldr	r3, [r7, #12]
 8005ea6:	88fa      	ldrh	r2, [r7, #6]
 8005ea8:	87da      	strh	r2, [r3, #62]	; 0x3e
 8005eaa:	68fb      	ldr	r3, [r7, #12]
 8005eac:	2200      	movs	r2, #0
 8005eae:	631a      	str	r2, [r3, #48]	; 0x30
 8005eb0:	68fb      	ldr	r3, [r7, #12]
 8005eb2:	2200      	movs	r2, #0
 8005eb4:	869a      	strh	r2, [r3, #52]	; 0x34
 8005eb6:	68fb      	ldr	r3, [r7, #12]
 8005eb8:	2200      	movs	r2, #0
 8005eba:	86da      	strh	r2, [r3, #54]	; 0x36
 8005ebc:	68fb      	ldr	r3, [r7, #12]
 8005ebe:	2200      	movs	r2, #0
 8005ec0:	641a      	str	r2, [r3, #64]	; 0x40
 8005ec2:	68fb      	ldr	r3, [r7, #12]
 8005ec4:	2200      	movs	r2, #0
 8005ec6:	645a      	str	r2, [r3, #68]	; 0x44
 8005ec8:	68fb      	ldr	r3, [r7, #12]
 8005eca:	689b      	ldr	r3, [r3, #8]
 8005ecc:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8005ed0:	d10f      	bne.n	8005ef2 <HAL_SPI_Receive+0xec>
 8005ed2:	68fb      	ldr	r3, [r7, #12]
 8005ed4:	681b      	ldr	r3, [r3, #0]
 8005ed6:	681a      	ldr	r2, [r3, #0]
 8005ed8:	68fb      	ldr	r3, [r7, #12]
 8005eda:	681b      	ldr	r3, [r3, #0]
 8005edc:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8005ee0:	601a      	str	r2, [r3, #0]
 8005ee2:	68fb      	ldr	r3, [r7, #12]
 8005ee4:	681b      	ldr	r3, [r3, #0]
 8005ee6:	681a      	ldr	r2, [r3, #0]
 8005ee8:	68fb      	ldr	r3, [r7, #12]
 8005eea:	681b      	ldr	r3, [r3, #0]
 8005eec:	f422 4280 	bic.w	r2, r2, #16384	; 0x4000
 8005ef0:	601a      	str	r2, [r3, #0]
 8005ef2:	68fb      	ldr	r3, [r7, #12]
 8005ef4:	681b      	ldr	r3, [r3, #0]
 8005ef6:	681b      	ldr	r3, [r3, #0]
 8005ef8:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8005efc:	2b40      	cmp	r3, #64	; 0x40
 8005efe:	d007      	beq.n	8005f10 <HAL_SPI_Receive+0x10a>
 8005f00:	68fb      	ldr	r3, [r7, #12]
 8005f02:	681b      	ldr	r3, [r3, #0]
 8005f04:	681a      	ldr	r2, [r3, #0]
 8005f06:	68fb      	ldr	r3, [r7, #12]
 8005f08:	681b      	ldr	r3, [r3, #0]
 8005f0a:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8005f0e:	601a      	str	r2, [r3, #0]
 8005f10:	68fb      	ldr	r3, [r7, #12]
 8005f12:	68db      	ldr	r3, [r3, #12]
 8005f14:	2b00      	cmp	r3, #0
 8005f16:	d162      	bne.n	8005fde <HAL_SPI_Receive+0x1d8>
 8005f18:	e02e      	b.n	8005f78 <HAL_SPI_Receive+0x172>
 8005f1a:	68fb      	ldr	r3, [r7, #12]
 8005f1c:	681b      	ldr	r3, [r3, #0]
 8005f1e:	689b      	ldr	r3, [r3, #8]
 8005f20:	f003 0301 	and.w	r3, r3, #1
 8005f24:	2b01      	cmp	r3, #1
 8005f26:	d115      	bne.n	8005f54 <HAL_SPI_Receive+0x14e>
 8005f28:	68fb      	ldr	r3, [r7, #12]
 8005f2a:	681b      	ldr	r3, [r3, #0]
 8005f2c:	f103 020c 	add.w	r2, r3, #12
 8005f30:	68fb      	ldr	r3, [r7, #12]
 8005f32:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8005f34:	7812      	ldrb	r2, [r2, #0]
 8005f36:	b2d2      	uxtb	r2, r2
 8005f38:	701a      	strb	r2, [r3, #0]
 8005f3a:	68fb      	ldr	r3, [r7, #12]
 8005f3c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8005f3e:	1c5a      	adds	r2, r3, #1
 8005f40:	68fb      	ldr	r3, [r7, #12]
 8005f42:	639a      	str	r2, [r3, #56]	; 0x38
 8005f44:	68fb      	ldr	r3, [r7, #12]
 8005f46:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8005f48:	b29b      	uxth	r3, r3
 8005f4a:	3b01      	subs	r3, #1
 8005f4c:	b29a      	uxth	r2, r3
 8005f4e:	68fb      	ldr	r3, [r7, #12]
 8005f50:	87da      	strh	r2, [r3, #62]	; 0x3e
 8005f52:	e011      	b.n	8005f78 <HAL_SPI_Receive+0x172>
 8005f54:	f7fe fd88 	bl	8004a68 <HAL_GetTick>
 8005f58:	4602      	mov	r2, r0
 8005f5a:	693b      	ldr	r3, [r7, #16]
 8005f5c:	1ad3      	subs	r3, r2, r3
 8005f5e:	683a      	ldr	r2, [r7, #0]
 8005f60:	429a      	cmp	r2, r3
 8005f62:	d803      	bhi.n	8005f6c <HAL_SPI_Receive+0x166>
 8005f64:	683b      	ldr	r3, [r7, #0]
 8005f66:	f1b3 3fff 	cmp.w	r3, #4294967295
 8005f6a:	d102      	bne.n	8005f72 <HAL_SPI_Receive+0x16c>
 8005f6c:	683b      	ldr	r3, [r7, #0]
 8005f6e:	2b00      	cmp	r3, #0
 8005f70:	d102      	bne.n	8005f78 <HAL_SPI_Receive+0x172>
 8005f72:	2303      	movs	r3, #3
 8005f74:	75fb      	strb	r3, [r7, #23]
 8005f76:	e04a      	b.n	800600e <HAL_SPI_Receive+0x208>
 8005f78:	68fb      	ldr	r3, [r7, #12]
 8005f7a:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8005f7c:	b29b      	uxth	r3, r3
 8005f7e:	2b00      	cmp	r3, #0
 8005f80:	d1cb      	bne.n	8005f1a <HAL_SPI_Receive+0x114>
 8005f82:	e031      	b.n	8005fe8 <HAL_SPI_Receive+0x1e2>
 8005f84:	68fb      	ldr	r3, [r7, #12]
 8005f86:	681b      	ldr	r3, [r3, #0]
 8005f88:	689b      	ldr	r3, [r3, #8]
 8005f8a:	f003 0301 	and.w	r3, r3, #1
 8005f8e:	2b01      	cmp	r3, #1
 8005f90:	d113      	bne.n	8005fba <HAL_SPI_Receive+0x1b4>
 8005f92:	68fb      	ldr	r3, [r7, #12]
 8005f94:	681b      	ldr	r3, [r3, #0]
 8005f96:	68da      	ldr	r2, [r3, #12]
 8005f98:	68fb      	ldr	r3, [r7, #12]
 8005f9a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8005f9c:	b292      	uxth	r2, r2
 8005f9e:	801a      	strh	r2, [r3, #0]
 8005fa0:	68fb      	ldr	r3, [r7, #12]
 8005fa2:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8005fa4:	1c9a      	adds	r2, r3, #2
 8005fa6:	68fb      	ldr	r3, [r7, #12]
 8005fa8:	639a      	str	r2, [r3, #56]	; 0x38
 8005faa:	68fb      	ldr	r3, [r7, #12]
 8005fac:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8005fae:	b29b      	uxth	r3, r3
 8005fb0:	3b01      	subs	r3, #1
 8005fb2:	b29a      	uxth	r2, r3
 8005fb4:	68fb      	ldr	r3, [r7, #12]
 8005fb6:	87da      	strh	r2, [r3, #62]	; 0x3e
 8005fb8:	e011      	b.n	8005fde <HAL_SPI_Receive+0x1d8>
 8005fba:	f7fe fd55 	bl	8004a68 <HAL_GetTick>
 8005fbe:	4602      	mov	r2, r0
 8005fc0:	693b      	ldr	r3, [r7, #16]
 8005fc2:	1ad3      	subs	r3, r2, r3
 8005fc4:	683a      	ldr	r2, [r7, #0]
 8005fc6:	429a      	cmp	r2, r3
 8005fc8:	d803      	bhi.n	8005fd2 <HAL_SPI_Receive+0x1cc>
 8005fca:	683b      	ldr	r3, [r7, #0]
 8005fcc:	f1b3 3fff 	cmp.w	r3, #4294967295
 8005fd0:	d102      	bne.n	8005fd8 <HAL_SPI_Receive+0x1d2>
 8005fd2:	683b      	ldr	r3, [r7, #0]
 8005fd4:	2b00      	cmp	r3, #0
 8005fd6:	d102      	bne.n	8005fde <HAL_SPI_Receive+0x1d8>
 8005fd8:	2303      	movs	r3, #3
 8005fda:	75fb      	strb	r3, [r7, #23]
 8005fdc:	e017      	b.n	800600e <HAL_SPI_Receive+0x208>
 8005fde:	68fb      	ldr	r3, [r7, #12]
 8005fe0:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 8005fe2:	b29b      	uxth	r3, r3
 8005fe4:	2b00      	cmp	r3, #0
 8005fe6:	d1cd      	bne.n	8005f84 <HAL_SPI_Receive+0x17e>
 8005fe8:	693a      	ldr	r2, [r7, #16]
 8005fea:	6839      	ldr	r1, [r7, #0]
 8005fec:	68f8      	ldr	r0, [r7, #12]
 8005fee:	f000 fa45 	bl	800647c <SPI_EndRxTransaction>
 8005ff2:	4603      	mov	r3, r0
 8005ff4:	2b00      	cmp	r3, #0
 8005ff6:	d002      	beq.n	8005ffe <HAL_SPI_Receive+0x1f8>
 8005ff8:	68fb      	ldr	r3, [r7, #12]
 8005ffa:	2220      	movs	r2, #32
 8005ffc:	655a      	str	r2, [r3, #84]	; 0x54
 8005ffe:	68fb      	ldr	r3, [r7, #12]
 8006000:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8006002:	2b00      	cmp	r3, #0
 8006004:	d002      	beq.n	800600c <HAL_SPI_Receive+0x206>
 8006006:	2301      	movs	r3, #1
 8006008:	75fb      	strb	r3, [r7, #23]
 800600a:	e000      	b.n	800600e <HAL_SPI_Receive+0x208>
 800600c:	bf00      	nop
 800600e:	68fb      	ldr	r3, [r7, #12]
 8006010:	2201      	movs	r2, #1
 8006012:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8006016:	68fb      	ldr	r3, [r7, #12]
 8006018:	2200      	movs	r2, #0
 800601a:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 800601e:	7dfb      	ldrb	r3, [r7, #23]
 8006020:	4618      	mov	r0, r3
 8006022:	3718      	adds	r7, #24
 8006024:	46bd      	mov	sp, r7
 8006026:	bd80      	pop	{r7, pc}

08006028 <HAL_SPI_TransmitReceive>:
 8006028:	b580      	push	{r7, lr}
 800602a:	b08c      	sub	sp, #48	; 0x30
 800602c:	af00      	add	r7, sp, #0
 800602e:	60f8      	str	r0, [r7, #12]
 8006030:	60b9      	str	r1, [r7, #8]
 8006032:	607a      	str	r2, [r7, #4]
 8006034:	807b      	strh	r3, [r7, #2]
 8006036:	2301      	movs	r3, #1
 8006038:	62fb      	str	r3, [r7, #44]	; 0x2c
 800603a:	2300      	movs	r3, #0
 800603c:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 8006040:	68fb      	ldr	r3, [r7, #12]
 8006042:	f893 3050 	ldrb.w	r3, [r3, #80]	; 0x50
 8006046:	2b01      	cmp	r3, #1
 8006048:	d101      	bne.n	800604e <HAL_SPI_TransmitReceive+0x26>
 800604a:	2302      	movs	r3, #2
 800604c:	e18a      	b.n	8006364 <HAL_SPI_TransmitReceive+0x33c>
 800604e:	68fb      	ldr	r3, [r7, #12]
 8006050:	2201      	movs	r2, #1
 8006052:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 8006056:	f7fe fd07 	bl	8004a68 <HAL_GetTick>
 800605a:	6278      	str	r0, [r7, #36]	; 0x24
 800605c:	68fb      	ldr	r3, [r7, #12]
 800605e:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 8006062:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 8006066:	68fb      	ldr	r3, [r7, #12]
 8006068:	685b      	ldr	r3, [r3, #4]
 800606a:	61fb      	str	r3, [r7, #28]
 800606c:	887b      	ldrh	r3, [r7, #2]
 800606e:	837b      	strh	r3, [r7, #26]
 8006070:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
 8006074:	2b01      	cmp	r3, #1
 8006076:	d00f      	beq.n	8006098 <HAL_SPI_TransmitReceive+0x70>
 8006078:	69fb      	ldr	r3, [r7, #28]
 800607a:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 800607e:	d107      	bne.n	8006090 <HAL_SPI_TransmitReceive+0x68>
 8006080:	68fb      	ldr	r3, [r7, #12]
 8006082:	689b      	ldr	r3, [r3, #8]
 8006084:	2b00      	cmp	r3, #0
 8006086:	d103      	bne.n	8006090 <HAL_SPI_TransmitReceive+0x68>
 8006088:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
 800608c:	2b04      	cmp	r3, #4
 800608e:	d003      	beq.n	8006098 <HAL_SPI_TransmitReceive+0x70>
 8006090:	2302      	movs	r3, #2
 8006092:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 8006096:	e15b      	b.n	8006350 <HAL_SPI_TransmitReceive+0x328>
 8006098:	68bb      	ldr	r3, [r7, #8]
 800609a:	2b00      	cmp	r3, #0
 800609c:	d005      	beq.n	80060aa <HAL_SPI_TransmitReceive+0x82>
 800609e:	687b      	ldr	r3, [r7, #4]
 80060a0:	2b00      	cmp	r3, #0
 80060a2:	d002      	beq.n	80060aa <HAL_SPI_TransmitReceive+0x82>
 80060a4:	887b      	ldrh	r3, [r7, #2]
 80060a6:	2b00      	cmp	r3, #0
 80060a8:	d103      	bne.n	80060b2 <HAL_SPI_TransmitReceive+0x8a>
 80060aa:	2301      	movs	r3, #1
 80060ac:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 80060b0:	e14e      	b.n	8006350 <HAL_SPI_TransmitReceive+0x328>
 80060b2:	68fb      	ldr	r3, [r7, #12]
 80060b4:	f893 3051 	ldrb.w	r3, [r3, #81]	; 0x51
 80060b8:	b2db      	uxtb	r3, r3
 80060ba:	2b04      	cmp	r3, #4
 80060bc:	d003      	beq.n	80060c6 <HAL_SPI_TransmitReceive+0x9e>
 80060be:	68fb      	ldr	r3, [r7, #12]
 80060c0:	2205      	movs	r2, #5
 80060c2:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 80060c6:	68fb      	ldr	r3, [r7, #12]
 80060c8:	2200      	movs	r2, #0
 80060ca:	655a      	str	r2, [r3, #84]	; 0x54
 80060cc:	68fb      	ldr	r3, [r7, #12]
 80060ce:	687a      	ldr	r2, [r7, #4]
 80060d0:	639a      	str	r2, [r3, #56]	; 0x38
 80060d2:	68fb      	ldr	r3, [r7, #12]
 80060d4:	887a      	ldrh	r2, [r7, #2]
 80060d6:	87da      	strh	r2, [r3, #62]	; 0x3e
 80060d8:	68fb      	ldr	r3, [r7, #12]
 80060da:	887a      	ldrh	r2, [r7, #2]
 80060dc:	879a      	strh	r2, [r3, #60]	; 0x3c
 80060de:	68fb      	ldr	r3, [r7, #12]
 80060e0:	68ba      	ldr	r2, [r7, #8]
 80060e2:	631a      	str	r2, [r3, #48]	; 0x30
 80060e4:	68fb      	ldr	r3, [r7, #12]
 80060e6:	887a      	ldrh	r2, [r7, #2]
 80060e8:	86da      	strh	r2, [r3, #54]	; 0x36
 80060ea:	68fb      	ldr	r3, [r7, #12]
 80060ec:	887a      	ldrh	r2, [r7, #2]
 80060ee:	869a      	strh	r2, [r3, #52]	; 0x34
 80060f0:	68fb      	ldr	r3, [r7, #12]
 80060f2:	2200      	movs	r2, #0
 80060f4:	641a      	str	r2, [r3, #64]	; 0x40
 80060f6:	68fb      	ldr	r3, [r7, #12]
 80060f8:	2200      	movs	r2, #0
 80060fa:	645a      	str	r2, [r3, #68]	; 0x44
 80060fc:	68fb      	ldr	r3, [r7, #12]
 80060fe:	681b      	ldr	r3, [r3, #0]
 8006100:	681b      	ldr	r3, [r3, #0]
 8006102:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8006106:	2b40      	cmp	r3, #64	; 0x40
 8006108:	d007      	beq.n	800611a <HAL_SPI_TransmitReceive+0xf2>
 800610a:	68fb      	ldr	r3, [r7, #12]
 800610c:	681b      	ldr	r3, [r3, #0]
 800610e:	681a      	ldr	r2, [r3, #0]
 8006110:	68fb      	ldr	r3, [r7, #12]
 8006112:	681b      	ldr	r3, [r3, #0]
 8006114:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8006118:	601a      	str	r2, [r3, #0]
 800611a:	68fb      	ldr	r3, [r7, #12]
 800611c:	68db      	ldr	r3, [r3, #12]
 800611e:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8006122:	d178      	bne.n	8006216 <HAL_SPI_TransmitReceive+0x1ee>
 8006124:	68fb      	ldr	r3, [r7, #12]
 8006126:	685b      	ldr	r3, [r3, #4]
 8006128:	2b00      	cmp	r3, #0
 800612a:	d002      	beq.n	8006132 <HAL_SPI_TransmitReceive+0x10a>
 800612c:	8b7b      	ldrh	r3, [r7, #26]
 800612e:	2b01      	cmp	r3, #1
 8006130:	d166      	bne.n	8006200 <HAL_SPI_TransmitReceive+0x1d8>
 8006132:	68fb      	ldr	r3, [r7, #12]
 8006134:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006136:	881a      	ldrh	r2, [r3, #0]
 8006138:	68fb      	ldr	r3, [r7, #12]
 800613a:	681b      	ldr	r3, [r3, #0]
 800613c:	60da      	str	r2, [r3, #12]
 800613e:	68fb      	ldr	r3, [r7, #12]
 8006140:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006142:	1c9a      	adds	r2, r3, #2
 8006144:	68fb      	ldr	r3, [r7, #12]
 8006146:	631a      	str	r2, [r3, #48]	; 0x30
 8006148:	68fb      	ldr	r3, [r7, #12]
 800614a:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 800614c:	b29b      	uxth	r3, r3
 800614e:	3b01      	subs	r3, #1
 8006150:	b29a      	uxth	r2, r3
 8006152:	68fb      	ldr	r3, [r7, #12]
 8006154:	86da      	strh	r2, [r3, #54]	; 0x36
 8006156:	e053      	b.n	8006200 <HAL_SPI_TransmitReceive+0x1d8>
 8006158:	68fb      	ldr	r3, [r7, #12]
 800615a:	681b      	ldr	r3, [r3, #0]
 800615c:	689b      	ldr	r3, [r3, #8]
 800615e:	f003 0302 	and.w	r3, r3, #2
 8006162:	2b02      	cmp	r3, #2
 8006164:	d11b      	bne.n	800619e <HAL_SPI_TransmitReceive+0x176>
 8006166:	68fb      	ldr	r3, [r7, #12]
 8006168:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 800616a:	b29b      	uxth	r3, r3
 800616c:	2b00      	cmp	r3, #0
 800616e:	d016      	beq.n	800619e <HAL_SPI_TransmitReceive+0x176>
 8006170:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8006172:	2b01      	cmp	r3, #1
 8006174:	d113      	bne.n	800619e <HAL_SPI_TransmitReceive+0x176>
 8006176:	68fb      	ldr	r3, [r7, #12]
 8006178:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800617a:	881a      	ldrh	r2, [r3, #0]
 800617c:	68fb      	ldr	r3, [r7, #12]
 800617e:	681b      	ldr	r3, [r3, #0]
 8006180:	60da      	str	r2, [r3, #12]
 8006182:	68fb      	ldr	r3, [r7, #12]
 8006184:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006186:	1c9a      	adds	r2, r3, #2
 8006188:	68fb      	ldr	r3, [r7, #12]
 800618a:	631a      	str	r2, [r3, #48]	; 0x30
 800618c:	68fb      	ldr	r3, [r7, #12]
 800618e:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8006190:	b29b      	uxth	r3, r3
 8006192:	3b01      	subs	r3, #1
 8006194:	b29a      	uxth	r2, r3
 8006196:	68fb      	ldr	r3, [r7, #12]
 8006198:	86da      	strh	r2, [r3, #54]	; 0x36
 800619a:	2300      	movs	r3, #0
 800619c:	62fb      	str	r3, [r7, #44]	; 0x2c
 800619e:	68fb      	ldr	r3, [r7, #12]
 80061a0:	681b      	ldr	r3, [r3, #0]
 80061a2:	689b      	ldr	r3, [r3, #8]
 80061a4:	f003 0301 	and.w	r3, r3, #1
 80061a8:	2b01      	cmp	r3, #1
 80061aa:	d119      	bne.n	80061e0 <HAL_SPI_TransmitReceive+0x1b8>
 80061ac:	68fb      	ldr	r3, [r7, #12]
 80061ae:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 80061b0:	b29b      	uxth	r3, r3
 80061b2:	2b00      	cmp	r3, #0
 80061b4:	d014      	beq.n	80061e0 <HAL_SPI_TransmitReceive+0x1b8>
 80061b6:	68fb      	ldr	r3, [r7, #12]
 80061b8:	681b      	ldr	r3, [r3, #0]
 80061ba:	68da      	ldr	r2, [r3, #12]
 80061bc:	68fb      	ldr	r3, [r7, #12]
 80061be:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80061c0:	b292      	uxth	r2, r2
 80061c2:	801a      	strh	r2, [r3, #0]
 80061c4:	68fb      	ldr	r3, [r7, #12]
 80061c6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80061c8:	1c9a      	adds	r2, r3, #2
 80061ca:	68fb      	ldr	r3, [r7, #12]
 80061cc:	639a      	str	r2, [r3, #56]	; 0x38
 80061ce:	68fb      	ldr	r3, [r7, #12]
 80061d0:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 80061d2:	b29b      	uxth	r3, r3
 80061d4:	3b01      	subs	r3, #1
 80061d6:	b29a      	uxth	r2, r3
 80061d8:	68fb      	ldr	r3, [r7, #12]
 80061da:	87da      	strh	r2, [r3, #62]	; 0x3e
 80061dc:	2301      	movs	r3, #1
 80061de:	62fb      	str	r3, [r7, #44]	; 0x2c
 80061e0:	f7fe fc42 	bl	8004a68 <HAL_GetTick>
 80061e4:	4602      	mov	r2, r0
 80061e6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80061e8:	1ad3      	subs	r3, r2, r3
 80061ea:	6bba      	ldr	r2, [r7, #56]	; 0x38
 80061ec:	429a      	cmp	r2, r3
 80061ee:	d807      	bhi.n	8006200 <HAL_SPI_TransmitReceive+0x1d8>
 80061f0:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80061f2:	f1b3 3fff 	cmp.w	r3, #4294967295
 80061f6:	d003      	beq.n	8006200 <HAL_SPI_TransmitReceive+0x1d8>
 80061f8:	2303      	movs	r3, #3
 80061fa:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 80061fe:	e0a7      	b.n	8006350 <HAL_SPI_TransmitReceive+0x328>
 8006200:	68fb      	ldr	r3, [r7, #12]
 8006202:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8006204:	b29b      	uxth	r3, r3
 8006206:	2b00      	cmp	r3, #0
 8006208:	d1a6      	bne.n	8006158 <HAL_SPI_TransmitReceive+0x130>
 800620a:	68fb      	ldr	r3, [r7, #12]
 800620c:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 800620e:	b29b      	uxth	r3, r3
 8006210:	2b00      	cmp	r3, #0
 8006212:	d1a1      	bne.n	8006158 <HAL_SPI_TransmitReceive+0x130>
 8006214:	e07c      	b.n	8006310 <HAL_SPI_TransmitReceive+0x2e8>
 8006216:	68fb      	ldr	r3, [r7, #12]
 8006218:	685b      	ldr	r3, [r3, #4]
 800621a:	2b00      	cmp	r3, #0
 800621c:	d002      	beq.n	8006224 <HAL_SPI_TransmitReceive+0x1fc>
 800621e:	8b7b      	ldrh	r3, [r7, #26]
 8006220:	2b01      	cmp	r3, #1
 8006222:	d16b      	bne.n	80062fc <HAL_SPI_TransmitReceive+0x2d4>
 8006224:	68fb      	ldr	r3, [r7, #12]
 8006226:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8006228:	68fb      	ldr	r3, [r7, #12]
 800622a:	681b      	ldr	r3, [r3, #0]
 800622c:	330c      	adds	r3, #12
 800622e:	7812      	ldrb	r2, [r2, #0]
 8006230:	701a      	strb	r2, [r3, #0]
 8006232:	68fb      	ldr	r3, [r7, #12]
 8006234:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8006236:	1c5a      	adds	r2, r3, #1
 8006238:	68fb      	ldr	r3, [r7, #12]
 800623a:	631a      	str	r2, [r3, #48]	; 0x30
 800623c:	68fb      	ldr	r3, [r7, #12]
 800623e:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8006240:	b29b      	uxth	r3, r3
 8006242:	3b01      	subs	r3, #1
 8006244:	b29a      	uxth	r2, r3
 8006246:	68fb      	ldr	r3, [r7, #12]
 8006248:	86da      	strh	r2, [r3, #54]	; 0x36
 800624a:	e057      	b.n	80062fc <HAL_SPI_TransmitReceive+0x2d4>
 800624c:	68fb      	ldr	r3, [r7, #12]
 800624e:	681b      	ldr	r3, [r3, #0]
 8006250:	689b      	ldr	r3, [r3, #8]
 8006252:	f003 0302 	and.w	r3, r3, #2
 8006256:	2b02      	cmp	r3, #2
 8006258:	d11c      	bne.n	8006294 <HAL_SPI_TransmitReceive+0x26c>
 800625a:	68fb      	ldr	r3, [r7, #12]
 800625c:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 800625e:	b29b      	uxth	r3, r3
 8006260:	2b00      	cmp	r3, #0
 8006262:	d017      	beq.n	8006294 <HAL_SPI_TransmitReceive+0x26c>
 8006264:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8006266:	2b01      	cmp	r3, #1
 8006268:	d114      	bne.n	8006294 <HAL_SPI_TransmitReceive+0x26c>
 800626a:	68fb      	ldr	r3, [r7, #12]
 800626c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800626e:	68fb      	ldr	r3, [r7, #12]
 8006270:	681b      	ldr	r3, [r3, #0]
 8006272:	330c      	adds	r3, #12
 8006274:	7812      	ldrb	r2, [r2, #0]
 8006276:	701a      	strb	r2, [r3, #0]
 8006278:	68fb      	ldr	r3, [r7, #12]
 800627a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800627c:	1c5a      	adds	r2, r3, #1
 800627e:	68fb      	ldr	r3, [r7, #12]
 8006280:	631a      	str	r2, [r3, #48]	; 0x30
 8006282:	68fb      	ldr	r3, [r7, #12]
 8006284:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8006286:	b29b      	uxth	r3, r3
 8006288:	3b01      	subs	r3, #1
 800628a:	b29a      	uxth	r2, r3
 800628c:	68fb      	ldr	r3, [r7, #12]
 800628e:	86da      	strh	r2, [r3, #54]	; 0x36
 8006290:	2300      	movs	r3, #0
 8006292:	62fb      	str	r3, [r7, #44]	; 0x2c
 8006294:	68fb      	ldr	r3, [r7, #12]
 8006296:	681b      	ldr	r3, [r3, #0]
 8006298:	689b      	ldr	r3, [r3, #8]
 800629a:	f003 0301 	and.w	r3, r3, #1
 800629e:	2b01      	cmp	r3, #1
 80062a0:	d119      	bne.n	80062d6 <HAL_SPI_TransmitReceive+0x2ae>
 80062a2:	68fb      	ldr	r3, [r7, #12]
 80062a4:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 80062a6:	b29b      	uxth	r3, r3
 80062a8:	2b00      	cmp	r3, #0
 80062aa:	d014      	beq.n	80062d6 <HAL_SPI_TransmitReceive+0x2ae>
 80062ac:	68fb      	ldr	r3, [r7, #12]
 80062ae:	681b      	ldr	r3, [r3, #0]
 80062b0:	68da      	ldr	r2, [r3, #12]
 80062b2:	68fb      	ldr	r3, [r7, #12]
 80062b4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80062b6:	b2d2      	uxtb	r2, r2
 80062b8:	701a      	strb	r2, [r3, #0]
 80062ba:	68fb      	ldr	r3, [r7, #12]
 80062bc:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80062be:	1c5a      	adds	r2, r3, #1
 80062c0:	68fb      	ldr	r3, [r7, #12]
 80062c2:	639a      	str	r2, [r3, #56]	; 0x38
 80062c4:	68fb      	ldr	r3, [r7, #12]
 80062c6:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 80062c8:	b29b      	uxth	r3, r3
 80062ca:	3b01      	subs	r3, #1
 80062cc:	b29a      	uxth	r2, r3
 80062ce:	68fb      	ldr	r3, [r7, #12]
 80062d0:	87da      	strh	r2, [r3, #62]	; 0x3e
 80062d2:	2301      	movs	r3, #1
 80062d4:	62fb      	str	r3, [r7, #44]	; 0x2c
 80062d6:	f7fe fbc7 	bl	8004a68 <HAL_GetTick>
 80062da:	4602      	mov	r2, r0
 80062dc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80062de:	1ad3      	subs	r3, r2, r3
 80062e0:	6bba      	ldr	r2, [r7, #56]	; 0x38
 80062e2:	429a      	cmp	r2, r3
 80062e4:	d803      	bhi.n	80062ee <HAL_SPI_TransmitReceive+0x2c6>
 80062e6:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80062e8:	f1b3 3fff 	cmp.w	r3, #4294967295
 80062ec:	d102      	bne.n	80062f4 <HAL_SPI_TransmitReceive+0x2cc>
 80062ee:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80062f0:	2b00      	cmp	r3, #0
 80062f2:	d103      	bne.n	80062fc <HAL_SPI_TransmitReceive+0x2d4>
 80062f4:	2303      	movs	r3, #3
 80062f6:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 80062fa:	e029      	b.n	8006350 <HAL_SPI_TransmitReceive+0x328>
 80062fc:	68fb      	ldr	r3, [r7, #12]
 80062fe:	8edb      	ldrh	r3, [r3, #54]	; 0x36
 8006300:	b29b      	uxth	r3, r3
 8006302:	2b00      	cmp	r3, #0
 8006304:	d1a2      	bne.n	800624c <HAL_SPI_TransmitReceive+0x224>
 8006306:	68fb      	ldr	r3, [r7, #12]
 8006308:	8fdb      	ldrh	r3, [r3, #62]	; 0x3e
 800630a:	b29b      	uxth	r3, r3
 800630c:	2b00      	cmp	r3, #0
 800630e:	d19d      	bne.n	800624c <HAL_SPI_TransmitReceive+0x224>
 8006310:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8006312:	6bb9      	ldr	r1, [r7, #56]	; 0x38
 8006314:	68f8      	ldr	r0, [r7, #12]
 8006316:	f000 f917 	bl	8006548 <SPI_EndRxTxTransaction>
 800631a:	4603      	mov	r3, r0
 800631c:	2b00      	cmp	r3, #0
 800631e:	d006      	beq.n	800632e <HAL_SPI_TransmitReceive+0x306>
 8006320:	2301      	movs	r3, #1
 8006322:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 8006326:	68fb      	ldr	r3, [r7, #12]
 8006328:	2220      	movs	r2, #32
 800632a:	655a      	str	r2, [r3, #84]	; 0x54
 800632c:	e010      	b.n	8006350 <HAL_SPI_TransmitReceive+0x328>
 800632e:	68fb      	ldr	r3, [r7, #12]
 8006330:	689b      	ldr	r3, [r3, #8]
 8006332:	2b00      	cmp	r3, #0
 8006334:	d10b      	bne.n	800634e <HAL_SPI_TransmitReceive+0x326>
 8006336:	2300      	movs	r3, #0
 8006338:	617b      	str	r3, [r7, #20]
 800633a:	68fb      	ldr	r3, [r7, #12]
 800633c:	681b      	ldr	r3, [r3, #0]
 800633e:	68db      	ldr	r3, [r3, #12]
 8006340:	617b      	str	r3, [r7, #20]
 8006342:	68fb      	ldr	r3, [r7, #12]
 8006344:	681b      	ldr	r3, [r3, #0]
 8006346:	689b      	ldr	r3, [r3, #8]
 8006348:	617b      	str	r3, [r7, #20]
 800634a:	697b      	ldr	r3, [r7, #20]
 800634c:	e000      	b.n	8006350 <HAL_SPI_TransmitReceive+0x328>
 800634e:	bf00      	nop
 8006350:	68fb      	ldr	r3, [r7, #12]
 8006352:	2201      	movs	r2, #1
 8006354:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8006358:	68fb      	ldr	r3, [r7, #12]
 800635a:	2200      	movs	r2, #0
 800635c:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 8006360:	f897 302b 	ldrb.w	r3, [r7, #43]	; 0x2b
 8006364:	4618      	mov	r0, r3
 8006366:	3730      	adds	r7, #48	; 0x30
 8006368:	46bd      	mov	sp, r7
 800636a:	bd80      	pop	{r7, pc}

0800636c <SPI_WaitFlagStateUntilTimeout>:
 800636c:	b580      	push	{r7, lr}
 800636e:	b088      	sub	sp, #32
 8006370:	af00      	add	r7, sp, #0
 8006372:	60f8      	str	r0, [r7, #12]
 8006374:	60b9      	str	r1, [r7, #8]
 8006376:	603b      	str	r3, [r7, #0]
 8006378:	4613      	mov	r3, r2
 800637a:	71fb      	strb	r3, [r7, #7]
 800637c:	f7fe fb74 	bl	8004a68 <HAL_GetTick>
 8006380:	4602      	mov	r2, r0
 8006382:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8006384:	1a9b      	subs	r3, r3, r2
 8006386:	683a      	ldr	r2, [r7, #0]
 8006388:	4413      	add	r3, r2
 800638a:	61fb      	str	r3, [r7, #28]
 800638c:	f7fe fb6c 	bl	8004a68 <HAL_GetTick>
 8006390:	61b8      	str	r0, [r7, #24]
 8006392:	4b39      	ldr	r3, [pc, #228]	; (8006478 <SPI_WaitFlagStateUntilTimeout+0x10c>)
 8006394:	681b      	ldr	r3, [r3, #0]
 8006396:	015b      	lsls	r3, r3, #5
 8006398:	0d1b      	lsrs	r3, r3, #20
 800639a:	69fa      	ldr	r2, [r7, #28]
 800639c:	fb02 f303 	mul.w	r3, r2, r3
 80063a0:	617b      	str	r3, [r7, #20]
 80063a2:	e054      	b.n	800644e <SPI_WaitFlagStateUntilTimeout+0xe2>
 80063a4:	683b      	ldr	r3, [r7, #0]
 80063a6:	f1b3 3fff 	cmp.w	r3, #4294967295
 80063aa:	d050      	beq.n	800644e <SPI_WaitFlagStateUntilTimeout+0xe2>
 80063ac:	f7fe fb5c 	bl	8004a68 <HAL_GetTick>
 80063b0:	4602      	mov	r2, r0
 80063b2:	69bb      	ldr	r3, [r7, #24]
 80063b4:	1ad3      	subs	r3, r2, r3
 80063b6:	69fa      	ldr	r2, [r7, #28]
 80063b8:	429a      	cmp	r2, r3
 80063ba:	d902      	bls.n	80063c2 <SPI_WaitFlagStateUntilTimeout+0x56>
 80063bc:	69fb      	ldr	r3, [r7, #28]
 80063be:	2b00      	cmp	r3, #0
 80063c0:	d13d      	bne.n	800643e <SPI_WaitFlagStateUntilTimeout+0xd2>
 80063c2:	68fb      	ldr	r3, [r7, #12]
 80063c4:	681b      	ldr	r3, [r3, #0]
 80063c6:	685a      	ldr	r2, [r3, #4]
 80063c8:	68fb      	ldr	r3, [r7, #12]
 80063ca:	681b      	ldr	r3, [r3, #0]
 80063cc:	f022 02e0 	bic.w	r2, r2, #224	; 0xe0
 80063d0:	605a      	str	r2, [r3, #4]
 80063d2:	68fb      	ldr	r3, [r7, #12]
 80063d4:	685b      	ldr	r3, [r3, #4]
 80063d6:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 80063da:	d111      	bne.n	8006400 <SPI_WaitFlagStateUntilTimeout+0x94>
 80063dc:	68fb      	ldr	r3, [r7, #12]
 80063de:	689b      	ldr	r3, [r3, #8]
 80063e0:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 80063e4:	d004      	beq.n	80063f0 <SPI_WaitFlagStateUntilTimeout+0x84>
 80063e6:	68fb      	ldr	r3, [r7, #12]
 80063e8:	689b      	ldr	r3, [r3, #8]
 80063ea:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80063ee:	d107      	bne.n	8006400 <SPI_WaitFlagStateUntilTimeout+0x94>
 80063f0:	68fb      	ldr	r3, [r7, #12]
 80063f2:	681b      	ldr	r3, [r3, #0]
 80063f4:	681a      	ldr	r2, [r3, #0]
 80063f6:	68fb      	ldr	r3, [r7, #12]
 80063f8:	681b      	ldr	r3, [r3, #0]
 80063fa:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 80063fe:	601a      	str	r2, [r3, #0]
 8006400:	68fb      	ldr	r3, [r7, #12]
 8006402:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8006404:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8006408:	d10f      	bne.n	800642a <SPI_WaitFlagStateUntilTimeout+0xbe>
 800640a:	68fb      	ldr	r3, [r7, #12]
 800640c:	681b      	ldr	r3, [r3, #0]
 800640e:	681a      	ldr	r2, [r3, #0]
 8006410:	68fb      	ldr	r3, [r7, #12]
 8006412:	681b      	ldr	r3, [r3, #0]
 8006414:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8006418:	601a      	str	r2, [r3, #0]
 800641a:	68fb      	ldr	r3, [r7, #12]
 800641c:	681b      	ldr	r3, [r3, #0]
 800641e:	681a      	ldr	r2, [r3, #0]
 8006420:	68fb      	ldr	r3, [r7, #12]
 8006422:	681b      	ldr	r3, [r3, #0]
 8006424:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 8006428:	601a      	str	r2, [r3, #0]
 800642a:	68fb      	ldr	r3, [r7, #12]
 800642c:	2201      	movs	r2, #1
 800642e:	f883 2051 	strb.w	r2, [r3, #81]	; 0x51
 8006432:	68fb      	ldr	r3, [r7, #12]
 8006434:	2200      	movs	r2, #0
 8006436:	f883 2050 	strb.w	r2, [r3, #80]	; 0x50
 800643a:	2303      	movs	r3, #3
 800643c:	e017      	b.n	800646e <SPI_WaitFlagStateUntilTimeout+0x102>
 800643e:	697b      	ldr	r3, [r7, #20]
 8006440:	2b00      	cmp	r3, #0
 8006442:	d101      	bne.n	8006448 <SPI_WaitFlagStateUntilTimeout+0xdc>
 8006444:	2300      	movs	r3, #0
 8006446:	61fb      	str	r3, [r7, #28]
 8006448:	697b      	ldr	r3, [r7, #20]
 800644a:	3b01      	subs	r3, #1
 800644c:	617b      	str	r3, [r7, #20]
 800644e:	68fb      	ldr	r3, [r7, #12]
 8006450:	681b      	ldr	r3, [r3, #0]
 8006452:	689a      	ldr	r2, [r3, #8]
 8006454:	68bb      	ldr	r3, [r7, #8]
 8006456:	4013      	ands	r3, r2
 8006458:	68ba      	ldr	r2, [r7, #8]
 800645a:	429a      	cmp	r2, r3
 800645c:	bf0c      	ite	eq
 800645e:	2301      	moveq	r3, #1
 8006460:	2300      	movne	r3, #0
 8006462:	b2db      	uxtb	r3, r3
 8006464:	461a      	mov	r2, r3
 8006466:	79fb      	ldrb	r3, [r7, #7]
 8006468:	429a      	cmp	r2, r3
 800646a:	d19b      	bne.n	80063a4 <SPI_WaitFlagStateUntilTimeout+0x38>
 800646c:	2300      	movs	r3, #0
 800646e:	4618      	mov	r0, r3
 8006470:	3720      	adds	r7, #32
 8006472:	46bd      	mov	sp, r7
 8006474:	bd80      	pop	{r7, pc}
 8006476:	bf00      	nop
 8006478:	2000006c 	.word	0x2000006c

0800647c <SPI_EndRxTransaction>:
 800647c:	b580      	push	{r7, lr}
 800647e:	b086      	sub	sp, #24
 8006480:	af02      	add	r7, sp, #8
 8006482:	60f8      	str	r0, [r7, #12]
 8006484:	60b9      	str	r1, [r7, #8]
 8006486:	607a      	str	r2, [r7, #4]
 8006488:	68fb      	ldr	r3, [r7, #12]
 800648a:	685b      	ldr	r3, [r3, #4]
 800648c:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8006490:	d111      	bne.n	80064b6 <SPI_EndRxTransaction+0x3a>
 8006492:	68fb      	ldr	r3, [r7, #12]
 8006494:	689b      	ldr	r3, [r3, #8]
 8006496:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 800649a:	d004      	beq.n	80064a6 <SPI_EndRxTransaction+0x2a>
 800649c:	68fb      	ldr	r3, [r7, #12]
 800649e:	689b      	ldr	r3, [r3, #8]
 80064a0:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80064a4:	d107      	bne.n	80064b6 <SPI_EndRxTransaction+0x3a>
 80064a6:	68fb      	ldr	r3, [r7, #12]
 80064a8:	681b      	ldr	r3, [r3, #0]
 80064aa:	681a      	ldr	r2, [r3, #0]
 80064ac:	68fb      	ldr	r3, [r7, #12]
 80064ae:	681b      	ldr	r3, [r3, #0]
 80064b0:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 80064b4:	601a      	str	r2, [r3, #0]
 80064b6:	68fb      	ldr	r3, [r7, #12]
 80064b8:	685b      	ldr	r3, [r3, #4]
 80064ba:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 80064be:	d12a      	bne.n	8006516 <SPI_EndRxTransaction+0x9a>
 80064c0:	68fb      	ldr	r3, [r7, #12]
 80064c2:	689b      	ldr	r3, [r3, #8]
 80064c4:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 80064c8:	d012      	beq.n	80064f0 <SPI_EndRxTransaction+0x74>
 80064ca:	687b      	ldr	r3, [r7, #4]
 80064cc:	9300      	str	r3, [sp, #0]
 80064ce:	68bb      	ldr	r3, [r7, #8]
 80064d0:	2200      	movs	r2, #0
 80064d2:	2180      	movs	r1, #128	; 0x80
 80064d4:	68f8      	ldr	r0, [r7, #12]
 80064d6:	f7ff ff49 	bl	800636c <SPI_WaitFlagStateUntilTimeout>
 80064da:	4603      	mov	r3, r0
 80064dc:	2b00      	cmp	r3, #0
 80064de:	d02d      	beq.n	800653c <SPI_EndRxTransaction+0xc0>
 80064e0:	68fb      	ldr	r3, [r7, #12]
 80064e2:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 80064e4:	f043 0220 	orr.w	r2, r3, #32
 80064e8:	68fb      	ldr	r3, [r7, #12]
 80064ea:	655a      	str	r2, [r3, #84]	; 0x54
 80064ec:	2303      	movs	r3, #3
 80064ee:	e026      	b.n	800653e <SPI_EndRxTransaction+0xc2>
 80064f0:	687b      	ldr	r3, [r7, #4]
 80064f2:	9300      	str	r3, [sp, #0]
 80064f4:	68bb      	ldr	r3, [r7, #8]
 80064f6:	2200      	movs	r2, #0
 80064f8:	2101      	movs	r1, #1
 80064fa:	68f8      	ldr	r0, [r7, #12]
 80064fc:	f7ff ff36 	bl	800636c <SPI_WaitFlagStateUntilTimeout>
 8006500:	4603      	mov	r3, r0
 8006502:	2b00      	cmp	r3, #0
 8006504:	d01a      	beq.n	800653c <SPI_EndRxTransaction+0xc0>
 8006506:	68fb      	ldr	r3, [r7, #12]
 8006508:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800650a:	f043 0220 	orr.w	r2, r3, #32
 800650e:	68fb      	ldr	r3, [r7, #12]
 8006510:	655a      	str	r2, [r3, #84]	; 0x54
 8006512:	2303      	movs	r3, #3
 8006514:	e013      	b.n	800653e <SPI_EndRxTransaction+0xc2>
 8006516:	687b      	ldr	r3, [r7, #4]
 8006518:	9300      	str	r3, [sp, #0]
 800651a:	68bb      	ldr	r3, [r7, #8]
 800651c:	2200      	movs	r2, #0
 800651e:	2101      	movs	r1, #1
 8006520:	68f8      	ldr	r0, [r7, #12]
 8006522:	f7ff ff23 	bl	800636c <SPI_WaitFlagStateUntilTimeout>
 8006526:	4603      	mov	r3, r0
 8006528:	2b00      	cmp	r3, #0
 800652a:	d007      	beq.n	800653c <SPI_EndRxTransaction+0xc0>
 800652c:	68fb      	ldr	r3, [r7, #12]
 800652e:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8006530:	f043 0220 	orr.w	r2, r3, #32
 8006534:	68fb      	ldr	r3, [r7, #12]
 8006536:	655a      	str	r2, [r3, #84]	; 0x54
 8006538:	2303      	movs	r3, #3
 800653a:	e000      	b.n	800653e <SPI_EndRxTransaction+0xc2>
 800653c:	2300      	movs	r3, #0
 800653e:	4618      	mov	r0, r3
 8006540:	3710      	adds	r7, #16
 8006542:	46bd      	mov	sp, r7
 8006544:	bd80      	pop	{r7, pc}
	...

08006548 <SPI_EndRxTxTransaction>:
 8006548:	b580      	push	{r7, lr}
 800654a:	b088      	sub	sp, #32
 800654c:	af02      	add	r7, sp, #8
 800654e:	60f8      	str	r0, [r7, #12]
 8006550:	60b9      	str	r1, [r7, #8]
 8006552:	607a      	str	r2, [r7, #4]
 8006554:	4b1b      	ldr	r3, [pc, #108]	; (80065c4 <SPI_EndRxTxTransaction+0x7c>)
 8006556:	681b      	ldr	r3, [r3, #0]
 8006558:	4a1b      	ldr	r2, [pc, #108]	; (80065c8 <SPI_EndRxTxTransaction+0x80>)
 800655a:	fba2 2303 	umull	r2, r3, r2, r3
 800655e:	0d5b      	lsrs	r3, r3, #21
 8006560:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8006564:	fb02 f303 	mul.w	r3, r2, r3
 8006568:	617b      	str	r3, [r7, #20]
 800656a:	68fb      	ldr	r3, [r7, #12]
 800656c:	685b      	ldr	r3, [r3, #4]
 800656e:	f5b3 7f82 	cmp.w	r3, #260	; 0x104
 8006572:	d112      	bne.n	800659a <SPI_EndRxTxTransaction+0x52>
 8006574:	687b      	ldr	r3, [r7, #4]
 8006576:	9300      	str	r3, [sp, #0]
 8006578:	68bb      	ldr	r3, [r7, #8]
 800657a:	2200      	movs	r2, #0
 800657c:	2180      	movs	r1, #128	; 0x80
 800657e:	68f8      	ldr	r0, [r7, #12]
 8006580:	f7ff fef4 	bl	800636c <SPI_WaitFlagStateUntilTimeout>
 8006584:	4603      	mov	r3, r0
 8006586:	2b00      	cmp	r3, #0
 8006588:	d016      	beq.n	80065b8 <SPI_EndRxTxTransaction+0x70>
 800658a:	68fb      	ldr	r3, [r7, #12]
 800658c:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800658e:	f043 0220 	orr.w	r2, r3, #32
 8006592:	68fb      	ldr	r3, [r7, #12]
 8006594:	655a      	str	r2, [r3, #84]	; 0x54
 8006596:	2303      	movs	r3, #3
 8006598:	e00f      	b.n	80065ba <SPI_EndRxTxTransaction+0x72>
 800659a:	697b      	ldr	r3, [r7, #20]
 800659c:	2b00      	cmp	r3, #0
 800659e:	d00a      	beq.n	80065b6 <SPI_EndRxTxTransaction+0x6e>
 80065a0:	697b      	ldr	r3, [r7, #20]
 80065a2:	3b01      	subs	r3, #1
 80065a4:	617b      	str	r3, [r7, #20]
 80065a6:	68fb      	ldr	r3, [r7, #12]
 80065a8:	681b      	ldr	r3, [r3, #0]
 80065aa:	689b      	ldr	r3, [r3, #8]
 80065ac:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80065b0:	2b80      	cmp	r3, #128	; 0x80
 80065b2:	d0f2      	beq.n	800659a <SPI_EndRxTxTransaction+0x52>
 80065b4:	e000      	b.n	80065b8 <SPI_EndRxTxTransaction+0x70>
 80065b6:	bf00      	nop
 80065b8:	2300      	movs	r3, #0
 80065ba:	4618      	mov	r0, r3
 80065bc:	3718      	adds	r7, #24
 80065be:	46bd      	mov	sp, r7
 80065c0:	bd80      	pop	{r7, pc}
 80065c2:	bf00      	nop
 80065c4:	2000006c 	.word	0x2000006c
 80065c8:	165e9f81 	.word	0x165e9f81

080065cc <HAL_TIM_Base_Init>:
 80065cc:	b580      	push	{r7, lr}
 80065ce:	b082      	sub	sp, #8
 80065d0:	af00      	add	r7, sp, #0
 80065d2:	6078      	str	r0, [r7, #4]
 80065d4:	687b      	ldr	r3, [r7, #4]
 80065d6:	2b00      	cmp	r3, #0
 80065d8:	d101      	bne.n	80065de <HAL_TIM_Base_Init+0x12>
 80065da:	2301      	movs	r3, #1
 80065dc:	e041      	b.n	8006662 <HAL_TIM_Base_Init+0x96>
 80065de:	687b      	ldr	r3, [r7, #4]
 80065e0:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 80065e4:	b2db      	uxtb	r3, r3
 80065e6:	2b00      	cmp	r3, #0
 80065e8:	d106      	bne.n	80065f8 <HAL_TIM_Base_Init+0x2c>
 80065ea:	687b      	ldr	r3, [r7, #4]
 80065ec:	2200      	movs	r2, #0
 80065ee:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80065f2:	6878      	ldr	r0, [r7, #4]
 80065f4:	f7fd ff42 	bl	800447c <HAL_TIM_Base_MspInit>
 80065f8:	687b      	ldr	r3, [r7, #4]
 80065fa:	2202      	movs	r2, #2
 80065fc:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8006600:	687b      	ldr	r3, [r7, #4]
 8006602:	681a      	ldr	r2, [r3, #0]
 8006604:	687b      	ldr	r3, [r7, #4]
 8006606:	3304      	adds	r3, #4
 8006608:	4619      	mov	r1, r3
 800660a:	4610      	mov	r0, r2
 800660c:	f000 fb24 	bl	8006c58 <TIM_Base_SetConfig>
 8006610:	687b      	ldr	r3, [r7, #4]
 8006612:	2201      	movs	r2, #1
 8006614:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 8006618:	687b      	ldr	r3, [r7, #4]
 800661a:	2201      	movs	r2, #1
 800661c:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8006620:	687b      	ldr	r3, [r7, #4]
 8006622:	2201      	movs	r2, #1
 8006624:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 8006628:	687b      	ldr	r3, [r7, #4]
 800662a:	2201      	movs	r2, #1
 800662c:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8006630:	687b      	ldr	r3, [r7, #4]
 8006632:	2201      	movs	r2, #1
 8006634:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8006638:	687b      	ldr	r3, [r7, #4]
 800663a:	2201      	movs	r2, #1
 800663c:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8006640:	687b      	ldr	r3, [r7, #4]
 8006642:	2201      	movs	r2, #1
 8006644:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 8006648:	687b      	ldr	r3, [r7, #4]
 800664a:	2201      	movs	r2, #1
 800664c:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 8006650:	687b      	ldr	r3, [r7, #4]
 8006652:	2201      	movs	r2, #1
 8006654:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 8006658:	687b      	ldr	r3, [r7, #4]
 800665a:	2201      	movs	r2, #1
 800665c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8006660:	2300      	movs	r3, #0
 8006662:	4618      	mov	r0, r3
 8006664:	3708      	adds	r7, #8
 8006666:	46bd      	mov	sp, r7
 8006668:	bd80      	pop	{r7, pc}

0800666a <HAL_TIM_PWM_Init>:
 800666a:	b580      	push	{r7, lr}
 800666c:	b082      	sub	sp, #8
 800666e:	af00      	add	r7, sp, #0
 8006670:	6078      	str	r0, [r7, #4]
 8006672:	687b      	ldr	r3, [r7, #4]
 8006674:	2b00      	cmp	r3, #0
 8006676:	d101      	bne.n	800667c <HAL_TIM_PWM_Init+0x12>
 8006678:	2301      	movs	r3, #1
 800667a:	e041      	b.n	8006700 <HAL_TIM_PWM_Init+0x96>
 800667c:	687b      	ldr	r3, [r7, #4]
 800667e:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8006682:	b2db      	uxtb	r3, r3
 8006684:	2b00      	cmp	r3, #0
 8006686:	d106      	bne.n	8006696 <HAL_TIM_PWM_Init+0x2c>
 8006688:	687b      	ldr	r3, [r7, #4]
 800668a:	2200      	movs	r2, #0
 800668c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8006690:	6878      	ldr	r0, [r7, #4]
 8006692:	f000 f839 	bl	8006708 <HAL_TIM_PWM_MspInit>
 8006696:	687b      	ldr	r3, [r7, #4]
 8006698:	2202      	movs	r2, #2
 800669a:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800669e:	687b      	ldr	r3, [r7, #4]
 80066a0:	681a      	ldr	r2, [r3, #0]
 80066a2:	687b      	ldr	r3, [r7, #4]
 80066a4:	3304      	adds	r3, #4
 80066a6:	4619      	mov	r1, r3
 80066a8:	4610      	mov	r0, r2
 80066aa:	f000 fad5 	bl	8006c58 <TIM_Base_SetConfig>
 80066ae:	687b      	ldr	r3, [r7, #4]
 80066b0:	2201      	movs	r2, #1
 80066b2:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 80066b6:	687b      	ldr	r3, [r7, #4]
 80066b8:	2201      	movs	r2, #1
 80066ba:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 80066be:	687b      	ldr	r3, [r7, #4]
 80066c0:	2201      	movs	r2, #1
 80066c2:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 80066c6:	687b      	ldr	r3, [r7, #4]
 80066c8:	2201      	movs	r2, #1
 80066ca:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 80066ce:	687b      	ldr	r3, [r7, #4]
 80066d0:	2201      	movs	r2, #1
 80066d2:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 80066d6:	687b      	ldr	r3, [r7, #4]
 80066d8:	2201      	movs	r2, #1
 80066da:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 80066de:	687b      	ldr	r3, [r7, #4]
 80066e0:	2201      	movs	r2, #1
 80066e2:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 80066e6:	687b      	ldr	r3, [r7, #4]
 80066e8:	2201      	movs	r2, #1
 80066ea:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 80066ee:	687b      	ldr	r3, [r7, #4]
 80066f0:	2201      	movs	r2, #1
 80066f2:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 80066f6:	687b      	ldr	r3, [r7, #4]
 80066f8:	2201      	movs	r2, #1
 80066fa:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80066fe:	2300      	movs	r3, #0
 8006700:	4618      	mov	r0, r3
 8006702:	3708      	adds	r7, #8
 8006704:	46bd      	mov	sp, r7
 8006706:	bd80      	pop	{r7, pc}

08006708 <HAL_TIM_PWM_MspInit>:
 8006708:	b480      	push	{r7}
 800670a:	b083      	sub	sp, #12
 800670c:	af00      	add	r7, sp, #0
 800670e:	6078      	str	r0, [r7, #4]
 8006710:	bf00      	nop
 8006712:	370c      	adds	r7, #12
 8006714:	46bd      	mov	sp, r7
 8006716:	f85d 7b04 	ldr.w	r7, [sp], #4
 800671a:	4770      	bx	lr

0800671c <HAL_TIM_PWM_Start>:
 800671c:	b580      	push	{r7, lr}
 800671e:	b084      	sub	sp, #16
 8006720:	af00      	add	r7, sp, #0
 8006722:	6078      	str	r0, [r7, #4]
 8006724:	6039      	str	r1, [r7, #0]
 8006726:	683b      	ldr	r3, [r7, #0]
 8006728:	2b00      	cmp	r3, #0
 800672a:	d109      	bne.n	8006740 <HAL_TIM_PWM_Start+0x24>
 800672c:	687b      	ldr	r3, [r7, #4]
 800672e:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 8006732:	b2db      	uxtb	r3, r3
 8006734:	2b01      	cmp	r3, #1
 8006736:	bf14      	ite	ne
 8006738:	2301      	movne	r3, #1
 800673a:	2300      	moveq	r3, #0
 800673c:	b2db      	uxtb	r3, r3
 800673e:	e022      	b.n	8006786 <HAL_TIM_PWM_Start+0x6a>
 8006740:	683b      	ldr	r3, [r7, #0]
 8006742:	2b04      	cmp	r3, #4
 8006744:	d109      	bne.n	800675a <HAL_TIM_PWM_Start+0x3e>
 8006746:	687b      	ldr	r3, [r7, #4]
 8006748:	f893 303f 	ldrb.w	r3, [r3, #63]	; 0x3f
 800674c:	b2db      	uxtb	r3, r3
 800674e:	2b01      	cmp	r3, #1
 8006750:	bf14      	ite	ne
 8006752:	2301      	movne	r3, #1
 8006754:	2300      	moveq	r3, #0
 8006756:	b2db      	uxtb	r3, r3
 8006758:	e015      	b.n	8006786 <HAL_TIM_PWM_Start+0x6a>
 800675a:	683b      	ldr	r3, [r7, #0]
 800675c:	2b08      	cmp	r3, #8
 800675e:	d109      	bne.n	8006774 <HAL_TIM_PWM_Start+0x58>
 8006760:	687b      	ldr	r3, [r7, #4]
 8006762:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 8006766:	b2db      	uxtb	r3, r3
 8006768:	2b01      	cmp	r3, #1
 800676a:	bf14      	ite	ne
 800676c:	2301      	movne	r3, #1
 800676e:	2300      	moveq	r3, #0
 8006770:	b2db      	uxtb	r3, r3
 8006772:	e008      	b.n	8006786 <HAL_TIM_PWM_Start+0x6a>
 8006774:	687b      	ldr	r3, [r7, #4]
 8006776:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 800677a:	b2db      	uxtb	r3, r3
 800677c:	2b01      	cmp	r3, #1
 800677e:	bf14      	ite	ne
 8006780:	2301      	movne	r3, #1
 8006782:	2300      	moveq	r3, #0
 8006784:	b2db      	uxtb	r3, r3
 8006786:	2b00      	cmp	r3, #0
 8006788:	d001      	beq.n	800678e <HAL_TIM_PWM_Start+0x72>
 800678a:	2301      	movs	r3, #1
 800678c:	e068      	b.n	8006860 <HAL_TIM_PWM_Start+0x144>
 800678e:	683b      	ldr	r3, [r7, #0]
 8006790:	2b00      	cmp	r3, #0
 8006792:	d104      	bne.n	800679e <HAL_TIM_PWM_Start+0x82>
 8006794:	687b      	ldr	r3, [r7, #4]
 8006796:	2202      	movs	r2, #2
 8006798:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800679c:	e013      	b.n	80067c6 <HAL_TIM_PWM_Start+0xaa>
 800679e:	683b      	ldr	r3, [r7, #0]
 80067a0:	2b04      	cmp	r3, #4
 80067a2:	d104      	bne.n	80067ae <HAL_TIM_PWM_Start+0x92>
 80067a4:	687b      	ldr	r3, [r7, #4]
 80067a6:	2202      	movs	r2, #2
 80067a8:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 80067ac:	e00b      	b.n	80067c6 <HAL_TIM_PWM_Start+0xaa>
 80067ae:	683b      	ldr	r3, [r7, #0]
 80067b0:	2b08      	cmp	r3, #8
 80067b2:	d104      	bne.n	80067be <HAL_TIM_PWM_Start+0xa2>
 80067b4:	687b      	ldr	r3, [r7, #4]
 80067b6:	2202      	movs	r2, #2
 80067b8:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 80067bc:	e003      	b.n	80067c6 <HAL_TIM_PWM_Start+0xaa>
 80067be:	687b      	ldr	r3, [r7, #4]
 80067c0:	2202      	movs	r2, #2
 80067c2:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 80067c6:	687b      	ldr	r3, [r7, #4]
 80067c8:	681b      	ldr	r3, [r3, #0]
 80067ca:	2201      	movs	r2, #1
 80067cc:	6839      	ldr	r1, [r7, #0]
 80067ce:	4618      	mov	r0, r3
 80067d0:	f000 fce8 	bl	80071a4 <TIM_CCxChannelCmd>
 80067d4:	687b      	ldr	r3, [r7, #4]
 80067d6:	681b      	ldr	r3, [r3, #0]
 80067d8:	4a23      	ldr	r2, [pc, #140]	; (8006868 <HAL_TIM_PWM_Start+0x14c>)
 80067da:	4293      	cmp	r3, r2
 80067dc:	d107      	bne.n	80067ee <HAL_TIM_PWM_Start+0xd2>
 80067de:	687b      	ldr	r3, [r7, #4]
 80067e0:	681b      	ldr	r3, [r3, #0]
 80067e2:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 80067e4:	687b      	ldr	r3, [r7, #4]
 80067e6:	681b      	ldr	r3, [r3, #0]
 80067e8:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 80067ec:	645a      	str	r2, [r3, #68]	; 0x44
 80067ee:	687b      	ldr	r3, [r7, #4]
 80067f0:	681b      	ldr	r3, [r3, #0]
 80067f2:	4a1d      	ldr	r2, [pc, #116]	; (8006868 <HAL_TIM_PWM_Start+0x14c>)
 80067f4:	4293      	cmp	r3, r2
 80067f6:	d018      	beq.n	800682a <HAL_TIM_PWM_Start+0x10e>
 80067f8:	687b      	ldr	r3, [r7, #4]
 80067fa:	681b      	ldr	r3, [r3, #0]
 80067fc:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8006800:	d013      	beq.n	800682a <HAL_TIM_PWM_Start+0x10e>
 8006802:	687b      	ldr	r3, [r7, #4]
 8006804:	681b      	ldr	r3, [r3, #0]
 8006806:	4a19      	ldr	r2, [pc, #100]	; (800686c <HAL_TIM_PWM_Start+0x150>)
 8006808:	4293      	cmp	r3, r2
 800680a:	d00e      	beq.n	800682a <HAL_TIM_PWM_Start+0x10e>
 800680c:	687b      	ldr	r3, [r7, #4]
 800680e:	681b      	ldr	r3, [r3, #0]
 8006810:	4a17      	ldr	r2, [pc, #92]	; (8006870 <HAL_TIM_PWM_Start+0x154>)
 8006812:	4293      	cmp	r3, r2
 8006814:	d009      	beq.n	800682a <HAL_TIM_PWM_Start+0x10e>
 8006816:	687b      	ldr	r3, [r7, #4]
 8006818:	681b      	ldr	r3, [r3, #0]
 800681a:	4a16      	ldr	r2, [pc, #88]	; (8006874 <HAL_TIM_PWM_Start+0x158>)
 800681c:	4293      	cmp	r3, r2
 800681e:	d004      	beq.n	800682a <HAL_TIM_PWM_Start+0x10e>
 8006820:	687b      	ldr	r3, [r7, #4]
 8006822:	681b      	ldr	r3, [r3, #0]
 8006824:	4a14      	ldr	r2, [pc, #80]	; (8006878 <HAL_TIM_PWM_Start+0x15c>)
 8006826:	4293      	cmp	r3, r2
 8006828:	d111      	bne.n	800684e <HAL_TIM_PWM_Start+0x132>
 800682a:	687b      	ldr	r3, [r7, #4]
 800682c:	681b      	ldr	r3, [r3, #0]
 800682e:	689b      	ldr	r3, [r3, #8]
 8006830:	f003 0307 	and.w	r3, r3, #7
 8006834:	60fb      	str	r3, [r7, #12]
 8006836:	68fb      	ldr	r3, [r7, #12]
 8006838:	2b06      	cmp	r3, #6
 800683a:	d010      	beq.n	800685e <HAL_TIM_PWM_Start+0x142>
 800683c:	687b      	ldr	r3, [r7, #4]
 800683e:	681b      	ldr	r3, [r3, #0]
 8006840:	681a      	ldr	r2, [r3, #0]
 8006842:	687b      	ldr	r3, [r7, #4]
 8006844:	681b      	ldr	r3, [r3, #0]
 8006846:	f042 0201 	orr.w	r2, r2, #1
 800684a:	601a      	str	r2, [r3, #0]
 800684c:	e007      	b.n	800685e <HAL_TIM_PWM_Start+0x142>
 800684e:	687b      	ldr	r3, [r7, #4]
 8006850:	681b      	ldr	r3, [r3, #0]
 8006852:	681a      	ldr	r2, [r3, #0]
 8006854:	687b      	ldr	r3, [r7, #4]
 8006856:	681b      	ldr	r3, [r3, #0]
 8006858:	f042 0201 	orr.w	r2, r2, #1
 800685c:	601a      	str	r2, [r3, #0]
 800685e:	2300      	movs	r3, #0
 8006860:	4618      	mov	r0, r3
 8006862:	3710      	adds	r7, #16
 8006864:	46bd      	mov	sp, r7
 8006866:	bd80      	pop	{r7, pc}
 8006868:	40010000 	.word	0x40010000
 800686c:	40000400 	.word	0x40000400
 8006870:	40000800 	.word	0x40000800
 8006874:	40000c00 	.word	0x40000c00
 8006878:	40014000 	.word	0x40014000

0800687c <HAL_TIM_PWM_Stop>:
 800687c:	b580      	push	{r7, lr}
 800687e:	b082      	sub	sp, #8
 8006880:	af00      	add	r7, sp, #0
 8006882:	6078      	str	r0, [r7, #4]
 8006884:	6039      	str	r1, [r7, #0]
 8006886:	687b      	ldr	r3, [r7, #4]
 8006888:	681b      	ldr	r3, [r3, #0]
 800688a:	2200      	movs	r2, #0
 800688c:	6839      	ldr	r1, [r7, #0]
 800688e:	4618      	mov	r0, r3
 8006890:	f000 fc88 	bl	80071a4 <TIM_CCxChannelCmd>
 8006894:	687b      	ldr	r3, [r7, #4]
 8006896:	681b      	ldr	r3, [r3, #0]
 8006898:	4a29      	ldr	r2, [pc, #164]	; (8006940 <HAL_TIM_PWM_Stop+0xc4>)
 800689a:	4293      	cmp	r3, r2
 800689c:	d117      	bne.n	80068ce <HAL_TIM_PWM_Stop+0x52>
 800689e:	687b      	ldr	r3, [r7, #4]
 80068a0:	681b      	ldr	r3, [r3, #0]
 80068a2:	6a1a      	ldr	r2, [r3, #32]
 80068a4:	f241 1311 	movw	r3, #4369	; 0x1111
 80068a8:	4013      	ands	r3, r2
 80068aa:	2b00      	cmp	r3, #0
 80068ac:	d10f      	bne.n	80068ce <HAL_TIM_PWM_Stop+0x52>
 80068ae:	687b      	ldr	r3, [r7, #4]
 80068b0:	681b      	ldr	r3, [r3, #0]
 80068b2:	6a1a      	ldr	r2, [r3, #32]
 80068b4:	f240 4344 	movw	r3, #1092	; 0x444
 80068b8:	4013      	ands	r3, r2
 80068ba:	2b00      	cmp	r3, #0
 80068bc:	d107      	bne.n	80068ce <HAL_TIM_PWM_Stop+0x52>
 80068be:	687b      	ldr	r3, [r7, #4]
 80068c0:	681b      	ldr	r3, [r3, #0]
 80068c2:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 80068c4:	687b      	ldr	r3, [r7, #4]
 80068c6:	681b      	ldr	r3, [r3, #0]
 80068c8:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 80068cc:	645a      	str	r2, [r3, #68]	; 0x44
 80068ce:	687b      	ldr	r3, [r7, #4]
 80068d0:	681b      	ldr	r3, [r3, #0]
 80068d2:	6a1a      	ldr	r2, [r3, #32]
 80068d4:	f241 1311 	movw	r3, #4369	; 0x1111
 80068d8:	4013      	ands	r3, r2
 80068da:	2b00      	cmp	r3, #0
 80068dc:	d10f      	bne.n	80068fe <HAL_TIM_PWM_Stop+0x82>
 80068de:	687b      	ldr	r3, [r7, #4]
 80068e0:	681b      	ldr	r3, [r3, #0]
 80068e2:	6a1a      	ldr	r2, [r3, #32]
 80068e4:	f240 4344 	movw	r3, #1092	; 0x444
 80068e8:	4013      	ands	r3, r2
 80068ea:	2b00      	cmp	r3, #0
 80068ec:	d107      	bne.n	80068fe <HAL_TIM_PWM_Stop+0x82>
 80068ee:	687b      	ldr	r3, [r7, #4]
 80068f0:	681b      	ldr	r3, [r3, #0]
 80068f2:	681a      	ldr	r2, [r3, #0]
 80068f4:	687b      	ldr	r3, [r7, #4]
 80068f6:	681b      	ldr	r3, [r3, #0]
 80068f8:	f022 0201 	bic.w	r2, r2, #1
 80068fc:	601a      	str	r2, [r3, #0]
 80068fe:	683b      	ldr	r3, [r7, #0]
 8006900:	2b00      	cmp	r3, #0
 8006902:	d104      	bne.n	800690e <HAL_TIM_PWM_Stop+0x92>
 8006904:	687b      	ldr	r3, [r7, #4]
 8006906:	2201      	movs	r2, #1
 8006908:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800690c:	e013      	b.n	8006936 <HAL_TIM_PWM_Stop+0xba>
 800690e:	683b      	ldr	r3, [r7, #0]
 8006910:	2b04      	cmp	r3, #4
 8006912:	d104      	bne.n	800691e <HAL_TIM_PWM_Stop+0xa2>
 8006914:	687b      	ldr	r3, [r7, #4]
 8006916:	2201      	movs	r2, #1
 8006918:	f883 203f 	strb.w	r2, [r3, #63]	; 0x3f
 800691c:	e00b      	b.n	8006936 <HAL_TIM_PWM_Stop+0xba>
 800691e:	683b      	ldr	r3, [r7, #0]
 8006920:	2b08      	cmp	r3, #8
 8006922:	d104      	bne.n	800692e <HAL_TIM_PWM_Stop+0xb2>
 8006924:	687b      	ldr	r3, [r7, #4]
 8006926:	2201      	movs	r2, #1
 8006928:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 800692c:	e003      	b.n	8006936 <HAL_TIM_PWM_Stop+0xba>
 800692e:	687b      	ldr	r3, [r7, #4]
 8006930:	2201      	movs	r2, #1
 8006932:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8006936:	2300      	movs	r3, #0
 8006938:	4618      	mov	r0, r3
 800693a:	3708      	adds	r7, #8
 800693c:	46bd      	mov	sp, r7
 800693e:	bd80      	pop	{r7, pc}
 8006940:	40010000 	.word	0x40010000

08006944 <HAL_TIM_PWM_ConfigChannel>:
 8006944:	b580      	push	{r7, lr}
 8006946:	b086      	sub	sp, #24
 8006948:	af00      	add	r7, sp, #0
 800694a:	60f8      	str	r0, [r7, #12]
 800694c:	60b9      	str	r1, [r7, #8]
 800694e:	607a      	str	r2, [r7, #4]
 8006950:	2300      	movs	r3, #0
 8006952:	75fb      	strb	r3, [r7, #23]
 8006954:	68fb      	ldr	r3, [r7, #12]
 8006956:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800695a:	2b01      	cmp	r3, #1
 800695c:	d101      	bne.n	8006962 <HAL_TIM_PWM_ConfigChannel+0x1e>
 800695e:	2302      	movs	r3, #2
 8006960:	e0ae      	b.n	8006ac0 <HAL_TIM_PWM_ConfigChannel+0x17c>
 8006962:	68fb      	ldr	r3, [r7, #12]
 8006964:	2201      	movs	r2, #1
 8006966:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800696a:	687b      	ldr	r3, [r7, #4]
 800696c:	2b0c      	cmp	r3, #12
 800696e:	f200 809f 	bhi.w	8006ab0 <HAL_TIM_PWM_ConfigChannel+0x16c>
 8006972:	a201      	add	r2, pc, #4	; (adr r2, 8006978 <HAL_TIM_PWM_ConfigChannel+0x34>)
 8006974:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8006978:	080069ad 	.word	0x080069ad
 800697c:	08006ab1 	.word	0x08006ab1
 8006980:	08006ab1 	.word	0x08006ab1
 8006984:	08006ab1 	.word	0x08006ab1
 8006988:	080069ed 	.word	0x080069ed
 800698c:	08006ab1 	.word	0x08006ab1
 8006990:	08006ab1 	.word	0x08006ab1
 8006994:	08006ab1 	.word	0x08006ab1
 8006998:	08006a2f 	.word	0x08006a2f
 800699c:	08006ab1 	.word	0x08006ab1
 80069a0:	08006ab1 	.word	0x08006ab1
 80069a4:	08006ab1 	.word	0x08006ab1
 80069a8:	08006a6f 	.word	0x08006a6f
 80069ac:	68fb      	ldr	r3, [r7, #12]
 80069ae:	681b      	ldr	r3, [r3, #0]
 80069b0:	68b9      	ldr	r1, [r7, #8]
 80069b2:	4618      	mov	r0, r3
 80069b4:	f000 f9d0 	bl	8006d58 <TIM_OC1_SetConfig>
 80069b8:	68fb      	ldr	r3, [r7, #12]
 80069ba:	681b      	ldr	r3, [r3, #0]
 80069bc:	699a      	ldr	r2, [r3, #24]
 80069be:	68fb      	ldr	r3, [r7, #12]
 80069c0:	681b      	ldr	r3, [r3, #0]
 80069c2:	f042 0208 	orr.w	r2, r2, #8
 80069c6:	619a      	str	r2, [r3, #24]
 80069c8:	68fb      	ldr	r3, [r7, #12]
 80069ca:	681b      	ldr	r3, [r3, #0]
 80069cc:	699a      	ldr	r2, [r3, #24]
 80069ce:	68fb      	ldr	r3, [r7, #12]
 80069d0:	681b      	ldr	r3, [r3, #0]
 80069d2:	f022 0204 	bic.w	r2, r2, #4
 80069d6:	619a      	str	r2, [r3, #24]
 80069d8:	68fb      	ldr	r3, [r7, #12]
 80069da:	681b      	ldr	r3, [r3, #0]
 80069dc:	6999      	ldr	r1, [r3, #24]
 80069de:	68bb      	ldr	r3, [r7, #8]
 80069e0:	691a      	ldr	r2, [r3, #16]
 80069e2:	68fb      	ldr	r3, [r7, #12]
 80069e4:	681b      	ldr	r3, [r3, #0]
 80069e6:	430a      	orrs	r2, r1
 80069e8:	619a      	str	r2, [r3, #24]
 80069ea:	e064      	b.n	8006ab6 <HAL_TIM_PWM_ConfigChannel+0x172>
 80069ec:	68fb      	ldr	r3, [r7, #12]
 80069ee:	681b      	ldr	r3, [r3, #0]
 80069f0:	68b9      	ldr	r1, [r7, #8]
 80069f2:	4618      	mov	r0, r3
 80069f4:	f000 fa16 	bl	8006e24 <TIM_OC2_SetConfig>
 80069f8:	68fb      	ldr	r3, [r7, #12]
 80069fa:	681b      	ldr	r3, [r3, #0]
 80069fc:	699a      	ldr	r2, [r3, #24]
 80069fe:	68fb      	ldr	r3, [r7, #12]
 8006a00:	681b      	ldr	r3, [r3, #0]
 8006a02:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8006a06:	619a      	str	r2, [r3, #24]
 8006a08:	68fb      	ldr	r3, [r7, #12]
 8006a0a:	681b      	ldr	r3, [r3, #0]
 8006a0c:	699a      	ldr	r2, [r3, #24]
 8006a0e:	68fb      	ldr	r3, [r7, #12]
 8006a10:	681b      	ldr	r3, [r3, #0]
 8006a12:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8006a16:	619a      	str	r2, [r3, #24]
 8006a18:	68fb      	ldr	r3, [r7, #12]
 8006a1a:	681b      	ldr	r3, [r3, #0]
 8006a1c:	6999      	ldr	r1, [r3, #24]
 8006a1e:	68bb      	ldr	r3, [r7, #8]
 8006a20:	691b      	ldr	r3, [r3, #16]
 8006a22:	021a      	lsls	r2, r3, #8
 8006a24:	68fb      	ldr	r3, [r7, #12]
 8006a26:	681b      	ldr	r3, [r3, #0]
 8006a28:	430a      	orrs	r2, r1
 8006a2a:	619a      	str	r2, [r3, #24]
 8006a2c:	e043      	b.n	8006ab6 <HAL_TIM_PWM_ConfigChannel+0x172>
 8006a2e:	68fb      	ldr	r3, [r7, #12]
 8006a30:	681b      	ldr	r3, [r3, #0]
 8006a32:	68b9      	ldr	r1, [r7, #8]
 8006a34:	4618      	mov	r0, r3
 8006a36:	f000 fa61 	bl	8006efc <TIM_OC3_SetConfig>
 8006a3a:	68fb      	ldr	r3, [r7, #12]
 8006a3c:	681b      	ldr	r3, [r3, #0]
 8006a3e:	69da      	ldr	r2, [r3, #28]
 8006a40:	68fb      	ldr	r3, [r7, #12]
 8006a42:	681b      	ldr	r3, [r3, #0]
 8006a44:	f042 0208 	orr.w	r2, r2, #8
 8006a48:	61da      	str	r2, [r3, #28]
 8006a4a:	68fb      	ldr	r3, [r7, #12]
 8006a4c:	681b      	ldr	r3, [r3, #0]
 8006a4e:	69da      	ldr	r2, [r3, #28]
 8006a50:	68fb      	ldr	r3, [r7, #12]
 8006a52:	681b      	ldr	r3, [r3, #0]
 8006a54:	f022 0204 	bic.w	r2, r2, #4
 8006a58:	61da      	str	r2, [r3, #28]
 8006a5a:	68fb      	ldr	r3, [r7, #12]
 8006a5c:	681b      	ldr	r3, [r3, #0]
 8006a5e:	69d9      	ldr	r1, [r3, #28]
 8006a60:	68bb      	ldr	r3, [r7, #8]
 8006a62:	691a      	ldr	r2, [r3, #16]
 8006a64:	68fb      	ldr	r3, [r7, #12]
 8006a66:	681b      	ldr	r3, [r3, #0]
 8006a68:	430a      	orrs	r2, r1
 8006a6a:	61da      	str	r2, [r3, #28]
 8006a6c:	e023      	b.n	8006ab6 <HAL_TIM_PWM_ConfigChannel+0x172>
 8006a6e:	68fb      	ldr	r3, [r7, #12]
 8006a70:	681b      	ldr	r3, [r3, #0]
 8006a72:	68b9      	ldr	r1, [r7, #8]
 8006a74:	4618      	mov	r0, r3
 8006a76:	f000 faab 	bl	8006fd0 <TIM_OC4_SetConfig>
 8006a7a:	68fb      	ldr	r3, [r7, #12]
 8006a7c:	681b      	ldr	r3, [r3, #0]
 8006a7e:	69da      	ldr	r2, [r3, #28]
 8006a80:	68fb      	ldr	r3, [r7, #12]
 8006a82:	681b      	ldr	r3, [r3, #0]
 8006a84:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8006a88:	61da      	str	r2, [r3, #28]
 8006a8a:	68fb      	ldr	r3, [r7, #12]
 8006a8c:	681b      	ldr	r3, [r3, #0]
 8006a8e:	69da      	ldr	r2, [r3, #28]
 8006a90:	68fb      	ldr	r3, [r7, #12]
 8006a92:	681b      	ldr	r3, [r3, #0]
 8006a94:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8006a98:	61da      	str	r2, [r3, #28]
 8006a9a:	68fb      	ldr	r3, [r7, #12]
 8006a9c:	681b      	ldr	r3, [r3, #0]
 8006a9e:	69d9      	ldr	r1, [r3, #28]
 8006aa0:	68bb      	ldr	r3, [r7, #8]
 8006aa2:	691b      	ldr	r3, [r3, #16]
 8006aa4:	021a      	lsls	r2, r3, #8
 8006aa6:	68fb      	ldr	r3, [r7, #12]
 8006aa8:	681b      	ldr	r3, [r3, #0]
 8006aaa:	430a      	orrs	r2, r1
 8006aac:	61da      	str	r2, [r3, #28]
 8006aae:	e002      	b.n	8006ab6 <HAL_TIM_PWM_ConfigChannel+0x172>
 8006ab0:	2301      	movs	r3, #1
 8006ab2:	75fb      	strb	r3, [r7, #23]
 8006ab4:	bf00      	nop
 8006ab6:	68fb      	ldr	r3, [r7, #12]
 8006ab8:	2200      	movs	r2, #0
 8006aba:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8006abe:	7dfb      	ldrb	r3, [r7, #23]
 8006ac0:	4618      	mov	r0, r3
 8006ac2:	3718      	adds	r7, #24
 8006ac4:	46bd      	mov	sp, r7
 8006ac6:	bd80      	pop	{r7, pc}

08006ac8 <HAL_TIM_ConfigClockSource>:
 8006ac8:	b580      	push	{r7, lr}
 8006aca:	b084      	sub	sp, #16
 8006acc:	af00      	add	r7, sp, #0
 8006ace:	6078      	str	r0, [r7, #4]
 8006ad0:	6039      	str	r1, [r7, #0]
 8006ad2:	2300      	movs	r3, #0
 8006ad4:	73fb      	strb	r3, [r7, #15]
 8006ad6:	687b      	ldr	r3, [r7, #4]
 8006ad8:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8006adc:	2b01      	cmp	r3, #1
 8006ade:	d101      	bne.n	8006ae4 <HAL_TIM_ConfigClockSource+0x1c>
 8006ae0:	2302      	movs	r3, #2
 8006ae2:	e0b4      	b.n	8006c4e <HAL_TIM_ConfigClockSource+0x186>
 8006ae4:	687b      	ldr	r3, [r7, #4]
 8006ae6:	2201      	movs	r2, #1
 8006ae8:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8006aec:	687b      	ldr	r3, [r7, #4]
 8006aee:	2202      	movs	r2, #2
 8006af0:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8006af4:	687b      	ldr	r3, [r7, #4]
 8006af6:	681b      	ldr	r3, [r3, #0]
 8006af8:	689b      	ldr	r3, [r3, #8]
 8006afa:	60bb      	str	r3, [r7, #8]
 8006afc:	68bb      	ldr	r3, [r7, #8]
 8006afe:	f023 0377 	bic.w	r3, r3, #119	; 0x77
 8006b02:	60bb      	str	r3, [r7, #8]
 8006b04:	68bb      	ldr	r3, [r7, #8]
 8006b06:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 8006b0a:	60bb      	str	r3, [r7, #8]
 8006b0c:	687b      	ldr	r3, [r7, #4]
 8006b0e:	681b      	ldr	r3, [r3, #0]
 8006b10:	68ba      	ldr	r2, [r7, #8]
 8006b12:	609a      	str	r2, [r3, #8]
 8006b14:	683b      	ldr	r3, [r7, #0]
 8006b16:	681b      	ldr	r3, [r3, #0]
 8006b18:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8006b1c:	d03e      	beq.n	8006b9c <HAL_TIM_ConfigClockSource+0xd4>
 8006b1e:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 8006b22:	f200 8087 	bhi.w	8006c34 <HAL_TIM_ConfigClockSource+0x16c>
 8006b26:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8006b2a:	f000 8086 	beq.w	8006c3a <HAL_TIM_ConfigClockSource+0x172>
 8006b2e:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8006b32:	d87f      	bhi.n	8006c34 <HAL_TIM_ConfigClockSource+0x16c>
 8006b34:	2b70      	cmp	r3, #112	; 0x70
 8006b36:	d01a      	beq.n	8006b6e <HAL_TIM_ConfigClockSource+0xa6>
 8006b38:	2b70      	cmp	r3, #112	; 0x70
 8006b3a:	d87b      	bhi.n	8006c34 <HAL_TIM_ConfigClockSource+0x16c>
 8006b3c:	2b60      	cmp	r3, #96	; 0x60
 8006b3e:	d050      	beq.n	8006be2 <HAL_TIM_ConfigClockSource+0x11a>
 8006b40:	2b60      	cmp	r3, #96	; 0x60
 8006b42:	d877      	bhi.n	8006c34 <HAL_TIM_ConfigClockSource+0x16c>
 8006b44:	2b50      	cmp	r3, #80	; 0x50
 8006b46:	d03c      	beq.n	8006bc2 <HAL_TIM_ConfigClockSource+0xfa>
 8006b48:	2b50      	cmp	r3, #80	; 0x50
 8006b4a:	d873      	bhi.n	8006c34 <HAL_TIM_ConfigClockSource+0x16c>
 8006b4c:	2b40      	cmp	r3, #64	; 0x40
 8006b4e:	d058      	beq.n	8006c02 <HAL_TIM_ConfigClockSource+0x13a>
 8006b50:	2b40      	cmp	r3, #64	; 0x40
 8006b52:	d86f      	bhi.n	8006c34 <HAL_TIM_ConfigClockSource+0x16c>
 8006b54:	2b30      	cmp	r3, #48	; 0x30
 8006b56:	d064      	beq.n	8006c22 <HAL_TIM_ConfigClockSource+0x15a>
 8006b58:	2b30      	cmp	r3, #48	; 0x30
 8006b5a:	d86b      	bhi.n	8006c34 <HAL_TIM_ConfigClockSource+0x16c>
 8006b5c:	2b20      	cmp	r3, #32
 8006b5e:	d060      	beq.n	8006c22 <HAL_TIM_ConfigClockSource+0x15a>
 8006b60:	2b20      	cmp	r3, #32
 8006b62:	d867      	bhi.n	8006c34 <HAL_TIM_ConfigClockSource+0x16c>
 8006b64:	2b00      	cmp	r3, #0
 8006b66:	d05c      	beq.n	8006c22 <HAL_TIM_ConfigClockSource+0x15a>
 8006b68:	2b10      	cmp	r3, #16
 8006b6a:	d05a      	beq.n	8006c22 <HAL_TIM_ConfigClockSource+0x15a>
 8006b6c:	e062      	b.n	8006c34 <HAL_TIM_ConfigClockSource+0x16c>
 8006b6e:	687b      	ldr	r3, [r7, #4]
 8006b70:	6818      	ldr	r0, [r3, #0]
 8006b72:	683b      	ldr	r3, [r7, #0]
 8006b74:	6899      	ldr	r1, [r3, #8]
 8006b76:	683b      	ldr	r3, [r7, #0]
 8006b78:	685a      	ldr	r2, [r3, #4]
 8006b7a:	683b      	ldr	r3, [r7, #0]
 8006b7c:	68db      	ldr	r3, [r3, #12]
 8006b7e:	f000 faf1 	bl	8007164 <TIM_ETR_SetConfig>
 8006b82:	687b      	ldr	r3, [r7, #4]
 8006b84:	681b      	ldr	r3, [r3, #0]
 8006b86:	689b      	ldr	r3, [r3, #8]
 8006b88:	60bb      	str	r3, [r7, #8]
 8006b8a:	68bb      	ldr	r3, [r7, #8]
 8006b8c:	f043 0377 	orr.w	r3, r3, #119	; 0x77
 8006b90:	60bb      	str	r3, [r7, #8]
 8006b92:	687b      	ldr	r3, [r7, #4]
 8006b94:	681b      	ldr	r3, [r3, #0]
 8006b96:	68ba      	ldr	r2, [r7, #8]
 8006b98:	609a      	str	r2, [r3, #8]
 8006b9a:	e04f      	b.n	8006c3c <HAL_TIM_ConfigClockSource+0x174>
 8006b9c:	687b      	ldr	r3, [r7, #4]
 8006b9e:	6818      	ldr	r0, [r3, #0]
 8006ba0:	683b      	ldr	r3, [r7, #0]
 8006ba2:	6899      	ldr	r1, [r3, #8]
 8006ba4:	683b      	ldr	r3, [r7, #0]
 8006ba6:	685a      	ldr	r2, [r3, #4]
 8006ba8:	683b      	ldr	r3, [r7, #0]
 8006baa:	68db      	ldr	r3, [r3, #12]
 8006bac:	f000 fada 	bl	8007164 <TIM_ETR_SetConfig>
 8006bb0:	687b      	ldr	r3, [r7, #4]
 8006bb2:	681b      	ldr	r3, [r3, #0]
 8006bb4:	689a      	ldr	r2, [r3, #8]
 8006bb6:	687b      	ldr	r3, [r7, #4]
 8006bb8:	681b      	ldr	r3, [r3, #0]
 8006bba:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 8006bbe:	609a      	str	r2, [r3, #8]
 8006bc0:	e03c      	b.n	8006c3c <HAL_TIM_ConfigClockSource+0x174>
 8006bc2:	687b      	ldr	r3, [r7, #4]
 8006bc4:	6818      	ldr	r0, [r3, #0]
 8006bc6:	683b      	ldr	r3, [r7, #0]
 8006bc8:	6859      	ldr	r1, [r3, #4]
 8006bca:	683b      	ldr	r3, [r7, #0]
 8006bcc:	68db      	ldr	r3, [r3, #12]
 8006bce:	461a      	mov	r2, r3
 8006bd0:	f000 fa4e 	bl	8007070 <TIM_TI1_ConfigInputStage>
 8006bd4:	687b      	ldr	r3, [r7, #4]
 8006bd6:	681b      	ldr	r3, [r3, #0]
 8006bd8:	2150      	movs	r1, #80	; 0x50
 8006bda:	4618      	mov	r0, r3
 8006bdc:	f000 faa7 	bl	800712e <TIM_ITRx_SetConfig>
 8006be0:	e02c      	b.n	8006c3c <HAL_TIM_ConfigClockSource+0x174>
 8006be2:	687b      	ldr	r3, [r7, #4]
 8006be4:	6818      	ldr	r0, [r3, #0]
 8006be6:	683b      	ldr	r3, [r7, #0]
 8006be8:	6859      	ldr	r1, [r3, #4]
 8006bea:	683b      	ldr	r3, [r7, #0]
 8006bec:	68db      	ldr	r3, [r3, #12]
 8006bee:	461a      	mov	r2, r3
 8006bf0:	f000 fa6d 	bl	80070ce <TIM_TI2_ConfigInputStage>
 8006bf4:	687b      	ldr	r3, [r7, #4]
 8006bf6:	681b      	ldr	r3, [r3, #0]
 8006bf8:	2160      	movs	r1, #96	; 0x60
 8006bfa:	4618      	mov	r0, r3
 8006bfc:	f000 fa97 	bl	800712e <TIM_ITRx_SetConfig>
 8006c00:	e01c      	b.n	8006c3c <HAL_TIM_ConfigClockSource+0x174>
 8006c02:	687b      	ldr	r3, [r7, #4]
 8006c04:	6818      	ldr	r0, [r3, #0]
 8006c06:	683b      	ldr	r3, [r7, #0]
 8006c08:	6859      	ldr	r1, [r3, #4]
 8006c0a:	683b      	ldr	r3, [r7, #0]
 8006c0c:	68db      	ldr	r3, [r3, #12]
 8006c0e:	461a      	mov	r2, r3
 8006c10:	f000 fa2e 	bl	8007070 <TIM_TI1_ConfigInputStage>
 8006c14:	687b      	ldr	r3, [r7, #4]
 8006c16:	681b      	ldr	r3, [r3, #0]
 8006c18:	2140      	movs	r1, #64	; 0x40
 8006c1a:	4618      	mov	r0, r3
 8006c1c:	f000 fa87 	bl	800712e <TIM_ITRx_SetConfig>
 8006c20:	e00c      	b.n	8006c3c <HAL_TIM_ConfigClockSource+0x174>
 8006c22:	687b      	ldr	r3, [r7, #4]
 8006c24:	681a      	ldr	r2, [r3, #0]
 8006c26:	683b      	ldr	r3, [r7, #0]
 8006c28:	681b      	ldr	r3, [r3, #0]
 8006c2a:	4619      	mov	r1, r3
 8006c2c:	4610      	mov	r0, r2
 8006c2e:	f000 fa7e 	bl	800712e <TIM_ITRx_SetConfig>
 8006c32:	e003      	b.n	8006c3c <HAL_TIM_ConfigClockSource+0x174>
 8006c34:	2301      	movs	r3, #1
 8006c36:	73fb      	strb	r3, [r7, #15]
 8006c38:	e000      	b.n	8006c3c <HAL_TIM_ConfigClockSource+0x174>
 8006c3a:	bf00      	nop
 8006c3c:	687b      	ldr	r3, [r7, #4]
 8006c3e:	2201      	movs	r2, #1
 8006c40:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8006c44:	687b      	ldr	r3, [r7, #4]
 8006c46:	2200      	movs	r2, #0
 8006c48:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8006c4c:	7bfb      	ldrb	r3, [r7, #15]
 8006c4e:	4618      	mov	r0, r3
 8006c50:	3710      	adds	r7, #16
 8006c52:	46bd      	mov	sp, r7
 8006c54:	bd80      	pop	{r7, pc}
	...

08006c58 <TIM_Base_SetConfig>:
 8006c58:	b480      	push	{r7}
 8006c5a:	b085      	sub	sp, #20
 8006c5c:	af00      	add	r7, sp, #0
 8006c5e:	6078      	str	r0, [r7, #4]
 8006c60:	6039      	str	r1, [r7, #0]
 8006c62:	687b      	ldr	r3, [r7, #4]
 8006c64:	681b      	ldr	r3, [r3, #0]
 8006c66:	60fb      	str	r3, [r7, #12]
 8006c68:	687b      	ldr	r3, [r7, #4]
 8006c6a:	4a34      	ldr	r2, [pc, #208]	; (8006d3c <TIM_Base_SetConfig+0xe4>)
 8006c6c:	4293      	cmp	r3, r2
 8006c6e:	d00f      	beq.n	8006c90 <TIM_Base_SetConfig+0x38>
 8006c70:	687b      	ldr	r3, [r7, #4]
 8006c72:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8006c76:	d00b      	beq.n	8006c90 <TIM_Base_SetConfig+0x38>
 8006c78:	687b      	ldr	r3, [r7, #4]
 8006c7a:	4a31      	ldr	r2, [pc, #196]	; (8006d40 <TIM_Base_SetConfig+0xe8>)
 8006c7c:	4293      	cmp	r3, r2
 8006c7e:	d007      	beq.n	8006c90 <TIM_Base_SetConfig+0x38>
 8006c80:	687b      	ldr	r3, [r7, #4]
 8006c82:	4a30      	ldr	r2, [pc, #192]	; (8006d44 <TIM_Base_SetConfig+0xec>)
 8006c84:	4293      	cmp	r3, r2
 8006c86:	d003      	beq.n	8006c90 <TIM_Base_SetConfig+0x38>
 8006c88:	687b      	ldr	r3, [r7, #4]
 8006c8a:	4a2f      	ldr	r2, [pc, #188]	; (8006d48 <TIM_Base_SetConfig+0xf0>)
 8006c8c:	4293      	cmp	r3, r2
 8006c8e:	d108      	bne.n	8006ca2 <TIM_Base_SetConfig+0x4a>
 8006c90:	68fb      	ldr	r3, [r7, #12]
 8006c92:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8006c96:	60fb      	str	r3, [r7, #12]
 8006c98:	683b      	ldr	r3, [r7, #0]
 8006c9a:	685b      	ldr	r3, [r3, #4]
 8006c9c:	68fa      	ldr	r2, [r7, #12]
 8006c9e:	4313      	orrs	r3, r2
 8006ca0:	60fb      	str	r3, [r7, #12]
 8006ca2:	687b      	ldr	r3, [r7, #4]
 8006ca4:	4a25      	ldr	r2, [pc, #148]	; (8006d3c <TIM_Base_SetConfig+0xe4>)
 8006ca6:	4293      	cmp	r3, r2
 8006ca8:	d01b      	beq.n	8006ce2 <TIM_Base_SetConfig+0x8a>
 8006caa:	687b      	ldr	r3, [r7, #4]
 8006cac:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8006cb0:	d017      	beq.n	8006ce2 <TIM_Base_SetConfig+0x8a>
 8006cb2:	687b      	ldr	r3, [r7, #4]
 8006cb4:	4a22      	ldr	r2, [pc, #136]	; (8006d40 <TIM_Base_SetConfig+0xe8>)
 8006cb6:	4293      	cmp	r3, r2
 8006cb8:	d013      	beq.n	8006ce2 <TIM_Base_SetConfig+0x8a>
 8006cba:	687b      	ldr	r3, [r7, #4]
 8006cbc:	4a21      	ldr	r2, [pc, #132]	; (8006d44 <TIM_Base_SetConfig+0xec>)
 8006cbe:	4293      	cmp	r3, r2
 8006cc0:	d00f      	beq.n	8006ce2 <TIM_Base_SetConfig+0x8a>
 8006cc2:	687b      	ldr	r3, [r7, #4]
 8006cc4:	4a20      	ldr	r2, [pc, #128]	; (8006d48 <TIM_Base_SetConfig+0xf0>)
 8006cc6:	4293      	cmp	r3, r2
 8006cc8:	d00b      	beq.n	8006ce2 <TIM_Base_SetConfig+0x8a>
 8006cca:	687b      	ldr	r3, [r7, #4]
 8006ccc:	4a1f      	ldr	r2, [pc, #124]	; (8006d4c <TIM_Base_SetConfig+0xf4>)
 8006cce:	4293      	cmp	r3, r2
 8006cd0:	d007      	beq.n	8006ce2 <TIM_Base_SetConfig+0x8a>
 8006cd2:	687b      	ldr	r3, [r7, #4]
 8006cd4:	4a1e      	ldr	r2, [pc, #120]	; (8006d50 <TIM_Base_SetConfig+0xf8>)
 8006cd6:	4293      	cmp	r3, r2
 8006cd8:	d003      	beq.n	8006ce2 <TIM_Base_SetConfig+0x8a>
 8006cda:	687b      	ldr	r3, [r7, #4]
 8006cdc:	4a1d      	ldr	r2, [pc, #116]	; (8006d54 <TIM_Base_SetConfig+0xfc>)
 8006cde:	4293      	cmp	r3, r2
 8006ce0:	d108      	bne.n	8006cf4 <TIM_Base_SetConfig+0x9c>
 8006ce2:	68fb      	ldr	r3, [r7, #12]
 8006ce4:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8006ce8:	60fb      	str	r3, [r7, #12]
 8006cea:	683b      	ldr	r3, [r7, #0]
 8006cec:	68db      	ldr	r3, [r3, #12]
 8006cee:	68fa      	ldr	r2, [r7, #12]
 8006cf0:	4313      	orrs	r3, r2
 8006cf2:	60fb      	str	r3, [r7, #12]
 8006cf4:	68fb      	ldr	r3, [r7, #12]
 8006cf6:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 8006cfa:	683b      	ldr	r3, [r7, #0]
 8006cfc:	695b      	ldr	r3, [r3, #20]
 8006cfe:	4313      	orrs	r3, r2
 8006d00:	60fb      	str	r3, [r7, #12]
 8006d02:	687b      	ldr	r3, [r7, #4]
 8006d04:	68fa      	ldr	r2, [r7, #12]
 8006d06:	601a      	str	r2, [r3, #0]
 8006d08:	683b      	ldr	r3, [r7, #0]
 8006d0a:	689a      	ldr	r2, [r3, #8]
 8006d0c:	687b      	ldr	r3, [r7, #4]
 8006d0e:	62da      	str	r2, [r3, #44]	; 0x2c
 8006d10:	683b      	ldr	r3, [r7, #0]
 8006d12:	681a      	ldr	r2, [r3, #0]
 8006d14:	687b      	ldr	r3, [r7, #4]
 8006d16:	629a      	str	r2, [r3, #40]	; 0x28
 8006d18:	687b      	ldr	r3, [r7, #4]
 8006d1a:	4a08      	ldr	r2, [pc, #32]	; (8006d3c <TIM_Base_SetConfig+0xe4>)
 8006d1c:	4293      	cmp	r3, r2
 8006d1e:	d103      	bne.n	8006d28 <TIM_Base_SetConfig+0xd0>
 8006d20:	683b      	ldr	r3, [r7, #0]
 8006d22:	691a      	ldr	r2, [r3, #16]
 8006d24:	687b      	ldr	r3, [r7, #4]
 8006d26:	631a      	str	r2, [r3, #48]	; 0x30
 8006d28:	687b      	ldr	r3, [r7, #4]
 8006d2a:	2201      	movs	r2, #1
 8006d2c:	615a      	str	r2, [r3, #20]
 8006d2e:	bf00      	nop
 8006d30:	3714      	adds	r7, #20
 8006d32:	46bd      	mov	sp, r7
 8006d34:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006d38:	4770      	bx	lr
 8006d3a:	bf00      	nop
 8006d3c:	40010000 	.word	0x40010000
 8006d40:	40000400 	.word	0x40000400
 8006d44:	40000800 	.word	0x40000800
 8006d48:	40000c00 	.word	0x40000c00
 8006d4c:	40014000 	.word	0x40014000
 8006d50:	40014400 	.word	0x40014400
 8006d54:	40014800 	.word	0x40014800

08006d58 <TIM_OC1_SetConfig>:
 8006d58:	b480      	push	{r7}
 8006d5a:	b087      	sub	sp, #28
 8006d5c:	af00      	add	r7, sp, #0
 8006d5e:	6078      	str	r0, [r7, #4]
 8006d60:	6039      	str	r1, [r7, #0]
 8006d62:	687b      	ldr	r3, [r7, #4]
 8006d64:	6a1b      	ldr	r3, [r3, #32]
 8006d66:	f023 0201 	bic.w	r2, r3, #1
 8006d6a:	687b      	ldr	r3, [r7, #4]
 8006d6c:	621a      	str	r2, [r3, #32]
 8006d6e:	687b      	ldr	r3, [r7, #4]
 8006d70:	6a1b      	ldr	r3, [r3, #32]
 8006d72:	617b      	str	r3, [r7, #20]
 8006d74:	687b      	ldr	r3, [r7, #4]
 8006d76:	685b      	ldr	r3, [r3, #4]
 8006d78:	613b      	str	r3, [r7, #16]
 8006d7a:	687b      	ldr	r3, [r7, #4]
 8006d7c:	699b      	ldr	r3, [r3, #24]
 8006d7e:	60fb      	str	r3, [r7, #12]
 8006d80:	68fb      	ldr	r3, [r7, #12]
 8006d82:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8006d86:	60fb      	str	r3, [r7, #12]
 8006d88:	68fb      	ldr	r3, [r7, #12]
 8006d8a:	f023 0303 	bic.w	r3, r3, #3
 8006d8e:	60fb      	str	r3, [r7, #12]
 8006d90:	683b      	ldr	r3, [r7, #0]
 8006d92:	681b      	ldr	r3, [r3, #0]
 8006d94:	68fa      	ldr	r2, [r7, #12]
 8006d96:	4313      	orrs	r3, r2
 8006d98:	60fb      	str	r3, [r7, #12]
 8006d9a:	697b      	ldr	r3, [r7, #20]
 8006d9c:	f023 0302 	bic.w	r3, r3, #2
 8006da0:	617b      	str	r3, [r7, #20]
 8006da2:	683b      	ldr	r3, [r7, #0]
 8006da4:	689b      	ldr	r3, [r3, #8]
 8006da6:	697a      	ldr	r2, [r7, #20]
 8006da8:	4313      	orrs	r3, r2
 8006daa:	617b      	str	r3, [r7, #20]
 8006dac:	687b      	ldr	r3, [r7, #4]
 8006dae:	4a1c      	ldr	r2, [pc, #112]	; (8006e20 <TIM_OC1_SetConfig+0xc8>)
 8006db0:	4293      	cmp	r3, r2
 8006db2:	d10c      	bne.n	8006dce <TIM_OC1_SetConfig+0x76>
 8006db4:	697b      	ldr	r3, [r7, #20]
 8006db6:	f023 0308 	bic.w	r3, r3, #8
 8006dba:	617b      	str	r3, [r7, #20]
 8006dbc:	683b      	ldr	r3, [r7, #0]
 8006dbe:	68db      	ldr	r3, [r3, #12]
 8006dc0:	697a      	ldr	r2, [r7, #20]
 8006dc2:	4313      	orrs	r3, r2
 8006dc4:	617b      	str	r3, [r7, #20]
 8006dc6:	697b      	ldr	r3, [r7, #20]
 8006dc8:	f023 0304 	bic.w	r3, r3, #4
 8006dcc:	617b      	str	r3, [r7, #20]
 8006dce:	687b      	ldr	r3, [r7, #4]
 8006dd0:	4a13      	ldr	r2, [pc, #76]	; (8006e20 <TIM_OC1_SetConfig+0xc8>)
 8006dd2:	4293      	cmp	r3, r2
 8006dd4:	d111      	bne.n	8006dfa <TIM_OC1_SetConfig+0xa2>
 8006dd6:	693b      	ldr	r3, [r7, #16]
 8006dd8:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8006ddc:	613b      	str	r3, [r7, #16]
 8006dde:	693b      	ldr	r3, [r7, #16]
 8006de0:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8006de4:	613b      	str	r3, [r7, #16]
 8006de6:	683b      	ldr	r3, [r7, #0]
 8006de8:	695b      	ldr	r3, [r3, #20]
 8006dea:	693a      	ldr	r2, [r7, #16]
 8006dec:	4313      	orrs	r3, r2
 8006dee:	613b      	str	r3, [r7, #16]
 8006df0:	683b      	ldr	r3, [r7, #0]
 8006df2:	699b      	ldr	r3, [r3, #24]
 8006df4:	693a      	ldr	r2, [r7, #16]
 8006df6:	4313      	orrs	r3, r2
 8006df8:	613b      	str	r3, [r7, #16]
 8006dfa:	687b      	ldr	r3, [r7, #4]
 8006dfc:	693a      	ldr	r2, [r7, #16]
 8006dfe:	605a      	str	r2, [r3, #4]
 8006e00:	687b      	ldr	r3, [r7, #4]
 8006e02:	68fa      	ldr	r2, [r7, #12]
 8006e04:	619a      	str	r2, [r3, #24]
 8006e06:	683b      	ldr	r3, [r7, #0]
 8006e08:	685a      	ldr	r2, [r3, #4]
 8006e0a:	687b      	ldr	r3, [r7, #4]
 8006e0c:	635a      	str	r2, [r3, #52]	; 0x34
 8006e0e:	687b      	ldr	r3, [r7, #4]
 8006e10:	697a      	ldr	r2, [r7, #20]
 8006e12:	621a      	str	r2, [r3, #32]
 8006e14:	bf00      	nop
 8006e16:	371c      	adds	r7, #28
 8006e18:	46bd      	mov	sp, r7
 8006e1a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006e1e:	4770      	bx	lr
 8006e20:	40010000 	.word	0x40010000

08006e24 <TIM_OC2_SetConfig>:
 8006e24:	b480      	push	{r7}
 8006e26:	b087      	sub	sp, #28
 8006e28:	af00      	add	r7, sp, #0
 8006e2a:	6078      	str	r0, [r7, #4]
 8006e2c:	6039      	str	r1, [r7, #0]
 8006e2e:	687b      	ldr	r3, [r7, #4]
 8006e30:	6a1b      	ldr	r3, [r3, #32]
 8006e32:	f023 0210 	bic.w	r2, r3, #16
 8006e36:	687b      	ldr	r3, [r7, #4]
 8006e38:	621a      	str	r2, [r3, #32]
 8006e3a:	687b      	ldr	r3, [r7, #4]
 8006e3c:	6a1b      	ldr	r3, [r3, #32]
 8006e3e:	617b      	str	r3, [r7, #20]
 8006e40:	687b      	ldr	r3, [r7, #4]
 8006e42:	685b      	ldr	r3, [r3, #4]
 8006e44:	613b      	str	r3, [r7, #16]
 8006e46:	687b      	ldr	r3, [r7, #4]
 8006e48:	699b      	ldr	r3, [r3, #24]
 8006e4a:	60fb      	str	r3, [r7, #12]
 8006e4c:	68fb      	ldr	r3, [r7, #12]
 8006e4e:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8006e52:	60fb      	str	r3, [r7, #12]
 8006e54:	68fb      	ldr	r3, [r7, #12]
 8006e56:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8006e5a:	60fb      	str	r3, [r7, #12]
 8006e5c:	683b      	ldr	r3, [r7, #0]
 8006e5e:	681b      	ldr	r3, [r3, #0]
 8006e60:	021b      	lsls	r3, r3, #8
 8006e62:	68fa      	ldr	r2, [r7, #12]
 8006e64:	4313      	orrs	r3, r2
 8006e66:	60fb      	str	r3, [r7, #12]
 8006e68:	697b      	ldr	r3, [r7, #20]
 8006e6a:	f023 0320 	bic.w	r3, r3, #32
 8006e6e:	617b      	str	r3, [r7, #20]
 8006e70:	683b      	ldr	r3, [r7, #0]
 8006e72:	689b      	ldr	r3, [r3, #8]
 8006e74:	011b      	lsls	r3, r3, #4
 8006e76:	697a      	ldr	r2, [r7, #20]
 8006e78:	4313      	orrs	r3, r2
 8006e7a:	617b      	str	r3, [r7, #20]
 8006e7c:	687b      	ldr	r3, [r7, #4]
 8006e7e:	4a1e      	ldr	r2, [pc, #120]	; (8006ef8 <TIM_OC2_SetConfig+0xd4>)
 8006e80:	4293      	cmp	r3, r2
 8006e82:	d10d      	bne.n	8006ea0 <TIM_OC2_SetConfig+0x7c>
 8006e84:	697b      	ldr	r3, [r7, #20]
 8006e86:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8006e8a:	617b      	str	r3, [r7, #20]
 8006e8c:	683b      	ldr	r3, [r7, #0]
 8006e8e:	68db      	ldr	r3, [r3, #12]
 8006e90:	011b      	lsls	r3, r3, #4
 8006e92:	697a      	ldr	r2, [r7, #20]
 8006e94:	4313      	orrs	r3, r2
 8006e96:	617b      	str	r3, [r7, #20]
 8006e98:	697b      	ldr	r3, [r7, #20]
 8006e9a:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8006e9e:	617b      	str	r3, [r7, #20]
 8006ea0:	687b      	ldr	r3, [r7, #4]
 8006ea2:	4a15      	ldr	r2, [pc, #84]	; (8006ef8 <TIM_OC2_SetConfig+0xd4>)
 8006ea4:	4293      	cmp	r3, r2
 8006ea6:	d113      	bne.n	8006ed0 <TIM_OC2_SetConfig+0xac>
 8006ea8:	693b      	ldr	r3, [r7, #16]
 8006eaa:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8006eae:	613b      	str	r3, [r7, #16]
 8006eb0:	693b      	ldr	r3, [r7, #16]
 8006eb2:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8006eb6:	613b      	str	r3, [r7, #16]
 8006eb8:	683b      	ldr	r3, [r7, #0]
 8006eba:	695b      	ldr	r3, [r3, #20]
 8006ebc:	009b      	lsls	r3, r3, #2
 8006ebe:	693a      	ldr	r2, [r7, #16]
 8006ec0:	4313      	orrs	r3, r2
 8006ec2:	613b      	str	r3, [r7, #16]
 8006ec4:	683b      	ldr	r3, [r7, #0]
 8006ec6:	699b      	ldr	r3, [r3, #24]
 8006ec8:	009b      	lsls	r3, r3, #2
 8006eca:	693a      	ldr	r2, [r7, #16]
 8006ecc:	4313      	orrs	r3, r2
 8006ece:	613b      	str	r3, [r7, #16]
 8006ed0:	687b      	ldr	r3, [r7, #4]
 8006ed2:	693a      	ldr	r2, [r7, #16]
 8006ed4:	605a      	str	r2, [r3, #4]
 8006ed6:	687b      	ldr	r3, [r7, #4]
 8006ed8:	68fa      	ldr	r2, [r7, #12]
 8006eda:	619a      	str	r2, [r3, #24]
 8006edc:	683b      	ldr	r3, [r7, #0]
 8006ede:	685a      	ldr	r2, [r3, #4]
 8006ee0:	687b      	ldr	r3, [r7, #4]
 8006ee2:	639a      	str	r2, [r3, #56]	; 0x38
 8006ee4:	687b      	ldr	r3, [r7, #4]
 8006ee6:	697a      	ldr	r2, [r7, #20]
 8006ee8:	621a      	str	r2, [r3, #32]
 8006eea:	bf00      	nop
 8006eec:	371c      	adds	r7, #28
 8006eee:	46bd      	mov	sp, r7
 8006ef0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006ef4:	4770      	bx	lr
 8006ef6:	bf00      	nop
 8006ef8:	40010000 	.word	0x40010000

08006efc <TIM_OC3_SetConfig>:
 8006efc:	b480      	push	{r7}
 8006efe:	b087      	sub	sp, #28
 8006f00:	af00      	add	r7, sp, #0
 8006f02:	6078      	str	r0, [r7, #4]
 8006f04:	6039      	str	r1, [r7, #0]
 8006f06:	687b      	ldr	r3, [r7, #4]
 8006f08:	6a1b      	ldr	r3, [r3, #32]
 8006f0a:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 8006f0e:	687b      	ldr	r3, [r7, #4]
 8006f10:	621a      	str	r2, [r3, #32]
 8006f12:	687b      	ldr	r3, [r7, #4]
 8006f14:	6a1b      	ldr	r3, [r3, #32]
 8006f16:	617b      	str	r3, [r7, #20]
 8006f18:	687b      	ldr	r3, [r7, #4]
 8006f1a:	685b      	ldr	r3, [r3, #4]
 8006f1c:	613b      	str	r3, [r7, #16]
 8006f1e:	687b      	ldr	r3, [r7, #4]
 8006f20:	69db      	ldr	r3, [r3, #28]
 8006f22:	60fb      	str	r3, [r7, #12]
 8006f24:	68fb      	ldr	r3, [r7, #12]
 8006f26:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8006f2a:	60fb      	str	r3, [r7, #12]
 8006f2c:	68fb      	ldr	r3, [r7, #12]
 8006f2e:	f023 0303 	bic.w	r3, r3, #3
 8006f32:	60fb      	str	r3, [r7, #12]
 8006f34:	683b      	ldr	r3, [r7, #0]
 8006f36:	681b      	ldr	r3, [r3, #0]
 8006f38:	68fa      	ldr	r2, [r7, #12]
 8006f3a:	4313      	orrs	r3, r2
 8006f3c:	60fb      	str	r3, [r7, #12]
 8006f3e:	697b      	ldr	r3, [r7, #20]
 8006f40:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 8006f44:	617b      	str	r3, [r7, #20]
 8006f46:	683b      	ldr	r3, [r7, #0]
 8006f48:	689b      	ldr	r3, [r3, #8]
 8006f4a:	021b      	lsls	r3, r3, #8
 8006f4c:	697a      	ldr	r2, [r7, #20]
 8006f4e:	4313      	orrs	r3, r2
 8006f50:	617b      	str	r3, [r7, #20]
 8006f52:	687b      	ldr	r3, [r7, #4]
 8006f54:	4a1d      	ldr	r2, [pc, #116]	; (8006fcc <TIM_OC3_SetConfig+0xd0>)
 8006f56:	4293      	cmp	r3, r2
 8006f58:	d10d      	bne.n	8006f76 <TIM_OC3_SetConfig+0x7a>
 8006f5a:	697b      	ldr	r3, [r7, #20]
 8006f5c:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8006f60:	617b      	str	r3, [r7, #20]
 8006f62:	683b      	ldr	r3, [r7, #0]
 8006f64:	68db      	ldr	r3, [r3, #12]
 8006f66:	021b      	lsls	r3, r3, #8
 8006f68:	697a      	ldr	r2, [r7, #20]
 8006f6a:	4313      	orrs	r3, r2
 8006f6c:	617b      	str	r3, [r7, #20]
 8006f6e:	697b      	ldr	r3, [r7, #20]
 8006f70:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 8006f74:	617b      	str	r3, [r7, #20]
 8006f76:	687b      	ldr	r3, [r7, #4]
 8006f78:	4a14      	ldr	r2, [pc, #80]	; (8006fcc <TIM_OC3_SetConfig+0xd0>)
 8006f7a:	4293      	cmp	r3, r2
 8006f7c:	d113      	bne.n	8006fa6 <TIM_OC3_SetConfig+0xaa>
 8006f7e:	693b      	ldr	r3, [r7, #16]
 8006f80:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8006f84:	613b      	str	r3, [r7, #16]
 8006f86:	693b      	ldr	r3, [r7, #16]
 8006f88:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 8006f8c:	613b      	str	r3, [r7, #16]
 8006f8e:	683b      	ldr	r3, [r7, #0]
 8006f90:	695b      	ldr	r3, [r3, #20]
 8006f92:	011b      	lsls	r3, r3, #4
 8006f94:	693a      	ldr	r2, [r7, #16]
 8006f96:	4313      	orrs	r3, r2
 8006f98:	613b      	str	r3, [r7, #16]
 8006f9a:	683b      	ldr	r3, [r7, #0]
 8006f9c:	699b      	ldr	r3, [r3, #24]
 8006f9e:	011b      	lsls	r3, r3, #4
 8006fa0:	693a      	ldr	r2, [r7, #16]
 8006fa2:	4313      	orrs	r3, r2
 8006fa4:	613b      	str	r3, [r7, #16]
 8006fa6:	687b      	ldr	r3, [r7, #4]
 8006fa8:	693a      	ldr	r2, [r7, #16]
 8006faa:	605a      	str	r2, [r3, #4]
 8006fac:	687b      	ldr	r3, [r7, #4]
 8006fae:	68fa      	ldr	r2, [r7, #12]
 8006fb0:	61da      	str	r2, [r3, #28]
 8006fb2:	683b      	ldr	r3, [r7, #0]
 8006fb4:	685a      	ldr	r2, [r3, #4]
 8006fb6:	687b      	ldr	r3, [r7, #4]
 8006fb8:	63da      	str	r2, [r3, #60]	; 0x3c
 8006fba:	687b      	ldr	r3, [r7, #4]
 8006fbc:	697a      	ldr	r2, [r7, #20]
 8006fbe:	621a      	str	r2, [r3, #32]
 8006fc0:	bf00      	nop
 8006fc2:	371c      	adds	r7, #28
 8006fc4:	46bd      	mov	sp, r7
 8006fc6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006fca:	4770      	bx	lr
 8006fcc:	40010000 	.word	0x40010000

08006fd0 <TIM_OC4_SetConfig>:
 8006fd0:	b480      	push	{r7}
 8006fd2:	b087      	sub	sp, #28
 8006fd4:	af00      	add	r7, sp, #0
 8006fd6:	6078      	str	r0, [r7, #4]
 8006fd8:	6039      	str	r1, [r7, #0]
 8006fda:	687b      	ldr	r3, [r7, #4]
 8006fdc:	6a1b      	ldr	r3, [r3, #32]
 8006fde:	f423 5280 	bic.w	r2, r3, #4096	; 0x1000
 8006fe2:	687b      	ldr	r3, [r7, #4]
 8006fe4:	621a      	str	r2, [r3, #32]
 8006fe6:	687b      	ldr	r3, [r7, #4]
 8006fe8:	6a1b      	ldr	r3, [r3, #32]
 8006fea:	613b      	str	r3, [r7, #16]
 8006fec:	687b      	ldr	r3, [r7, #4]
 8006fee:	685b      	ldr	r3, [r3, #4]
 8006ff0:	617b      	str	r3, [r7, #20]
 8006ff2:	687b      	ldr	r3, [r7, #4]
 8006ff4:	69db      	ldr	r3, [r3, #28]
 8006ff6:	60fb      	str	r3, [r7, #12]
 8006ff8:	68fb      	ldr	r3, [r7, #12]
 8006ffa:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 8006ffe:	60fb      	str	r3, [r7, #12]
 8007000:	68fb      	ldr	r3, [r7, #12]
 8007002:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8007006:	60fb      	str	r3, [r7, #12]
 8007008:	683b      	ldr	r3, [r7, #0]
 800700a:	681b      	ldr	r3, [r3, #0]
 800700c:	021b      	lsls	r3, r3, #8
 800700e:	68fa      	ldr	r2, [r7, #12]
 8007010:	4313      	orrs	r3, r2
 8007012:	60fb      	str	r3, [r7, #12]
 8007014:	693b      	ldr	r3, [r7, #16]
 8007016:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 800701a:	613b      	str	r3, [r7, #16]
 800701c:	683b      	ldr	r3, [r7, #0]
 800701e:	689b      	ldr	r3, [r3, #8]
 8007020:	031b      	lsls	r3, r3, #12
 8007022:	693a      	ldr	r2, [r7, #16]
 8007024:	4313      	orrs	r3, r2
 8007026:	613b      	str	r3, [r7, #16]
 8007028:	687b      	ldr	r3, [r7, #4]
 800702a:	4a10      	ldr	r2, [pc, #64]	; (800706c <TIM_OC4_SetConfig+0x9c>)
 800702c:	4293      	cmp	r3, r2
 800702e:	d109      	bne.n	8007044 <TIM_OC4_SetConfig+0x74>
 8007030:	697b      	ldr	r3, [r7, #20]
 8007032:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 8007036:	617b      	str	r3, [r7, #20]
 8007038:	683b      	ldr	r3, [r7, #0]
 800703a:	695b      	ldr	r3, [r3, #20]
 800703c:	019b      	lsls	r3, r3, #6
 800703e:	697a      	ldr	r2, [r7, #20]
 8007040:	4313      	orrs	r3, r2
 8007042:	617b      	str	r3, [r7, #20]
 8007044:	687b      	ldr	r3, [r7, #4]
 8007046:	697a      	ldr	r2, [r7, #20]
 8007048:	605a      	str	r2, [r3, #4]
 800704a:	687b      	ldr	r3, [r7, #4]
 800704c:	68fa      	ldr	r2, [r7, #12]
 800704e:	61da      	str	r2, [r3, #28]
 8007050:	683b      	ldr	r3, [r7, #0]
 8007052:	685a      	ldr	r2, [r3, #4]
 8007054:	687b      	ldr	r3, [r7, #4]
 8007056:	641a      	str	r2, [r3, #64]	; 0x40
 8007058:	687b      	ldr	r3, [r7, #4]
 800705a:	693a      	ldr	r2, [r7, #16]
 800705c:	621a      	str	r2, [r3, #32]
 800705e:	bf00      	nop
 8007060:	371c      	adds	r7, #28
 8007062:	46bd      	mov	sp, r7
 8007064:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007068:	4770      	bx	lr
 800706a:	bf00      	nop
 800706c:	40010000 	.word	0x40010000

08007070 <TIM_TI1_ConfigInputStage>:
 8007070:	b480      	push	{r7}
 8007072:	b087      	sub	sp, #28
 8007074:	af00      	add	r7, sp, #0
 8007076:	60f8      	str	r0, [r7, #12]
 8007078:	60b9      	str	r1, [r7, #8]
 800707a:	607a      	str	r2, [r7, #4]
 800707c:	68fb      	ldr	r3, [r7, #12]
 800707e:	6a1b      	ldr	r3, [r3, #32]
 8007080:	617b      	str	r3, [r7, #20]
 8007082:	68fb      	ldr	r3, [r7, #12]
 8007084:	6a1b      	ldr	r3, [r3, #32]
 8007086:	f023 0201 	bic.w	r2, r3, #1
 800708a:	68fb      	ldr	r3, [r7, #12]
 800708c:	621a      	str	r2, [r3, #32]
 800708e:	68fb      	ldr	r3, [r7, #12]
 8007090:	699b      	ldr	r3, [r3, #24]
 8007092:	613b      	str	r3, [r7, #16]
 8007094:	693b      	ldr	r3, [r7, #16]
 8007096:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 800709a:	613b      	str	r3, [r7, #16]
 800709c:	687b      	ldr	r3, [r7, #4]
 800709e:	011b      	lsls	r3, r3, #4
 80070a0:	693a      	ldr	r2, [r7, #16]
 80070a2:	4313      	orrs	r3, r2
 80070a4:	613b      	str	r3, [r7, #16]
 80070a6:	697b      	ldr	r3, [r7, #20]
 80070a8:	f023 030a 	bic.w	r3, r3, #10
 80070ac:	617b      	str	r3, [r7, #20]
 80070ae:	697a      	ldr	r2, [r7, #20]
 80070b0:	68bb      	ldr	r3, [r7, #8]
 80070b2:	4313      	orrs	r3, r2
 80070b4:	617b      	str	r3, [r7, #20]
 80070b6:	68fb      	ldr	r3, [r7, #12]
 80070b8:	693a      	ldr	r2, [r7, #16]
 80070ba:	619a      	str	r2, [r3, #24]
 80070bc:	68fb      	ldr	r3, [r7, #12]
 80070be:	697a      	ldr	r2, [r7, #20]
 80070c0:	621a      	str	r2, [r3, #32]
 80070c2:	bf00      	nop
 80070c4:	371c      	adds	r7, #28
 80070c6:	46bd      	mov	sp, r7
 80070c8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80070cc:	4770      	bx	lr

080070ce <TIM_TI2_ConfigInputStage>:
 80070ce:	b480      	push	{r7}
 80070d0:	b087      	sub	sp, #28
 80070d2:	af00      	add	r7, sp, #0
 80070d4:	60f8      	str	r0, [r7, #12]
 80070d6:	60b9      	str	r1, [r7, #8]
 80070d8:	607a      	str	r2, [r7, #4]
 80070da:	68fb      	ldr	r3, [r7, #12]
 80070dc:	6a1b      	ldr	r3, [r3, #32]
 80070de:	f023 0210 	bic.w	r2, r3, #16
 80070e2:	68fb      	ldr	r3, [r7, #12]
 80070e4:	621a      	str	r2, [r3, #32]
 80070e6:	68fb      	ldr	r3, [r7, #12]
 80070e8:	699b      	ldr	r3, [r3, #24]
 80070ea:	617b      	str	r3, [r7, #20]
 80070ec:	68fb      	ldr	r3, [r7, #12]
 80070ee:	6a1b      	ldr	r3, [r3, #32]
 80070f0:	613b      	str	r3, [r7, #16]
 80070f2:	697b      	ldr	r3, [r7, #20]
 80070f4:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 80070f8:	617b      	str	r3, [r7, #20]
 80070fa:	687b      	ldr	r3, [r7, #4]
 80070fc:	031b      	lsls	r3, r3, #12
 80070fe:	697a      	ldr	r2, [r7, #20]
 8007100:	4313      	orrs	r3, r2
 8007102:	617b      	str	r3, [r7, #20]
 8007104:	693b      	ldr	r3, [r7, #16]
 8007106:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
 800710a:	613b      	str	r3, [r7, #16]
 800710c:	68bb      	ldr	r3, [r7, #8]
 800710e:	011b      	lsls	r3, r3, #4
 8007110:	693a      	ldr	r2, [r7, #16]
 8007112:	4313      	orrs	r3, r2
 8007114:	613b      	str	r3, [r7, #16]
 8007116:	68fb      	ldr	r3, [r7, #12]
 8007118:	697a      	ldr	r2, [r7, #20]
 800711a:	619a      	str	r2, [r3, #24]
 800711c:	68fb      	ldr	r3, [r7, #12]
 800711e:	693a      	ldr	r2, [r7, #16]
 8007120:	621a      	str	r2, [r3, #32]
 8007122:	bf00      	nop
 8007124:	371c      	adds	r7, #28
 8007126:	46bd      	mov	sp, r7
 8007128:	f85d 7b04 	ldr.w	r7, [sp], #4
 800712c:	4770      	bx	lr

0800712e <TIM_ITRx_SetConfig>:
 800712e:	b480      	push	{r7}
 8007130:	b085      	sub	sp, #20
 8007132:	af00      	add	r7, sp, #0
 8007134:	6078      	str	r0, [r7, #4]
 8007136:	6039      	str	r1, [r7, #0]
 8007138:	687b      	ldr	r3, [r7, #4]
 800713a:	689b      	ldr	r3, [r3, #8]
 800713c:	60fb      	str	r3, [r7, #12]
 800713e:	68fb      	ldr	r3, [r7, #12]
 8007140:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8007144:	60fb      	str	r3, [r7, #12]
 8007146:	683a      	ldr	r2, [r7, #0]
 8007148:	68fb      	ldr	r3, [r7, #12]
 800714a:	4313      	orrs	r3, r2
 800714c:	f043 0307 	orr.w	r3, r3, #7
 8007150:	60fb      	str	r3, [r7, #12]
 8007152:	687b      	ldr	r3, [r7, #4]
 8007154:	68fa      	ldr	r2, [r7, #12]
 8007156:	609a      	str	r2, [r3, #8]
 8007158:	bf00      	nop
 800715a:	3714      	adds	r7, #20
 800715c:	46bd      	mov	sp, r7
 800715e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007162:	4770      	bx	lr

08007164 <TIM_ETR_SetConfig>:
 8007164:	b480      	push	{r7}
 8007166:	b087      	sub	sp, #28
 8007168:	af00      	add	r7, sp, #0
 800716a:	60f8      	str	r0, [r7, #12]
 800716c:	60b9      	str	r1, [r7, #8]
 800716e:	607a      	str	r2, [r7, #4]
 8007170:	603b      	str	r3, [r7, #0]
 8007172:	68fb      	ldr	r3, [r7, #12]
 8007174:	689b      	ldr	r3, [r3, #8]
 8007176:	617b      	str	r3, [r7, #20]
 8007178:	697b      	ldr	r3, [r7, #20]
 800717a:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 800717e:	617b      	str	r3, [r7, #20]
 8007180:	683b      	ldr	r3, [r7, #0]
 8007182:	021a      	lsls	r2, r3, #8
 8007184:	687b      	ldr	r3, [r7, #4]
 8007186:	431a      	orrs	r2, r3
 8007188:	68bb      	ldr	r3, [r7, #8]
 800718a:	4313      	orrs	r3, r2
 800718c:	697a      	ldr	r2, [r7, #20]
 800718e:	4313      	orrs	r3, r2
 8007190:	617b      	str	r3, [r7, #20]
 8007192:	68fb      	ldr	r3, [r7, #12]
 8007194:	697a      	ldr	r2, [r7, #20]
 8007196:	609a      	str	r2, [r3, #8]
 8007198:	bf00      	nop
 800719a:	371c      	adds	r7, #28
 800719c:	46bd      	mov	sp, r7
 800719e:	f85d 7b04 	ldr.w	r7, [sp], #4
 80071a2:	4770      	bx	lr

080071a4 <TIM_CCxChannelCmd>:
 80071a4:	b480      	push	{r7}
 80071a6:	b087      	sub	sp, #28
 80071a8:	af00      	add	r7, sp, #0
 80071aa:	60f8      	str	r0, [r7, #12]
 80071ac:	60b9      	str	r1, [r7, #8]
 80071ae:	607a      	str	r2, [r7, #4]
 80071b0:	68bb      	ldr	r3, [r7, #8]
 80071b2:	f003 031f 	and.w	r3, r3, #31
 80071b6:	2201      	movs	r2, #1
 80071b8:	fa02 f303 	lsl.w	r3, r2, r3
 80071bc:	617b      	str	r3, [r7, #20]
 80071be:	68fb      	ldr	r3, [r7, #12]
 80071c0:	6a1a      	ldr	r2, [r3, #32]
 80071c2:	697b      	ldr	r3, [r7, #20]
 80071c4:	43db      	mvns	r3, r3
 80071c6:	401a      	ands	r2, r3
 80071c8:	68fb      	ldr	r3, [r7, #12]
 80071ca:	621a      	str	r2, [r3, #32]
 80071cc:	68fb      	ldr	r3, [r7, #12]
 80071ce:	6a1a      	ldr	r2, [r3, #32]
 80071d0:	68bb      	ldr	r3, [r7, #8]
 80071d2:	f003 031f 	and.w	r3, r3, #31
 80071d6:	6879      	ldr	r1, [r7, #4]
 80071d8:	fa01 f303 	lsl.w	r3, r1, r3
 80071dc:	431a      	orrs	r2, r3
 80071de:	68fb      	ldr	r3, [r7, #12]
 80071e0:	621a      	str	r2, [r3, #32]
 80071e2:	bf00      	nop
 80071e4:	371c      	adds	r7, #28
 80071e6:	46bd      	mov	sp, r7
 80071e8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80071ec:	4770      	bx	lr
	...

080071f0 <HAL_TIMEx_MasterConfigSynchronization>:
 80071f0:	b480      	push	{r7}
 80071f2:	b085      	sub	sp, #20
 80071f4:	af00      	add	r7, sp, #0
 80071f6:	6078      	str	r0, [r7, #4]
 80071f8:	6039      	str	r1, [r7, #0]
 80071fa:	687b      	ldr	r3, [r7, #4]
 80071fc:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8007200:	2b01      	cmp	r3, #1
 8007202:	d101      	bne.n	8007208 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 8007204:	2302      	movs	r3, #2
 8007206:	e050      	b.n	80072aa <HAL_TIMEx_MasterConfigSynchronization+0xba>
 8007208:	687b      	ldr	r3, [r7, #4]
 800720a:	2201      	movs	r2, #1
 800720c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8007210:	687b      	ldr	r3, [r7, #4]
 8007212:	2202      	movs	r2, #2
 8007214:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8007218:	687b      	ldr	r3, [r7, #4]
 800721a:	681b      	ldr	r3, [r3, #0]
 800721c:	685b      	ldr	r3, [r3, #4]
 800721e:	60fb      	str	r3, [r7, #12]
 8007220:	687b      	ldr	r3, [r7, #4]
 8007222:	681b      	ldr	r3, [r3, #0]
 8007224:	689b      	ldr	r3, [r3, #8]
 8007226:	60bb      	str	r3, [r7, #8]
 8007228:	68fb      	ldr	r3, [r7, #12]
 800722a:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800722e:	60fb      	str	r3, [r7, #12]
 8007230:	683b      	ldr	r3, [r7, #0]
 8007232:	681b      	ldr	r3, [r3, #0]
 8007234:	68fa      	ldr	r2, [r7, #12]
 8007236:	4313      	orrs	r3, r2
 8007238:	60fb      	str	r3, [r7, #12]
 800723a:	687b      	ldr	r3, [r7, #4]
 800723c:	681b      	ldr	r3, [r3, #0]
 800723e:	68fa      	ldr	r2, [r7, #12]
 8007240:	605a      	str	r2, [r3, #4]
 8007242:	687b      	ldr	r3, [r7, #4]
 8007244:	681b      	ldr	r3, [r3, #0]
 8007246:	4a1c      	ldr	r2, [pc, #112]	; (80072b8 <HAL_TIMEx_MasterConfigSynchronization+0xc8>)
 8007248:	4293      	cmp	r3, r2
 800724a:	d018      	beq.n	800727e <HAL_TIMEx_MasterConfigSynchronization+0x8e>
 800724c:	687b      	ldr	r3, [r7, #4]
 800724e:	681b      	ldr	r3, [r3, #0]
 8007250:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8007254:	d013      	beq.n	800727e <HAL_TIMEx_MasterConfigSynchronization+0x8e>
 8007256:	687b      	ldr	r3, [r7, #4]
 8007258:	681b      	ldr	r3, [r3, #0]
 800725a:	4a18      	ldr	r2, [pc, #96]	; (80072bc <HAL_TIMEx_MasterConfigSynchronization+0xcc>)
 800725c:	4293      	cmp	r3, r2
 800725e:	d00e      	beq.n	800727e <HAL_TIMEx_MasterConfigSynchronization+0x8e>
 8007260:	687b      	ldr	r3, [r7, #4]
 8007262:	681b      	ldr	r3, [r3, #0]
 8007264:	4a16      	ldr	r2, [pc, #88]	; (80072c0 <HAL_TIMEx_MasterConfigSynchronization+0xd0>)
 8007266:	4293      	cmp	r3, r2
 8007268:	d009      	beq.n	800727e <HAL_TIMEx_MasterConfigSynchronization+0x8e>
 800726a:	687b      	ldr	r3, [r7, #4]
 800726c:	681b      	ldr	r3, [r3, #0]
 800726e:	4a15      	ldr	r2, [pc, #84]	; (80072c4 <HAL_TIMEx_MasterConfigSynchronization+0xd4>)
 8007270:	4293      	cmp	r3, r2
 8007272:	d004      	beq.n	800727e <HAL_TIMEx_MasterConfigSynchronization+0x8e>
 8007274:	687b      	ldr	r3, [r7, #4]
 8007276:	681b      	ldr	r3, [r3, #0]
 8007278:	4a13      	ldr	r2, [pc, #76]	; (80072c8 <HAL_TIMEx_MasterConfigSynchronization+0xd8>)
 800727a:	4293      	cmp	r3, r2
 800727c:	d10c      	bne.n	8007298 <HAL_TIMEx_MasterConfigSynchronization+0xa8>
 800727e:	68bb      	ldr	r3, [r7, #8]
 8007280:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8007284:	60bb      	str	r3, [r7, #8]
 8007286:	683b      	ldr	r3, [r7, #0]
 8007288:	685b      	ldr	r3, [r3, #4]
 800728a:	68ba      	ldr	r2, [r7, #8]
 800728c:	4313      	orrs	r3, r2
 800728e:	60bb      	str	r3, [r7, #8]
 8007290:	687b      	ldr	r3, [r7, #4]
 8007292:	681b      	ldr	r3, [r3, #0]
 8007294:	68ba      	ldr	r2, [r7, #8]
 8007296:	609a      	str	r2, [r3, #8]
 8007298:	687b      	ldr	r3, [r7, #4]
 800729a:	2201      	movs	r2, #1
 800729c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80072a0:	687b      	ldr	r3, [r7, #4]
 80072a2:	2200      	movs	r2, #0
 80072a4:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80072a8:	2300      	movs	r3, #0
 80072aa:	4618      	mov	r0, r3
 80072ac:	3714      	adds	r7, #20
 80072ae:	46bd      	mov	sp, r7
 80072b0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80072b4:	4770      	bx	lr
 80072b6:	bf00      	nop
 80072b8:	40010000 	.word	0x40010000
 80072bc:	40000400 	.word	0x40000400
 80072c0:	40000800 	.word	0x40000800
 80072c4:	40000c00 	.word	0x40000c00
 80072c8:	40014000 	.word	0x40014000

080072cc <HAL_TIMEx_ConfigBreakDeadTime>:
 80072cc:	b480      	push	{r7}
 80072ce:	b085      	sub	sp, #20
 80072d0:	af00      	add	r7, sp, #0
 80072d2:	6078      	str	r0, [r7, #4]
 80072d4:	6039      	str	r1, [r7, #0]
 80072d6:	2300      	movs	r3, #0
 80072d8:	60fb      	str	r3, [r7, #12]
 80072da:	687b      	ldr	r3, [r7, #4]
 80072dc:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 80072e0:	2b01      	cmp	r3, #1
 80072e2:	d101      	bne.n	80072e8 <HAL_TIMEx_ConfigBreakDeadTime+0x1c>
 80072e4:	2302      	movs	r3, #2
 80072e6:	e03d      	b.n	8007364 <HAL_TIMEx_ConfigBreakDeadTime+0x98>
 80072e8:	687b      	ldr	r3, [r7, #4]
 80072ea:	2201      	movs	r2, #1
 80072ec:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 80072f0:	68fb      	ldr	r3, [r7, #12]
 80072f2:	f023 02ff 	bic.w	r2, r3, #255	; 0xff
 80072f6:	683b      	ldr	r3, [r7, #0]
 80072f8:	68db      	ldr	r3, [r3, #12]
 80072fa:	4313      	orrs	r3, r2
 80072fc:	60fb      	str	r3, [r7, #12]
 80072fe:	68fb      	ldr	r3, [r7, #12]
 8007300:	f423 7240 	bic.w	r2, r3, #768	; 0x300
 8007304:	683b      	ldr	r3, [r7, #0]
 8007306:	689b      	ldr	r3, [r3, #8]
 8007308:	4313      	orrs	r3, r2
 800730a:	60fb      	str	r3, [r7, #12]
 800730c:	68fb      	ldr	r3, [r7, #12]
 800730e:	f423 6280 	bic.w	r2, r3, #1024	; 0x400
 8007312:	683b      	ldr	r3, [r7, #0]
 8007314:	685b      	ldr	r3, [r3, #4]
 8007316:	4313      	orrs	r3, r2
 8007318:	60fb      	str	r3, [r7, #12]
 800731a:	68fb      	ldr	r3, [r7, #12]
 800731c:	f423 6200 	bic.w	r2, r3, #2048	; 0x800
 8007320:	683b      	ldr	r3, [r7, #0]
 8007322:	681b      	ldr	r3, [r3, #0]
 8007324:	4313      	orrs	r3, r2
 8007326:	60fb      	str	r3, [r7, #12]
 8007328:	68fb      	ldr	r3, [r7, #12]
 800732a:	f423 5280 	bic.w	r2, r3, #4096	; 0x1000
 800732e:	683b      	ldr	r3, [r7, #0]
 8007330:	691b      	ldr	r3, [r3, #16]
 8007332:	4313      	orrs	r3, r2
 8007334:	60fb      	str	r3, [r7, #12]
 8007336:	68fb      	ldr	r3, [r7, #12]
 8007338:	f423 5200 	bic.w	r2, r3, #8192	; 0x2000
 800733c:	683b      	ldr	r3, [r7, #0]
 800733e:	695b      	ldr	r3, [r3, #20]
 8007340:	4313      	orrs	r3, r2
 8007342:	60fb      	str	r3, [r7, #12]
 8007344:	68fb      	ldr	r3, [r7, #12]
 8007346:	f423 4280 	bic.w	r2, r3, #16384	; 0x4000
 800734a:	683b      	ldr	r3, [r7, #0]
 800734c:	69db      	ldr	r3, [r3, #28]
 800734e:	4313      	orrs	r3, r2
 8007350:	60fb      	str	r3, [r7, #12]
 8007352:	687b      	ldr	r3, [r7, #4]
 8007354:	681b      	ldr	r3, [r3, #0]
 8007356:	68fa      	ldr	r2, [r7, #12]
 8007358:	645a      	str	r2, [r3, #68]	; 0x44
 800735a:	687b      	ldr	r3, [r7, #4]
 800735c:	2200      	movs	r2, #0
 800735e:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8007362:	2300      	movs	r3, #0
 8007364:	4618      	mov	r0, r3
 8007366:	3714      	adds	r7, #20
 8007368:	46bd      	mov	sp, r7
 800736a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800736e:	4770      	bx	lr

08007370 <HAL_UART_Init>:
 8007370:	b580      	push	{r7, lr}
 8007372:	b082      	sub	sp, #8
 8007374:	af00      	add	r7, sp, #0
 8007376:	6078      	str	r0, [r7, #4]
 8007378:	687b      	ldr	r3, [r7, #4]
 800737a:	2b00      	cmp	r3, #0
 800737c:	d101      	bne.n	8007382 <HAL_UART_Init+0x12>
 800737e:	2301      	movs	r3, #1
 8007380:	e03f      	b.n	8007402 <HAL_UART_Init+0x92>
 8007382:	687b      	ldr	r3, [r7, #4]
 8007384:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8007388:	b2db      	uxtb	r3, r3
 800738a:	2b00      	cmp	r3, #0
 800738c:	d106      	bne.n	800739c <HAL_UART_Init+0x2c>
 800738e:	687b      	ldr	r3, [r7, #4]
 8007390:	2200      	movs	r2, #0
 8007392:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8007396:	6878      	ldr	r0, [r7, #4]
 8007398:	f7fd f8cc 	bl	8004534 <HAL_UART_MspInit>
 800739c:	687b      	ldr	r3, [r7, #4]
 800739e:	2224      	movs	r2, #36	; 0x24
 80073a0:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80073a4:	687b      	ldr	r3, [r7, #4]
 80073a6:	681b      	ldr	r3, [r3, #0]
 80073a8:	68da      	ldr	r2, [r3, #12]
 80073aa:	687b      	ldr	r3, [r7, #4]
 80073ac:	681b      	ldr	r3, [r3, #0]
 80073ae:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 80073b2:	60da      	str	r2, [r3, #12]
 80073b4:	6878      	ldr	r0, [r7, #4]
 80073b6:	f000 fddf 	bl	8007f78 <UART_SetConfig>
 80073ba:	687b      	ldr	r3, [r7, #4]
 80073bc:	681b      	ldr	r3, [r3, #0]
 80073be:	691a      	ldr	r2, [r3, #16]
 80073c0:	687b      	ldr	r3, [r7, #4]
 80073c2:	681b      	ldr	r3, [r3, #0]
 80073c4:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 80073c8:	611a      	str	r2, [r3, #16]
 80073ca:	687b      	ldr	r3, [r7, #4]
 80073cc:	681b      	ldr	r3, [r3, #0]
 80073ce:	695a      	ldr	r2, [r3, #20]
 80073d0:	687b      	ldr	r3, [r7, #4]
 80073d2:	681b      	ldr	r3, [r3, #0]
 80073d4:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 80073d8:	615a      	str	r2, [r3, #20]
 80073da:	687b      	ldr	r3, [r7, #4]
 80073dc:	681b      	ldr	r3, [r3, #0]
 80073de:	68da      	ldr	r2, [r3, #12]
 80073e0:	687b      	ldr	r3, [r7, #4]
 80073e2:	681b      	ldr	r3, [r3, #0]
 80073e4:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 80073e8:	60da      	str	r2, [r3, #12]
 80073ea:	687b      	ldr	r3, [r7, #4]
 80073ec:	2200      	movs	r2, #0
 80073ee:	641a      	str	r2, [r3, #64]	; 0x40
 80073f0:	687b      	ldr	r3, [r7, #4]
 80073f2:	2220      	movs	r2, #32
 80073f4:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 80073f8:	687b      	ldr	r3, [r7, #4]
 80073fa:	2220      	movs	r2, #32
 80073fc:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8007400:	2300      	movs	r3, #0
 8007402:	4618      	mov	r0, r3
 8007404:	3708      	adds	r7, #8
 8007406:	46bd      	mov	sp, r7
 8007408:	bd80      	pop	{r7, pc}

0800740a <HAL_UART_Transmit>:
 800740a:	b580      	push	{r7, lr}
 800740c:	b08a      	sub	sp, #40	; 0x28
 800740e:	af02      	add	r7, sp, #8
 8007410:	60f8      	str	r0, [r7, #12]
 8007412:	60b9      	str	r1, [r7, #8]
 8007414:	603b      	str	r3, [r7, #0]
 8007416:	4613      	mov	r3, r2
 8007418:	80fb      	strh	r3, [r7, #6]
 800741a:	2300      	movs	r3, #0
 800741c:	617b      	str	r3, [r7, #20]
 800741e:	68fb      	ldr	r3, [r7, #12]
 8007420:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8007424:	b2db      	uxtb	r3, r3
 8007426:	2b20      	cmp	r3, #32
 8007428:	d17c      	bne.n	8007524 <HAL_UART_Transmit+0x11a>
 800742a:	68bb      	ldr	r3, [r7, #8]
 800742c:	2b00      	cmp	r3, #0
 800742e:	d002      	beq.n	8007436 <HAL_UART_Transmit+0x2c>
 8007430:	88fb      	ldrh	r3, [r7, #6]
 8007432:	2b00      	cmp	r3, #0
 8007434:	d101      	bne.n	800743a <HAL_UART_Transmit+0x30>
 8007436:	2301      	movs	r3, #1
 8007438:	e075      	b.n	8007526 <HAL_UART_Transmit+0x11c>
 800743a:	68fb      	ldr	r3, [r7, #12]
 800743c:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 8007440:	2b01      	cmp	r3, #1
 8007442:	d101      	bne.n	8007448 <HAL_UART_Transmit+0x3e>
 8007444:	2302      	movs	r3, #2
 8007446:	e06e      	b.n	8007526 <HAL_UART_Transmit+0x11c>
 8007448:	68fb      	ldr	r3, [r7, #12]
 800744a:	2201      	movs	r2, #1
 800744c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8007450:	68fb      	ldr	r3, [r7, #12]
 8007452:	2200      	movs	r2, #0
 8007454:	641a      	str	r2, [r3, #64]	; 0x40
 8007456:	68fb      	ldr	r3, [r7, #12]
 8007458:	2221      	movs	r2, #33	; 0x21
 800745a:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800745e:	f7fd fb03 	bl	8004a68 <HAL_GetTick>
 8007462:	6178      	str	r0, [r7, #20]
 8007464:	68fb      	ldr	r3, [r7, #12]
 8007466:	88fa      	ldrh	r2, [r7, #6]
 8007468:	849a      	strh	r2, [r3, #36]	; 0x24
 800746a:	68fb      	ldr	r3, [r7, #12]
 800746c:	88fa      	ldrh	r2, [r7, #6]
 800746e:	84da      	strh	r2, [r3, #38]	; 0x26
 8007470:	68fb      	ldr	r3, [r7, #12]
 8007472:	689b      	ldr	r3, [r3, #8]
 8007474:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8007478:	d108      	bne.n	800748c <HAL_UART_Transmit+0x82>
 800747a:	68fb      	ldr	r3, [r7, #12]
 800747c:	691b      	ldr	r3, [r3, #16]
 800747e:	2b00      	cmp	r3, #0
 8007480:	d104      	bne.n	800748c <HAL_UART_Transmit+0x82>
 8007482:	2300      	movs	r3, #0
 8007484:	61fb      	str	r3, [r7, #28]
 8007486:	68bb      	ldr	r3, [r7, #8]
 8007488:	61bb      	str	r3, [r7, #24]
 800748a:	e003      	b.n	8007494 <HAL_UART_Transmit+0x8a>
 800748c:	68bb      	ldr	r3, [r7, #8]
 800748e:	61fb      	str	r3, [r7, #28]
 8007490:	2300      	movs	r3, #0
 8007492:	61bb      	str	r3, [r7, #24]
 8007494:	68fb      	ldr	r3, [r7, #12]
 8007496:	2200      	movs	r2, #0
 8007498:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800749c:	e02a      	b.n	80074f4 <HAL_UART_Transmit+0xea>
 800749e:	683b      	ldr	r3, [r7, #0]
 80074a0:	9300      	str	r3, [sp, #0]
 80074a2:	697b      	ldr	r3, [r7, #20]
 80074a4:	2200      	movs	r2, #0
 80074a6:	2180      	movs	r1, #128	; 0x80
 80074a8:	68f8      	ldr	r0, [r7, #12]
 80074aa:	f000 fb1f 	bl	8007aec <UART_WaitOnFlagUntilTimeout>
 80074ae:	4603      	mov	r3, r0
 80074b0:	2b00      	cmp	r3, #0
 80074b2:	d001      	beq.n	80074b8 <HAL_UART_Transmit+0xae>
 80074b4:	2303      	movs	r3, #3
 80074b6:	e036      	b.n	8007526 <HAL_UART_Transmit+0x11c>
 80074b8:	69fb      	ldr	r3, [r7, #28]
 80074ba:	2b00      	cmp	r3, #0
 80074bc:	d10b      	bne.n	80074d6 <HAL_UART_Transmit+0xcc>
 80074be:	69bb      	ldr	r3, [r7, #24]
 80074c0:	881b      	ldrh	r3, [r3, #0]
 80074c2:	461a      	mov	r2, r3
 80074c4:	68fb      	ldr	r3, [r7, #12]
 80074c6:	681b      	ldr	r3, [r3, #0]
 80074c8:	f3c2 0208 	ubfx	r2, r2, #0, #9
 80074cc:	605a      	str	r2, [r3, #4]
 80074ce:	69bb      	ldr	r3, [r7, #24]
 80074d0:	3302      	adds	r3, #2
 80074d2:	61bb      	str	r3, [r7, #24]
 80074d4:	e007      	b.n	80074e6 <HAL_UART_Transmit+0xdc>
 80074d6:	69fb      	ldr	r3, [r7, #28]
 80074d8:	781a      	ldrb	r2, [r3, #0]
 80074da:	68fb      	ldr	r3, [r7, #12]
 80074dc:	681b      	ldr	r3, [r3, #0]
 80074de:	605a      	str	r2, [r3, #4]
 80074e0:	69fb      	ldr	r3, [r7, #28]
 80074e2:	3301      	adds	r3, #1
 80074e4:	61fb      	str	r3, [r7, #28]
 80074e6:	68fb      	ldr	r3, [r7, #12]
 80074e8:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 80074ea:	b29b      	uxth	r3, r3
 80074ec:	3b01      	subs	r3, #1
 80074ee:	b29a      	uxth	r2, r3
 80074f0:	68fb      	ldr	r3, [r7, #12]
 80074f2:	84da      	strh	r2, [r3, #38]	; 0x26
 80074f4:	68fb      	ldr	r3, [r7, #12]
 80074f6:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 80074f8:	b29b      	uxth	r3, r3
 80074fa:	2b00      	cmp	r3, #0
 80074fc:	d1cf      	bne.n	800749e <HAL_UART_Transmit+0x94>
 80074fe:	683b      	ldr	r3, [r7, #0]
 8007500:	9300      	str	r3, [sp, #0]
 8007502:	697b      	ldr	r3, [r7, #20]
 8007504:	2200      	movs	r2, #0
 8007506:	2140      	movs	r1, #64	; 0x40
 8007508:	68f8      	ldr	r0, [r7, #12]
 800750a:	f000 faef 	bl	8007aec <UART_WaitOnFlagUntilTimeout>
 800750e:	4603      	mov	r3, r0
 8007510:	2b00      	cmp	r3, #0
 8007512:	d001      	beq.n	8007518 <HAL_UART_Transmit+0x10e>
 8007514:	2303      	movs	r3, #3
 8007516:	e006      	b.n	8007526 <HAL_UART_Transmit+0x11c>
 8007518:	68fb      	ldr	r3, [r7, #12]
 800751a:	2220      	movs	r2, #32
 800751c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8007520:	2300      	movs	r3, #0
 8007522:	e000      	b.n	8007526 <HAL_UART_Transmit+0x11c>
 8007524:	2302      	movs	r3, #2
 8007526:	4618      	mov	r0, r3
 8007528:	3720      	adds	r7, #32
 800752a:	46bd      	mov	sp, r7
 800752c:	bd80      	pop	{r7, pc}

0800752e <HAL_UART_Receive_IT>:
 800752e:	b580      	push	{r7, lr}
 8007530:	b084      	sub	sp, #16
 8007532:	af00      	add	r7, sp, #0
 8007534:	60f8      	str	r0, [r7, #12]
 8007536:	60b9      	str	r1, [r7, #8]
 8007538:	4613      	mov	r3, r2
 800753a:	80fb      	strh	r3, [r7, #6]
 800753c:	68fb      	ldr	r3, [r7, #12]
 800753e:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 8007542:	b2db      	uxtb	r3, r3
 8007544:	2b20      	cmp	r3, #32
 8007546:	d11d      	bne.n	8007584 <HAL_UART_Receive_IT+0x56>
 8007548:	68bb      	ldr	r3, [r7, #8]
 800754a:	2b00      	cmp	r3, #0
 800754c:	d002      	beq.n	8007554 <HAL_UART_Receive_IT+0x26>
 800754e:	88fb      	ldrh	r3, [r7, #6]
 8007550:	2b00      	cmp	r3, #0
 8007552:	d101      	bne.n	8007558 <HAL_UART_Receive_IT+0x2a>
 8007554:	2301      	movs	r3, #1
 8007556:	e016      	b.n	8007586 <HAL_UART_Receive_IT+0x58>
 8007558:	68fb      	ldr	r3, [r7, #12]
 800755a:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800755e:	2b01      	cmp	r3, #1
 8007560:	d101      	bne.n	8007566 <HAL_UART_Receive_IT+0x38>
 8007562:	2302      	movs	r3, #2
 8007564:	e00f      	b.n	8007586 <HAL_UART_Receive_IT+0x58>
 8007566:	68fb      	ldr	r3, [r7, #12]
 8007568:	2201      	movs	r2, #1
 800756a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800756e:	68fb      	ldr	r3, [r7, #12]
 8007570:	2200      	movs	r2, #0
 8007572:	631a      	str	r2, [r3, #48]	; 0x30
 8007574:	88fb      	ldrh	r3, [r7, #6]
 8007576:	461a      	mov	r2, r3
 8007578:	68b9      	ldr	r1, [r7, #8]
 800757a:	68f8      	ldr	r0, [r7, #12]
 800757c:	f000 fb24 	bl	8007bc8 <UART_Start_Receive_IT>
 8007580:	4603      	mov	r3, r0
 8007582:	e000      	b.n	8007586 <HAL_UART_Receive_IT+0x58>
 8007584:	2302      	movs	r3, #2
 8007586:	4618      	mov	r0, r3
 8007588:	3710      	adds	r7, #16
 800758a:	46bd      	mov	sp, r7
 800758c:	bd80      	pop	{r7, pc}
	...

08007590 <HAL_UART_IRQHandler>:
 8007590:	b580      	push	{r7, lr}
 8007592:	b0ba      	sub	sp, #232	; 0xe8
 8007594:	af00      	add	r7, sp, #0
 8007596:	6078      	str	r0, [r7, #4]
 8007598:	687b      	ldr	r3, [r7, #4]
 800759a:	681b      	ldr	r3, [r3, #0]
 800759c:	681b      	ldr	r3, [r3, #0]
 800759e:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
 80075a2:	687b      	ldr	r3, [r7, #4]
 80075a4:	681b      	ldr	r3, [r3, #0]
 80075a6:	68db      	ldr	r3, [r3, #12]
 80075a8:	f8c7 30e0 	str.w	r3, [r7, #224]	; 0xe0
 80075ac:	687b      	ldr	r3, [r7, #4]
 80075ae:	681b      	ldr	r3, [r3, #0]
 80075b0:	695b      	ldr	r3, [r3, #20]
 80075b2:	f8c7 30dc 	str.w	r3, [r7, #220]	; 0xdc
 80075b6:	2300      	movs	r3, #0
 80075b8:	f8c7 30d8 	str.w	r3, [r7, #216]	; 0xd8
 80075bc:	2300      	movs	r3, #0
 80075be:	f8c7 30d4 	str.w	r3, [r7, #212]	; 0xd4
 80075c2:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 80075c6:	f003 030f 	and.w	r3, r3, #15
 80075ca:	f8c7 30d8 	str.w	r3, [r7, #216]	; 0xd8
 80075ce:	f8d7 30d8 	ldr.w	r3, [r7, #216]	; 0xd8
 80075d2:	2b00      	cmp	r3, #0
 80075d4:	d10f      	bne.n	80075f6 <HAL_UART_IRQHandler+0x66>
 80075d6:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 80075da:	f003 0320 	and.w	r3, r3, #32
 80075de:	2b00      	cmp	r3, #0
 80075e0:	d009      	beq.n	80075f6 <HAL_UART_IRQHandler+0x66>
 80075e2:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 80075e6:	f003 0320 	and.w	r3, r3, #32
 80075ea:	2b00      	cmp	r3, #0
 80075ec:	d003      	beq.n	80075f6 <HAL_UART_IRQHandler+0x66>
 80075ee:	6878      	ldr	r0, [r7, #4]
 80075f0:	f000 fc07 	bl	8007e02 <UART_Receive_IT>
 80075f4:	e256      	b.n	8007aa4 <HAL_UART_IRQHandler+0x514>
 80075f6:	f8d7 30d8 	ldr.w	r3, [r7, #216]	; 0xd8
 80075fa:	2b00      	cmp	r3, #0
 80075fc:	f000 80de 	beq.w	80077bc <HAL_UART_IRQHandler+0x22c>
 8007600:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 8007604:	f003 0301 	and.w	r3, r3, #1
 8007608:	2b00      	cmp	r3, #0
 800760a:	d106      	bne.n	800761a <HAL_UART_IRQHandler+0x8a>
 800760c:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 8007610:	f403 7390 	and.w	r3, r3, #288	; 0x120
 8007614:	2b00      	cmp	r3, #0
 8007616:	f000 80d1 	beq.w	80077bc <HAL_UART_IRQHandler+0x22c>
 800761a:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800761e:	f003 0301 	and.w	r3, r3, #1
 8007622:	2b00      	cmp	r3, #0
 8007624:	d00b      	beq.n	800763e <HAL_UART_IRQHandler+0xae>
 8007626:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 800762a:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800762e:	2b00      	cmp	r3, #0
 8007630:	d005      	beq.n	800763e <HAL_UART_IRQHandler+0xae>
 8007632:	687b      	ldr	r3, [r7, #4]
 8007634:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8007636:	f043 0201 	orr.w	r2, r3, #1
 800763a:	687b      	ldr	r3, [r7, #4]
 800763c:	641a      	str	r2, [r3, #64]	; 0x40
 800763e:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8007642:	f003 0304 	and.w	r3, r3, #4
 8007646:	2b00      	cmp	r3, #0
 8007648:	d00b      	beq.n	8007662 <HAL_UART_IRQHandler+0xd2>
 800764a:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 800764e:	f003 0301 	and.w	r3, r3, #1
 8007652:	2b00      	cmp	r3, #0
 8007654:	d005      	beq.n	8007662 <HAL_UART_IRQHandler+0xd2>
 8007656:	687b      	ldr	r3, [r7, #4]
 8007658:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800765a:	f043 0202 	orr.w	r2, r3, #2
 800765e:	687b      	ldr	r3, [r7, #4]
 8007660:	641a      	str	r2, [r3, #64]	; 0x40
 8007662:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8007666:	f003 0302 	and.w	r3, r3, #2
 800766a:	2b00      	cmp	r3, #0
 800766c:	d00b      	beq.n	8007686 <HAL_UART_IRQHandler+0xf6>
 800766e:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 8007672:	f003 0301 	and.w	r3, r3, #1
 8007676:	2b00      	cmp	r3, #0
 8007678:	d005      	beq.n	8007686 <HAL_UART_IRQHandler+0xf6>
 800767a:	687b      	ldr	r3, [r7, #4]
 800767c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800767e:	f043 0204 	orr.w	r2, r3, #4
 8007682:	687b      	ldr	r3, [r7, #4]
 8007684:	641a      	str	r2, [r3, #64]	; 0x40
 8007686:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 800768a:	f003 0308 	and.w	r3, r3, #8
 800768e:	2b00      	cmp	r3, #0
 8007690:	d011      	beq.n	80076b6 <HAL_UART_IRQHandler+0x126>
 8007692:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 8007696:	f003 0320 	and.w	r3, r3, #32
 800769a:	2b00      	cmp	r3, #0
 800769c:	d105      	bne.n	80076aa <HAL_UART_IRQHandler+0x11a>
 800769e:	f8d7 30dc 	ldr.w	r3, [r7, #220]	; 0xdc
 80076a2:	f003 0301 	and.w	r3, r3, #1
 80076a6:	2b00      	cmp	r3, #0
 80076a8:	d005      	beq.n	80076b6 <HAL_UART_IRQHandler+0x126>
 80076aa:	687b      	ldr	r3, [r7, #4]
 80076ac:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80076ae:	f043 0208 	orr.w	r2, r3, #8
 80076b2:	687b      	ldr	r3, [r7, #4]
 80076b4:	641a      	str	r2, [r3, #64]	; 0x40
 80076b6:	687b      	ldr	r3, [r7, #4]
 80076b8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80076ba:	2b00      	cmp	r3, #0
 80076bc:	f000 81ed 	beq.w	8007a9a <HAL_UART_IRQHandler+0x50a>
 80076c0:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 80076c4:	f003 0320 	and.w	r3, r3, #32
 80076c8:	2b00      	cmp	r3, #0
 80076ca:	d008      	beq.n	80076de <HAL_UART_IRQHandler+0x14e>
 80076cc:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 80076d0:	f003 0320 	and.w	r3, r3, #32
 80076d4:	2b00      	cmp	r3, #0
 80076d6:	d002      	beq.n	80076de <HAL_UART_IRQHandler+0x14e>
 80076d8:	6878      	ldr	r0, [r7, #4]
 80076da:	f000 fb92 	bl	8007e02 <UART_Receive_IT>
 80076de:	687b      	ldr	r3, [r7, #4]
 80076e0:	681b      	ldr	r3, [r3, #0]
 80076e2:	695b      	ldr	r3, [r3, #20]
 80076e4:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80076e8:	2b40      	cmp	r3, #64	; 0x40
 80076ea:	bf0c      	ite	eq
 80076ec:	2301      	moveq	r3, #1
 80076ee:	2300      	movne	r3, #0
 80076f0:	b2db      	uxtb	r3, r3
 80076f2:	f8c7 30d4 	str.w	r3, [r7, #212]	; 0xd4
 80076f6:	687b      	ldr	r3, [r7, #4]
 80076f8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 80076fa:	f003 0308 	and.w	r3, r3, #8
 80076fe:	2b00      	cmp	r3, #0
 8007700:	d103      	bne.n	800770a <HAL_UART_IRQHandler+0x17a>
 8007702:	f8d7 30d4 	ldr.w	r3, [r7, #212]	; 0xd4
 8007706:	2b00      	cmp	r3, #0
 8007708:	d04f      	beq.n	80077aa <HAL_UART_IRQHandler+0x21a>
 800770a:	6878      	ldr	r0, [r7, #4]
 800770c:	f000 fa9a 	bl	8007c44 <UART_EndRxTransfer>
 8007710:	687b      	ldr	r3, [r7, #4]
 8007712:	681b      	ldr	r3, [r3, #0]
 8007714:	695b      	ldr	r3, [r3, #20]
 8007716:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800771a:	2b40      	cmp	r3, #64	; 0x40
 800771c:	d141      	bne.n	80077a2 <HAL_UART_IRQHandler+0x212>
 800771e:	687b      	ldr	r3, [r7, #4]
 8007720:	681b      	ldr	r3, [r3, #0]
 8007722:	3314      	adds	r3, #20
 8007724:	f8c7 309c 	str.w	r3, [r7, #156]	; 0x9c
 8007728:	f8d7 309c 	ldr.w	r3, [r7, #156]	; 0x9c
 800772c:	e853 3f00 	ldrex	r3, [r3]
 8007730:	f8c7 3098 	str.w	r3, [r7, #152]	; 0x98
 8007734:	f8d7 3098 	ldr.w	r3, [r7, #152]	; 0x98
 8007738:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800773c:	f8c7 30d0 	str.w	r3, [r7, #208]	; 0xd0
 8007740:	687b      	ldr	r3, [r7, #4]
 8007742:	681b      	ldr	r3, [r3, #0]
 8007744:	3314      	adds	r3, #20
 8007746:	f8d7 20d0 	ldr.w	r2, [r7, #208]	; 0xd0
 800774a:	f8c7 20a8 	str.w	r2, [r7, #168]	; 0xa8
 800774e:	f8c7 30a4 	str.w	r3, [r7, #164]	; 0xa4
 8007752:	f8d7 10a4 	ldr.w	r1, [r7, #164]	; 0xa4
 8007756:	f8d7 20a8 	ldr.w	r2, [r7, #168]	; 0xa8
 800775a:	e841 2300 	strex	r3, r2, [r1]
 800775e:	f8c7 30a0 	str.w	r3, [r7, #160]	; 0xa0
 8007762:	f8d7 30a0 	ldr.w	r3, [r7, #160]	; 0xa0
 8007766:	2b00      	cmp	r3, #0
 8007768:	d1d9      	bne.n	800771e <HAL_UART_IRQHandler+0x18e>
 800776a:	687b      	ldr	r3, [r7, #4]
 800776c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800776e:	2b00      	cmp	r3, #0
 8007770:	d013      	beq.n	800779a <HAL_UART_IRQHandler+0x20a>
 8007772:	687b      	ldr	r3, [r7, #4]
 8007774:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8007776:	4a7d      	ldr	r2, [pc, #500]	; (800796c <HAL_UART_IRQHandler+0x3dc>)
 8007778:	651a      	str	r2, [r3, #80]	; 0x50
 800777a:	687b      	ldr	r3, [r7, #4]
 800777c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800777e:	4618      	mov	r0, r3
 8007780:	f7fd fb23 	bl	8004dca <HAL_DMA_Abort_IT>
 8007784:	4603      	mov	r3, r0
 8007786:	2b00      	cmp	r3, #0
 8007788:	d016      	beq.n	80077b8 <HAL_UART_IRQHandler+0x228>
 800778a:	687b      	ldr	r3, [r7, #4]
 800778c:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800778e:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8007790:	687a      	ldr	r2, [r7, #4]
 8007792:	6b92      	ldr	r2, [r2, #56]	; 0x38
 8007794:	4610      	mov	r0, r2
 8007796:	4798      	blx	r3
 8007798:	e00e      	b.n	80077b8 <HAL_UART_IRQHandler+0x228>
 800779a:	6878      	ldr	r0, [r7, #4]
 800779c:	f000 f990 	bl	8007ac0 <HAL_UART_ErrorCallback>
 80077a0:	e00a      	b.n	80077b8 <HAL_UART_IRQHandler+0x228>
 80077a2:	6878      	ldr	r0, [r7, #4]
 80077a4:	f000 f98c 	bl	8007ac0 <HAL_UART_ErrorCallback>
 80077a8:	e006      	b.n	80077b8 <HAL_UART_IRQHandler+0x228>
 80077aa:	6878      	ldr	r0, [r7, #4]
 80077ac:	f000 f988 	bl	8007ac0 <HAL_UART_ErrorCallback>
 80077b0:	687b      	ldr	r3, [r7, #4]
 80077b2:	2200      	movs	r2, #0
 80077b4:	641a      	str	r2, [r3, #64]	; 0x40
 80077b6:	e170      	b.n	8007a9a <HAL_UART_IRQHandler+0x50a>
 80077b8:	bf00      	nop
 80077ba:	e16e      	b.n	8007a9a <HAL_UART_IRQHandler+0x50a>
 80077bc:	687b      	ldr	r3, [r7, #4]
 80077be:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80077c0:	2b01      	cmp	r3, #1
 80077c2:	f040 814a 	bne.w	8007a5a <HAL_UART_IRQHandler+0x4ca>
 80077c6:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 80077ca:	f003 0310 	and.w	r3, r3, #16
 80077ce:	2b00      	cmp	r3, #0
 80077d0:	f000 8143 	beq.w	8007a5a <HAL_UART_IRQHandler+0x4ca>
 80077d4:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 80077d8:	f003 0310 	and.w	r3, r3, #16
 80077dc:	2b00      	cmp	r3, #0
 80077de:	f000 813c 	beq.w	8007a5a <HAL_UART_IRQHandler+0x4ca>
 80077e2:	2300      	movs	r3, #0
 80077e4:	60bb      	str	r3, [r7, #8]
 80077e6:	687b      	ldr	r3, [r7, #4]
 80077e8:	681b      	ldr	r3, [r3, #0]
 80077ea:	681b      	ldr	r3, [r3, #0]
 80077ec:	60bb      	str	r3, [r7, #8]
 80077ee:	687b      	ldr	r3, [r7, #4]
 80077f0:	681b      	ldr	r3, [r3, #0]
 80077f2:	685b      	ldr	r3, [r3, #4]
 80077f4:	60bb      	str	r3, [r7, #8]
 80077f6:	68bb      	ldr	r3, [r7, #8]
 80077f8:	687b      	ldr	r3, [r7, #4]
 80077fa:	681b      	ldr	r3, [r3, #0]
 80077fc:	695b      	ldr	r3, [r3, #20]
 80077fe:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8007802:	2b40      	cmp	r3, #64	; 0x40
 8007804:	f040 80b4 	bne.w	8007970 <HAL_UART_IRQHandler+0x3e0>
 8007808:	687b      	ldr	r3, [r7, #4]
 800780a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800780c:	681b      	ldr	r3, [r3, #0]
 800780e:	685b      	ldr	r3, [r3, #4]
 8007810:	f8a7 30be 	strh.w	r3, [r7, #190]	; 0xbe
 8007814:	f8b7 30be 	ldrh.w	r3, [r7, #190]	; 0xbe
 8007818:	2b00      	cmp	r3, #0
 800781a:	f000 8140 	beq.w	8007a9e <HAL_UART_IRQHandler+0x50e>
 800781e:	687b      	ldr	r3, [r7, #4]
 8007820:	8d9b      	ldrh	r3, [r3, #44]	; 0x2c
 8007822:	f8b7 20be 	ldrh.w	r2, [r7, #190]	; 0xbe
 8007826:	429a      	cmp	r2, r3
 8007828:	f080 8139 	bcs.w	8007a9e <HAL_UART_IRQHandler+0x50e>
 800782c:	687b      	ldr	r3, [r7, #4]
 800782e:	f8b7 20be 	ldrh.w	r2, [r7, #190]	; 0xbe
 8007832:	85da      	strh	r2, [r3, #46]	; 0x2e
 8007834:	687b      	ldr	r3, [r7, #4]
 8007836:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8007838:	69db      	ldr	r3, [r3, #28]
 800783a:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800783e:	f000 8088 	beq.w	8007952 <HAL_UART_IRQHandler+0x3c2>
 8007842:	687b      	ldr	r3, [r7, #4]
 8007844:	681b      	ldr	r3, [r3, #0]
 8007846:	330c      	adds	r3, #12
 8007848:	f8c7 3088 	str.w	r3, [r7, #136]	; 0x88
 800784c:	f8d7 3088 	ldr.w	r3, [r7, #136]	; 0x88
 8007850:	e853 3f00 	ldrex	r3, [r3]
 8007854:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
 8007858:	f8d7 3084 	ldr.w	r3, [r7, #132]	; 0x84
 800785c:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8007860:	f8c7 30b8 	str.w	r3, [r7, #184]	; 0xb8
 8007864:	687b      	ldr	r3, [r7, #4]
 8007866:	681b      	ldr	r3, [r3, #0]
 8007868:	330c      	adds	r3, #12
 800786a:	f8d7 20b8 	ldr.w	r2, [r7, #184]	; 0xb8
 800786e:	f8c7 2094 	str.w	r2, [r7, #148]	; 0x94
 8007872:	f8c7 3090 	str.w	r3, [r7, #144]	; 0x90
 8007876:	f8d7 1090 	ldr.w	r1, [r7, #144]	; 0x90
 800787a:	f8d7 2094 	ldr.w	r2, [r7, #148]	; 0x94
 800787e:	e841 2300 	strex	r3, r2, [r1]
 8007882:	f8c7 308c 	str.w	r3, [r7, #140]	; 0x8c
 8007886:	f8d7 308c 	ldr.w	r3, [r7, #140]	; 0x8c
 800788a:	2b00      	cmp	r3, #0
 800788c:	d1d9      	bne.n	8007842 <HAL_UART_IRQHandler+0x2b2>
 800788e:	687b      	ldr	r3, [r7, #4]
 8007890:	681b      	ldr	r3, [r3, #0]
 8007892:	3314      	adds	r3, #20
 8007894:	677b      	str	r3, [r7, #116]	; 0x74
 8007896:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 8007898:	e853 3f00 	ldrex	r3, [r3]
 800789c:	673b      	str	r3, [r7, #112]	; 0x70
 800789e:	6f3b      	ldr	r3, [r7, #112]	; 0x70
 80078a0:	f023 0301 	bic.w	r3, r3, #1
 80078a4:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
 80078a8:	687b      	ldr	r3, [r7, #4]
 80078aa:	681b      	ldr	r3, [r3, #0]
 80078ac:	3314      	adds	r3, #20
 80078ae:	f8d7 20b4 	ldr.w	r2, [r7, #180]	; 0xb4
 80078b2:	f8c7 2080 	str.w	r2, [r7, #128]	; 0x80
 80078b6:	67fb      	str	r3, [r7, #124]	; 0x7c
 80078b8:	6ff9      	ldr	r1, [r7, #124]	; 0x7c
 80078ba:	f8d7 2080 	ldr.w	r2, [r7, #128]	; 0x80
 80078be:	e841 2300 	strex	r3, r2, [r1]
 80078c2:	67bb      	str	r3, [r7, #120]	; 0x78
 80078c4:	6fbb      	ldr	r3, [r7, #120]	; 0x78
 80078c6:	2b00      	cmp	r3, #0
 80078c8:	d1e1      	bne.n	800788e <HAL_UART_IRQHandler+0x2fe>
 80078ca:	687b      	ldr	r3, [r7, #4]
 80078cc:	681b      	ldr	r3, [r3, #0]
 80078ce:	3314      	adds	r3, #20
 80078d0:	663b      	str	r3, [r7, #96]	; 0x60
 80078d2:	6e3b      	ldr	r3, [r7, #96]	; 0x60
 80078d4:	e853 3f00 	ldrex	r3, [r3]
 80078d8:	65fb      	str	r3, [r7, #92]	; 0x5c
 80078da:	6dfb      	ldr	r3, [r7, #92]	; 0x5c
 80078dc:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 80078e0:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 80078e4:	687b      	ldr	r3, [r7, #4]
 80078e6:	681b      	ldr	r3, [r3, #0]
 80078e8:	3314      	adds	r3, #20
 80078ea:	f8d7 20b0 	ldr.w	r2, [r7, #176]	; 0xb0
 80078ee:	66fa      	str	r2, [r7, #108]	; 0x6c
 80078f0:	66bb      	str	r3, [r7, #104]	; 0x68
 80078f2:	6eb9      	ldr	r1, [r7, #104]	; 0x68
 80078f4:	6efa      	ldr	r2, [r7, #108]	; 0x6c
 80078f6:	e841 2300 	strex	r3, r2, [r1]
 80078fa:	667b      	str	r3, [r7, #100]	; 0x64
 80078fc:	6e7b      	ldr	r3, [r7, #100]	; 0x64
 80078fe:	2b00      	cmp	r3, #0
 8007900:	d1e3      	bne.n	80078ca <HAL_UART_IRQHandler+0x33a>
 8007902:	687b      	ldr	r3, [r7, #4]
 8007904:	2220      	movs	r2, #32
 8007906:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 800790a:	687b      	ldr	r3, [r7, #4]
 800790c:	2200      	movs	r2, #0
 800790e:	631a      	str	r2, [r3, #48]	; 0x30
 8007910:	687b      	ldr	r3, [r7, #4]
 8007912:	681b      	ldr	r3, [r3, #0]
 8007914:	330c      	adds	r3, #12
 8007916:	64fb      	str	r3, [r7, #76]	; 0x4c
 8007918:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 800791a:	e853 3f00 	ldrex	r3, [r3]
 800791e:	64bb      	str	r3, [r7, #72]	; 0x48
 8007920:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8007922:	f023 0310 	bic.w	r3, r3, #16
 8007926:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
 800792a:	687b      	ldr	r3, [r7, #4]
 800792c:	681b      	ldr	r3, [r3, #0]
 800792e:	330c      	adds	r3, #12
 8007930:	f8d7 20ac 	ldr.w	r2, [r7, #172]	; 0xac
 8007934:	65ba      	str	r2, [r7, #88]	; 0x58
 8007936:	657b      	str	r3, [r7, #84]	; 0x54
 8007938:	6d79      	ldr	r1, [r7, #84]	; 0x54
 800793a:	6dba      	ldr	r2, [r7, #88]	; 0x58
 800793c:	e841 2300 	strex	r3, r2, [r1]
 8007940:	653b      	str	r3, [r7, #80]	; 0x50
 8007942:	6d3b      	ldr	r3, [r7, #80]	; 0x50
 8007944:	2b00      	cmp	r3, #0
 8007946:	d1e3      	bne.n	8007910 <HAL_UART_IRQHandler+0x380>
 8007948:	687b      	ldr	r3, [r7, #4]
 800794a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800794c:	4618      	mov	r0, r3
 800794e:	f7fd f9cc 	bl	8004cea <HAL_DMA_Abort>
 8007952:	687b      	ldr	r3, [r7, #4]
 8007954:	8d9a      	ldrh	r2, [r3, #44]	; 0x2c
 8007956:	687b      	ldr	r3, [r7, #4]
 8007958:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 800795a:	b29b      	uxth	r3, r3
 800795c:	1ad3      	subs	r3, r2, r3
 800795e:	b29b      	uxth	r3, r3
 8007960:	4619      	mov	r1, r3
 8007962:	6878      	ldr	r0, [r7, #4]
 8007964:	f000 f8b6 	bl	8007ad4 <HAL_UARTEx_RxEventCallback>
 8007968:	e099      	b.n	8007a9e <HAL_UART_IRQHandler+0x50e>
 800796a:	bf00      	nop
 800796c:	08007d0b 	.word	0x08007d0b
 8007970:	687b      	ldr	r3, [r7, #4]
 8007972:	8d9a      	ldrh	r2, [r3, #44]	; 0x2c
 8007974:	687b      	ldr	r3, [r7, #4]
 8007976:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 8007978:	b29b      	uxth	r3, r3
 800797a:	1ad3      	subs	r3, r2, r3
 800797c:	f8a7 30ce 	strh.w	r3, [r7, #206]	; 0xce
 8007980:	687b      	ldr	r3, [r7, #4]
 8007982:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 8007984:	b29b      	uxth	r3, r3
 8007986:	2b00      	cmp	r3, #0
 8007988:	f000 808b 	beq.w	8007aa2 <HAL_UART_IRQHandler+0x512>
 800798c:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	; 0xce
 8007990:	2b00      	cmp	r3, #0
 8007992:	f000 8086 	beq.w	8007aa2 <HAL_UART_IRQHandler+0x512>
 8007996:	687b      	ldr	r3, [r7, #4]
 8007998:	681b      	ldr	r3, [r3, #0]
 800799a:	330c      	adds	r3, #12
 800799c:	63bb      	str	r3, [r7, #56]	; 0x38
 800799e:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 80079a0:	e853 3f00 	ldrex	r3, [r3]
 80079a4:	637b      	str	r3, [r7, #52]	; 0x34
 80079a6:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 80079a8:	f423 7390 	bic.w	r3, r3, #288	; 0x120
 80079ac:	f8c7 30c8 	str.w	r3, [r7, #200]	; 0xc8
 80079b0:	687b      	ldr	r3, [r7, #4]
 80079b2:	681b      	ldr	r3, [r3, #0]
 80079b4:	330c      	adds	r3, #12
 80079b6:	f8d7 20c8 	ldr.w	r2, [r7, #200]	; 0xc8
 80079ba:	647a      	str	r2, [r7, #68]	; 0x44
 80079bc:	643b      	str	r3, [r7, #64]	; 0x40
 80079be:	6c39      	ldr	r1, [r7, #64]	; 0x40
 80079c0:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 80079c2:	e841 2300 	strex	r3, r2, [r1]
 80079c6:	63fb      	str	r3, [r7, #60]	; 0x3c
 80079c8:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 80079ca:	2b00      	cmp	r3, #0
 80079cc:	d1e3      	bne.n	8007996 <HAL_UART_IRQHandler+0x406>
 80079ce:	687b      	ldr	r3, [r7, #4]
 80079d0:	681b      	ldr	r3, [r3, #0]
 80079d2:	3314      	adds	r3, #20
 80079d4:	627b      	str	r3, [r7, #36]	; 0x24
 80079d6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80079d8:	e853 3f00 	ldrex	r3, [r3]
 80079dc:	623b      	str	r3, [r7, #32]
 80079de:	6a3b      	ldr	r3, [r7, #32]
 80079e0:	f023 0301 	bic.w	r3, r3, #1
 80079e4:	f8c7 30c4 	str.w	r3, [r7, #196]	; 0xc4
 80079e8:	687b      	ldr	r3, [r7, #4]
 80079ea:	681b      	ldr	r3, [r3, #0]
 80079ec:	3314      	adds	r3, #20
 80079ee:	f8d7 20c4 	ldr.w	r2, [r7, #196]	; 0xc4
 80079f2:	633a      	str	r2, [r7, #48]	; 0x30
 80079f4:	62fb      	str	r3, [r7, #44]	; 0x2c
 80079f6:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 80079f8:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 80079fa:	e841 2300 	strex	r3, r2, [r1]
 80079fe:	62bb      	str	r3, [r7, #40]	; 0x28
 8007a00:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8007a02:	2b00      	cmp	r3, #0
 8007a04:	d1e3      	bne.n	80079ce <HAL_UART_IRQHandler+0x43e>
 8007a06:	687b      	ldr	r3, [r7, #4]
 8007a08:	2220      	movs	r2, #32
 8007a0a:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8007a0e:	687b      	ldr	r3, [r7, #4]
 8007a10:	2200      	movs	r2, #0
 8007a12:	631a      	str	r2, [r3, #48]	; 0x30
 8007a14:	687b      	ldr	r3, [r7, #4]
 8007a16:	681b      	ldr	r3, [r3, #0]
 8007a18:	330c      	adds	r3, #12
 8007a1a:	613b      	str	r3, [r7, #16]
 8007a1c:	693b      	ldr	r3, [r7, #16]
 8007a1e:	e853 3f00 	ldrex	r3, [r3]
 8007a22:	60fb      	str	r3, [r7, #12]
 8007a24:	68fb      	ldr	r3, [r7, #12]
 8007a26:	f023 0310 	bic.w	r3, r3, #16
 8007a2a:	f8c7 30c0 	str.w	r3, [r7, #192]	; 0xc0
 8007a2e:	687b      	ldr	r3, [r7, #4]
 8007a30:	681b      	ldr	r3, [r3, #0]
 8007a32:	330c      	adds	r3, #12
 8007a34:	f8d7 20c0 	ldr.w	r2, [r7, #192]	; 0xc0
 8007a38:	61fa      	str	r2, [r7, #28]
 8007a3a:	61bb      	str	r3, [r7, #24]
 8007a3c:	69b9      	ldr	r1, [r7, #24]
 8007a3e:	69fa      	ldr	r2, [r7, #28]
 8007a40:	e841 2300 	strex	r3, r2, [r1]
 8007a44:	617b      	str	r3, [r7, #20]
 8007a46:	697b      	ldr	r3, [r7, #20]
 8007a48:	2b00      	cmp	r3, #0
 8007a4a:	d1e3      	bne.n	8007a14 <HAL_UART_IRQHandler+0x484>
 8007a4c:	f8b7 30ce 	ldrh.w	r3, [r7, #206]	; 0xce
 8007a50:	4619      	mov	r1, r3
 8007a52:	6878      	ldr	r0, [r7, #4]
 8007a54:	f000 f83e 	bl	8007ad4 <HAL_UARTEx_RxEventCallback>
 8007a58:	e023      	b.n	8007aa2 <HAL_UART_IRQHandler+0x512>
 8007a5a:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8007a5e:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8007a62:	2b00      	cmp	r3, #0
 8007a64:	d009      	beq.n	8007a7a <HAL_UART_IRQHandler+0x4ea>
 8007a66:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 8007a6a:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8007a6e:	2b00      	cmp	r3, #0
 8007a70:	d003      	beq.n	8007a7a <HAL_UART_IRQHandler+0x4ea>
 8007a72:	6878      	ldr	r0, [r7, #4]
 8007a74:	f000 f95d 	bl	8007d32 <UART_Transmit_IT>
 8007a78:	e014      	b.n	8007aa4 <HAL_UART_IRQHandler+0x514>
 8007a7a:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8007a7e:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8007a82:	2b00      	cmp	r3, #0
 8007a84:	d00e      	beq.n	8007aa4 <HAL_UART_IRQHandler+0x514>
 8007a86:	f8d7 30e0 	ldr.w	r3, [r7, #224]	; 0xe0
 8007a8a:	f003 0340 	and.w	r3, r3, #64	; 0x40
 8007a8e:	2b00      	cmp	r3, #0
 8007a90:	d008      	beq.n	8007aa4 <HAL_UART_IRQHandler+0x514>
 8007a92:	6878      	ldr	r0, [r7, #4]
 8007a94:	f000 f99d 	bl	8007dd2 <UART_EndTransmit_IT>
 8007a98:	e004      	b.n	8007aa4 <HAL_UART_IRQHandler+0x514>
 8007a9a:	bf00      	nop
 8007a9c:	e002      	b.n	8007aa4 <HAL_UART_IRQHandler+0x514>
 8007a9e:	bf00      	nop
 8007aa0:	e000      	b.n	8007aa4 <HAL_UART_IRQHandler+0x514>
 8007aa2:	bf00      	nop
 8007aa4:	37e8      	adds	r7, #232	; 0xe8
 8007aa6:	46bd      	mov	sp, r7
 8007aa8:	bd80      	pop	{r7, pc}
 8007aaa:	bf00      	nop

08007aac <HAL_UART_TxCpltCallback>:
 8007aac:	b480      	push	{r7}
 8007aae:	b083      	sub	sp, #12
 8007ab0:	af00      	add	r7, sp, #0
 8007ab2:	6078      	str	r0, [r7, #4]
 8007ab4:	bf00      	nop
 8007ab6:	370c      	adds	r7, #12
 8007ab8:	46bd      	mov	sp, r7
 8007aba:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007abe:	4770      	bx	lr

08007ac0 <HAL_UART_ErrorCallback>:
 8007ac0:	b480      	push	{r7}
 8007ac2:	b083      	sub	sp, #12
 8007ac4:	af00      	add	r7, sp, #0
 8007ac6:	6078      	str	r0, [r7, #4]
 8007ac8:	bf00      	nop
 8007aca:	370c      	adds	r7, #12
 8007acc:	46bd      	mov	sp, r7
 8007ace:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007ad2:	4770      	bx	lr

08007ad4 <HAL_UARTEx_RxEventCallback>:
 8007ad4:	b480      	push	{r7}
 8007ad6:	b083      	sub	sp, #12
 8007ad8:	af00      	add	r7, sp, #0
 8007ada:	6078      	str	r0, [r7, #4]
 8007adc:	460b      	mov	r3, r1
 8007ade:	807b      	strh	r3, [r7, #2]
 8007ae0:	bf00      	nop
 8007ae2:	370c      	adds	r7, #12
 8007ae4:	46bd      	mov	sp, r7
 8007ae6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007aea:	4770      	bx	lr

08007aec <UART_WaitOnFlagUntilTimeout>:
 8007aec:	b580      	push	{r7, lr}
 8007aee:	b090      	sub	sp, #64	; 0x40
 8007af0:	af00      	add	r7, sp, #0
 8007af2:	60f8      	str	r0, [r7, #12]
 8007af4:	60b9      	str	r1, [r7, #8]
 8007af6:	603b      	str	r3, [r7, #0]
 8007af8:	4613      	mov	r3, r2
 8007afa:	71fb      	strb	r3, [r7, #7]
 8007afc:	e050      	b.n	8007ba0 <UART_WaitOnFlagUntilTimeout+0xb4>
 8007afe:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8007b00:	f1b3 3fff 	cmp.w	r3, #4294967295
 8007b04:	d04c      	beq.n	8007ba0 <UART_WaitOnFlagUntilTimeout+0xb4>
 8007b06:	6cbb      	ldr	r3, [r7, #72]	; 0x48
 8007b08:	2b00      	cmp	r3, #0
 8007b0a:	d007      	beq.n	8007b1c <UART_WaitOnFlagUntilTimeout+0x30>
 8007b0c:	f7fc ffac 	bl	8004a68 <HAL_GetTick>
 8007b10:	4602      	mov	r2, r0
 8007b12:	683b      	ldr	r3, [r7, #0]
 8007b14:	1ad3      	subs	r3, r2, r3
 8007b16:	6cba      	ldr	r2, [r7, #72]	; 0x48
 8007b18:	429a      	cmp	r2, r3
 8007b1a:	d241      	bcs.n	8007ba0 <UART_WaitOnFlagUntilTimeout+0xb4>
 8007b1c:	68fb      	ldr	r3, [r7, #12]
 8007b1e:	681b      	ldr	r3, [r3, #0]
 8007b20:	330c      	adds	r3, #12
 8007b22:	62bb      	str	r3, [r7, #40]	; 0x28
 8007b24:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8007b26:	e853 3f00 	ldrex	r3, [r3]
 8007b2a:	627b      	str	r3, [r7, #36]	; 0x24
 8007b2c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8007b2e:	f423 73d0 	bic.w	r3, r3, #416	; 0x1a0
 8007b32:	63fb      	str	r3, [r7, #60]	; 0x3c
 8007b34:	68fb      	ldr	r3, [r7, #12]
 8007b36:	681b      	ldr	r3, [r3, #0]
 8007b38:	330c      	adds	r3, #12
 8007b3a:	6bfa      	ldr	r2, [r7, #60]	; 0x3c
 8007b3c:	637a      	str	r2, [r7, #52]	; 0x34
 8007b3e:	633b      	str	r3, [r7, #48]	; 0x30
 8007b40:	6b39      	ldr	r1, [r7, #48]	; 0x30
 8007b42:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 8007b44:	e841 2300 	strex	r3, r2, [r1]
 8007b48:	62fb      	str	r3, [r7, #44]	; 0x2c
 8007b4a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8007b4c:	2b00      	cmp	r3, #0
 8007b4e:	d1e5      	bne.n	8007b1c <UART_WaitOnFlagUntilTimeout+0x30>
 8007b50:	68fb      	ldr	r3, [r7, #12]
 8007b52:	681b      	ldr	r3, [r3, #0]
 8007b54:	3314      	adds	r3, #20
 8007b56:	617b      	str	r3, [r7, #20]
 8007b58:	697b      	ldr	r3, [r7, #20]
 8007b5a:	e853 3f00 	ldrex	r3, [r3]
 8007b5e:	613b      	str	r3, [r7, #16]
 8007b60:	693b      	ldr	r3, [r7, #16]
 8007b62:	f023 0301 	bic.w	r3, r3, #1
 8007b66:	63bb      	str	r3, [r7, #56]	; 0x38
 8007b68:	68fb      	ldr	r3, [r7, #12]
 8007b6a:	681b      	ldr	r3, [r3, #0]
 8007b6c:	3314      	adds	r3, #20
 8007b6e:	6bba      	ldr	r2, [r7, #56]	; 0x38
 8007b70:	623a      	str	r2, [r7, #32]
 8007b72:	61fb      	str	r3, [r7, #28]
 8007b74:	69f9      	ldr	r1, [r7, #28]
 8007b76:	6a3a      	ldr	r2, [r7, #32]
 8007b78:	e841 2300 	strex	r3, r2, [r1]
 8007b7c:	61bb      	str	r3, [r7, #24]
 8007b7e:	69bb      	ldr	r3, [r7, #24]
 8007b80:	2b00      	cmp	r3, #0
 8007b82:	d1e5      	bne.n	8007b50 <UART_WaitOnFlagUntilTimeout+0x64>
 8007b84:	68fb      	ldr	r3, [r7, #12]
 8007b86:	2220      	movs	r2, #32
 8007b88:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8007b8c:	68fb      	ldr	r3, [r7, #12]
 8007b8e:	2220      	movs	r2, #32
 8007b90:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8007b94:	68fb      	ldr	r3, [r7, #12]
 8007b96:	2200      	movs	r2, #0
 8007b98:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8007b9c:	2303      	movs	r3, #3
 8007b9e:	e00f      	b.n	8007bc0 <UART_WaitOnFlagUntilTimeout+0xd4>
 8007ba0:	68fb      	ldr	r3, [r7, #12]
 8007ba2:	681b      	ldr	r3, [r3, #0]
 8007ba4:	681a      	ldr	r2, [r3, #0]
 8007ba6:	68bb      	ldr	r3, [r7, #8]
 8007ba8:	4013      	ands	r3, r2
 8007baa:	68ba      	ldr	r2, [r7, #8]
 8007bac:	429a      	cmp	r2, r3
 8007bae:	bf0c      	ite	eq
 8007bb0:	2301      	moveq	r3, #1
 8007bb2:	2300      	movne	r3, #0
 8007bb4:	b2db      	uxtb	r3, r3
 8007bb6:	461a      	mov	r2, r3
 8007bb8:	79fb      	ldrb	r3, [r7, #7]
 8007bba:	429a      	cmp	r2, r3
 8007bbc:	d09f      	beq.n	8007afe <UART_WaitOnFlagUntilTimeout+0x12>
 8007bbe:	2300      	movs	r3, #0
 8007bc0:	4618      	mov	r0, r3
 8007bc2:	3740      	adds	r7, #64	; 0x40
 8007bc4:	46bd      	mov	sp, r7
 8007bc6:	bd80      	pop	{r7, pc}

08007bc8 <UART_Start_Receive_IT>:
 8007bc8:	b480      	push	{r7}
 8007bca:	b085      	sub	sp, #20
 8007bcc:	af00      	add	r7, sp, #0
 8007bce:	60f8      	str	r0, [r7, #12]
 8007bd0:	60b9      	str	r1, [r7, #8]
 8007bd2:	4613      	mov	r3, r2
 8007bd4:	80fb      	strh	r3, [r7, #6]
 8007bd6:	68fb      	ldr	r3, [r7, #12]
 8007bd8:	68ba      	ldr	r2, [r7, #8]
 8007bda:	629a      	str	r2, [r3, #40]	; 0x28
 8007bdc:	68fb      	ldr	r3, [r7, #12]
 8007bde:	88fa      	ldrh	r2, [r7, #6]
 8007be0:	859a      	strh	r2, [r3, #44]	; 0x2c
 8007be2:	68fb      	ldr	r3, [r7, #12]
 8007be4:	88fa      	ldrh	r2, [r7, #6]
 8007be6:	85da      	strh	r2, [r3, #46]	; 0x2e
 8007be8:	68fb      	ldr	r3, [r7, #12]
 8007bea:	2200      	movs	r2, #0
 8007bec:	641a      	str	r2, [r3, #64]	; 0x40
 8007bee:	68fb      	ldr	r3, [r7, #12]
 8007bf0:	2222      	movs	r2, #34	; 0x22
 8007bf2:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8007bf6:	68fb      	ldr	r3, [r7, #12]
 8007bf8:	2200      	movs	r2, #0
 8007bfa:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 8007bfe:	68fb      	ldr	r3, [r7, #12]
 8007c00:	691b      	ldr	r3, [r3, #16]
 8007c02:	2b00      	cmp	r3, #0
 8007c04:	d007      	beq.n	8007c16 <UART_Start_Receive_IT+0x4e>
 8007c06:	68fb      	ldr	r3, [r7, #12]
 8007c08:	681b      	ldr	r3, [r3, #0]
 8007c0a:	68da      	ldr	r2, [r3, #12]
 8007c0c:	68fb      	ldr	r3, [r7, #12]
 8007c0e:	681b      	ldr	r3, [r3, #0]
 8007c10:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8007c14:	60da      	str	r2, [r3, #12]
 8007c16:	68fb      	ldr	r3, [r7, #12]
 8007c18:	681b      	ldr	r3, [r3, #0]
 8007c1a:	695a      	ldr	r2, [r3, #20]
 8007c1c:	68fb      	ldr	r3, [r7, #12]
 8007c1e:	681b      	ldr	r3, [r3, #0]
 8007c20:	f042 0201 	orr.w	r2, r2, #1
 8007c24:	615a      	str	r2, [r3, #20]
 8007c26:	68fb      	ldr	r3, [r7, #12]
 8007c28:	681b      	ldr	r3, [r3, #0]
 8007c2a:	68da      	ldr	r2, [r3, #12]
 8007c2c:	68fb      	ldr	r3, [r7, #12]
 8007c2e:	681b      	ldr	r3, [r3, #0]
 8007c30:	f042 0220 	orr.w	r2, r2, #32
 8007c34:	60da      	str	r2, [r3, #12]
 8007c36:	2300      	movs	r3, #0
 8007c38:	4618      	mov	r0, r3
 8007c3a:	3714      	adds	r7, #20
 8007c3c:	46bd      	mov	sp, r7
 8007c3e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007c42:	4770      	bx	lr

08007c44 <UART_EndRxTransfer>:
 8007c44:	b480      	push	{r7}
 8007c46:	b095      	sub	sp, #84	; 0x54
 8007c48:	af00      	add	r7, sp, #0
 8007c4a:	6078      	str	r0, [r7, #4]
 8007c4c:	687b      	ldr	r3, [r7, #4]
 8007c4e:	681b      	ldr	r3, [r3, #0]
 8007c50:	330c      	adds	r3, #12
 8007c52:	637b      	str	r3, [r7, #52]	; 0x34
 8007c54:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 8007c56:	e853 3f00 	ldrex	r3, [r3]
 8007c5a:	633b      	str	r3, [r7, #48]	; 0x30
 8007c5c:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 8007c5e:	f423 7390 	bic.w	r3, r3, #288	; 0x120
 8007c62:	64fb      	str	r3, [r7, #76]	; 0x4c
 8007c64:	687b      	ldr	r3, [r7, #4]
 8007c66:	681b      	ldr	r3, [r3, #0]
 8007c68:	330c      	adds	r3, #12
 8007c6a:	6cfa      	ldr	r2, [r7, #76]	; 0x4c
 8007c6c:	643a      	str	r2, [r7, #64]	; 0x40
 8007c6e:	63fb      	str	r3, [r7, #60]	; 0x3c
 8007c70:	6bf9      	ldr	r1, [r7, #60]	; 0x3c
 8007c72:	6c3a      	ldr	r2, [r7, #64]	; 0x40
 8007c74:	e841 2300 	strex	r3, r2, [r1]
 8007c78:	63bb      	str	r3, [r7, #56]	; 0x38
 8007c7a:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8007c7c:	2b00      	cmp	r3, #0
 8007c7e:	d1e5      	bne.n	8007c4c <UART_EndRxTransfer+0x8>
 8007c80:	687b      	ldr	r3, [r7, #4]
 8007c82:	681b      	ldr	r3, [r3, #0]
 8007c84:	3314      	adds	r3, #20
 8007c86:	623b      	str	r3, [r7, #32]
 8007c88:	6a3b      	ldr	r3, [r7, #32]
 8007c8a:	e853 3f00 	ldrex	r3, [r3]
 8007c8e:	61fb      	str	r3, [r7, #28]
 8007c90:	69fb      	ldr	r3, [r7, #28]
 8007c92:	f023 0301 	bic.w	r3, r3, #1
 8007c96:	64bb      	str	r3, [r7, #72]	; 0x48
 8007c98:	687b      	ldr	r3, [r7, #4]
 8007c9a:	681b      	ldr	r3, [r3, #0]
 8007c9c:	3314      	adds	r3, #20
 8007c9e:	6cba      	ldr	r2, [r7, #72]	; 0x48
 8007ca0:	62fa      	str	r2, [r7, #44]	; 0x2c
 8007ca2:	62bb      	str	r3, [r7, #40]	; 0x28
 8007ca4:	6ab9      	ldr	r1, [r7, #40]	; 0x28
 8007ca6:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8007ca8:	e841 2300 	strex	r3, r2, [r1]
 8007cac:	627b      	str	r3, [r7, #36]	; 0x24
 8007cae:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8007cb0:	2b00      	cmp	r3, #0
 8007cb2:	d1e5      	bne.n	8007c80 <UART_EndRxTransfer+0x3c>
 8007cb4:	687b      	ldr	r3, [r7, #4]
 8007cb6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8007cb8:	2b01      	cmp	r3, #1
 8007cba:	d119      	bne.n	8007cf0 <UART_EndRxTransfer+0xac>
 8007cbc:	687b      	ldr	r3, [r7, #4]
 8007cbe:	681b      	ldr	r3, [r3, #0]
 8007cc0:	330c      	adds	r3, #12
 8007cc2:	60fb      	str	r3, [r7, #12]
 8007cc4:	68fb      	ldr	r3, [r7, #12]
 8007cc6:	e853 3f00 	ldrex	r3, [r3]
 8007cca:	60bb      	str	r3, [r7, #8]
 8007ccc:	68bb      	ldr	r3, [r7, #8]
 8007cce:	f023 0310 	bic.w	r3, r3, #16
 8007cd2:	647b      	str	r3, [r7, #68]	; 0x44
 8007cd4:	687b      	ldr	r3, [r7, #4]
 8007cd6:	681b      	ldr	r3, [r3, #0]
 8007cd8:	330c      	adds	r3, #12
 8007cda:	6c7a      	ldr	r2, [r7, #68]	; 0x44
 8007cdc:	61ba      	str	r2, [r7, #24]
 8007cde:	617b      	str	r3, [r7, #20]
 8007ce0:	6979      	ldr	r1, [r7, #20]
 8007ce2:	69ba      	ldr	r2, [r7, #24]
 8007ce4:	e841 2300 	strex	r3, r2, [r1]
 8007ce8:	613b      	str	r3, [r7, #16]
 8007cea:	693b      	ldr	r3, [r7, #16]
 8007cec:	2b00      	cmp	r3, #0
 8007cee:	d1e5      	bne.n	8007cbc <UART_EndRxTransfer+0x78>
 8007cf0:	687b      	ldr	r3, [r7, #4]
 8007cf2:	2220      	movs	r2, #32
 8007cf4:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8007cf8:	687b      	ldr	r3, [r7, #4]
 8007cfa:	2200      	movs	r2, #0
 8007cfc:	631a      	str	r2, [r3, #48]	; 0x30
 8007cfe:	bf00      	nop
 8007d00:	3754      	adds	r7, #84	; 0x54
 8007d02:	46bd      	mov	sp, r7
 8007d04:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007d08:	4770      	bx	lr

08007d0a <UART_DMAAbortOnError>:
 8007d0a:	b580      	push	{r7, lr}
 8007d0c:	b084      	sub	sp, #16
 8007d0e:	af00      	add	r7, sp, #0
 8007d10:	6078      	str	r0, [r7, #4]
 8007d12:	687b      	ldr	r3, [r7, #4]
 8007d14:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8007d16:	60fb      	str	r3, [r7, #12]
 8007d18:	68fb      	ldr	r3, [r7, #12]
 8007d1a:	2200      	movs	r2, #0
 8007d1c:	85da      	strh	r2, [r3, #46]	; 0x2e
 8007d1e:	68fb      	ldr	r3, [r7, #12]
 8007d20:	2200      	movs	r2, #0
 8007d22:	84da      	strh	r2, [r3, #38]	; 0x26
 8007d24:	68f8      	ldr	r0, [r7, #12]
 8007d26:	f7ff fecb 	bl	8007ac0 <HAL_UART_ErrorCallback>
 8007d2a:	bf00      	nop
 8007d2c:	3710      	adds	r7, #16
 8007d2e:	46bd      	mov	sp, r7
 8007d30:	bd80      	pop	{r7, pc}

08007d32 <UART_Transmit_IT>:
 8007d32:	b480      	push	{r7}
 8007d34:	b085      	sub	sp, #20
 8007d36:	af00      	add	r7, sp, #0
 8007d38:	6078      	str	r0, [r7, #4]
 8007d3a:	687b      	ldr	r3, [r7, #4]
 8007d3c:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 8007d40:	b2db      	uxtb	r3, r3
 8007d42:	2b21      	cmp	r3, #33	; 0x21
 8007d44:	d13e      	bne.n	8007dc4 <UART_Transmit_IT+0x92>
 8007d46:	687b      	ldr	r3, [r7, #4]
 8007d48:	689b      	ldr	r3, [r3, #8]
 8007d4a:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8007d4e:	d114      	bne.n	8007d7a <UART_Transmit_IT+0x48>
 8007d50:	687b      	ldr	r3, [r7, #4]
 8007d52:	691b      	ldr	r3, [r3, #16]
 8007d54:	2b00      	cmp	r3, #0
 8007d56:	d110      	bne.n	8007d7a <UART_Transmit_IT+0x48>
 8007d58:	687b      	ldr	r3, [r7, #4]
 8007d5a:	6a1b      	ldr	r3, [r3, #32]
 8007d5c:	60fb      	str	r3, [r7, #12]
 8007d5e:	68fb      	ldr	r3, [r7, #12]
 8007d60:	881b      	ldrh	r3, [r3, #0]
 8007d62:	461a      	mov	r2, r3
 8007d64:	687b      	ldr	r3, [r7, #4]
 8007d66:	681b      	ldr	r3, [r3, #0]
 8007d68:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8007d6c:	605a      	str	r2, [r3, #4]
 8007d6e:	687b      	ldr	r3, [r7, #4]
 8007d70:	6a1b      	ldr	r3, [r3, #32]
 8007d72:	1c9a      	adds	r2, r3, #2
 8007d74:	687b      	ldr	r3, [r7, #4]
 8007d76:	621a      	str	r2, [r3, #32]
 8007d78:	e008      	b.n	8007d8c <UART_Transmit_IT+0x5a>
 8007d7a:	687b      	ldr	r3, [r7, #4]
 8007d7c:	6a1b      	ldr	r3, [r3, #32]
 8007d7e:	1c59      	adds	r1, r3, #1
 8007d80:	687a      	ldr	r2, [r7, #4]
 8007d82:	6211      	str	r1, [r2, #32]
 8007d84:	781a      	ldrb	r2, [r3, #0]
 8007d86:	687b      	ldr	r3, [r7, #4]
 8007d88:	681b      	ldr	r3, [r3, #0]
 8007d8a:	605a      	str	r2, [r3, #4]
 8007d8c:	687b      	ldr	r3, [r7, #4]
 8007d8e:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 8007d90:	b29b      	uxth	r3, r3
 8007d92:	3b01      	subs	r3, #1
 8007d94:	b29b      	uxth	r3, r3
 8007d96:	687a      	ldr	r2, [r7, #4]
 8007d98:	4619      	mov	r1, r3
 8007d9a:	84d1      	strh	r1, [r2, #38]	; 0x26
 8007d9c:	2b00      	cmp	r3, #0
 8007d9e:	d10f      	bne.n	8007dc0 <UART_Transmit_IT+0x8e>
 8007da0:	687b      	ldr	r3, [r7, #4]
 8007da2:	681b      	ldr	r3, [r3, #0]
 8007da4:	68da      	ldr	r2, [r3, #12]
 8007da6:	687b      	ldr	r3, [r7, #4]
 8007da8:	681b      	ldr	r3, [r3, #0]
 8007daa:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8007dae:	60da      	str	r2, [r3, #12]
 8007db0:	687b      	ldr	r3, [r7, #4]
 8007db2:	681b      	ldr	r3, [r3, #0]
 8007db4:	68da      	ldr	r2, [r3, #12]
 8007db6:	687b      	ldr	r3, [r7, #4]
 8007db8:	681b      	ldr	r3, [r3, #0]
 8007dba:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8007dbe:	60da      	str	r2, [r3, #12]
 8007dc0:	2300      	movs	r3, #0
 8007dc2:	e000      	b.n	8007dc6 <UART_Transmit_IT+0x94>
 8007dc4:	2302      	movs	r3, #2
 8007dc6:	4618      	mov	r0, r3
 8007dc8:	3714      	adds	r7, #20
 8007dca:	46bd      	mov	sp, r7
 8007dcc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007dd0:	4770      	bx	lr

08007dd2 <UART_EndTransmit_IT>:
 8007dd2:	b580      	push	{r7, lr}
 8007dd4:	b082      	sub	sp, #8
 8007dd6:	af00      	add	r7, sp, #0
 8007dd8:	6078      	str	r0, [r7, #4]
 8007dda:	687b      	ldr	r3, [r7, #4]
 8007ddc:	681b      	ldr	r3, [r3, #0]
 8007dde:	68da      	ldr	r2, [r3, #12]
 8007de0:	687b      	ldr	r3, [r7, #4]
 8007de2:	681b      	ldr	r3, [r3, #0]
 8007de4:	f022 0240 	bic.w	r2, r2, #64	; 0x40
 8007de8:	60da      	str	r2, [r3, #12]
 8007dea:	687b      	ldr	r3, [r7, #4]
 8007dec:	2220      	movs	r2, #32
 8007dee:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 8007df2:	6878      	ldr	r0, [r7, #4]
 8007df4:	f7ff fe5a 	bl	8007aac <HAL_UART_TxCpltCallback>
 8007df8:	2300      	movs	r3, #0
 8007dfa:	4618      	mov	r0, r3
 8007dfc:	3708      	adds	r7, #8
 8007dfe:	46bd      	mov	sp, r7
 8007e00:	bd80      	pop	{r7, pc}

08007e02 <UART_Receive_IT>:
 8007e02:	b580      	push	{r7, lr}
 8007e04:	b08c      	sub	sp, #48	; 0x30
 8007e06:	af00      	add	r7, sp, #0
 8007e08:	6078      	str	r0, [r7, #4]
 8007e0a:	687b      	ldr	r3, [r7, #4]
 8007e0c:	f893 303e 	ldrb.w	r3, [r3, #62]	; 0x3e
 8007e10:	b2db      	uxtb	r3, r3
 8007e12:	2b22      	cmp	r3, #34	; 0x22
 8007e14:	f040 80ab 	bne.w	8007f6e <UART_Receive_IT+0x16c>
 8007e18:	687b      	ldr	r3, [r7, #4]
 8007e1a:	689b      	ldr	r3, [r3, #8]
 8007e1c:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8007e20:	d117      	bne.n	8007e52 <UART_Receive_IT+0x50>
 8007e22:	687b      	ldr	r3, [r7, #4]
 8007e24:	691b      	ldr	r3, [r3, #16]
 8007e26:	2b00      	cmp	r3, #0
 8007e28:	d113      	bne.n	8007e52 <UART_Receive_IT+0x50>
 8007e2a:	2300      	movs	r3, #0
 8007e2c:	62fb      	str	r3, [r7, #44]	; 0x2c
 8007e2e:	687b      	ldr	r3, [r7, #4]
 8007e30:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8007e32:	62bb      	str	r3, [r7, #40]	; 0x28
 8007e34:	687b      	ldr	r3, [r7, #4]
 8007e36:	681b      	ldr	r3, [r3, #0]
 8007e38:	685b      	ldr	r3, [r3, #4]
 8007e3a:	b29b      	uxth	r3, r3
 8007e3c:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8007e40:	b29a      	uxth	r2, r3
 8007e42:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8007e44:	801a      	strh	r2, [r3, #0]
 8007e46:	687b      	ldr	r3, [r7, #4]
 8007e48:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8007e4a:	1c9a      	adds	r2, r3, #2
 8007e4c:	687b      	ldr	r3, [r7, #4]
 8007e4e:	629a      	str	r2, [r3, #40]	; 0x28
 8007e50:	e026      	b.n	8007ea0 <UART_Receive_IT+0x9e>
 8007e52:	687b      	ldr	r3, [r7, #4]
 8007e54:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8007e56:	62fb      	str	r3, [r7, #44]	; 0x2c
 8007e58:	2300      	movs	r3, #0
 8007e5a:	62bb      	str	r3, [r7, #40]	; 0x28
 8007e5c:	687b      	ldr	r3, [r7, #4]
 8007e5e:	689b      	ldr	r3, [r3, #8]
 8007e60:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 8007e64:	d007      	beq.n	8007e76 <UART_Receive_IT+0x74>
 8007e66:	687b      	ldr	r3, [r7, #4]
 8007e68:	689b      	ldr	r3, [r3, #8]
 8007e6a:	2b00      	cmp	r3, #0
 8007e6c:	d10a      	bne.n	8007e84 <UART_Receive_IT+0x82>
 8007e6e:	687b      	ldr	r3, [r7, #4]
 8007e70:	691b      	ldr	r3, [r3, #16]
 8007e72:	2b00      	cmp	r3, #0
 8007e74:	d106      	bne.n	8007e84 <UART_Receive_IT+0x82>
 8007e76:	687b      	ldr	r3, [r7, #4]
 8007e78:	681b      	ldr	r3, [r3, #0]
 8007e7a:	685b      	ldr	r3, [r3, #4]
 8007e7c:	b2da      	uxtb	r2, r3
 8007e7e:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8007e80:	701a      	strb	r2, [r3, #0]
 8007e82:	e008      	b.n	8007e96 <UART_Receive_IT+0x94>
 8007e84:	687b      	ldr	r3, [r7, #4]
 8007e86:	681b      	ldr	r3, [r3, #0]
 8007e88:	685b      	ldr	r3, [r3, #4]
 8007e8a:	b2db      	uxtb	r3, r3
 8007e8c:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8007e90:	b2da      	uxtb	r2, r3
 8007e92:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8007e94:	701a      	strb	r2, [r3, #0]
 8007e96:	687b      	ldr	r3, [r7, #4]
 8007e98:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8007e9a:	1c5a      	adds	r2, r3, #1
 8007e9c:	687b      	ldr	r3, [r7, #4]
 8007e9e:	629a      	str	r2, [r3, #40]	; 0x28
 8007ea0:	687b      	ldr	r3, [r7, #4]
 8007ea2:	8ddb      	ldrh	r3, [r3, #46]	; 0x2e
 8007ea4:	b29b      	uxth	r3, r3
 8007ea6:	3b01      	subs	r3, #1
 8007ea8:	b29b      	uxth	r3, r3
 8007eaa:	687a      	ldr	r2, [r7, #4]
 8007eac:	4619      	mov	r1, r3
 8007eae:	85d1      	strh	r1, [r2, #46]	; 0x2e
 8007eb0:	2b00      	cmp	r3, #0
 8007eb2:	d15a      	bne.n	8007f6a <UART_Receive_IT+0x168>
 8007eb4:	687b      	ldr	r3, [r7, #4]
 8007eb6:	681b      	ldr	r3, [r3, #0]
 8007eb8:	68da      	ldr	r2, [r3, #12]
 8007eba:	687b      	ldr	r3, [r7, #4]
 8007ebc:	681b      	ldr	r3, [r3, #0]
 8007ebe:	f022 0220 	bic.w	r2, r2, #32
 8007ec2:	60da      	str	r2, [r3, #12]
 8007ec4:	687b      	ldr	r3, [r7, #4]
 8007ec6:	681b      	ldr	r3, [r3, #0]
 8007ec8:	68da      	ldr	r2, [r3, #12]
 8007eca:	687b      	ldr	r3, [r7, #4]
 8007ecc:	681b      	ldr	r3, [r3, #0]
 8007ece:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8007ed2:	60da      	str	r2, [r3, #12]
 8007ed4:	687b      	ldr	r3, [r7, #4]
 8007ed6:	681b      	ldr	r3, [r3, #0]
 8007ed8:	695a      	ldr	r2, [r3, #20]
 8007eda:	687b      	ldr	r3, [r7, #4]
 8007edc:	681b      	ldr	r3, [r3, #0]
 8007ede:	f022 0201 	bic.w	r2, r2, #1
 8007ee2:	615a      	str	r2, [r3, #20]
 8007ee4:	687b      	ldr	r3, [r7, #4]
 8007ee6:	2220      	movs	r2, #32
 8007ee8:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
 8007eec:	687b      	ldr	r3, [r7, #4]
 8007eee:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8007ef0:	2b01      	cmp	r3, #1
 8007ef2:	d135      	bne.n	8007f60 <UART_Receive_IT+0x15e>
 8007ef4:	687b      	ldr	r3, [r7, #4]
 8007ef6:	2200      	movs	r2, #0
 8007ef8:	631a      	str	r2, [r3, #48]	; 0x30
 8007efa:	687b      	ldr	r3, [r7, #4]
 8007efc:	681b      	ldr	r3, [r3, #0]
 8007efe:	330c      	adds	r3, #12
 8007f00:	617b      	str	r3, [r7, #20]
 8007f02:	697b      	ldr	r3, [r7, #20]
 8007f04:	e853 3f00 	ldrex	r3, [r3]
 8007f08:	613b      	str	r3, [r7, #16]
 8007f0a:	693b      	ldr	r3, [r7, #16]
 8007f0c:	f023 0310 	bic.w	r3, r3, #16
 8007f10:	627b      	str	r3, [r7, #36]	; 0x24
 8007f12:	687b      	ldr	r3, [r7, #4]
 8007f14:	681b      	ldr	r3, [r3, #0]
 8007f16:	330c      	adds	r3, #12
 8007f18:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8007f1a:	623a      	str	r2, [r7, #32]
 8007f1c:	61fb      	str	r3, [r7, #28]
 8007f1e:	69f9      	ldr	r1, [r7, #28]
 8007f20:	6a3a      	ldr	r2, [r7, #32]
 8007f22:	e841 2300 	strex	r3, r2, [r1]
 8007f26:	61bb      	str	r3, [r7, #24]
 8007f28:	69bb      	ldr	r3, [r7, #24]
 8007f2a:	2b00      	cmp	r3, #0
 8007f2c:	d1e5      	bne.n	8007efa <UART_Receive_IT+0xf8>
 8007f2e:	687b      	ldr	r3, [r7, #4]
 8007f30:	681b      	ldr	r3, [r3, #0]
 8007f32:	681b      	ldr	r3, [r3, #0]
 8007f34:	f003 0310 	and.w	r3, r3, #16
 8007f38:	2b10      	cmp	r3, #16
 8007f3a:	d10a      	bne.n	8007f52 <UART_Receive_IT+0x150>
 8007f3c:	2300      	movs	r3, #0
 8007f3e:	60fb      	str	r3, [r7, #12]
 8007f40:	687b      	ldr	r3, [r7, #4]
 8007f42:	681b      	ldr	r3, [r3, #0]
 8007f44:	681b      	ldr	r3, [r3, #0]
 8007f46:	60fb      	str	r3, [r7, #12]
 8007f48:	687b      	ldr	r3, [r7, #4]
 8007f4a:	681b      	ldr	r3, [r3, #0]
 8007f4c:	685b      	ldr	r3, [r3, #4]
 8007f4e:	60fb      	str	r3, [r7, #12]
 8007f50:	68fb      	ldr	r3, [r7, #12]
 8007f52:	687b      	ldr	r3, [r7, #4]
 8007f54:	8d9b      	ldrh	r3, [r3, #44]	; 0x2c
 8007f56:	4619      	mov	r1, r3
 8007f58:	6878      	ldr	r0, [r7, #4]
 8007f5a:	f7ff fdbb 	bl	8007ad4 <HAL_UARTEx_RxEventCallback>
 8007f5e:	e002      	b.n	8007f66 <UART_Receive_IT+0x164>
 8007f60:	6878      	ldr	r0, [r7, #4]
 8007f62:	f7fc f973 	bl	800424c <HAL_UART_RxCpltCallback>
 8007f66:	2300      	movs	r3, #0
 8007f68:	e002      	b.n	8007f70 <UART_Receive_IT+0x16e>
 8007f6a:	2300      	movs	r3, #0
 8007f6c:	e000      	b.n	8007f70 <UART_Receive_IT+0x16e>
 8007f6e:	2302      	movs	r3, #2
 8007f70:	4618      	mov	r0, r3
 8007f72:	3730      	adds	r7, #48	; 0x30
 8007f74:	46bd      	mov	sp, r7
 8007f76:	bd80      	pop	{r7, pc}

08007f78 <UART_SetConfig>:
 8007f78:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 8007f7c:	b0c0      	sub	sp, #256	; 0x100
 8007f7e:	af00      	add	r7, sp, #0
 8007f80:	f8c7 00f4 	str.w	r0, [r7, #244]	; 0xf4
 8007f84:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8007f88:	681b      	ldr	r3, [r3, #0]
 8007f8a:	691b      	ldr	r3, [r3, #16]
 8007f8c:	f423 5040 	bic.w	r0, r3, #12288	; 0x3000
 8007f90:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8007f94:	68d9      	ldr	r1, [r3, #12]
 8007f96:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8007f9a:	681a      	ldr	r2, [r3, #0]
 8007f9c:	ea40 0301 	orr.w	r3, r0, r1
 8007fa0:	6113      	str	r3, [r2, #16]
 8007fa2:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8007fa6:	689a      	ldr	r2, [r3, #8]
 8007fa8:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8007fac:	691b      	ldr	r3, [r3, #16]
 8007fae:	431a      	orrs	r2, r3
 8007fb0:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8007fb4:	695b      	ldr	r3, [r3, #20]
 8007fb6:	431a      	orrs	r2, r3
 8007fb8:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8007fbc:	69db      	ldr	r3, [r3, #28]
 8007fbe:	4313      	orrs	r3, r2
 8007fc0:	f8c7 30f8 	str.w	r3, [r7, #248]	; 0xf8
 8007fc4:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8007fc8:	681b      	ldr	r3, [r3, #0]
 8007fca:	68db      	ldr	r3, [r3, #12]
 8007fcc:	f423 4116 	bic.w	r1, r3, #38400	; 0x9600
 8007fd0:	f021 010c 	bic.w	r1, r1, #12
 8007fd4:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8007fd8:	681a      	ldr	r2, [r3, #0]
 8007fda:	f8d7 30f8 	ldr.w	r3, [r7, #248]	; 0xf8
 8007fde:	430b      	orrs	r3, r1
 8007fe0:	60d3      	str	r3, [r2, #12]
 8007fe2:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8007fe6:	681b      	ldr	r3, [r3, #0]
 8007fe8:	695b      	ldr	r3, [r3, #20]
 8007fea:	f423 7040 	bic.w	r0, r3, #768	; 0x300
 8007fee:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8007ff2:	6999      	ldr	r1, [r3, #24]
 8007ff4:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8007ff8:	681a      	ldr	r2, [r3, #0]
 8007ffa:	ea40 0301 	orr.w	r3, r0, r1
 8007ffe:	6153      	str	r3, [r2, #20]
 8008000:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8008004:	681a      	ldr	r2, [r3, #0]
 8008006:	4b8f      	ldr	r3, [pc, #572]	; (8008244 <UART_SetConfig+0x2cc>)
 8008008:	429a      	cmp	r2, r3
 800800a:	d005      	beq.n	8008018 <UART_SetConfig+0xa0>
 800800c:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8008010:	681a      	ldr	r2, [r3, #0]
 8008012:	4b8d      	ldr	r3, [pc, #564]	; (8008248 <UART_SetConfig+0x2d0>)
 8008014:	429a      	cmp	r2, r3
 8008016:	d104      	bne.n	8008022 <UART_SetConfig+0xaa>
 8008018:	f7fd fd1c 	bl	8005a54 <HAL_RCC_GetPCLK2Freq>
 800801c:	f8c7 00fc 	str.w	r0, [r7, #252]	; 0xfc
 8008020:	e003      	b.n	800802a <UART_SetConfig+0xb2>
 8008022:	f7fd fd03 	bl	8005a2c <HAL_RCC_GetPCLK1Freq>
 8008026:	f8c7 00fc 	str.w	r0, [r7, #252]	; 0xfc
 800802a:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800802e:	69db      	ldr	r3, [r3, #28]
 8008030:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 8008034:	f040 810c 	bne.w	8008250 <UART_SetConfig+0x2d8>
 8008038:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 800803c:	2200      	movs	r2, #0
 800803e:	f8c7 30e8 	str.w	r3, [r7, #232]	; 0xe8
 8008042:	f8c7 20ec 	str.w	r2, [r7, #236]	; 0xec
 8008046:	e9d7 453a 	ldrd	r4, r5, [r7, #232]	; 0xe8
 800804a:	4622      	mov	r2, r4
 800804c:	462b      	mov	r3, r5
 800804e:	1891      	adds	r1, r2, r2
 8008050:	65b9      	str	r1, [r7, #88]	; 0x58
 8008052:	415b      	adcs	r3, r3
 8008054:	65fb      	str	r3, [r7, #92]	; 0x5c
 8008056:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	; 0x58
 800805a:	4621      	mov	r1, r4
 800805c:	eb12 0801 	adds.w	r8, r2, r1
 8008060:	4629      	mov	r1, r5
 8008062:	eb43 0901 	adc.w	r9, r3, r1
 8008066:	f04f 0200 	mov.w	r2, #0
 800806a:	f04f 0300 	mov.w	r3, #0
 800806e:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 8008072:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 8008076:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 800807a:	4690      	mov	r8, r2
 800807c:	4699      	mov	r9, r3
 800807e:	4623      	mov	r3, r4
 8008080:	eb18 0303 	adds.w	r3, r8, r3
 8008084:	f8c7 30e0 	str.w	r3, [r7, #224]	; 0xe0
 8008088:	462b      	mov	r3, r5
 800808a:	eb49 0303 	adc.w	r3, r9, r3
 800808e:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
 8008092:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8008096:	685b      	ldr	r3, [r3, #4]
 8008098:	2200      	movs	r2, #0
 800809a:	f8c7 30d8 	str.w	r3, [r7, #216]	; 0xd8
 800809e:	f8c7 20dc 	str.w	r2, [r7, #220]	; 0xdc
 80080a2:	e9d7 1236 	ldrd	r1, r2, [r7, #216]	; 0xd8
 80080a6:	460b      	mov	r3, r1
 80080a8:	18db      	adds	r3, r3, r3
 80080aa:	653b      	str	r3, [r7, #80]	; 0x50
 80080ac:	4613      	mov	r3, r2
 80080ae:	eb42 0303 	adc.w	r3, r2, r3
 80080b2:	657b      	str	r3, [r7, #84]	; 0x54
 80080b4:	e9d7 2314 	ldrd	r2, r3, [r7, #80]	; 0x50
 80080b8:	e9d7 0138 	ldrd	r0, r1, [r7, #224]	; 0xe0
 80080bc:	f7f8 fdec 	bl	8000c98 <__aeabi_uldivmod>
 80080c0:	4602      	mov	r2, r0
 80080c2:	460b      	mov	r3, r1
 80080c4:	4b61      	ldr	r3, [pc, #388]	; (800824c <UART_SetConfig+0x2d4>)
 80080c6:	fba3 2302 	umull	r2, r3, r3, r2
 80080ca:	095b      	lsrs	r3, r3, #5
 80080cc:	011c      	lsls	r4, r3, #4
 80080ce:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 80080d2:	2200      	movs	r2, #0
 80080d4:	f8c7 30d0 	str.w	r3, [r7, #208]	; 0xd0
 80080d8:	f8c7 20d4 	str.w	r2, [r7, #212]	; 0xd4
 80080dc:	e9d7 8934 	ldrd	r8, r9, [r7, #208]	; 0xd0
 80080e0:	4642      	mov	r2, r8
 80080e2:	464b      	mov	r3, r9
 80080e4:	1891      	adds	r1, r2, r2
 80080e6:	64b9      	str	r1, [r7, #72]	; 0x48
 80080e8:	415b      	adcs	r3, r3
 80080ea:	64fb      	str	r3, [r7, #76]	; 0x4c
 80080ec:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	; 0x48
 80080f0:	4641      	mov	r1, r8
 80080f2:	eb12 0a01 	adds.w	sl, r2, r1
 80080f6:	4649      	mov	r1, r9
 80080f8:	eb43 0b01 	adc.w	fp, r3, r1
 80080fc:	f04f 0200 	mov.w	r2, #0
 8008100:	f04f 0300 	mov.w	r3, #0
 8008104:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 8008108:	ea43 735a 	orr.w	r3, r3, sl, lsr #29
 800810c:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 8008110:	4692      	mov	sl, r2
 8008112:	469b      	mov	fp, r3
 8008114:	4643      	mov	r3, r8
 8008116:	eb1a 0303 	adds.w	r3, sl, r3
 800811a:	f8c7 30c8 	str.w	r3, [r7, #200]	; 0xc8
 800811e:	464b      	mov	r3, r9
 8008120:	eb4b 0303 	adc.w	r3, fp, r3
 8008124:	f8c7 30cc 	str.w	r3, [r7, #204]	; 0xcc
 8008128:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800812c:	685b      	ldr	r3, [r3, #4]
 800812e:	2200      	movs	r2, #0
 8008130:	f8c7 30c0 	str.w	r3, [r7, #192]	; 0xc0
 8008134:	f8c7 20c4 	str.w	r2, [r7, #196]	; 0xc4
 8008138:	e9d7 1230 	ldrd	r1, r2, [r7, #192]	; 0xc0
 800813c:	460b      	mov	r3, r1
 800813e:	18db      	adds	r3, r3, r3
 8008140:	643b      	str	r3, [r7, #64]	; 0x40
 8008142:	4613      	mov	r3, r2
 8008144:	eb42 0303 	adc.w	r3, r2, r3
 8008148:	647b      	str	r3, [r7, #68]	; 0x44
 800814a:	e9d7 2310 	ldrd	r2, r3, [r7, #64]	; 0x40
 800814e:	e9d7 0132 	ldrd	r0, r1, [r7, #200]	; 0xc8
 8008152:	f7f8 fda1 	bl	8000c98 <__aeabi_uldivmod>
 8008156:	4602      	mov	r2, r0
 8008158:	460b      	mov	r3, r1
 800815a:	4611      	mov	r1, r2
 800815c:	4b3b      	ldr	r3, [pc, #236]	; (800824c <UART_SetConfig+0x2d4>)
 800815e:	fba3 2301 	umull	r2, r3, r3, r1
 8008162:	095b      	lsrs	r3, r3, #5
 8008164:	2264      	movs	r2, #100	; 0x64
 8008166:	fb02 f303 	mul.w	r3, r2, r3
 800816a:	1acb      	subs	r3, r1, r3
 800816c:	00db      	lsls	r3, r3, #3
 800816e:	f103 0232 	add.w	r2, r3, #50	; 0x32
 8008172:	4b36      	ldr	r3, [pc, #216]	; (800824c <UART_SetConfig+0x2d4>)
 8008174:	fba3 2302 	umull	r2, r3, r3, r2
 8008178:	095b      	lsrs	r3, r3, #5
 800817a:	005b      	lsls	r3, r3, #1
 800817c:	f403 73f8 	and.w	r3, r3, #496	; 0x1f0
 8008180:	441c      	add	r4, r3
 8008182:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 8008186:	2200      	movs	r2, #0
 8008188:	f8c7 30b8 	str.w	r3, [r7, #184]	; 0xb8
 800818c:	f8c7 20bc 	str.w	r2, [r7, #188]	; 0xbc
 8008190:	e9d7 892e 	ldrd	r8, r9, [r7, #184]	; 0xb8
 8008194:	4642      	mov	r2, r8
 8008196:	464b      	mov	r3, r9
 8008198:	1891      	adds	r1, r2, r2
 800819a:	63b9      	str	r1, [r7, #56]	; 0x38
 800819c:	415b      	adcs	r3, r3
 800819e:	63fb      	str	r3, [r7, #60]	; 0x3c
 80081a0:	e9d7 230e 	ldrd	r2, r3, [r7, #56]	; 0x38
 80081a4:	4641      	mov	r1, r8
 80081a6:	1851      	adds	r1, r2, r1
 80081a8:	6339      	str	r1, [r7, #48]	; 0x30
 80081aa:	4649      	mov	r1, r9
 80081ac:	414b      	adcs	r3, r1
 80081ae:	637b      	str	r3, [r7, #52]	; 0x34
 80081b0:	f04f 0200 	mov.w	r2, #0
 80081b4:	f04f 0300 	mov.w	r3, #0
 80081b8:	e9d7 ab0c 	ldrd	sl, fp, [r7, #48]	; 0x30
 80081bc:	4659      	mov	r1, fp
 80081be:	00cb      	lsls	r3, r1, #3
 80081c0:	4651      	mov	r1, sl
 80081c2:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 80081c6:	4651      	mov	r1, sl
 80081c8:	00ca      	lsls	r2, r1, #3
 80081ca:	4610      	mov	r0, r2
 80081cc:	4619      	mov	r1, r3
 80081ce:	4603      	mov	r3, r0
 80081d0:	4642      	mov	r2, r8
 80081d2:	189b      	adds	r3, r3, r2
 80081d4:	f8c7 30b0 	str.w	r3, [r7, #176]	; 0xb0
 80081d8:	464b      	mov	r3, r9
 80081da:	460a      	mov	r2, r1
 80081dc:	eb42 0303 	adc.w	r3, r2, r3
 80081e0:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
 80081e4:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 80081e8:	685b      	ldr	r3, [r3, #4]
 80081ea:	2200      	movs	r2, #0
 80081ec:	f8c7 30a8 	str.w	r3, [r7, #168]	; 0xa8
 80081f0:	f8c7 20ac 	str.w	r2, [r7, #172]	; 0xac
 80081f4:	e9d7 122a 	ldrd	r1, r2, [r7, #168]	; 0xa8
 80081f8:	460b      	mov	r3, r1
 80081fa:	18db      	adds	r3, r3, r3
 80081fc:	62bb      	str	r3, [r7, #40]	; 0x28
 80081fe:	4613      	mov	r3, r2
 8008200:	eb42 0303 	adc.w	r3, r2, r3
 8008204:	62fb      	str	r3, [r7, #44]	; 0x2c
 8008206:	e9d7 230a 	ldrd	r2, r3, [r7, #40]	; 0x28
 800820a:	e9d7 012c 	ldrd	r0, r1, [r7, #176]	; 0xb0
 800820e:	f7f8 fd43 	bl	8000c98 <__aeabi_uldivmod>
 8008212:	4602      	mov	r2, r0
 8008214:	460b      	mov	r3, r1
 8008216:	4b0d      	ldr	r3, [pc, #52]	; (800824c <UART_SetConfig+0x2d4>)
 8008218:	fba3 1302 	umull	r1, r3, r3, r2
 800821c:	095b      	lsrs	r3, r3, #5
 800821e:	2164      	movs	r1, #100	; 0x64
 8008220:	fb01 f303 	mul.w	r3, r1, r3
 8008224:	1ad3      	subs	r3, r2, r3
 8008226:	00db      	lsls	r3, r3, #3
 8008228:	3332      	adds	r3, #50	; 0x32
 800822a:	4a08      	ldr	r2, [pc, #32]	; (800824c <UART_SetConfig+0x2d4>)
 800822c:	fba2 2303 	umull	r2, r3, r2, r3
 8008230:	095b      	lsrs	r3, r3, #5
 8008232:	f003 0207 	and.w	r2, r3, #7
 8008236:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800823a:	681b      	ldr	r3, [r3, #0]
 800823c:	4422      	add	r2, r4
 800823e:	609a      	str	r2, [r3, #8]
 8008240:	e106      	b.n	8008450 <UART_SetConfig+0x4d8>
 8008242:	bf00      	nop
 8008244:	40011000 	.word	0x40011000
 8008248:	40011400 	.word	0x40011400
 800824c:	51eb851f 	.word	0x51eb851f
 8008250:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 8008254:	2200      	movs	r2, #0
 8008256:	f8c7 30a0 	str.w	r3, [r7, #160]	; 0xa0
 800825a:	f8c7 20a4 	str.w	r2, [r7, #164]	; 0xa4
 800825e:	e9d7 8928 	ldrd	r8, r9, [r7, #160]	; 0xa0
 8008262:	4642      	mov	r2, r8
 8008264:	464b      	mov	r3, r9
 8008266:	1891      	adds	r1, r2, r2
 8008268:	6239      	str	r1, [r7, #32]
 800826a:	415b      	adcs	r3, r3
 800826c:	627b      	str	r3, [r7, #36]	; 0x24
 800826e:	e9d7 2308 	ldrd	r2, r3, [r7, #32]
 8008272:	4641      	mov	r1, r8
 8008274:	1854      	adds	r4, r2, r1
 8008276:	4649      	mov	r1, r9
 8008278:	eb43 0501 	adc.w	r5, r3, r1
 800827c:	f04f 0200 	mov.w	r2, #0
 8008280:	f04f 0300 	mov.w	r3, #0
 8008284:	00eb      	lsls	r3, r5, #3
 8008286:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 800828a:	00e2      	lsls	r2, r4, #3
 800828c:	4614      	mov	r4, r2
 800828e:	461d      	mov	r5, r3
 8008290:	4643      	mov	r3, r8
 8008292:	18e3      	adds	r3, r4, r3
 8008294:	f8c7 3098 	str.w	r3, [r7, #152]	; 0x98
 8008298:	464b      	mov	r3, r9
 800829a:	eb45 0303 	adc.w	r3, r5, r3
 800829e:	f8c7 309c 	str.w	r3, [r7, #156]	; 0x9c
 80082a2:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 80082a6:	685b      	ldr	r3, [r3, #4]
 80082a8:	2200      	movs	r2, #0
 80082aa:	f8c7 3090 	str.w	r3, [r7, #144]	; 0x90
 80082ae:	f8c7 2094 	str.w	r2, [r7, #148]	; 0x94
 80082b2:	f04f 0200 	mov.w	r2, #0
 80082b6:	f04f 0300 	mov.w	r3, #0
 80082ba:	e9d7 4524 	ldrd	r4, r5, [r7, #144]	; 0x90
 80082be:	4629      	mov	r1, r5
 80082c0:	008b      	lsls	r3, r1, #2
 80082c2:	4621      	mov	r1, r4
 80082c4:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 80082c8:	4621      	mov	r1, r4
 80082ca:	008a      	lsls	r2, r1, #2
 80082cc:	e9d7 0126 	ldrd	r0, r1, [r7, #152]	; 0x98
 80082d0:	f7f8 fce2 	bl	8000c98 <__aeabi_uldivmod>
 80082d4:	4602      	mov	r2, r0
 80082d6:	460b      	mov	r3, r1
 80082d8:	4b60      	ldr	r3, [pc, #384]	; (800845c <UART_SetConfig+0x4e4>)
 80082da:	fba3 2302 	umull	r2, r3, r3, r2
 80082de:	095b      	lsrs	r3, r3, #5
 80082e0:	011c      	lsls	r4, r3, #4
 80082e2:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 80082e6:	2200      	movs	r2, #0
 80082e8:	f8c7 3088 	str.w	r3, [r7, #136]	; 0x88
 80082ec:	f8c7 208c 	str.w	r2, [r7, #140]	; 0x8c
 80082f0:	e9d7 8922 	ldrd	r8, r9, [r7, #136]	; 0x88
 80082f4:	4642      	mov	r2, r8
 80082f6:	464b      	mov	r3, r9
 80082f8:	1891      	adds	r1, r2, r2
 80082fa:	61b9      	str	r1, [r7, #24]
 80082fc:	415b      	adcs	r3, r3
 80082fe:	61fb      	str	r3, [r7, #28]
 8008300:	e9d7 2306 	ldrd	r2, r3, [r7, #24]
 8008304:	4641      	mov	r1, r8
 8008306:	1851      	adds	r1, r2, r1
 8008308:	6139      	str	r1, [r7, #16]
 800830a:	4649      	mov	r1, r9
 800830c:	414b      	adcs	r3, r1
 800830e:	617b      	str	r3, [r7, #20]
 8008310:	f04f 0200 	mov.w	r2, #0
 8008314:	f04f 0300 	mov.w	r3, #0
 8008318:	e9d7 ab04 	ldrd	sl, fp, [r7, #16]
 800831c:	4659      	mov	r1, fp
 800831e:	00cb      	lsls	r3, r1, #3
 8008320:	4651      	mov	r1, sl
 8008322:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 8008326:	4651      	mov	r1, sl
 8008328:	00ca      	lsls	r2, r1, #3
 800832a:	4610      	mov	r0, r2
 800832c:	4619      	mov	r1, r3
 800832e:	4603      	mov	r3, r0
 8008330:	4642      	mov	r2, r8
 8008332:	189b      	adds	r3, r3, r2
 8008334:	f8c7 3080 	str.w	r3, [r7, #128]	; 0x80
 8008338:	464b      	mov	r3, r9
 800833a:	460a      	mov	r2, r1
 800833c:	eb42 0303 	adc.w	r3, r2, r3
 8008340:	f8c7 3084 	str.w	r3, [r7, #132]	; 0x84
 8008344:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 8008348:	685b      	ldr	r3, [r3, #4]
 800834a:	2200      	movs	r2, #0
 800834c:	67bb      	str	r3, [r7, #120]	; 0x78
 800834e:	67fa      	str	r2, [r7, #124]	; 0x7c
 8008350:	f04f 0200 	mov.w	r2, #0
 8008354:	f04f 0300 	mov.w	r3, #0
 8008358:	e9d7 891e 	ldrd	r8, r9, [r7, #120]	; 0x78
 800835c:	4649      	mov	r1, r9
 800835e:	008b      	lsls	r3, r1, #2
 8008360:	4641      	mov	r1, r8
 8008362:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 8008366:	4641      	mov	r1, r8
 8008368:	008a      	lsls	r2, r1, #2
 800836a:	e9d7 0120 	ldrd	r0, r1, [r7, #128]	; 0x80
 800836e:	f7f8 fc93 	bl	8000c98 <__aeabi_uldivmod>
 8008372:	4602      	mov	r2, r0
 8008374:	460b      	mov	r3, r1
 8008376:	4611      	mov	r1, r2
 8008378:	4b38      	ldr	r3, [pc, #224]	; (800845c <UART_SetConfig+0x4e4>)
 800837a:	fba3 2301 	umull	r2, r3, r3, r1
 800837e:	095b      	lsrs	r3, r3, #5
 8008380:	2264      	movs	r2, #100	; 0x64
 8008382:	fb02 f303 	mul.w	r3, r2, r3
 8008386:	1acb      	subs	r3, r1, r3
 8008388:	011b      	lsls	r3, r3, #4
 800838a:	3332      	adds	r3, #50	; 0x32
 800838c:	4a33      	ldr	r2, [pc, #204]	; (800845c <UART_SetConfig+0x4e4>)
 800838e:	fba2 2303 	umull	r2, r3, r2, r3
 8008392:	095b      	lsrs	r3, r3, #5
 8008394:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 8008398:	441c      	add	r4, r3
 800839a:	f8d7 30fc 	ldr.w	r3, [r7, #252]	; 0xfc
 800839e:	2200      	movs	r2, #0
 80083a0:	673b      	str	r3, [r7, #112]	; 0x70
 80083a2:	677a      	str	r2, [r7, #116]	; 0x74
 80083a4:	e9d7 891c 	ldrd	r8, r9, [r7, #112]	; 0x70
 80083a8:	4642      	mov	r2, r8
 80083aa:	464b      	mov	r3, r9
 80083ac:	1891      	adds	r1, r2, r2
 80083ae:	60b9      	str	r1, [r7, #8]
 80083b0:	415b      	adcs	r3, r3
 80083b2:	60fb      	str	r3, [r7, #12]
 80083b4:	e9d7 2302 	ldrd	r2, r3, [r7, #8]
 80083b8:	4641      	mov	r1, r8
 80083ba:	1851      	adds	r1, r2, r1
 80083bc:	6039      	str	r1, [r7, #0]
 80083be:	4649      	mov	r1, r9
 80083c0:	414b      	adcs	r3, r1
 80083c2:	607b      	str	r3, [r7, #4]
 80083c4:	f04f 0200 	mov.w	r2, #0
 80083c8:	f04f 0300 	mov.w	r3, #0
 80083cc:	e9d7 ab00 	ldrd	sl, fp, [r7]
 80083d0:	4659      	mov	r1, fp
 80083d2:	00cb      	lsls	r3, r1, #3
 80083d4:	4651      	mov	r1, sl
 80083d6:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 80083da:	4651      	mov	r1, sl
 80083dc:	00ca      	lsls	r2, r1, #3
 80083de:	4610      	mov	r0, r2
 80083e0:	4619      	mov	r1, r3
 80083e2:	4603      	mov	r3, r0
 80083e4:	4642      	mov	r2, r8
 80083e6:	189b      	adds	r3, r3, r2
 80083e8:	66bb      	str	r3, [r7, #104]	; 0x68
 80083ea:	464b      	mov	r3, r9
 80083ec:	460a      	mov	r2, r1
 80083ee:	eb42 0303 	adc.w	r3, r2, r3
 80083f2:	66fb      	str	r3, [r7, #108]	; 0x6c
 80083f4:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 80083f8:	685b      	ldr	r3, [r3, #4]
 80083fa:	2200      	movs	r2, #0
 80083fc:	663b      	str	r3, [r7, #96]	; 0x60
 80083fe:	667a      	str	r2, [r7, #100]	; 0x64
 8008400:	f04f 0200 	mov.w	r2, #0
 8008404:	f04f 0300 	mov.w	r3, #0
 8008408:	e9d7 8918 	ldrd	r8, r9, [r7, #96]	; 0x60
 800840c:	4649      	mov	r1, r9
 800840e:	008b      	lsls	r3, r1, #2
 8008410:	4641      	mov	r1, r8
 8008412:	ea43 7391 	orr.w	r3, r3, r1, lsr #30
 8008416:	4641      	mov	r1, r8
 8008418:	008a      	lsls	r2, r1, #2
 800841a:	e9d7 011a 	ldrd	r0, r1, [r7, #104]	; 0x68
 800841e:	f7f8 fc3b 	bl	8000c98 <__aeabi_uldivmod>
 8008422:	4602      	mov	r2, r0
 8008424:	460b      	mov	r3, r1
 8008426:	4b0d      	ldr	r3, [pc, #52]	; (800845c <UART_SetConfig+0x4e4>)
 8008428:	fba3 1302 	umull	r1, r3, r3, r2
 800842c:	095b      	lsrs	r3, r3, #5
 800842e:	2164      	movs	r1, #100	; 0x64
 8008430:	fb01 f303 	mul.w	r3, r1, r3
 8008434:	1ad3      	subs	r3, r2, r3
 8008436:	011b      	lsls	r3, r3, #4
 8008438:	3332      	adds	r3, #50	; 0x32
 800843a:	4a08      	ldr	r2, [pc, #32]	; (800845c <UART_SetConfig+0x4e4>)
 800843c:	fba2 2303 	umull	r2, r3, r2, r3
 8008440:	095b      	lsrs	r3, r3, #5
 8008442:	f003 020f 	and.w	r2, r3, #15
 8008446:	f8d7 30f4 	ldr.w	r3, [r7, #244]	; 0xf4
 800844a:	681b      	ldr	r3, [r3, #0]
 800844c:	4422      	add	r2, r4
 800844e:	609a      	str	r2, [r3, #8]
 8008450:	bf00      	nop
 8008452:	f507 7780 	add.w	r7, r7, #256	; 0x100
 8008456:	46bd      	mov	sp, r7
 8008458:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 800845c:	51eb851f 	.word	0x51eb851f

08008460 <atoi>:
 8008460:	220a      	movs	r2, #10
 8008462:	2100      	movs	r1, #0
 8008464:	f000 befc 	b.w	8009260 <strtol>

08008468 <sulp>:
 8008468:	b570      	push	{r4, r5, r6, lr}
 800846a:	4604      	mov	r4, r0
 800846c:	460d      	mov	r5, r1
 800846e:	ec45 4b10 	vmov	d0, r4, r5
 8008472:	4616      	mov	r6, r2
 8008474:	f003 fdb8 	bl	800bfe8 <__ulp>
 8008478:	ec51 0b10 	vmov	r0, r1, d0
 800847c:	b17e      	cbz	r6, 800849e <sulp+0x36>
 800847e:	f3c5 530a 	ubfx	r3, r5, #20, #11
 8008482:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
 8008486:	2b00      	cmp	r3, #0
 8008488:	dd09      	ble.n	800849e <sulp+0x36>
 800848a:	051b      	lsls	r3, r3, #20
 800848c:	f103 557f 	add.w	r5, r3, #1069547520	; 0x3fc00000
 8008490:	2400      	movs	r4, #0
 8008492:	f505 1540 	add.w	r5, r5, #3145728	; 0x300000
 8008496:	4622      	mov	r2, r4
 8008498:	462b      	mov	r3, r5
 800849a:	f7f8 f8b5 	bl	8000608 <__aeabi_dmul>
 800849e:	bd70      	pop	{r4, r5, r6, pc}

080084a0 <_strtod_l>:
 80084a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80084a4:	ed2d 8b02 	vpush	{d8}
 80084a8:	b09b      	sub	sp, #108	; 0x6c
 80084aa:	4604      	mov	r4, r0
 80084ac:	9213      	str	r2, [sp, #76]	; 0x4c
 80084ae:	2200      	movs	r2, #0
 80084b0:	9216      	str	r2, [sp, #88]	; 0x58
 80084b2:	460d      	mov	r5, r1
 80084b4:	f04f 0800 	mov.w	r8, #0
 80084b8:	f04f 0900 	mov.w	r9, #0
 80084bc:	460a      	mov	r2, r1
 80084be:	9215      	str	r2, [sp, #84]	; 0x54
 80084c0:	7811      	ldrb	r1, [r2, #0]
 80084c2:	292b      	cmp	r1, #43	; 0x2b
 80084c4:	d04c      	beq.n	8008560 <_strtod_l+0xc0>
 80084c6:	d83a      	bhi.n	800853e <_strtod_l+0x9e>
 80084c8:	290d      	cmp	r1, #13
 80084ca:	d834      	bhi.n	8008536 <_strtod_l+0x96>
 80084cc:	2908      	cmp	r1, #8
 80084ce:	d834      	bhi.n	800853a <_strtod_l+0x9a>
 80084d0:	2900      	cmp	r1, #0
 80084d2:	d03d      	beq.n	8008550 <_strtod_l+0xb0>
 80084d4:	2200      	movs	r2, #0
 80084d6:	920a      	str	r2, [sp, #40]	; 0x28
 80084d8:	9e15      	ldr	r6, [sp, #84]	; 0x54
 80084da:	7832      	ldrb	r2, [r6, #0]
 80084dc:	2a30      	cmp	r2, #48	; 0x30
 80084de:	f040 80b4 	bne.w	800864a <_strtod_l+0x1aa>
 80084e2:	7872      	ldrb	r2, [r6, #1]
 80084e4:	f002 02df 	and.w	r2, r2, #223	; 0xdf
 80084e8:	2a58      	cmp	r2, #88	; 0x58
 80084ea:	d170      	bne.n	80085ce <_strtod_l+0x12e>
 80084ec:	9302      	str	r3, [sp, #8]
 80084ee:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80084f0:	9301      	str	r3, [sp, #4]
 80084f2:	ab16      	add	r3, sp, #88	; 0x58
 80084f4:	9300      	str	r3, [sp, #0]
 80084f6:	4a8e      	ldr	r2, [pc, #568]	; (8008730 <_strtod_l+0x290>)
 80084f8:	ab17      	add	r3, sp, #92	; 0x5c
 80084fa:	a915      	add	r1, sp, #84	; 0x54
 80084fc:	4620      	mov	r0, r4
 80084fe:	f002 fe51 	bl	800b1a4 <__gethex>
 8008502:	f010 070f 	ands.w	r7, r0, #15
 8008506:	4605      	mov	r5, r0
 8008508:	d005      	beq.n	8008516 <_strtod_l+0x76>
 800850a:	2f06      	cmp	r7, #6
 800850c:	d12a      	bne.n	8008564 <_strtod_l+0xc4>
 800850e:	3601      	adds	r6, #1
 8008510:	2300      	movs	r3, #0
 8008512:	9615      	str	r6, [sp, #84]	; 0x54
 8008514:	930a      	str	r3, [sp, #40]	; 0x28
 8008516:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8008518:	2b00      	cmp	r3, #0
 800851a:	f040 857f 	bne.w	800901c <_strtod_l+0xb7c>
 800851e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8008520:	b1db      	cbz	r3, 800855a <_strtod_l+0xba>
 8008522:	4642      	mov	r2, r8
 8008524:	f109 4300 	add.w	r3, r9, #2147483648	; 0x80000000
 8008528:	ec43 2b10 	vmov	d0, r2, r3
 800852c:	b01b      	add	sp, #108	; 0x6c
 800852e:	ecbd 8b02 	vpop	{d8}
 8008532:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8008536:	2920      	cmp	r1, #32
 8008538:	d1cc      	bne.n	80084d4 <_strtod_l+0x34>
 800853a:	3201      	adds	r2, #1
 800853c:	e7bf      	b.n	80084be <_strtod_l+0x1e>
 800853e:	292d      	cmp	r1, #45	; 0x2d
 8008540:	d1c8      	bne.n	80084d4 <_strtod_l+0x34>
 8008542:	2101      	movs	r1, #1
 8008544:	910a      	str	r1, [sp, #40]	; 0x28
 8008546:	1c51      	adds	r1, r2, #1
 8008548:	9115      	str	r1, [sp, #84]	; 0x54
 800854a:	7852      	ldrb	r2, [r2, #1]
 800854c:	2a00      	cmp	r2, #0
 800854e:	d1c3      	bne.n	80084d8 <_strtod_l+0x38>
 8008550:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8008552:	9515      	str	r5, [sp, #84]	; 0x54
 8008554:	2b00      	cmp	r3, #0
 8008556:	f040 855f 	bne.w	8009018 <_strtod_l+0xb78>
 800855a:	4642      	mov	r2, r8
 800855c:	464b      	mov	r3, r9
 800855e:	e7e3      	b.n	8008528 <_strtod_l+0x88>
 8008560:	2100      	movs	r1, #0
 8008562:	e7ef      	b.n	8008544 <_strtod_l+0xa4>
 8008564:	9a16      	ldr	r2, [sp, #88]	; 0x58
 8008566:	b13a      	cbz	r2, 8008578 <_strtod_l+0xd8>
 8008568:	2135      	movs	r1, #53	; 0x35
 800856a:	a818      	add	r0, sp, #96	; 0x60
 800856c:	f003 fe39 	bl	800c1e2 <__copybits>
 8008570:	9916      	ldr	r1, [sp, #88]	; 0x58
 8008572:	4620      	mov	r0, r4
 8008574:	f003 fa0c 	bl	800b990 <_Bfree>
 8008578:	3f01      	subs	r7, #1
 800857a:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 800857c:	2f04      	cmp	r7, #4
 800857e:	d806      	bhi.n	800858e <_strtod_l+0xee>
 8008580:	e8df f007 	tbb	[pc, r7]
 8008584:	201d0314 	.word	0x201d0314
 8008588:	14          	.byte	0x14
 8008589:	00          	.byte	0x00
 800858a:	e9dd 8918 	ldrd	r8, r9, [sp, #96]	; 0x60
 800858e:	05e9      	lsls	r1, r5, #23
 8008590:	bf48      	it	mi
 8008592:	f049 4900 	orrmi.w	r9, r9, #2147483648	; 0x80000000
 8008596:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
 800859a:	0d1b      	lsrs	r3, r3, #20
 800859c:	051b      	lsls	r3, r3, #20
 800859e:	2b00      	cmp	r3, #0
 80085a0:	d1b9      	bne.n	8008516 <_strtod_l+0x76>
 80085a2:	f001 fe83 	bl	800a2ac <__errno>
 80085a6:	2322      	movs	r3, #34	; 0x22
 80085a8:	6003      	str	r3, [r0, #0]
 80085aa:	e7b4      	b.n	8008516 <_strtod_l+0x76>
 80085ac:	e9dd 8318 	ldrd	r8, r3, [sp, #96]	; 0x60
 80085b0:	f202 4233 	addw	r2, r2, #1075	; 0x433
 80085b4:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
 80085b8:	ea43 5902 	orr.w	r9, r3, r2, lsl #20
 80085bc:	e7e7      	b.n	800858e <_strtod_l+0xee>
 80085be:	f8df 9178 	ldr.w	r9, [pc, #376]	; 8008738 <_strtod_l+0x298>
 80085c2:	e7e4      	b.n	800858e <_strtod_l+0xee>
 80085c4:	f06f 4900 	mvn.w	r9, #2147483648	; 0x80000000
 80085c8:	f04f 38ff 	mov.w	r8, #4294967295
 80085cc:	e7df      	b.n	800858e <_strtod_l+0xee>
 80085ce:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80085d0:	1c5a      	adds	r2, r3, #1
 80085d2:	9215      	str	r2, [sp, #84]	; 0x54
 80085d4:	785b      	ldrb	r3, [r3, #1]
 80085d6:	2b30      	cmp	r3, #48	; 0x30
 80085d8:	d0f9      	beq.n	80085ce <_strtod_l+0x12e>
 80085da:	2b00      	cmp	r3, #0
 80085dc:	d09b      	beq.n	8008516 <_strtod_l+0x76>
 80085de:	2301      	movs	r3, #1
 80085e0:	f04f 0a00 	mov.w	sl, #0
 80085e4:	9304      	str	r3, [sp, #16]
 80085e6:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80085e8:	930b      	str	r3, [sp, #44]	; 0x2c
 80085ea:	f8cd a024 	str.w	sl, [sp, #36]	; 0x24
 80085ee:	46d3      	mov	fp, sl
 80085f0:	220a      	movs	r2, #10
 80085f2:	9815      	ldr	r0, [sp, #84]	; 0x54
 80085f4:	7806      	ldrb	r6, [r0, #0]
 80085f6:	f1a6 0330 	sub.w	r3, r6, #48	; 0x30
 80085fa:	b2d9      	uxtb	r1, r3
 80085fc:	2909      	cmp	r1, #9
 80085fe:	d926      	bls.n	800864e <_strtod_l+0x1ae>
 8008600:	494c      	ldr	r1, [pc, #304]	; (8008734 <_strtod_l+0x294>)
 8008602:	2201      	movs	r2, #1
 8008604:	f001 fde3 	bl	800a1ce <strncmp>
 8008608:	2800      	cmp	r0, #0
 800860a:	d030      	beq.n	800866e <_strtod_l+0x1ce>
 800860c:	2000      	movs	r0, #0
 800860e:	4632      	mov	r2, r6
 8008610:	9005      	str	r0, [sp, #20]
 8008612:	465e      	mov	r6, fp
 8008614:	4603      	mov	r3, r0
 8008616:	2a65      	cmp	r2, #101	; 0x65
 8008618:	d001      	beq.n	800861e <_strtod_l+0x17e>
 800861a:	2a45      	cmp	r2, #69	; 0x45
 800861c:	d113      	bne.n	8008646 <_strtod_l+0x1a6>
 800861e:	b91e      	cbnz	r6, 8008628 <_strtod_l+0x188>
 8008620:	9a04      	ldr	r2, [sp, #16]
 8008622:	4302      	orrs	r2, r0
 8008624:	d094      	beq.n	8008550 <_strtod_l+0xb0>
 8008626:	2600      	movs	r6, #0
 8008628:	9d15      	ldr	r5, [sp, #84]	; 0x54
 800862a:	1c6a      	adds	r2, r5, #1
 800862c:	9215      	str	r2, [sp, #84]	; 0x54
 800862e:	786a      	ldrb	r2, [r5, #1]
 8008630:	2a2b      	cmp	r2, #43	; 0x2b
 8008632:	d074      	beq.n	800871e <_strtod_l+0x27e>
 8008634:	2a2d      	cmp	r2, #45	; 0x2d
 8008636:	d078      	beq.n	800872a <_strtod_l+0x28a>
 8008638:	f04f 0c00 	mov.w	ip, #0
 800863c:	f1a2 0130 	sub.w	r1, r2, #48	; 0x30
 8008640:	2909      	cmp	r1, #9
 8008642:	d97f      	bls.n	8008744 <_strtod_l+0x2a4>
 8008644:	9515      	str	r5, [sp, #84]	; 0x54
 8008646:	2700      	movs	r7, #0
 8008648:	e09e      	b.n	8008788 <_strtod_l+0x2e8>
 800864a:	2300      	movs	r3, #0
 800864c:	e7c8      	b.n	80085e0 <_strtod_l+0x140>
 800864e:	f1bb 0f08 	cmp.w	fp, #8
 8008652:	bfd8      	it	le
 8008654:	9909      	ldrle	r1, [sp, #36]	; 0x24
 8008656:	f100 0001 	add.w	r0, r0, #1
 800865a:	bfda      	itte	le
 800865c:	fb02 3301 	mlale	r3, r2, r1, r3
 8008660:	9309      	strle	r3, [sp, #36]	; 0x24
 8008662:	fb02 3a0a 	mlagt	sl, r2, sl, r3
 8008666:	f10b 0b01 	add.w	fp, fp, #1
 800866a:	9015      	str	r0, [sp, #84]	; 0x54
 800866c:	e7c1      	b.n	80085f2 <_strtod_l+0x152>
 800866e:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8008670:	1c5a      	adds	r2, r3, #1
 8008672:	9215      	str	r2, [sp, #84]	; 0x54
 8008674:	785a      	ldrb	r2, [r3, #1]
 8008676:	f1bb 0f00 	cmp.w	fp, #0
 800867a:	d037      	beq.n	80086ec <_strtod_l+0x24c>
 800867c:	9005      	str	r0, [sp, #20]
 800867e:	465e      	mov	r6, fp
 8008680:	f1a2 0330 	sub.w	r3, r2, #48	; 0x30
 8008684:	2b09      	cmp	r3, #9
 8008686:	d912      	bls.n	80086ae <_strtod_l+0x20e>
 8008688:	2301      	movs	r3, #1
 800868a:	e7c4      	b.n	8008616 <_strtod_l+0x176>
 800868c:	9b15      	ldr	r3, [sp, #84]	; 0x54
 800868e:	1c5a      	adds	r2, r3, #1
 8008690:	9215      	str	r2, [sp, #84]	; 0x54
 8008692:	785a      	ldrb	r2, [r3, #1]
 8008694:	3001      	adds	r0, #1
 8008696:	2a30      	cmp	r2, #48	; 0x30
 8008698:	d0f8      	beq.n	800868c <_strtod_l+0x1ec>
 800869a:	f1a2 0331 	sub.w	r3, r2, #49	; 0x31
 800869e:	2b08      	cmp	r3, #8
 80086a0:	f200 84c1 	bhi.w	8009026 <_strtod_l+0xb86>
 80086a4:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80086a6:	9005      	str	r0, [sp, #20]
 80086a8:	2000      	movs	r0, #0
 80086aa:	930b      	str	r3, [sp, #44]	; 0x2c
 80086ac:	4606      	mov	r6, r0
 80086ae:	3a30      	subs	r2, #48	; 0x30
 80086b0:	f100 0301 	add.w	r3, r0, #1
 80086b4:	d014      	beq.n	80086e0 <_strtod_l+0x240>
 80086b6:	9905      	ldr	r1, [sp, #20]
 80086b8:	4419      	add	r1, r3
 80086ba:	9105      	str	r1, [sp, #20]
 80086bc:	4633      	mov	r3, r6
 80086be:	eb00 0c06 	add.w	ip, r0, r6
 80086c2:	210a      	movs	r1, #10
 80086c4:	4563      	cmp	r3, ip
 80086c6:	d113      	bne.n	80086f0 <_strtod_l+0x250>
 80086c8:	1833      	adds	r3, r6, r0
 80086ca:	2b08      	cmp	r3, #8
 80086cc:	f106 0601 	add.w	r6, r6, #1
 80086d0:	4406      	add	r6, r0
 80086d2:	dc1a      	bgt.n	800870a <_strtod_l+0x26a>
 80086d4:	9909      	ldr	r1, [sp, #36]	; 0x24
 80086d6:	230a      	movs	r3, #10
 80086d8:	fb03 2301 	mla	r3, r3, r1, r2
 80086dc:	9309      	str	r3, [sp, #36]	; 0x24
 80086de:	2300      	movs	r3, #0
 80086e0:	9a15      	ldr	r2, [sp, #84]	; 0x54
 80086e2:	1c51      	adds	r1, r2, #1
 80086e4:	9115      	str	r1, [sp, #84]	; 0x54
 80086e6:	7852      	ldrb	r2, [r2, #1]
 80086e8:	4618      	mov	r0, r3
 80086ea:	e7c9      	b.n	8008680 <_strtod_l+0x1e0>
 80086ec:	4658      	mov	r0, fp
 80086ee:	e7d2      	b.n	8008696 <_strtod_l+0x1f6>
 80086f0:	2b08      	cmp	r3, #8
 80086f2:	f103 0301 	add.w	r3, r3, #1
 80086f6:	dc03      	bgt.n	8008700 <_strtod_l+0x260>
 80086f8:	9f09      	ldr	r7, [sp, #36]	; 0x24
 80086fa:	434f      	muls	r7, r1
 80086fc:	9709      	str	r7, [sp, #36]	; 0x24
 80086fe:	e7e1      	b.n	80086c4 <_strtod_l+0x224>
 8008700:	2b10      	cmp	r3, #16
 8008702:	bfd8      	it	le
 8008704:	fb01 fa0a 	mulle.w	sl, r1, sl
 8008708:	e7dc      	b.n	80086c4 <_strtod_l+0x224>
 800870a:	2e10      	cmp	r6, #16
 800870c:	bfdc      	itt	le
 800870e:	230a      	movle	r3, #10
 8008710:	fb03 2a0a 	mlale	sl, r3, sl, r2
 8008714:	e7e3      	b.n	80086de <_strtod_l+0x23e>
 8008716:	2300      	movs	r3, #0
 8008718:	9305      	str	r3, [sp, #20]
 800871a:	2301      	movs	r3, #1
 800871c:	e780      	b.n	8008620 <_strtod_l+0x180>
 800871e:	f04f 0c00 	mov.w	ip, #0
 8008722:	1caa      	adds	r2, r5, #2
 8008724:	9215      	str	r2, [sp, #84]	; 0x54
 8008726:	78aa      	ldrb	r2, [r5, #2]
 8008728:	e788      	b.n	800863c <_strtod_l+0x19c>
 800872a:	f04f 0c01 	mov.w	ip, #1
 800872e:	e7f8      	b.n	8008722 <_strtod_l+0x282>
 8008730:	0800d368 	.word	0x0800d368
 8008734:	0800d364 	.word	0x0800d364
 8008738:	7ff00000 	.word	0x7ff00000
 800873c:	9a15      	ldr	r2, [sp, #84]	; 0x54
 800873e:	1c51      	adds	r1, r2, #1
 8008740:	9115      	str	r1, [sp, #84]	; 0x54
 8008742:	7852      	ldrb	r2, [r2, #1]
 8008744:	2a30      	cmp	r2, #48	; 0x30
 8008746:	d0f9      	beq.n	800873c <_strtod_l+0x29c>
 8008748:	f1a2 0131 	sub.w	r1, r2, #49	; 0x31
 800874c:	2908      	cmp	r1, #8
 800874e:	f63f af7a 	bhi.w	8008646 <_strtod_l+0x1a6>
 8008752:	3a30      	subs	r2, #48	; 0x30
 8008754:	9208      	str	r2, [sp, #32]
 8008756:	9a15      	ldr	r2, [sp, #84]	; 0x54
 8008758:	920c      	str	r2, [sp, #48]	; 0x30
 800875a:	9a15      	ldr	r2, [sp, #84]	; 0x54
 800875c:	1c57      	adds	r7, r2, #1
 800875e:	9715      	str	r7, [sp, #84]	; 0x54
 8008760:	7852      	ldrb	r2, [r2, #1]
 8008762:	f1a2 0e30 	sub.w	lr, r2, #48	; 0x30
 8008766:	f1be 0f09 	cmp.w	lr, #9
 800876a:	d938      	bls.n	80087de <_strtod_l+0x33e>
 800876c:	990c      	ldr	r1, [sp, #48]	; 0x30
 800876e:	1a7f      	subs	r7, r7, r1
 8008770:	2f08      	cmp	r7, #8
 8008772:	f644 671f 	movw	r7, #19999	; 0x4e1f
 8008776:	dc03      	bgt.n	8008780 <_strtod_l+0x2e0>
 8008778:	9908      	ldr	r1, [sp, #32]
 800877a:	428f      	cmp	r7, r1
 800877c:	bfa8      	it	ge
 800877e:	460f      	movge	r7, r1
 8008780:	f1bc 0f00 	cmp.w	ip, #0
 8008784:	d000      	beq.n	8008788 <_strtod_l+0x2e8>
 8008786:	427f      	negs	r7, r7
 8008788:	2e00      	cmp	r6, #0
 800878a:	d14f      	bne.n	800882c <_strtod_l+0x38c>
 800878c:	9904      	ldr	r1, [sp, #16]
 800878e:	4301      	orrs	r1, r0
 8008790:	f47f aec1 	bne.w	8008516 <_strtod_l+0x76>
 8008794:	2b00      	cmp	r3, #0
 8008796:	f47f aedb 	bne.w	8008550 <_strtod_l+0xb0>
 800879a:	2a69      	cmp	r2, #105	; 0x69
 800879c:	d029      	beq.n	80087f2 <_strtod_l+0x352>
 800879e:	dc26      	bgt.n	80087ee <_strtod_l+0x34e>
 80087a0:	2a49      	cmp	r2, #73	; 0x49
 80087a2:	d026      	beq.n	80087f2 <_strtod_l+0x352>
 80087a4:	2a4e      	cmp	r2, #78	; 0x4e
 80087a6:	f47f aed3 	bne.w	8008550 <_strtod_l+0xb0>
 80087aa:	499b      	ldr	r1, [pc, #620]	; (8008a18 <_strtod_l+0x578>)
 80087ac:	a815      	add	r0, sp, #84	; 0x54
 80087ae:	f002 ff39 	bl	800b624 <__match>
 80087b2:	2800      	cmp	r0, #0
 80087b4:	f43f aecc 	beq.w	8008550 <_strtod_l+0xb0>
 80087b8:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80087ba:	781b      	ldrb	r3, [r3, #0]
 80087bc:	2b28      	cmp	r3, #40	; 0x28
 80087be:	d12f      	bne.n	8008820 <_strtod_l+0x380>
 80087c0:	4996      	ldr	r1, [pc, #600]	; (8008a1c <_strtod_l+0x57c>)
 80087c2:	aa18      	add	r2, sp, #96	; 0x60
 80087c4:	a815      	add	r0, sp, #84	; 0x54
 80087c6:	f002 ff41 	bl	800b64c <__hexnan>
 80087ca:	2805      	cmp	r0, #5
 80087cc:	d128      	bne.n	8008820 <_strtod_l+0x380>
 80087ce:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80087d0:	f8dd 8060 	ldr.w	r8, [sp, #96]	; 0x60
 80087d4:	f043 49ff 	orr.w	r9, r3, #2139095040	; 0x7f800000
 80087d8:	f449 09e0 	orr.w	r9, r9, #7340032	; 0x700000
 80087dc:	e69b      	b.n	8008516 <_strtod_l+0x76>
 80087de:	9f08      	ldr	r7, [sp, #32]
 80087e0:	210a      	movs	r1, #10
 80087e2:	fb01 2107 	mla	r1, r1, r7, r2
 80087e6:	f1a1 0230 	sub.w	r2, r1, #48	; 0x30
 80087ea:	9208      	str	r2, [sp, #32]
 80087ec:	e7b5      	b.n	800875a <_strtod_l+0x2ba>
 80087ee:	2a6e      	cmp	r2, #110	; 0x6e
 80087f0:	e7d9      	b.n	80087a6 <_strtod_l+0x306>
 80087f2:	498b      	ldr	r1, [pc, #556]	; (8008a20 <_strtod_l+0x580>)
 80087f4:	a815      	add	r0, sp, #84	; 0x54
 80087f6:	f002 ff15 	bl	800b624 <__match>
 80087fa:	2800      	cmp	r0, #0
 80087fc:	f43f aea8 	beq.w	8008550 <_strtod_l+0xb0>
 8008800:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8008802:	4988      	ldr	r1, [pc, #544]	; (8008a24 <_strtod_l+0x584>)
 8008804:	3b01      	subs	r3, #1
 8008806:	a815      	add	r0, sp, #84	; 0x54
 8008808:	9315      	str	r3, [sp, #84]	; 0x54
 800880a:	f002 ff0b 	bl	800b624 <__match>
 800880e:	b910      	cbnz	r0, 8008816 <_strtod_l+0x376>
 8008810:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8008812:	3301      	adds	r3, #1
 8008814:	9315      	str	r3, [sp, #84]	; 0x54
 8008816:	f8df 921c 	ldr.w	r9, [pc, #540]	; 8008a34 <_strtod_l+0x594>
 800881a:	f04f 0800 	mov.w	r8, #0
 800881e:	e67a      	b.n	8008516 <_strtod_l+0x76>
 8008820:	4881      	ldr	r0, [pc, #516]	; (8008a28 <_strtod_l+0x588>)
 8008822:	f001 fd81 	bl	800a328 <nan>
 8008826:	ec59 8b10 	vmov	r8, r9, d0
 800882a:	e674      	b.n	8008516 <_strtod_l+0x76>
 800882c:	9b05      	ldr	r3, [sp, #20]
 800882e:	9809      	ldr	r0, [sp, #36]	; 0x24
 8008830:	1afb      	subs	r3, r7, r3
 8008832:	f1bb 0f00 	cmp.w	fp, #0
 8008836:	bf08      	it	eq
 8008838:	46b3      	moveq	fp, r6
 800883a:	2e10      	cmp	r6, #16
 800883c:	9308      	str	r3, [sp, #32]
 800883e:	4635      	mov	r5, r6
 8008840:	bfa8      	it	ge
 8008842:	2510      	movge	r5, #16
 8008844:	f7f7 fe66 	bl	8000514 <__aeabi_ui2d>
 8008848:	2e09      	cmp	r6, #9
 800884a:	4680      	mov	r8, r0
 800884c:	4689      	mov	r9, r1
 800884e:	dd13      	ble.n	8008878 <_strtod_l+0x3d8>
 8008850:	4b76      	ldr	r3, [pc, #472]	; (8008a2c <_strtod_l+0x58c>)
 8008852:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8008856:	e953 2312 	ldrd	r2, r3, [r3, #-72]	; 0x48
 800885a:	f7f7 fed5 	bl	8000608 <__aeabi_dmul>
 800885e:	4680      	mov	r8, r0
 8008860:	4650      	mov	r0, sl
 8008862:	4689      	mov	r9, r1
 8008864:	f7f7 fe56 	bl	8000514 <__aeabi_ui2d>
 8008868:	4602      	mov	r2, r0
 800886a:	460b      	mov	r3, r1
 800886c:	4640      	mov	r0, r8
 800886e:	4649      	mov	r1, r9
 8008870:	f7f7 fd14 	bl	800029c <__adddf3>
 8008874:	4680      	mov	r8, r0
 8008876:	4689      	mov	r9, r1
 8008878:	2e0f      	cmp	r6, #15
 800887a:	dc38      	bgt.n	80088ee <_strtod_l+0x44e>
 800887c:	9b08      	ldr	r3, [sp, #32]
 800887e:	2b00      	cmp	r3, #0
 8008880:	f43f ae49 	beq.w	8008516 <_strtod_l+0x76>
 8008884:	dd24      	ble.n	80088d0 <_strtod_l+0x430>
 8008886:	2b16      	cmp	r3, #22
 8008888:	dc0b      	bgt.n	80088a2 <_strtod_l+0x402>
 800888a:	4968      	ldr	r1, [pc, #416]	; (8008a2c <_strtod_l+0x58c>)
 800888c:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 8008890:	e9d1 0100 	ldrd	r0, r1, [r1]
 8008894:	4642      	mov	r2, r8
 8008896:	464b      	mov	r3, r9
 8008898:	f7f7 feb6 	bl	8000608 <__aeabi_dmul>
 800889c:	4680      	mov	r8, r0
 800889e:	4689      	mov	r9, r1
 80088a0:	e639      	b.n	8008516 <_strtod_l+0x76>
 80088a2:	9a08      	ldr	r2, [sp, #32]
 80088a4:	f1c6 0325 	rsb	r3, r6, #37	; 0x25
 80088a8:	4293      	cmp	r3, r2
 80088aa:	db20      	blt.n	80088ee <_strtod_l+0x44e>
 80088ac:	4c5f      	ldr	r4, [pc, #380]	; (8008a2c <_strtod_l+0x58c>)
 80088ae:	f1c6 060f 	rsb	r6, r6, #15
 80088b2:	eb04 01c6 	add.w	r1, r4, r6, lsl #3
 80088b6:	4642      	mov	r2, r8
 80088b8:	464b      	mov	r3, r9
 80088ba:	e9d1 0100 	ldrd	r0, r1, [r1]
 80088be:	f7f7 fea3 	bl	8000608 <__aeabi_dmul>
 80088c2:	9b08      	ldr	r3, [sp, #32]
 80088c4:	1b9e      	subs	r6, r3, r6
 80088c6:	eb04 04c6 	add.w	r4, r4, r6, lsl #3
 80088ca:	e9d4 2300 	ldrd	r2, r3, [r4]
 80088ce:	e7e3      	b.n	8008898 <_strtod_l+0x3f8>
 80088d0:	9b08      	ldr	r3, [sp, #32]
 80088d2:	3316      	adds	r3, #22
 80088d4:	db0b      	blt.n	80088ee <_strtod_l+0x44e>
 80088d6:	9b05      	ldr	r3, [sp, #20]
 80088d8:	1bdf      	subs	r7, r3, r7
 80088da:	4b54      	ldr	r3, [pc, #336]	; (8008a2c <_strtod_l+0x58c>)
 80088dc:	eb03 07c7 	add.w	r7, r3, r7, lsl #3
 80088e0:	e9d7 2300 	ldrd	r2, r3, [r7]
 80088e4:	4640      	mov	r0, r8
 80088e6:	4649      	mov	r1, r9
 80088e8:	f7f7 ffb8 	bl	800085c <__aeabi_ddiv>
 80088ec:	e7d6      	b.n	800889c <_strtod_l+0x3fc>
 80088ee:	9b08      	ldr	r3, [sp, #32]
 80088f0:	1b75      	subs	r5, r6, r5
 80088f2:	441d      	add	r5, r3
 80088f4:	2d00      	cmp	r5, #0
 80088f6:	dd70      	ble.n	80089da <_strtod_l+0x53a>
 80088f8:	f015 030f 	ands.w	r3, r5, #15
 80088fc:	d00a      	beq.n	8008914 <_strtod_l+0x474>
 80088fe:	494b      	ldr	r1, [pc, #300]	; (8008a2c <_strtod_l+0x58c>)
 8008900:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 8008904:	4642      	mov	r2, r8
 8008906:	464b      	mov	r3, r9
 8008908:	e9d1 0100 	ldrd	r0, r1, [r1]
 800890c:	f7f7 fe7c 	bl	8000608 <__aeabi_dmul>
 8008910:	4680      	mov	r8, r0
 8008912:	4689      	mov	r9, r1
 8008914:	f035 050f 	bics.w	r5, r5, #15
 8008918:	d04d      	beq.n	80089b6 <_strtod_l+0x516>
 800891a:	f5b5 7f9a 	cmp.w	r5, #308	; 0x134
 800891e:	dd22      	ble.n	8008966 <_strtod_l+0x4c6>
 8008920:	2500      	movs	r5, #0
 8008922:	46ab      	mov	fp, r5
 8008924:	9509      	str	r5, [sp, #36]	; 0x24
 8008926:	9505      	str	r5, [sp, #20]
 8008928:	2322      	movs	r3, #34	; 0x22
 800892a:	f8df 9108 	ldr.w	r9, [pc, #264]	; 8008a34 <_strtod_l+0x594>
 800892e:	6023      	str	r3, [r4, #0]
 8008930:	f04f 0800 	mov.w	r8, #0
 8008934:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8008936:	2b00      	cmp	r3, #0
 8008938:	f43f aded 	beq.w	8008516 <_strtod_l+0x76>
 800893c:	9916      	ldr	r1, [sp, #88]	; 0x58
 800893e:	4620      	mov	r0, r4
 8008940:	f003 f826 	bl	800b990 <_Bfree>
 8008944:	9905      	ldr	r1, [sp, #20]
 8008946:	4620      	mov	r0, r4
 8008948:	f003 f822 	bl	800b990 <_Bfree>
 800894c:	4659      	mov	r1, fp
 800894e:	4620      	mov	r0, r4
 8008950:	f003 f81e 	bl	800b990 <_Bfree>
 8008954:	9909      	ldr	r1, [sp, #36]	; 0x24
 8008956:	4620      	mov	r0, r4
 8008958:	f003 f81a 	bl	800b990 <_Bfree>
 800895c:	4629      	mov	r1, r5
 800895e:	4620      	mov	r0, r4
 8008960:	f003 f816 	bl	800b990 <_Bfree>
 8008964:	e5d7      	b.n	8008516 <_strtod_l+0x76>
 8008966:	4b32      	ldr	r3, [pc, #200]	; (8008a30 <_strtod_l+0x590>)
 8008968:	9304      	str	r3, [sp, #16]
 800896a:	2300      	movs	r3, #0
 800896c:	112d      	asrs	r5, r5, #4
 800896e:	4640      	mov	r0, r8
 8008970:	4649      	mov	r1, r9
 8008972:	469a      	mov	sl, r3
 8008974:	2d01      	cmp	r5, #1
 8008976:	dc21      	bgt.n	80089bc <_strtod_l+0x51c>
 8008978:	b10b      	cbz	r3, 800897e <_strtod_l+0x4de>
 800897a:	4680      	mov	r8, r0
 800897c:	4689      	mov	r9, r1
 800897e:	492c      	ldr	r1, [pc, #176]	; (8008a30 <_strtod_l+0x590>)
 8008980:	f1a9 7954 	sub.w	r9, r9, #55574528	; 0x3500000
 8008984:	eb01 01ca 	add.w	r1, r1, sl, lsl #3
 8008988:	4642      	mov	r2, r8
 800898a:	464b      	mov	r3, r9
 800898c:	e9d1 0100 	ldrd	r0, r1, [r1]
 8008990:	f7f7 fe3a 	bl	8000608 <__aeabi_dmul>
 8008994:	4b27      	ldr	r3, [pc, #156]	; (8008a34 <_strtod_l+0x594>)
 8008996:	460a      	mov	r2, r1
 8008998:	400b      	ands	r3, r1
 800899a:	4927      	ldr	r1, [pc, #156]	; (8008a38 <_strtod_l+0x598>)
 800899c:	428b      	cmp	r3, r1
 800899e:	4680      	mov	r8, r0
 80089a0:	d8be      	bhi.n	8008920 <_strtod_l+0x480>
 80089a2:	f5a1 1180 	sub.w	r1, r1, #1048576	; 0x100000
 80089a6:	428b      	cmp	r3, r1
 80089a8:	bf86      	itte	hi
 80089aa:	f8df 9090 	ldrhi.w	r9, [pc, #144]	; 8008a3c <_strtod_l+0x59c>
 80089ae:	f04f 38ff 	movhi.w	r8, #4294967295
 80089b2:	f102 7954 	addls.w	r9, r2, #55574528	; 0x3500000
 80089b6:	2300      	movs	r3, #0
 80089b8:	9304      	str	r3, [sp, #16]
 80089ba:	e07b      	b.n	8008ab4 <_strtod_l+0x614>
 80089bc:	07ea      	lsls	r2, r5, #31
 80089be:	d505      	bpl.n	80089cc <_strtod_l+0x52c>
 80089c0:	9b04      	ldr	r3, [sp, #16]
 80089c2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80089c6:	f7f7 fe1f 	bl	8000608 <__aeabi_dmul>
 80089ca:	2301      	movs	r3, #1
 80089cc:	9a04      	ldr	r2, [sp, #16]
 80089ce:	3208      	adds	r2, #8
 80089d0:	f10a 0a01 	add.w	sl, sl, #1
 80089d4:	106d      	asrs	r5, r5, #1
 80089d6:	9204      	str	r2, [sp, #16]
 80089d8:	e7cc      	b.n	8008974 <_strtod_l+0x4d4>
 80089da:	d0ec      	beq.n	80089b6 <_strtod_l+0x516>
 80089dc:	426d      	negs	r5, r5
 80089de:	f015 020f 	ands.w	r2, r5, #15
 80089e2:	d00a      	beq.n	80089fa <_strtod_l+0x55a>
 80089e4:	4b11      	ldr	r3, [pc, #68]	; (8008a2c <_strtod_l+0x58c>)
 80089e6:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 80089ea:	4640      	mov	r0, r8
 80089ec:	4649      	mov	r1, r9
 80089ee:	e9d3 2300 	ldrd	r2, r3, [r3]
 80089f2:	f7f7 ff33 	bl	800085c <__aeabi_ddiv>
 80089f6:	4680      	mov	r8, r0
 80089f8:	4689      	mov	r9, r1
 80089fa:	112d      	asrs	r5, r5, #4
 80089fc:	d0db      	beq.n	80089b6 <_strtod_l+0x516>
 80089fe:	2d1f      	cmp	r5, #31
 8008a00:	dd1e      	ble.n	8008a40 <_strtod_l+0x5a0>
 8008a02:	2500      	movs	r5, #0
 8008a04:	46ab      	mov	fp, r5
 8008a06:	9509      	str	r5, [sp, #36]	; 0x24
 8008a08:	9505      	str	r5, [sp, #20]
 8008a0a:	2322      	movs	r3, #34	; 0x22
 8008a0c:	f04f 0800 	mov.w	r8, #0
 8008a10:	f04f 0900 	mov.w	r9, #0
 8008a14:	6023      	str	r3, [r4, #0]
 8008a16:	e78d      	b.n	8008934 <_strtod_l+0x494>
 8008a18:	0800d4c6 	.word	0x0800d4c6
 8008a1c:	0800d37c 	.word	0x0800d37c
 8008a20:	0800d4be 	.word	0x0800d4be
 8008a24:	0800d4fd 	.word	0x0800d4fd
 8008a28:	0800d788 	.word	0x0800d788
 8008a2c:	0800d668 	.word	0x0800d668
 8008a30:	0800d640 	.word	0x0800d640
 8008a34:	7ff00000 	.word	0x7ff00000
 8008a38:	7ca00000 	.word	0x7ca00000
 8008a3c:	7fefffff 	.word	0x7fefffff
 8008a40:	f015 0310 	ands.w	r3, r5, #16
 8008a44:	bf18      	it	ne
 8008a46:	236a      	movne	r3, #106	; 0x6a
 8008a48:	f8df a3a0 	ldr.w	sl, [pc, #928]	; 8008dec <_strtod_l+0x94c>
 8008a4c:	9304      	str	r3, [sp, #16]
 8008a4e:	4640      	mov	r0, r8
 8008a50:	4649      	mov	r1, r9
 8008a52:	2300      	movs	r3, #0
 8008a54:	07ea      	lsls	r2, r5, #31
 8008a56:	d504      	bpl.n	8008a62 <_strtod_l+0x5c2>
 8008a58:	e9da 2300 	ldrd	r2, r3, [sl]
 8008a5c:	f7f7 fdd4 	bl	8000608 <__aeabi_dmul>
 8008a60:	2301      	movs	r3, #1
 8008a62:	106d      	asrs	r5, r5, #1
 8008a64:	f10a 0a08 	add.w	sl, sl, #8
 8008a68:	d1f4      	bne.n	8008a54 <_strtod_l+0x5b4>
 8008a6a:	b10b      	cbz	r3, 8008a70 <_strtod_l+0x5d0>
 8008a6c:	4680      	mov	r8, r0
 8008a6e:	4689      	mov	r9, r1
 8008a70:	9b04      	ldr	r3, [sp, #16]
 8008a72:	b1bb      	cbz	r3, 8008aa4 <_strtod_l+0x604>
 8008a74:	f3c9 520a 	ubfx	r2, r9, #20, #11
 8008a78:	f1c2 036b 	rsb	r3, r2, #107	; 0x6b
 8008a7c:	2b00      	cmp	r3, #0
 8008a7e:	4649      	mov	r1, r9
 8008a80:	dd10      	ble.n	8008aa4 <_strtod_l+0x604>
 8008a82:	2b1f      	cmp	r3, #31
 8008a84:	f340 811e 	ble.w	8008cc4 <_strtod_l+0x824>
 8008a88:	2b34      	cmp	r3, #52	; 0x34
 8008a8a:	bfde      	ittt	le
 8008a8c:	f04f 33ff 	movle.w	r3, #4294967295
 8008a90:	f1c2 024b 	rsble	r2, r2, #75	; 0x4b
 8008a94:	4093      	lslle	r3, r2
 8008a96:	f04f 0800 	mov.w	r8, #0
 8008a9a:	bfcc      	ite	gt
 8008a9c:	f04f 795c 	movgt.w	r9, #57671680	; 0x3700000
 8008aa0:	ea03 0901 	andle.w	r9, r3, r1
 8008aa4:	2200      	movs	r2, #0
 8008aa6:	2300      	movs	r3, #0
 8008aa8:	4640      	mov	r0, r8
 8008aaa:	4649      	mov	r1, r9
 8008aac:	f7f8 f814 	bl	8000ad8 <__aeabi_dcmpeq>
 8008ab0:	2800      	cmp	r0, #0
 8008ab2:	d1a6      	bne.n	8008a02 <_strtod_l+0x562>
 8008ab4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8008ab6:	9300      	str	r3, [sp, #0]
 8008ab8:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8008aba:	4633      	mov	r3, r6
 8008abc:	465a      	mov	r2, fp
 8008abe:	4620      	mov	r0, r4
 8008ac0:	f002 ffce 	bl	800ba60 <__s2b>
 8008ac4:	9009      	str	r0, [sp, #36]	; 0x24
 8008ac6:	2800      	cmp	r0, #0
 8008ac8:	f43f af2a 	beq.w	8008920 <_strtod_l+0x480>
 8008acc:	9a08      	ldr	r2, [sp, #32]
 8008ace:	9b05      	ldr	r3, [sp, #20]
 8008ad0:	2a00      	cmp	r2, #0
 8008ad2:	eba3 0307 	sub.w	r3, r3, r7
 8008ad6:	bfa8      	it	ge
 8008ad8:	2300      	movge	r3, #0
 8008ada:	930c      	str	r3, [sp, #48]	; 0x30
 8008adc:	2500      	movs	r5, #0
 8008ade:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
 8008ae2:	9312      	str	r3, [sp, #72]	; 0x48
 8008ae4:	46ab      	mov	fp, r5
 8008ae6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8008ae8:	4620      	mov	r0, r4
 8008aea:	6859      	ldr	r1, [r3, #4]
 8008aec:	f002 ff10 	bl	800b910 <_Balloc>
 8008af0:	9005      	str	r0, [sp, #20]
 8008af2:	2800      	cmp	r0, #0
 8008af4:	f43f af18 	beq.w	8008928 <_strtod_l+0x488>
 8008af8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8008afa:	691a      	ldr	r2, [r3, #16]
 8008afc:	3202      	adds	r2, #2
 8008afe:	f103 010c 	add.w	r1, r3, #12
 8008b02:	0092      	lsls	r2, r2, #2
 8008b04:	300c      	adds	r0, #12
 8008b06:	f001 fbfe 	bl	800a306 <memcpy>
 8008b0a:	ec49 8b10 	vmov	d0, r8, r9
 8008b0e:	aa18      	add	r2, sp, #96	; 0x60
 8008b10:	a917      	add	r1, sp, #92	; 0x5c
 8008b12:	4620      	mov	r0, r4
 8008b14:	f003 fad8 	bl	800c0c8 <__d2b>
 8008b18:	ec49 8b18 	vmov	d8, r8, r9
 8008b1c:	9016      	str	r0, [sp, #88]	; 0x58
 8008b1e:	2800      	cmp	r0, #0
 8008b20:	f43f af02 	beq.w	8008928 <_strtod_l+0x488>
 8008b24:	2101      	movs	r1, #1
 8008b26:	4620      	mov	r0, r4
 8008b28:	f003 f832 	bl	800bb90 <__i2b>
 8008b2c:	4683      	mov	fp, r0
 8008b2e:	2800      	cmp	r0, #0
 8008b30:	f43f aefa 	beq.w	8008928 <_strtod_l+0x488>
 8008b34:	9e17      	ldr	r6, [sp, #92]	; 0x5c
 8008b36:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8008b38:	2e00      	cmp	r6, #0
 8008b3a:	bfab      	itete	ge
 8008b3c:	9b0c      	ldrge	r3, [sp, #48]	; 0x30
 8008b3e:	9b12      	ldrlt	r3, [sp, #72]	; 0x48
 8008b40:	9f12      	ldrge	r7, [sp, #72]	; 0x48
 8008b42:	f8dd a030 	ldrlt.w	sl, [sp, #48]	; 0x30
 8008b46:	bfac      	ite	ge
 8008b48:	eb06 0a03 	addge.w	sl, r6, r3
 8008b4c:	1b9f      	sublt	r7, r3, r6
 8008b4e:	9b04      	ldr	r3, [sp, #16]
 8008b50:	1af6      	subs	r6, r6, r3
 8008b52:	4416      	add	r6, r2
 8008b54:	4ba0      	ldr	r3, [pc, #640]	; (8008dd8 <_strtod_l+0x938>)
 8008b56:	3e01      	subs	r6, #1
 8008b58:	429e      	cmp	r6, r3
 8008b5a:	f1c2 0236 	rsb	r2, r2, #54	; 0x36
 8008b5e:	f280 80c4 	bge.w	8008cea <_strtod_l+0x84a>
 8008b62:	1b9b      	subs	r3, r3, r6
 8008b64:	2b1f      	cmp	r3, #31
 8008b66:	eba2 0203 	sub.w	r2, r2, r3
 8008b6a:	f04f 0101 	mov.w	r1, #1
 8008b6e:	f300 80b0 	bgt.w	8008cd2 <_strtod_l+0x832>
 8008b72:	fa01 f303 	lsl.w	r3, r1, r3
 8008b76:	930e      	str	r3, [sp, #56]	; 0x38
 8008b78:	2300      	movs	r3, #0
 8008b7a:	930d      	str	r3, [sp, #52]	; 0x34
 8008b7c:	eb0a 0602 	add.w	r6, sl, r2
 8008b80:	9b04      	ldr	r3, [sp, #16]
 8008b82:	45b2      	cmp	sl, r6
 8008b84:	4417      	add	r7, r2
 8008b86:	441f      	add	r7, r3
 8008b88:	4653      	mov	r3, sl
 8008b8a:	bfa8      	it	ge
 8008b8c:	4633      	movge	r3, r6
 8008b8e:	42bb      	cmp	r3, r7
 8008b90:	bfa8      	it	ge
 8008b92:	463b      	movge	r3, r7
 8008b94:	2b00      	cmp	r3, #0
 8008b96:	bfc2      	ittt	gt
 8008b98:	1af6      	subgt	r6, r6, r3
 8008b9a:	1aff      	subgt	r7, r7, r3
 8008b9c:	ebaa 0a03 	subgt.w	sl, sl, r3
 8008ba0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8008ba2:	2b00      	cmp	r3, #0
 8008ba4:	dd17      	ble.n	8008bd6 <_strtod_l+0x736>
 8008ba6:	4659      	mov	r1, fp
 8008ba8:	461a      	mov	r2, r3
 8008baa:	4620      	mov	r0, r4
 8008bac:	f003 f8b0 	bl	800bd10 <__pow5mult>
 8008bb0:	4683      	mov	fp, r0
 8008bb2:	2800      	cmp	r0, #0
 8008bb4:	f43f aeb8 	beq.w	8008928 <_strtod_l+0x488>
 8008bb8:	4601      	mov	r1, r0
 8008bba:	9a16      	ldr	r2, [sp, #88]	; 0x58
 8008bbc:	4620      	mov	r0, r4
 8008bbe:	f002 fffd 	bl	800bbbc <__multiply>
 8008bc2:	900b      	str	r0, [sp, #44]	; 0x2c
 8008bc4:	2800      	cmp	r0, #0
 8008bc6:	f43f aeaf 	beq.w	8008928 <_strtod_l+0x488>
 8008bca:	9916      	ldr	r1, [sp, #88]	; 0x58
 8008bcc:	4620      	mov	r0, r4
 8008bce:	f002 fedf 	bl	800b990 <_Bfree>
 8008bd2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8008bd4:	9316      	str	r3, [sp, #88]	; 0x58
 8008bd6:	2e00      	cmp	r6, #0
 8008bd8:	f300 808c 	bgt.w	8008cf4 <_strtod_l+0x854>
 8008bdc:	9b08      	ldr	r3, [sp, #32]
 8008bde:	2b00      	cmp	r3, #0
 8008be0:	dd08      	ble.n	8008bf4 <_strtod_l+0x754>
 8008be2:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8008be4:	9905      	ldr	r1, [sp, #20]
 8008be6:	4620      	mov	r0, r4
 8008be8:	f003 f892 	bl	800bd10 <__pow5mult>
 8008bec:	9005      	str	r0, [sp, #20]
 8008bee:	2800      	cmp	r0, #0
 8008bf0:	f43f ae9a 	beq.w	8008928 <_strtod_l+0x488>
 8008bf4:	2f00      	cmp	r7, #0
 8008bf6:	dd08      	ble.n	8008c0a <_strtod_l+0x76a>
 8008bf8:	9905      	ldr	r1, [sp, #20]
 8008bfa:	463a      	mov	r2, r7
 8008bfc:	4620      	mov	r0, r4
 8008bfe:	f003 f8e1 	bl	800bdc4 <__lshift>
 8008c02:	9005      	str	r0, [sp, #20]
 8008c04:	2800      	cmp	r0, #0
 8008c06:	f43f ae8f 	beq.w	8008928 <_strtod_l+0x488>
 8008c0a:	f1ba 0f00 	cmp.w	sl, #0
 8008c0e:	dd08      	ble.n	8008c22 <_strtod_l+0x782>
 8008c10:	4659      	mov	r1, fp
 8008c12:	4652      	mov	r2, sl
 8008c14:	4620      	mov	r0, r4
 8008c16:	f003 f8d5 	bl	800bdc4 <__lshift>
 8008c1a:	4683      	mov	fp, r0
 8008c1c:	2800      	cmp	r0, #0
 8008c1e:	f43f ae83 	beq.w	8008928 <_strtod_l+0x488>
 8008c22:	9a05      	ldr	r2, [sp, #20]
 8008c24:	9916      	ldr	r1, [sp, #88]	; 0x58
 8008c26:	4620      	mov	r0, r4
 8008c28:	f003 f954 	bl	800bed4 <__mdiff>
 8008c2c:	4605      	mov	r5, r0
 8008c2e:	2800      	cmp	r0, #0
 8008c30:	f43f ae7a 	beq.w	8008928 <_strtod_l+0x488>
 8008c34:	68c3      	ldr	r3, [r0, #12]
 8008c36:	930b      	str	r3, [sp, #44]	; 0x2c
 8008c38:	2300      	movs	r3, #0
 8008c3a:	60c3      	str	r3, [r0, #12]
 8008c3c:	4659      	mov	r1, fp
 8008c3e:	f003 f92d 	bl	800be9c <__mcmp>
 8008c42:	2800      	cmp	r0, #0
 8008c44:	da60      	bge.n	8008d08 <_strtod_l+0x868>
 8008c46:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8008c48:	ea53 0308 	orrs.w	r3, r3, r8
 8008c4c:	f040 8084 	bne.w	8008d58 <_strtod_l+0x8b8>
 8008c50:	f3c9 0313 	ubfx	r3, r9, #0, #20
 8008c54:	2b00      	cmp	r3, #0
 8008c56:	d17f      	bne.n	8008d58 <_strtod_l+0x8b8>
 8008c58:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
 8008c5c:	0d1b      	lsrs	r3, r3, #20
 8008c5e:	051b      	lsls	r3, r3, #20
 8008c60:	f1b3 6fd6 	cmp.w	r3, #112197632	; 0x6b00000
 8008c64:	d978      	bls.n	8008d58 <_strtod_l+0x8b8>
 8008c66:	696b      	ldr	r3, [r5, #20]
 8008c68:	b913      	cbnz	r3, 8008c70 <_strtod_l+0x7d0>
 8008c6a:	692b      	ldr	r3, [r5, #16]
 8008c6c:	2b01      	cmp	r3, #1
 8008c6e:	dd73      	ble.n	8008d58 <_strtod_l+0x8b8>
 8008c70:	4629      	mov	r1, r5
 8008c72:	2201      	movs	r2, #1
 8008c74:	4620      	mov	r0, r4
 8008c76:	f003 f8a5 	bl	800bdc4 <__lshift>
 8008c7a:	4659      	mov	r1, fp
 8008c7c:	4605      	mov	r5, r0
 8008c7e:	f003 f90d 	bl	800be9c <__mcmp>
 8008c82:	2800      	cmp	r0, #0
 8008c84:	dd68      	ble.n	8008d58 <_strtod_l+0x8b8>
 8008c86:	9904      	ldr	r1, [sp, #16]
 8008c88:	4a54      	ldr	r2, [pc, #336]	; (8008ddc <_strtod_l+0x93c>)
 8008c8a:	464b      	mov	r3, r9
 8008c8c:	2900      	cmp	r1, #0
 8008c8e:	f000 8084 	beq.w	8008d9a <_strtod_l+0x8fa>
 8008c92:	ea02 0109 	and.w	r1, r2, r9
 8008c96:	f1b1 6fd6 	cmp.w	r1, #112197632	; 0x6b00000
 8008c9a:	dc7e      	bgt.n	8008d9a <_strtod_l+0x8fa>
 8008c9c:	f1b1 7f5c 	cmp.w	r1, #57671680	; 0x3700000
 8008ca0:	f77f aeb3 	ble.w	8008a0a <_strtod_l+0x56a>
 8008ca4:	4b4e      	ldr	r3, [pc, #312]	; (8008de0 <_strtod_l+0x940>)
 8008ca6:	4640      	mov	r0, r8
 8008ca8:	4649      	mov	r1, r9
 8008caa:	2200      	movs	r2, #0
 8008cac:	f7f7 fcac 	bl	8000608 <__aeabi_dmul>
 8008cb0:	4b4a      	ldr	r3, [pc, #296]	; (8008ddc <_strtod_l+0x93c>)
 8008cb2:	400b      	ands	r3, r1
 8008cb4:	4680      	mov	r8, r0
 8008cb6:	4689      	mov	r9, r1
 8008cb8:	2b00      	cmp	r3, #0
 8008cba:	f47f ae3f 	bne.w	800893c <_strtod_l+0x49c>
 8008cbe:	2322      	movs	r3, #34	; 0x22
 8008cc0:	6023      	str	r3, [r4, #0]
 8008cc2:	e63b      	b.n	800893c <_strtod_l+0x49c>
 8008cc4:	f04f 32ff 	mov.w	r2, #4294967295
 8008cc8:	fa02 f303 	lsl.w	r3, r2, r3
 8008ccc:	ea03 0808 	and.w	r8, r3, r8
 8008cd0:	e6e8      	b.n	8008aa4 <_strtod_l+0x604>
 8008cd2:	f1c6 467f 	rsb	r6, r6, #4278190080	; 0xff000000
 8008cd6:	f506 067f 	add.w	r6, r6, #16711680	; 0xff0000
 8008cda:	f506 467b 	add.w	r6, r6, #64256	; 0xfb00
 8008cde:	36e2      	adds	r6, #226	; 0xe2
 8008ce0:	fa01 f306 	lsl.w	r3, r1, r6
 8008ce4:	e9cd 310d 	strd	r3, r1, [sp, #52]	; 0x34
 8008ce8:	e748      	b.n	8008b7c <_strtod_l+0x6dc>
 8008cea:	2100      	movs	r1, #0
 8008cec:	2301      	movs	r3, #1
 8008cee:	e9cd 130d 	strd	r1, r3, [sp, #52]	; 0x34
 8008cf2:	e743      	b.n	8008b7c <_strtod_l+0x6dc>
 8008cf4:	9916      	ldr	r1, [sp, #88]	; 0x58
 8008cf6:	4632      	mov	r2, r6
 8008cf8:	4620      	mov	r0, r4
 8008cfa:	f003 f863 	bl	800bdc4 <__lshift>
 8008cfe:	9016      	str	r0, [sp, #88]	; 0x58
 8008d00:	2800      	cmp	r0, #0
 8008d02:	f47f af6b 	bne.w	8008bdc <_strtod_l+0x73c>
 8008d06:	e60f      	b.n	8008928 <_strtod_l+0x488>
 8008d08:	46ca      	mov	sl, r9
 8008d0a:	d171      	bne.n	8008df0 <_strtod_l+0x950>
 8008d0c:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8008d0e:	f3c9 0313 	ubfx	r3, r9, #0, #20
 8008d12:	b352      	cbz	r2, 8008d6a <_strtod_l+0x8ca>
 8008d14:	4a33      	ldr	r2, [pc, #204]	; (8008de4 <_strtod_l+0x944>)
 8008d16:	4293      	cmp	r3, r2
 8008d18:	d12a      	bne.n	8008d70 <_strtod_l+0x8d0>
 8008d1a:	9b04      	ldr	r3, [sp, #16]
 8008d1c:	4641      	mov	r1, r8
 8008d1e:	b1fb      	cbz	r3, 8008d60 <_strtod_l+0x8c0>
 8008d20:	4b2e      	ldr	r3, [pc, #184]	; (8008ddc <_strtod_l+0x93c>)
 8008d22:	ea09 0303 	and.w	r3, r9, r3
 8008d26:	f1b3 6fd4 	cmp.w	r3, #111149056	; 0x6a00000
 8008d2a:	f04f 32ff 	mov.w	r2, #4294967295
 8008d2e:	d81a      	bhi.n	8008d66 <_strtod_l+0x8c6>
 8008d30:	0d1b      	lsrs	r3, r3, #20
 8008d32:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
 8008d36:	fa02 f303 	lsl.w	r3, r2, r3
 8008d3a:	4299      	cmp	r1, r3
 8008d3c:	d118      	bne.n	8008d70 <_strtod_l+0x8d0>
 8008d3e:	4b2a      	ldr	r3, [pc, #168]	; (8008de8 <_strtod_l+0x948>)
 8008d40:	459a      	cmp	sl, r3
 8008d42:	d102      	bne.n	8008d4a <_strtod_l+0x8aa>
 8008d44:	3101      	adds	r1, #1
 8008d46:	f43f adef 	beq.w	8008928 <_strtod_l+0x488>
 8008d4a:	4b24      	ldr	r3, [pc, #144]	; (8008ddc <_strtod_l+0x93c>)
 8008d4c:	ea0a 0303 	and.w	r3, sl, r3
 8008d50:	f503 1980 	add.w	r9, r3, #1048576	; 0x100000
 8008d54:	f04f 0800 	mov.w	r8, #0
 8008d58:	9b04      	ldr	r3, [sp, #16]
 8008d5a:	2b00      	cmp	r3, #0
 8008d5c:	d1a2      	bne.n	8008ca4 <_strtod_l+0x804>
 8008d5e:	e5ed      	b.n	800893c <_strtod_l+0x49c>
 8008d60:	f04f 33ff 	mov.w	r3, #4294967295
 8008d64:	e7e9      	b.n	8008d3a <_strtod_l+0x89a>
 8008d66:	4613      	mov	r3, r2
 8008d68:	e7e7      	b.n	8008d3a <_strtod_l+0x89a>
 8008d6a:	ea53 0308 	orrs.w	r3, r3, r8
 8008d6e:	d08a      	beq.n	8008c86 <_strtod_l+0x7e6>
 8008d70:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8008d72:	b1e3      	cbz	r3, 8008dae <_strtod_l+0x90e>
 8008d74:	ea13 0f0a 	tst.w	r3, sl
 8008d78:	d0ee      	beq.n	8008d58 <_strtod_l+0x8b8>
 8008d7a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8008d7c:	9a04      	ldr	r2, [sp, #16]
 8008d7e:	4640      	mov	r0, r8
 8008d80:	4649      	mov	r1, r9
 8008d82:	b1c3      	cbz	r3, 8008db6 <_strtod_l+0x916>
 8008d84:	f7ff fb70 	bl	8008468 <sulp>
 8008d88:	4602      	mov	r2, r0
 8008d8a:	460b      	mov	r3, r1
 8008d8c:	ec51 0b18 	vmov	r0, r1, d8
 8008d90:	f7f7 fa84 	bl	800029c <__adddf3>
 8008d94:	4680      	mov	r8, r0
 8008d96:	4689      	mov	r9, r1
 8008d98:	e7de      	b.n	8008d58 <_strtod_l+0x8b8>
 8008d9a:	4013      	ands	r3, r2
 8008d9c:	f5a3 1380 	sub.w	r3, r3, #1048576	; 0x100000
 8008da0:	ea6f 5913 	mvn.w	r9, r3, lsr #20
 8008da4:	ea6f 5909 	mvn.w	r9, r9, lsl #20
 8008da8:	f04f 38ff 	mov.w	r8, #4294967295
 8008dac:	e7d4      	b.n	8008d58 <_strtod_l+0x8b8>
 8008dae:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8008db0:	ea13 0f08 	tst.w	r3, r8
 8008db4:	e7e0      	b.n	8008d78 <_strtod_l+0x8d8>
 8008db6:	f7ff fb57 	bl	8008468 <sulp>
 8008dba:	4602      	mov	r2, r0
 8008dbc:	460b      	mov	r3, r1
 8008dbe:	ec51 0b18 	vmov	r0, r1, d8
 8008dc2:	f7f7 fa69 	bl	8000298 <__aeabi_dsub>
 8008dc6:	2200      	movs	r2, #0
 8008dc8:	2300      	movs	r3, #0
 8008dca:	4680      	mov	r8, r0
 8008dcc:	4689      	mov	r9, r1
 8008dce:	f7f7 fe83 	bl	8000ad8 <__aeabi_dcmpeq>
 8008dd2:	2800      	cmp	r0, #0
 8008dd4:	d0c0      	beq.n	8008d58 <_strtod_l+0x8b8>
 8008dd6:	e618      	b.n	8008a0a <_strtod_l+0x56a>
 8008dd8:	fffffc02 	.word	0xfffffc02
 8008ddc:	7ff00000 	.word	0x7ff00000
 8008de0:	39500000 	.word	0x39500000
 8008de4:	000fffff 	.word	0x000fffff
 8008de8:	7fefffff 	.word	0x7fefffff
 8008dec:	0800d390 	.word	0x0800d390
 8008df0:	4659      	mov	r1, fp
 8008df2:	4628      	mov	r0, r5
 8008df4:	f003 f9c2 	bl	800c17c <__ratio>
 8008df8:	ec57 6b10 	vmov	r6, r7, d0
 8008dfc:	ee10 0a10 	vmov	r0, s0
 8008e00:	2200      	movs	r2, #0
 8008e02:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8008e06:	4639      	mov	r1, r7
 8008e08:	f7f7 fe7a 	bl	8000b00 <__aeabi_dcmple>
 8008e0c:	2800      	cmp	r0, #0
 8008e0e:	d071      	beq.n	8008ef4 <_strtod_l+0xa54>
 8008e10:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8008e12:	2b00      	cmp	r3, #0
 8008e14:	d17c      	bne.n	8008f10 <_strtod_l+0xa70>
 8008e16:	f1b8 0f00 	cmp.w	r8, #0
 8008e1a:	d15a      	bne.n	8008ed2 <_strtod_l+0xa32>
 8008e1c:	f3c9 0313 	ubfx	r3, r9, #0, #20
 8008e20:	2b00      	cmp	r3, #0
 8008e22:	d15d      	bne.n	8008ee0 <_strtod_l+0xa40>
 8008e24:	4b90      	ldr	r3, [pc, #576]	; (8009068 <_strtod_l+0xbc8>)
 8008e26:	2200      	movs	r2, #0
 8008e28:	4630      	mov	r0, r6
 8008e2a:	4639      	mov	r1, r7
 8008e2c:	f7f7 fe5e 	bl	8000aec <__aeabi_dcmplt>
 8008e30:	2800      	cmp	r0, #0
 8008e32:	d15c      	bne.n	8008eee <_strtod_l+0xa4e>
 8008e34:	4630      	mov	r0, r6
 8008e36:	4639      	mov	r1, r7
 8008e38:	4b8c      	ldr	r3, [pc, #560]	; (800906c <_strtod_l+0xbcc>)
 8008e3a:	2200      	movs	r2, #0
 8008e3c:	f7f7 fbe4 	bl	8000608 <__aeabi_dmul>
 8008e40:	4606      	mov	r6, r0
 8008e42:	460f      	mov	r7, r1
 8008e44:	f107 4300 	add.w	r3, r7, #2147483648	; 0x80000000
 8008e48:	9606      	str	r6, [sp, #24]
 8008e4a:	9307      	str	r3, [sp, #28]
 8008e4c:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8008e50:	e9cd 230e 	strd	r2, r3, [sp, #56]	; 0x38
 8008e54:	4b86      	ldr	r3, [pc, #536]	; (8009070 <_strtod_l+0xbd0>)
 8008e56:	ea0a 0303 	and.w	r3, sl, r3
 8008e5a:	930d      	str	r3, [sp, #52]	; 0x34
 8008e5c:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8008e5e:	4b85      	ldr	r3, [pc, #532]	; (8009074 <_strtod_l+0xbd4>)
 8008e60:	429a      	cmp	r2, r3
 8008e62:	f040 8090 	bne.w	8008f86 <_strtod_l+0xae6>
 8008e66:	f1aa 7954 	sub.w	r9, sl, #55574528	; 0x3500000
 8008e6a:	ec49 8b10 	vmov	d0, r8, r9
 8008e6e:	f003 f8bb 	bl	800bfe8 <__ulp>
 8008e72:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8008e76:	ec51 0b10 	vmov	r0, r1, d0
 8008e7a:	f7f7 fbc5 	bl	8000608 <__aeabi_dmul>
 8008e7e:	4642      	mov	r2, r8
 8008e80:	464b      	mov	r3, r9
 8008e82:	f7f7 fa0b 	bl	800029c <__adddf3>
 8008e86:	460b      	mov	r3, r1
 8008e88:	4979      	ldr	r1, [pc, #484]	; (8009070 <_strtod_l+0xbd0>)
 8008e8a:	4a7b      	ldr	r2, [pc, #492]	; (8009078 <_strtod_l+0xbd8>)
 8008e8c:	4019      	ands	r1, r3
 8008e8e:	4291      	cmp	r1, r2
 8008e90:	4680      	mov	r8, r0
 8008e92:	d944      	bls.n	8008f1e <_strtod_l+0xa7e>
 8008e94:	ee18 2a90 	vmov	r2, s17
 8008e98:	4b78      	ldr	r3, [pc, #480]	; (800907c <_strtod_l+0xbdc>)
 8008e9a:	429a      	cmp	r2, r3
 8008e9c:	d104      	bne.n	8008ea8 <_strtod_l+0xa08>
 8008e9e:	ee18 3a10 	vmov	r3, s16
 8008ea2:	3301      	adds	r3, #1
 8008ea4:	f43f ad40 	beq.w	8008928 <_strtod_l+0x488>
 8008ea8:	f8df 91d0 	ldr.w	r9, [pc, #464]	; 800907c <_strtod_l+0xbdc>
 8008eac:	f04f 38ff 	mov.w	r8, #4294967295
 8008eb0:	9916      	ldr	r1, [sp, #88]	; 0x58
 8008eb2:	4620      	mov	r0, r4
 8008eb4:	f002 fd6c 	bl	800b990 <_Bfree>
 8008eb8:	9905      	ldr	r1, [sp, #20]
 8008eba:	4620      	mov	r0, r4
 8008ebc:	f002 fd68 	bl	800b990 <_Bfree>
 8008ec0:	4659      	mov	r1, fp
 8008ec2:	4620      	mov	r0, r4
 8008ec4:	f002 fd64 	bl	800b990 <_Bfree>
 8008ec8:	4629      	mov	r1, r5
 8008eca:	4620      	mov	r0, r4
 8008ecc:	f002 fd60 	bl	800b990 <_Bfree>
 8008ed0:	e609      	b.n	8008ae6 <_strtod_l+0x646>
 8008ed2:	f1b8 0f01 	cmp.w	r8, #1
 8008ed6:	d103      	bne.n	8008ee0 <_strtod_l+0xa40>
 8008ed8:	f1b9 0f00 	cmp.w	r9, #0
 8008edc:	f43f ad95 	beq.w	8008a0a <_strtod_l+0x56a>
 8008ee0:	ed9f 7b55 	vldr	d7, [pc, #340]	; 8009038 <_strtod_l+0xb98>
 8008ee4:	4f60      	ldr	r7, [pc, #384]	; (8009068 <_strtod_l+0xbc8>)
 8008ee6:	ed8d 7b06 	vstr	d7, [sp, #24]
 8008eea:	2600      	movs	r6, #0
 8008eec:	e7ae      	b.n	8008e4c <_strtod_l+0x9ac>
 8008eee:	4f5f      	ldr	r7, [pc, #380]	; (800906c <_strtod_l+0xbcc>)
 8008ef0:	2600      	movs	r6, #0
 8008ef2:	e7a7      	b.n	8008e44 <_strtod_l+0x9a4>
 8008ef4:	4b5d      	ldr	r3, [pc, #372]	; (800906c <_strtod_l+0xbcc>)
 8008ef6:	4630      	mov	r0, r6
 8008ef8:	4639      	mov	r1, r7
 8008efa:	2200      	movs	r2, #0
 8008efc:	f7f7 fb84 	bl	8000608 <__aeabi_dmul>
 8008f00:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8008f02:	4606      	mov	r6, r0
 8008f04:	460f      	mov	r7, r1
 8008f06:	2b00      	cmp	r3, #0
 8008f08:	d09c      	beq.n	8008e44 <_strtod_l+0x9a4>
 8008f0a:	e9cd 6706 	strd	r6, r7, [sp, #24]
 8008f0e:	e79d      	b.n	8008e4c <_strtod_l+0x9ac>
 8008f10:	ed9f 7b4b 	vldr	d7, [pc, #300]	; 8009040 <_strtod_l+0xba0>
 8008f14:	ed8d 7b06 	vstr	d7, [sp, #24]
 8008f18:	ec57 6b17 	vmov	r6, r7, d7
 8008f1c:	e796      	b.n	8008e4c <_strtod_l+0x9ac>
 8008f1e:	f103 7954 	add.w	r9, r3, #55574528	; 0x3500000
 8008f22:	9b04      	ldr	r3, [sp, #16]
 8008f24:	46ca      	mov	sl, r9
 8008f26:	2b00      	cmp	r3, #0
 8008f28:	d1c2      	bne.n	8008eb0 <_strtod_l+0xa10>
 8008f2a:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
 8008f2e:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8008f30:	0d1b      	lsrs	r3, r3, #20
 8008f32:	051b      	lsls	r3, r3, #20
 8008f34:	429a      	cmp	r2, r3
 8008f36:	d1bb      	bne.n	8008eb0 <_strtod_l+0xa10>
 8008f38:	4630      	mov	r0, r6
 8008f3a:	4639      	mov	r1, r7
 8008f3c:	f7f7 fec4 	bl	8000cc8 <__aeabi_d2lz>
 8008f40:	f7f7 fb34 	bl	80005ac <__aeabi_l2d>
 8008f44:	4602      	mov	r2, r0
 8008f46:	460b      	mov	r3, r1
 8008f48:	4630      	mov	r0, r6
 8008f4a:	4639      	mov	r1, r7
 8008f4c:	f7f7 f9a4 	bl	8000298 <__aeabi_dsub>
 8008f50:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8008f52:	f3c9 0313 	ubfx	r3, r9, #0, #20
 8008f56:	ea43 0308 	orr.w	r3, r3, r8
 8008f5a:	4313      	orrs	r3, r2
 8008f5c:	4606      	mov	r6, r0
 8008f5e:	460f      	mov	r7, r1
 8008f60:	d054      	beq.n	800900c <_strtod_l+0xb6c>
 8008f62:	a339      	add	r3, pc, #228	; (adr r3, 8009048 <_strtod_l+0xba8>)
 8008f64:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008f68:	f7f7 fdc0 	bl	8000aec <__aeabi_dcmplt>
 8008f6c:	2800      	cmp	r0, #0
 8008f6e:	f47f ace5 	bne.w	800893c <_strtod_l+0x49c>
 8008f72:	a337      	add	r3, pc, #220	; (adr r3, 8009050 <_strtod_l+0xbb0>)
 8008f74:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008f78:	4630      	mov	r0, r6
 8008f7a:	4639      	mov	r1, r7
 8008f7c:	f7f7 fdd4 	bl	8000b28 <__aeabi_dcmpgt>
 8008f80:	2800      	cmp	r0, #0
 8008f82:	d095      	beq.n	8008eb0 <_strtod_l+0xa10>
 8008f84:	e4da      	b.n	800893c <_strtod_l+0x49c>
 8008f86:	9b04      	ldr	r3, [sp, #16]
 8008f88:	b333      	cbz	r3, 8008fd8 <_strtod_l+0xb38>
 8008f8a:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8008f8c:	f1b3 6fd4 	cmp.w	r3, #111149056	; 0x6a00000
 8008f90:	d822      	bhi.n	8008fd8 <_strtod_l+0xb38>
 8008f92:	a331      	add	r3, pc, #196	; (adr r3, 8009058 <_strtod_l+0xbb8>)
 8008f94:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008f98:	4630      	mov	r0, r6
 8008f9a:	4639      	mov	r1, r7
 8008f9c:	f7f7 fdb0 	bl	8000b00 <__aeabi_dcmple>
 8008fa0:	b1a0      	cbz	r0, 8008fcc <_strtod_l+0xb2c>
 8008fa2:	4639      	mov	r1, r7
 8008fa4:	4630      	mov	r0, r6
 8008fa6:	f7f7 fe07 	bl	8000bb8 <__aeabi_d2uiz>
 8008faa:	2801      	cmp	r0, #1
 8008fac:	bf38      	it	cc
 8008fae:	2001      	movcc	r0, #1
 8008fb0:	f7f7 fab0 	bl	8000514 <__aeabi_ui2d>
 8008fb4:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8008fb6:	4606      	mov	r6, r0
 8008fb8:	460f      	mov	r7, r1
 8008fba:	bb23      	cbnz	r3, 8009006 <_strtod_l+0xb66>
 8008fbc:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8008fc0:	9010      	str	r0, [sp, #64]	; 0x40
 8008fc2:	9311      	str	r3, [sp, #68]	; 0x44
 8008fc4:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 8008fc8:	e9cd 230e 	strd	r2, r3, [sp, #56]	; 0x38
 8008fcc:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8008fce:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8008fd0:	f103 63d6 	add.w	r3, r3, #112197632	; 0x6b00000
 8008fd4:	1a9b      	subs	r3, r3, r2
 8008fd6:	930f      	str	r3, [sp, #60]	; 0x3c
 8008fd8:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	; 0x38
 8008fdc:	eeb0 0a48 	vmov.f32	s0, s16
 8008fe0:	eef0 0a68 	vmov.f32	s1, s17
 8008fe4:	e9cd 010e 	strd	r0, r1, [sp, #56]	; 0x38
 8008fe8:	f002 fffe 	bl	800bfe8 <__ulp>
 8008fec:	e9dd 010e 	ldrd	r0, r1, [sp, #56]	; 0x38
 8008ff0:	ec53 2b10 	vmov	r2, r3, d0
 8008ff4:	f7f7 fb08 	bl	8000608 <__aeabi_dmul>
 8008ff8:	ec53 2b18 	vmov	r2, r3, d8
 8008ffc:	f7f7 f94e 	bl	800029c <__adddf3>
 8009000:	4680      	mov	r8, r0
 8009002:	4689      	mov	r9, r1
 8009004:	e78d      	b.n	8008f22 <_strtod_l+0xa82>
 8009006:	e9cd 6710 	strd	r6, r7, [sp, #64]	; 0x40
 800900a:	e7db      	b.n	8008fc4 <_strtod_l+0xb24>
 800900c:	a314      	add	r3, pc, #80	; (adr r3, 8009060 <_strtod_l+0xbc0>)
 800900e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8009012:	f7f7 fd6b 	bl	8000aec <__aeabi_dcmplt>
 8009016:	e7b3      	b.n	8008f80 <_strtod_l+0xae0>
 8009018:	2300      	movs	r3, #0
 800901a:	930a      	str	r3, [sp, #40]	; 0x28
 800901c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800901e:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8009020:	6013      	str	r3, [r2, #0]
 8009022:	f7ff ba7c 	b.w	800851e <_strtod_l+0x7e>
 8009026:	2a65      	cmp	r2, #101	; 0x65
 8009028:	f43f ab75 	beq.w	8008716 <_strtod_l+0x276>
 800902c:	2a45      	cmp	r2, #69	; 0x45
 800902e:	f43f ab72 	beq.w	8008716 <_strtod_l+0x276>
 8009032:	2301      	movs	r3, #1
 8009034:	f7ff bbaa 	b.w	800878c <_strtod_l+0x2ec>
 8009038:	00000000 	.word	0x00000000
 800903c:	bff00000 	.word	0xbff00000
 8009040:	00000000 	.word	0x00000000
 8009044:	3ff00000 	.word	0x3ff00000
 8009048:	94a03595 	.word	0x94a03595
 800904c:	3fdfffff 	.word	0x3fdfffff
 8009050:	35afe535 	.word	0x35afe535
 8009054:	3fe00000 	.word	0x3fe00000
 8009058:	ffc00000 	.word	0xffc00000
 800905c:	41dfffff 	.word	0x41dfffff
 8009060:	94a03595 	.word	0x94a03595
 8009064:	3fcfffff 	.word	0x3fcfffff
 8009068:	3ff00000 	.word	0x3ff00000
 800906c:	3fe00000 	.word	0x3fe00000
 8009070:	7ff00000 	.word	0x7ff00000
 8009074:	7fe00000 	.word	0x7fe00000
 8009078:	7c9fffff 	.word	0x7c9fffff
 800907c:	7fefffff 	.word	0x7fefffff

08009080 <_strtod_r>:
 8009080:	4b01      	ldr	r3, [pc, #4]	; (8009088 <_strtod_r+0x8>)
 8009082:	f7ff ba0d 	b.w	80084a0 <_strtod_l>
 8009086:	bf00      	nop
 8009088:	20000084 	.word	0x20000084

0800908c <strtof>:
 800908c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009090:	f8df 80c0 	ldr.w	r8, [pc, #192]	; 8009154 <strtof+0xc8>
 8009094:	4b2a      	ldr	r3, [pc, #168]	; (8009140 <strtof+0xb4>)
 8009096:	460a      	mov	r2, r1
 8009098:	ed2d 8b02 	vpush	{d8}
 800909c:	4601      	mov	r1, r0
 800909e:	f8d8 0000 	ldr.w	r0, [r8]
 80090a2:	f7ff f9fd 	bl	80084a0 <_strtod_l>
 80090a6:	ec55 4b10 	vmov	r4, r5, d0
 80090aa:	ee10 2a10 	vmov	r2, s0
 80090ae:	ee10 0a10 	vmov	r0, s0
 80090b2:	462b      	mov	r3, r5
 80090b4:	4629      	mov	r1, r5
 80090b6:	f7f7 fd41 	bl	8000b3c <__aeabi_dcmpun>
 80090ba:	b190      	cbz	r0, 80090e2 <strtof+0x56>
 80090bc:	2d00      	cmp	r5, #0
 80090be:	4821      	ldr	r0, [pc, #132]	; (8009144 <strtof+0xb8>)
 80090c0:	da09      	bge.n	80090d6 <strtof+0x4a>
 80090c2:	f001 f939 	bl	800a338 <nanf>
 80090c6:	eeb1 8a40 	vneg.f32	s16, s0
 80090ca:	eeb0 0a48 	vmov.f32	s0, s16
 80090ce:	ecbd 8b02 	vpop	{d8}
 80090d2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80090d6:	ecbd 8b02 	vpop	{d8}
 80090da:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 80090de:	f001 b92b 	b.w	800a338 <nanf>
 80090e2:	4620      	mov	r0, r4
 80090e4:	4629      	mov	r1, r5
 80090e6:	f7f7 fd87 	bl	8000bf8 <__aeabi_d2f>
 80090ea:	ee08 0a10 	vmov	s16, r0
 80090ee:	eddf 7a16 	vldr	s15, [pc, #88]	; 8009148 <strtof+0xbc>
 80090f2:	eeb0 7ac8 	vabs.f32	s14, s16
 80090f6:	eeb4 7a67 	vcmp.f32	s14, s15
 80090fa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80090fe:	dd11      	ble.n	8009124 <strtof+0x98>
 8009100:	f025 4700 	bic.w	r7, r5, #2147483648	; 0x80000000
 8009104:	4b11      	ldr	r3, [pc, #68]	; (800914c <strtof+0xc0>)
 8009106:	f04f 32ff 	mov.w	r2, #4294967295
 800910a:	4620      	mov	r0, r4
 800910c:	4639      	mov	r1, r7
 800910e:	f7f7 fd15 	bl	8000b3c <__aeabi_dcmpun>
 8009112:	b980      	cbnz	r0, 8009136 <strtof+0xaa>
 8009114:	4b0d      	ldr	r3, [pc, #52]	; (800914c <strtof+0xc0>)
 8009116:	f04f 32ff 	mov.w	r2, #4294967295
 800911a:	4620      	mov	r0, r4
 800911c:	4639      	mov	r1, r7
 800911e:	f7f7 fcef 	bl	8000b00 <__aeabi_dcmple>
 8009122:	b940      	cbnz	r0, 8009136 <strtof+0xaa>
 8009124:	ee18 3a10 	vmov	r3, s16
 8009128:	f013 4fff 	tst.w	r3, #2139095040	; 0x7f800000
 800912c:	d1cd      	bne.n	80090ca <strtof+0x3e>
 800912e:	4b08      	ldr	r3, [pc, #32]	; (8009150 <strtof+0xc4>)
 8009130:	402b      	ands	r3, r5
 8009132:	2b00      	cmp	r3, #0
 8009134:	d0c9      	beq.n	80090ca <strtof+0x3e>
 8009136:	f8d8 3000 	ldr.w	r3, [r8]
 800913a:	2222      	movs	r2, #34	; 0x22
 800913c:	601a      	str	r2, [r3, #0]
 800913e:	e7c4      	b.n	80090ca <strtof+0x3e>
 8009140:	20000084 	.word	0x20000084
 8009144:	0800d788 	.word	0x0800d788
 8009148:	7f7fffff 	.word	0x7f7fffff
 800914c:	7fefffff 	.word	0x7fefffff
 8009150:	7ff00000 	.word	0x7ff00000
 8009154:	2000023c 	.word	0x2000023c

08009158 <_strtol_l.constprop.0>:
 8009158:	2b01      	cmp	r3, #1
 800915a:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800915e:	d001      	beq.n	8009164 <_strtol_l.constprop.0+0xc>
 8009160:	2b24      	cmp	r3, #36	; 0x24
 8009162:	d906      	bls.n	8009172 <_strtol_l.constprop.0+0x1a>
 8009164:	f001 f8a2 	bl	800a2ac <__errno>
 8009168:	2316      	movs	r3, #22
 800916a:	6003      	str	r3, [r0, #0]
 800916c:	2000      	movs	r0, #0
 800916e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8009172:	f8df c0e4 	ldr.w	ip, [pc, #228]	; 8009258 <_strtol_l.constprop.0+0x100>
 8009176:	460d      	mov	r5, r1
 8009178:	462e      	mov	r6, r5
 800917a:	f815 4b01 	ldrb.w	r4, [r5], #1
 800917e:	f81c 7004 	ldrb.w	r7, [ip, r4]
 8009182:	f017 0708 	ands.w	r7, r7, #8
 8009186:	d1f7      	bne.n	8009178 <_strtol_l.constprop.0+0x20>
 8009188:	2c2d      	cmp	r4, #45	; 0x2d
 800918a:	d132      	bne.n	80091f2 <_strtol_l.constprop.0+0x9a>
 800918c:	782c      	ldrb	r4, [r5, #0]
 800918e:	2701      	movs	r7, #1
 8009190:	1cb5      	adds	r5, r6, #2
 8009192:	2b00      	cmp	r3, #0
 8009194:	d05b      	beq.n	800924e <_strtol_l.constprop.0+0xf6>
 8009196:	2b10      	cmp	r3, #16
 8009198:	d109      	bne.n	80091ae <_strtol_l.constprop.0+0x56>
 800919a:	2c30      	cmp	r4, #48	; 0x30
 800919c:	d107      	bne.n	80091ae <_strtol_l.constprop.0+0x56>
 800919e:	782c      	ldrb	r4, [r5, #0]
 80091a0:	f004 04df 	and.w	r4, r4, #223	; 0xdf
 80091a4:	2c58      	cmp	r4, #88	; 0x58
 80091a6:	d14d      	bne.n	8009244 <_strtol_l.constprop.0+0xec>
 80091a8:	786c      	ldrb	r4, [r5, #1]
 80091aa:	2310      	movs	r3, #16
 80091ac:	3502      	adds	r5, #2
 80091ae:	f107 4800 	add.w	r8, r7, #2147483648	; 0x80000000
 80091b2:	f108 38ff 	add.w	r8, r8, #4294967295
 80091b6:	f04f 0e00 	mov.w	lr, #0
 80091ba:	fbb8 f9f3 	udiv	r9, r8, r3
 80091be:	4676      	mov	r6, lr
 80091c0:	fb03 8a19 	mls	sl, r3, r9, r8
 80091c4:	f1a4 0c30 	sub.w	ip, r4, #48	; 0x30
 80091c8:	f1bc 0f09 	cmp.w	ip, #9
 80091cc:	d816      	bhi.n	80091fc <_strtol_l.constprop.0+0xa4>
 80091ce:	4664      	mov	r4, ip
 80091d0:	42a3      	cmp	r3, r4
 80091d2:	dd24      	ble.n	800921e <_strtol_l.constprop.0+0xc6>
 80091d4:	f1be 3fff 	cmp.w	lr, #4294967295
 80091d8:	d008      	beq.n	80091ec <_strtol_l.constprop.0+0x94>
 80091da:	45b1      	cmp	r9, r6
 80091dc:	d31c      	bcc.n	8009218 <_strtol_l.constprop.0+0xc0>
 80091de:	d101      	bne.n	80091e4 <_strtol_l.constprop.0+0x8c>
 80091e0:	45a2      	cmp	sl, r4
 80091e2:	db19      	blt.n	8009218 <_strtol_l.constprop.0+0xc0>
 80091e4:	fb06 4603 	mla	r6, r6, r3, r4
 80091e8:	f04f 0e01 	mov.w	lr, #1
 80091ec:	f815 4b01 	ldrb.w	r4, [r5], #1
 80091f0:	e7e8      	b.n	80091c4 <_strtol_l.constprop.0+0x6c>
 80091f2:	2c2b      	cmp	r4, #43	; 0x2b
 80091f4:	bf04      	itt	eq
 80091f6:	782c      	ldrbeq	r4, [r5, #0]
 80091f8:	1cb5      	addeq	r5, r6, #2
 80091fa:	e7ca      	b.n	8009192 <_strtol_l.constprop.0+0x3a>
 80091fc:	f1a4 0c41 	sub.w	ip, r4, #65	; 0x41
 8009200:	f1bc 0f19 	cmp.w	ip, #25
 8009204:	d801      	bhi.n	800920a <_strtol_l.constprop.0+0xb2>
 8009206:	3c37      	subs	r4, #55	; 0x37
 8009208:	e7e2      	b.n	80091d0 <_strtol_l.constprop.0+0x78>
 800920a:	f1a4 0c61 	sub.w	ip, r4, #97	; 0x61
 800920e:	f1bc 0f19 	cmp.w	ip, #25
 8009212:	d804      	bhi.n	800921e <_strtol_l.constprop.0+0xc6>
 8009214:	3c57      	subs	r4, #87	; 0x57
 8009216:	e7db      	b.n	80091d0 <_strtol_l.constprop.0+0x78>
 8009218:	f04f 3eff 	mov.w	lr, #4294967295
 800921c:	e7e6      	b.n	80091ec <_strtol_l.constprop.0+0x94>
 800921e:	f1be 3fff 	cmp.w	lr, #4294967295
 8009222:	d105      	bne.n	8009230 <_strtol_l.constprop.0+0xd8>
 8009224:	2322      	movs	r3, #34	; 0x22
 8009226:	6003      	str	r3, [r0, #0]
 8009228:	4646      	mov	r6, r8
 800922a:	b942      	cbnz	r2, 800923e <_strtol_l.constprop.0+0xe6>
 800922c:	4630      	mov	r0, r6
 800922e:	e79e      	b.n	800916e <_strtol_l.constprop.0+0x16>
 8009230:	b107      	cbz	r7, 8009234 <_strtol_l.constprop.0+0xdc>
 8009232:	4276      	negs	r6, r6
 8009234:	2a00      	cmp	r2, #0
 8009236:	d0f9      	beq.n	800922c <_strtol_l.constprop.0+0xd4>
 8009238:	f1be 0f00 	cmp.w	lr, #0
 800923c:	d000      	beq.n	8009240 <_strtol_l.constprop.0+0xe8>
 800923e:	1e69      	subs	r1, r5, #1
 8009240:	6011      	str	r1, [r2, #0]
 8009242:	e7f3      	b.n	800922c <_strtol_l.constprop.0+0xd4>
 8009244:	2430      	movs	r4, #48	; 0x30
 8009246:	2b00      	cmp	r3, #0
 8009248:	d1b1      	bne.n	80091ae <_strtol_l.constprop.0+0x56>
 800924a:	2308      	movs	r3, #8
 800924c:	e7af      	b.n	80091ae <_strtol_l.constprop.0+0x56>
 800924e:	2c30      	cmp	r4, #48	; 0x30
 8009250:	d0a5      	beq.n	800919e <_strtol_l.constprop.0+0x46>
 8009252:	230a      	movs	r3, #10
 8009254:	e7ab      	b.n	80091ae <_strtol_l.constprop.0+0x56>
 8009256:	bf00      	nop
 8009258:	0800d3b9 	.word	0x0800d3b9

0800925c <_strtol_r>:
 800925c:	f7ff bf7c 	b.w	8009158 <_strtol_l.constprop.0>

08009260 <strtol>:
 8009260:	4613      	mov	r3, r2
 8009262:	460a      	mov	r2, r1
 8009264:	4601      	mov	r1, r0
 8009266:	4802      	ldr	r0, [pc, #8]	; (8009270 <strtol+0x10>)
 8009268:	6800      	ldr	r0, [r0, #0]
 800926a:	f7ff bf75 	b.w	8009158 <_strtol_l.constprop.0>
 800926e:	bf00      	nop
 8009270:	2000023c 	.word	0x2000023c

08009274 <tolower>:
 8009274:	4b03      	ldr	r3, [pc, #12]	; (8009284 <tolower+0x10>)
 8009276:	5c1b      	ldrb	r3, [r3, r0]
 8009278:	f003 0303 	and.w	r3, r3, #3
 800927c:	2b01      	cmp	r3, #1
 800927e:	bf08      	it	eq
 8009280:	3020      	addeq	r0, #32
 8009282:	4770      	bx	lr
 8009284:	0800d3b9 	.word	0x0800d3b9

08009288 <__cvt>:
 8009288:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 800928c:	ec55 4b10 	vmov	r4, r5, d0
 8009290:	2d00      	cmp	r5, #0
 8009292:	460e      	mov	r6, r1
 8009294:	4619      	mov	r1, r3
 8009296:	462b      	mov	r3, r5
 8009298:	bfbb      	ittet	lt
 800929a:	f105 4300 	addlt.w	r3, r5, #2147483648	; 0x80000000
 800929e:	461d      	movlt	r5, r3
 80092a0:	2300      	movge	r3, #0
 80092a2:	232d      	movlt	r3, #45	; 0x2d
 80092a4:	700b      	strb	r3, [r1, #0]
 80092a6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80092a8:	f8dd a030 	ldr.w	sl, [sp, #48]	; 0x30
 80092ac:	4691      	mov	r9, r2
 80092ae:	f023 0820 	bic.w	r8, r3, #32
 80092b2:	bfbc      	itt	lt
 80092b4:	4622      	movlt	r2, r4
 80092b6:	4614      	movlt	r4, r2
 80092b8:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 80092bc:	d005      	beq.n	80092ca <__cvt+0x42>
 80092be:	f1b8 0f45 	cmp.w	r8, #69	; 0x45
 80092c2:	d100      	bne.n	80092c6 <__cvt+0x3e>
 80092c4:	3601      	adds	r6, #1
 80092c6:	2102      	movs	r1, #2
 80092c8:	e000      	b.n	80092cc <__cvt+0x44>
 80092ca:	2103      	movs	r1, #3
 80092cc:	ab03      	add	r3, sp, #12
 80092ce:	9301      	str	r3, [sp, #4]
 80092d0:	ab02      	add	r3, sp, #8
 80092d2:	9300      	str	r3, [sp, #0]
 80092d4:	ec45 4b10 	vmov	d0, r4, r5
 80092d8:	4653      	mov	r3, sl
 80092da:	4632      	mov	r2, r6
 80092dc:	f001 f8bc 	bl	800a458 <_dtoa_r>
 80092e0:	f1b8 0f47 	cmp.w	r8, #71	; 0x47
 80092e4:	4607      	mov	r7, r0
 80092e6:	d102      	bne.n	80092ee <__cvt+0x66>
 80092e8:	f019 0f01 	tst.w	r9, #1
 80092ec:	d022      	beq.n	8009334 <__cvt+0xac>
 80092ee:	f1b8 0f46 	cmp.w	r8, #70	; 0x46
 80092f2:	eb07 0906 	add.w	r9, r7, r6
 80092f6:	d110      	bne.n	800931a <__cvt+0x92>
 80092f8:	783b      	ldrb	r3, [r7, #0]
 80092fa:	2b30      	cmp	r3, #48	; 0x30
 80092fc:	d10a      	bne.n	8009314 <__cvt+0x8c>
 80092fe:	2200      	movs	r2, #0
 8009300:	2300      	movs	r3, #0
 8009302:	4620      	mov	r0, r4
 8009304:	4629      	mov	r1, r5
 8009306:	f7f7 fbe7 	bl	8000ad8 <__aeabi_dcmpeq>
 800930a:	b918      	cbnz	r0, 8009314 <__cvt+0x8c>
 800930c:	f1c6 0601 	rsb	r6, r6, #1
 8009310:	f8ca 6000 	str.w	r6, [sl]
 8009314:	f8da 3000 	ldr.w	r3, [sl]
 8009318:	4499      	add	r9, r3
 800931a:	2200      	movs	r2, #0
 800931c:	2300      	movs	r3, #0
 800931e:	4620      	mov	r0, r4
 8009320:	4629      	mov	r1, r5
 8009322:	f7f7 fbd9 	bl	8000ad8 <__aeabi_dcmpeq>
 8009326:	b108      	cbz	r0, 800932c <__cvt+0xa4>
 8009328:	f8cd 900c 	str.w	r9, [sp, #12]
 800932c:	2230      	movs	r2, #48	; 0x30
 800932e:	9b03      	ldr	r3, [sp, #12]
 8009330:	454b      	cmp	r3, r9
 8009332:	d307      	bcc.n	8009344 <__cvt+0xbc>
 8009334:	9b03      	ldr	r3, [sp, #12]
 8009336:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8009338:	1bdb      	subs	r3, r3, r7
 800933a:	4638      	mov	r0, r7
 800933c:	6013      	str	r3, [r2, #0]
 800933e:	b004      	add	sp, #16
 8009340:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8009344:	1c59      	adds	r1, r3, #1
 8009346:	9103      	str	r1, [sp, #12]
 8009348:	701a      	strb	r2, [r3, #0]
 800934a:	e7f0      	b.n	800932e <__cvt+0xa6>

0800934c <__exponent>:
 800934c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800934e:	4603      	mov	r3, r0
 8009350:	2900      	cmp	r1, #0
 8009352:	bfb8      	it	lt
 8009354:	4249      	neglt	r1, r1
 8009356:	f803 2b02 	strb.w	r2, [r3], #2
 800935a:	bfb4      	ite	lt
 800935c:	222d      	movlt	r2, #45	; 0x2d
 800935e:	222b      	movge	r2, #43	; 0x2b
 8009360:	2909      	cmp	r1, #9
 8009362:	7042      	strb	r2, [r0, #1]
 8009364:	dd2a      	ble.n	80093bc <__exponent+0x70>
 8009366:	f10d 0207 	add.w	r2, sp, #7
 800936a:	4617      	mov	r7, r2
 800936c:	260a      	movs	r6, #10
 800936e:	4694      	mov	ip, r2
 8009370:	fb91 f5f6 	sdiv	r5, r1, r6
 8009374:	fb06 1415 	mls	r4, r6, r5, r1
 8009378:	3430      	adds	r4, #48	; 0x30
 800937a:	f80c 4c01 	strb.w	r4, [ip, #-1]
 800937e:	460c      	mov	r4, r1
 8009380:	2c63      	cmp	r4, #99	; 0x63
 8009382:	f102 32ff 	add.w	r2, r2, #4294967295
 8009386:	4629      	mov	r1, r5
 8009388:	dcf1      	bgt.n	800936e <__exponent+0x22>
 800938a:	3130      	adds	r1, #48	; 0x30
 800938c:	f1ac 0402 	sub.w	r4, ip, #2
 8009390:	f802 1c01 	strb.w	r1, [r2, #-1]
 8009394:	1c41      	adds	r1, r0, #1
 8009396:	4622      	mov	r2, r4
 8009398:	42ba      	cmp	r2, r7
 800939a:	d30a      	bcc.n	80093b2 <__exponent+0x66>
 800939c:	f10d 0209 	add.w	r2, sp, #9
 80093a0:	eba2 020c 	sub.w	r2, r2, ip
 80093a4:	42bc      	cmp	r4, r7
 80093a6:	bf88      	it	hi
 80093a8:	2200      	movhi	r2, #0
 80093aa:	4413      	add	r3, r2
 80093ac:	1a18      	subs	r0, r3, r0
 80093ae:	b003      	add	sp, #12
 80093b0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80093b2:	f812 5b01 	ldrb.w	r5, [r2], #1
 80093b6:	f801 5f01 	strb.w	r5, [r1, #1]!
 80093ba:	e7ed      	b.n	8009398 <__exponent+0x4c>
 80093bc:	2330      	movs	r3, #48	; 0x30
 80093be:	3130      	adds	r1, #48	; 0x30
 80093c0:	7083      	strb	r3, [r0, #2]
 80093c2:	70c1      	strb	r1, [r0, #3]
 80093c4:	1d03      	adds	r3, r0, #4
 80093c6:	e7f1      	b.n	80093ac <__exponent+0x60>

080093c8 <_printf_float>:
 80093c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80093cc:	ed2d 8b02 	vpush	{d8}
 80093d0:	b08d      	sub	sp, #52	; 0x34
 80093d2:	460c      	mov	r4, r1
 80093d4:	f8dd 8060 	ldr.w	r8, [sp, #96]	; 0x60
 80093d8:	4616      	mov	r6, r2
 80093da:	461f      	mov	r7, r3
 80093dc:	4605      	mov	r5, r0
 80093de:	f000 ff1b 	bl	800a218 <_localeconv_r>
 80093e2:	f8d0 a000 	ldr.w	sl, [r0]
 80093e6:	4650      	mov	r0, sl
 80093e8:	f7f6 ff4a 	bl	8000280 <strlen>
 80093ec:	2300      	movs	r3, #0
 80093ee:	930a      	str	r3, [sp, #40]	; 0x28
 80093f0:	6823      	ldr	r3, [r4, #0]
 80093f2:	9305      	str	r3, [sp, #20]
 80093f4:	f8d8 3000 	ldr.w	r3, [r8]
 80093f8:	f894 b018 	ldrb.w	fp, [r4, #24]
 80093fc:	3307      	adds	r3, #7
 80093fe:	f023 0307 	bic.w	r3, r3, #7
 8009402:	f103 0208 	add.w	r2, r3, #8
 8009406:	f8c8 2000 	str.w	r2, [r8]
 800940a:	e9d3 8900 	ldrd	r8, r9, [r3]
 800940e:	f029 4300 	bic.w	r3, r9, #2147483648	; 0x80000000
 8009412:	9307      	str	r3, [sp, #28]
 8009414:	f8cd 8018 	str.w	r8, [sp, #24]
 8009418:	ee08 0a10 	vmov	s16, r0
 800941c:	e9c4 8912 	strd	r8, r9, [r4, #72]	; 0x48
 8009420:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8009424:	4b9e      	ldr	r3, [pc, #632]	; (80096a0 <_printf_float+0x2d8>)
 8009426:	f04f 32ff 	mov.w	r2, #4294967295
 800942a:	f7f7 fb87 	bl	8000b3c <__aeabi_dcmpun>
 800942e:	bb88      	cbnz	r0, 8009494 <_printf_float+0xcc>
 8009430:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8009434:	4b9a      	ldr	r3, [pc, #616]	; (80096a0 <_printf_float+0x2d8>)
 8009436:	f04f 32ff 	mov.w	r2, #4294967295
 800943a:	f7f7 fb61 	bl	8000b00 <__aeabi_dcmple>
 800943e:	bb48      	cbnz	r0, 8009494 <_printf_float+0xcc>
 8009440:	2200      	movs	r2, #0
 8009442:	2300      	movs	r3, #0
 8009444:	4640      	mov	r0, r8
 8009446:	4649      	mov	r1, r9
 8009448:	f7f7 fb50 	bl	8000aec <__aeabi_dcmplt>
 800944c:	b110      	cbz	r0, 8009454 <_printf_float+0x8c>
 800944e:	232d      	movs	r3, #45	; 0x2d
 8009450:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8009454:	4a93      	ldr	r2, [pc, #588]	; (80096a4 <_printf_float+0x2dc>)
 8009456:	4b94      	ldr	r3, [pc, #592]	; (80096a8 <_printf_float+0x2e0>)
 8009458:	f1bb 0f47 	cmp.w	fp, #71	; 0x47
 800945c:	bf94      	ite	ls
 800945e:	4690      	movls	r8, r2
 8009460:	4698      	movhi	r8, r3
 8009462:	2303      	movs	r3, #3
 8009464:	6123      	str	r3, [r4, #16]
 8009466:	9b05      	ldr	r3, [sp, #20]
 8009468:	f023 0304 	bic.w	r3, r3, #4
 800946c:	6023      	str	r3, [r4, #0]
 800946e:	f04f 0900 	mov.w	r9, #0
 8009472:	9700      	str	r7, [sp, #0]
 8009474:	4633      	mov	r3, r6
 8009476:	aa0b      	add	r2, sp, #44	; 0x2c
 8009478:	4621      	mov	r1, r4
 800947a:	4628      	mov	r0, r5
 800947c:	f000 f9da 	bl	8009834 <_printf_common>
 8009480:	3001      	adds	r0, #1
 8009482:	f040 8090 	bne.w	80095a6 <_printf_float+0x1de>
 8009486:	f04f 30ff 	mov.w	r0, #4294967295
 800948a:	b00d      	add	sp, #52	; 0x34
 800948c:	ecbd 8b02 	vpop	{d8}
 8009490:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009494:	4642      	mov	r2, r8
 8009496:	464b      	mov	r3, r9
 8009498:	4640      	mov	r0, r8
 800949a:	4649      	mov	r1, r9
 800949c:	f7f7 fb4e 	bl	8000b3c <__aeabi_dcmpun>
 80094a0:	b140      	cbz	r0, 80094b4 <_printf_float+0xec>
 80094a2:	464b      	mov	r3, r9
 80094a4:	2b00      	cmp	r3, #0
 80094a6:	bfbc      	itt	lt
 80094a8:	232d      	movlt	r3, #45	; 0x2d
 80094aa:	f884 3043 	strblt.w	r3, [r4, #67]	; 0x43
 80094ae:	4a7f      	ldr	r2, [pc, #508]	; (80096ac <_printf_float+0x2e4>)
 80094b0:	4b7f      	ldr	r3, [pc, #508]	; (80096b0 <_printf_float+0x2e8>)
 80094b2:	e7d1      	b.n	8009458 <_printf_float+0x90>
 80094b4:	6863      	ldr	r3, [r4, #4]
 80094b6:	f00b 02df 	and.w	r2, fp, #223	; 0xdf
 80094ba:	9206      	str	r2, [sp, #24]
 80094bc:	1c5a      	adds	r2, r3, #1
 80094be:	d13f      	bne.n	8009540 <_printf_float+0x178>
 80094c0:	2306      	movs	r3, #6
 80094c2:	6063      	str	r3, [r4, #4]
 80094c4:	9b05      	ldr	r3, [sp, #20]
 80094c6:	6861      	ldr	r1, [r4, #4]
 80094c8:	f443 6280 	orr.w	r2, r3, #1024	; 0x400
 80094cc:	2300      	movs	r3, #0
 80094ce:	9303      	str	r3, [sp, #12]
 80094d0:	ab0a      	add	r3, sp, #40	; 0x28
 80094d2:	e9cd b301 	strd	fp, r3, [sp, #4]
 80094d6:	ab09      	add	r3, sp, #36	; 0x24
 80094d8:	ec49 8b10 	vmov	d0, r8, r9
 80094dc:	9300      	str	r3, [sp, #0]
 80094de:	6022      	str	r2, [r4, #0]
 80094e0:	f10d 0323 	add.w	r3, sp, #35	; 0x23
 80094e4:	4628      	mov	r0, r5
 80094e6:	f7ff fecf 	bl	8009288 <__cvt>
 80094ea:	9b06      	ldr	r3, [sp, #24]
 80094ec:	9909      	ldr	r1, [sp, #36]	; 0x24
 80094ee:	2b47      	cmp	r3, #71	; 0x47
 80094f0:	4680      	mov	r8, r0
 80094f2:	d108      	bne.n	8009506 <_printf_float+0x13e>
 80094f4:	1cc8      	adds	r0, r1, #3
 80094f6:	db02      	blt.n	80094fe <_printf_float+0x136>
 80094f8:	6863      	ldr	r3, [r4, #4]
 80094fa:	4299      	cmp	r1, r3
 80094fc:	dd41      	ble.n	8009582 <_printf_float+0x1ba>
 80094fe:	f1ab 0302 	sub.w	r3, fp, #2
 8009502:	fa5f fb83 	uxtb.w	fp, r3
 8009506:	f1bb 0f65 	cmp.w	fp, #101	; 0x65
 800950a:	d820      	bhi.n	800954e <_printf_float+0x186>
 800950c:	3901      	subs	r1, #1
 800950e:	465a      	mov	r2, fp
 8009510:	f104 0050 	add.w	r0, r4, #80	; 0x50
 8009514:	9109      	str	r1, [sp, #36]	; 0x24
 8009516:	f7ff ff19 	bl	800934c <__exponent>
 800951a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800951c:	1813      	adds	r3, r2, r0
 800951e:	2a01      	cmp	r2, #1
 8009520:	4681      	mov	r9, r0
 8009522:	6123      	str	r3, [r4, #16]
 8009524:	dc02      	bgt.n	800952c <_printf_float+0x164>
 8009526:	6822      	ldr	r2, [r4, #0]
 8009528:	07d2      	lsls	r2, r2, #31
 800952a:	d501      	bpl.n	8009530 <_printf_float+0x168>
 800952c:	3301      	adds	r3, #1
 800952e:	6123      	str	r3, [r4, #16]
 8009530:	f89d 3023 	ldrb.w	r3, [sp, #35]	; 0x23
 8009534:	2b00      	cmp	r3, #0
 8009536:	d09c      	beq.n	8009472 <_printf_float+0xaa>
 8009538:	232d      	movs	r3, #45	; 0x2d
 800953a:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800953e:	e798      	b.n	8009472 <_printf_float+0xaa>
 8009540:	9a06      	ldr	r2, [sp, #24]
 8009542:	2a47      	cmp	r2, #71	; 0x47
 8009544:	d1be      	bne.n	80094c4 <_printf_float+0xfc>
 8009546:	2b00      	cmp	r3, #0
 8009548:	d1bc      	bne.n	80094c4 <_printf_float+0xfc>
 800954a:	2301      	movs	r3, #1
 800954c:	e7b9      	b.n	80094c2 <_printf_float+0xfa>
 800954e:	f1bb 0f66 	cmp.w	fp, #102	; 0x66
 8009552:	d118      	bne.n	8009586 <_printf_float+0x1be>
 8009554:	2900      	cmp	r1, #0
 8009556:	6863      	ldr	r3, [r4, #4]
 8009558:	dd0b      	ble.n	8009572 <_printf_float+0x1aa>
 800955a:	6121      	str	r1, [r4, #16]
 800955c:	b913      	cbnz	r3, 8009564 <_printf_float+0x19c>
 800955e:	6822      	ldr	r2, [r4, #0]
 8009560:	07d0      	lsls	r0, r2, #31
 8009562:	d502      	bpl.n	800956a <_printf_float+0x1a2>
 8009564:	3301      	adds	r3, #1
 8009566:	440b      	add	r3, r1
 8009568:	6123      	str	r3, [r4, #16]
 800956a:	65a1      	str	r1, [r4, #88]	; 0x58
 800956c:	f04f 0900 	mov.w	r9, #0
 8009570:	e7de      	b.n	8009530 <_printf_float+0x168>
 8009572:	b913      	cbnz	r3, 800957a <_printf_float+0x1b2>
 8009574:	6822      	ldr	r2, [r4, #0]
 8009576:	07d2      	lsls	r2, r2, #31
 8009578:	d501      	bpl.n	800957e <_printf_float+0x1b6>
 800957a:	3302      	adds	r3, #2
 800957c:	e7f4      	b.n	8009568 <_printf_float+0x1a0>
 800957e:	2301      	movs	r3, #1
 8009580:	e7f2      	b.n	8009568 <_printf_float+0x1a0>
 8009582:	f04f 0b67 	mov.w	fp, #103	; 0x67
 8009586:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8009588:	4299      	cmp	r1, r3
 800958a:	db05      	blt.n	8009598 <_printf_float+0x1d0>
 800958c:	6823      	ldr	r3, [r4, #0]
 800958e:	6121      	str	r1, [r4, #16]
 8009590:	07d8      	lsls	r0, r3, #31
 8009592:	d5ea      	bpl.n	800956a <_printf_float+0x1a2>
 8009594:	1c4b      	adds	r3, r1, #1
 8009596:	e7e7      	b.n	8009568 <_printf_float+0x1a0>
 8009598:	2900      	cmp	r1, #0
 800959a:	bfd4      	ite	le
 800959c:	f1c1 0202 	rsble	r2, r1, #2
 80095a0:	2201      	movgt	r2, #1
 80095a2:	4413      	add	r3, r2
 80095a4:	e7e0      	b.n	8009568 <_printf_float+0x1a0>
 80095a6:	6823      	ldr	r3, [r4, #0]
 80095a8:	055a      	lsls	r2, r3, #21
 80095aa:	d407      	bmi.n	80095bc <_printf_float+0x1f4>
 80095ac:	6923      	ldr	r3, [r4, #16]
 80095ae:	4642      	mov	r2, r8
 80095b0:	4631      	mov	r1, r6
 80095b2:	4628      	mov	r0, r5
 80095b4:	47b8      	blx	r7
 80095b6:	3001      	adds	r0, #1
 80095b8:	d12c      	bne.n	8009614 <_printf_float+0x24c>
 80095ba:	e764      	b.n	8009486 <_printf_float+0xbe>
 80095bc:	f1bb 0f65 	cmp.w	fp, #101	; 0x65
 80095c0:	f240 80e0 	bls.w	8009784 <_printf_float+0x3bc>
 80095c4:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 80095c8:	2200      	movs	r2, #0
 80095ca:	2300      	movs	r3, #0
 80095cc:	f7f7 fa84 	bl	8000ad8 <__aeabi_dcmpeq>
 80095d0:	2800      	cmp	r0, #0
 80095d2:	d034      	beq.n	800963e <_printf_float+0x276>
 80095d4:	4a37      	ldr	r2, [pc, #220]	; (80096b4 <_printf_float+0x2ec>)
 80095d6:	2301      	movs	r3, #1
 80095d8:	4631      	mov	r1, r6
 80095da:	4628      	mov	r0, r5
 80095dc:	47b8      	blx	r7
 80095de:	3001      	adds	r0, #1
 80095e0:	f43f af51 	beq.w	8009486 <_printf_float+0xbe>
 80095e4:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 80095e8:	429a      	cmp	r2, r3
 80095ea:	db02      	blt.n	80095f2 <_printf_float+0x22a>
 80095ec:	6823      	ldr	r3, [r4, #0]
 80095ee:	07d8      	lsls	r0, r3, #31
 80095f0:	d510      	bpl.n	8009614 <_printf_float+0x24c>
 80095f2:	ee18 3a10 	vmov	r3, s16
 80095f6:	4652      	mov	r2, sl
 80095f8:	4631      	mov	r1, r6
 80095fa:	4628      	mov	r0, r5
 80095fc:	47b8      	blx	r7
 80095fe:	3001      	adds	r0, #1
 8009600:	f43f af41 	beq.w	8009486 <_printf_float+0xbe>
 8009604:	f04f 0800 	mov.w	r8, #0
 8009608:	f104 091a 	add.w	r9, r4, #26
 800960c:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800960e:	3b01      	subs	r3, #1
 8009610:	4543      	cmp	r3, r8
 8009612:	dc09      	bgt.n	8009628 <_printf_float+0x260>
 8009614:	6823      	ldr	r3, [r4, #0]
 8009616:	079b      	lsls	r3, r3, #30
 8009618:	f100 8107 	bmi.w	800982a <_printf_float+0x462>
 800961c:	68e0      	ldr	r0, [r4, #12]
 800961e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8009620:	4298      	cmp	r0, r3
 8009622:	bfb8      	it	lt
 8009624:	4618      	movlt	r0, r3
 8009626:	e730      	b.n	800948a <_printf_float+0xc2>
 8009628:	2301      	movs	r3, #1
 800962a:	464a      	mov	r2, r9
 800962c:	4631      	mov	r1, r6
 800962e:	4628      	mov	r0, r5
 8009630:	47b8      	blx	r7
 8009632:	3001      	adds	r0, #1
 8009634:	f43f af27 	beq.w	8009486 <_printf_float+0xbe>
 8009638:	f108 0801 	add.w	r8, r8, #1
 800963c:	e7e6      	b.n	800960c <_printf_float+0x244>
 800963e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8009640:	2b00      	cmp	r3, #0
 8009642:	dc39      	bgt.n	80096b8 <_printf_float+0x2f0>
 8009644:	4a1b      	ldr	r2, [pc, #108]	; (80096b4 <_printf_float+0x2ec>)
 8009646:	2301      	movs	r3, #1
 8009648:	4631      	mov	r1, r6
 800964a:	4628      	mov	r0, r5
 800964c:	47b8      	blx	r7
 800964e:	3001      	adds	r0, #1
 8009650:	f43f af19 	beq.w	8009486 <_printf_float+0xbe>
 8009654:	e9dd 3209 	ldrd	r3, r2, [sp, #36]	; 0x24
 8009658:	4313      	orrs	r3, r2
 800965a:	d102      	bne.n	8009662 <_printf_float+0x29a>
 800965c:	6823      	ldr	r3, [r4, #0]
 800965e:	07d9      	lsls	r1, r3, #31
 8009660:	d5d8      	bpl.n	8009614 <_printf_float+0x24c>
 8009662:	ee18 3a10 	vmov	r3, s16
 8009666:	4652      	mov	r2, sl
 8009668:	4631      	mov	r1, r6
 800966a:	4628      	mov	r0, r5
 800966c:	47b8      	blx	r7
 800966e:	3001      	adds	r0, #1
 8009670:	f43f af09 	beq.w	8009486 <_printf_float+0xbe>
 8009674:	f04f 0900 	mov.w	r9, #0
 8009678:	f104 0a1a 	add.w	sl, r4, #26
 800967c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800967e:	425b      	negs	r3, r3
 8009680:	454b      	cmp	r3, r9
 8009682:	dc01      	bgt.n	8009688 <_printf_float+0x2c0>
 8009684:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8009686:	e792      	b.n	80095ae <_printf_float+0x1e6>
 8009688:	2301      	movs	r3, #1
 800968a:	4652      	mov	r2, sl
 800968c:	4631      	mov	r1, r6
 800968e:	4628      	mov	r0, r5
 8009690:	47b8      	blx	r7
 8009692:	3001      	adds	r0, #1
 8009694:	f43f aef7 	beq.w	8009486 <_printf_float+0xbe>
 8009698:	f109 0901 	add.w	r9, r9, #1
 800969c:	e7ee      	b.n	800967c <_printf_float+0x2b4>
 800969e:	bf00      	nop
 80096a0:	7fefffff 	.word	0x7fefffff
 80096a4:	0800d4b9 	.word	0x0800d4b9
 80096a8:	0800d4bd 	.word	0x0800d4bd
 80096ac:	0800d4c1 	.word	0x0800d4c1
 80096b0:	0800d4c5 	.word	0x0800d4c5
 80096b4:	0800d4c9 	.word	0x0800d4c9
 80096b8:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80096ba:	6da3      	ldr	r3, [r4, #88]	; 0x58
 80096bc:	429a      	cmp	r2, r3
 80096be:	bfa8      	it	ge
 80096c0:	461a      	movge	r2, r3
 80096c2:	2a00      	cmp	r2, #0
 80096c4:	4691      	mov	r9, r2
 80096c6:	dc37      	bgt.n	8009738 <_printf_float+0x370>
 80096c8:	f04f 0b00 	mov.w	fp, #0
 80096cc:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 80096d0:	f104 021a 	add.w	r2, r4, #26
 80096d4:	6da3      	ldr	r3, [r4, #88]	; 0x58
 80096d6:	9305      	str	r3, [sp, #20]
 80096d8:	eba3 0309 	sub.w	r3, r3, r9
 80096dc:	455b      	cmp	r3, fp
 80096de:	dc33      	bgt.n	8009748 <_printf_float+0x380>
 80096e0:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 80096e4:	429a      	cmp	r2, r3
 80096e6:	db3b      	blt.n	8009760 <_printf_float+0x398>
 80096e8:	6823      	ldr	r3, [r4, #0]
 80096ea:	07da      	lsls	r2, r3, #31
 80096ec:	d438      	bmi.n	8009760 <_printf_float+0x398>
 80096ee:	e9dd 3209 	ldrd	r3, r2, [sp, #36]	; 0x24
 80096f2:	eba2 0903 	sub.w	r9, r2, r3
 80096f6:	9b05      	ldr	r3, [sp, #20]
 80096f8:	1ad2      	subs	r2, r2, r3
 80096fa:	4591      	cmp	r9, r2
 80096fc:	bfa8      	it	ge
 80096fe:	4691      	movge	r9, r2
 8009700:	f1b9 0f00 	cmp.w	r9, #0
 8009704:	dc35      	bgt.n	8009772 <_printf_float+0x3aa>
 8009706:	f04f 0800 	mov.w	r8, #0
 800970a:	ea29 79e9 	bic.w	r9, r9, r9, asr #31
 800970e:	f104 0a1a 	add.w	sl, r4, #26
 8009712:	e9dd 2309 	ldrd	r2, r3, [sp, #36]	; 0x24
 8009716:	1a9b      	subs	r3, r3, r2
 8009718:	eba3 0309 	sub.w	r3, r3, r9
 800971c:	4543      	cmp	r3, r8
 800971e:	f77f af79 	ble.w	8009614 <_printf_float+0x24c>
 8009722:	2301      	movs	r3, #1
 8009724:	4652      	mov	r2, sl
 8009726:	4631      	mov	r1, r6
 8009728:	4628      	mov	r0, r5
 800972a:	47b8      	blx	r7
 800972c:	3001      	adds	r0, #1
 800972e:	f43f aeaa 	beq.w	8009486 <_printf_float+0xbe>
 8009732:	f108 0801 	add.w	r8, r8, #1
 8009736:	e7ec      	b.n	8009712 <_printf_float+0x34a>
 8009738:	4613      	mov	r3, r2
 800973a:	4631      	mov	r1, r6
 800973c:	4642      	mov	r2, r8
 800973e:	4628      	mov	r0, r5
 8009740:	47b8      	blx	r7
 8009742:	3001      	adds	r0, #1
 8009744:	d1c0      	bne.n	80096c8 <_printf_float+0x300>
 8009746:	e69e      	b.n	8009486 <_printf_float+0xbe>
 8009748:	2301      	movs	r3, #1
 800974a:	4631      	mov	r1, r6
 800974c:	4628      	mov	r0, r5
 800974e:	9205      	str	r2, [sp, #20]
 8009750:	47b8      	blx	r7
 8009752:	3001      	adds	r0, #1
 8009754:	f43f ae97 	beq.w	8009486 <_printf_float+0xbe>
 8009758:	9a05      	ldr	r2, [sp, #20]
 800975a:	f10b 0b01 	add.w	fp, fp, #1
 800975e:	e7b9      	b.n	80096d4 <_printf_float+0x30c>
 8009760:	ee18 3a10 	vmov	r3, s16
 8009764:	4652      	mov	r2, sl
 8009766:	4631      	mov	r1, r6
 8009768:	4628      	mov	r0, r5
 800976a:	47b8      	blx	r7
 800976c:	3001      	adds	r0, #1
 800976e:	d1be      	bne.n	80096ee <_printf_float+0x326>
 8009770:	e689      	b.n	8009486 <_printf_float+0xbe>
 8009772:	9a05      	ldr	r2, [sp, #20]
 8009774:	464b      	mov	r3, r9
 8009776:	4442      	add	r2, r8
 8009778:	4631      	mov	r1, r6
 800977a:	4628      	mov	r0, r5
 800977c:	47b8      	blx	r7
 800977e:	3001      	adds	r0, #1
 8009780:	d1c1      	bne.n	8009706 <_printf_float+0x33e>
 8009782:	e680      	b.n	8009486 <_printf_float+0xbe>
 8009784:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8009786:	2a01      	cmp	r2, #1
 8009788:	dc01      	bgt.n	800978e <_printf_float+0x3c6>
 800978a:	07db      	lsls	r3, r3, #31
 800978c:	d53a      	bpl.n	8009804 <_printf_float+0x43c>
 800978e:	2301      	movs	r3, #1
 8009790:	4642      	mov	r2, r8
 8009792:	4631      	mov	r1, r6
 8009794:	4628      	mov	r0, r5
 8009796:	47b8      	blx	r7
 8009798:	3001      	adds	r0, #1
 800979a:	f43f ae74 	beq.w	8009486 <_printf_float+0xbe>
 800979e:	ee18 3a10 	vmov	r3, s16
 80097a2:	4652      	mov	r2, sl
 80097a4:	4631      	mov	r1, r6
 80097a6:	4628      	mov	r0, r5
 80097a8:	47b8      	blx	r7
 80097aa:	3001      	adds	r0, #1
 80097ac:	f43f ae6b 	beq.w	8009486 <_printf_float+0xbe>
 80097b0:	e9d4 0112 	ldrd	r0, r1, [r4, #72]	; 0x48
 80097b4:	2200      	movs	r2, #0
 80097b6:	2300      	movs	r3, #0
 80097b8:	f8dd a028 	ldr.w	sl, [sp, #40]	; 0x28
 80097bc:	f7f7 f98c 	bl	8000ad8 <__aeabi_dcmpeq>
 80097c0:	b9d8      	cbnz	r0, 80097fa <_printf_float+0x432>
 80097c2:	f10a 33ff 	add.w	r3, sl, #4294967295
 80097c6:	f108 0201 	add.w	r2, r8, #1
 80097ca:	4631      	mov	r1, r6
 80097cc:	4628      	mov	r0, r5
 80097ce:	47b8      	blx	r7
 80097d0:	3001      	adds	r0, #1
 80097d2:	d10e      	bne.n	80097f2 <_printf_float+0x42a>
 80097d4:	e657      	b.n	8009486 <_printf_float+0xbe>
 80097d6:	2301      	movs	r3, #1
 80097d8:	4652      	mov	r2, sl
 80097da:	4631      	mov	r1, r6
 80097dc:	4628      	mov	r0, r5
 80097de:	47b8      	blx	r7
 80097e0:	3001      	adds	r0, #1
 80097e2:	f43f ae50 	beq.w	8009486 <_printf_float+0xbe>
 80097e6:	f108 0801 	add.w	r8, r8, #1
 80097ea:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80097ec:	3b01      	subs	r3, #1
 80097ee:	4543      	cmp	r3, r8
 80097f0:	dcf1      	bgt.n	80097d6 <_printf_float+0x40e>
 80097f2:	464b      	mov	r3, r9
 80097f4:	f104 0250 	add.w	r2, r4, #80	; 0x50
 80097f8:	e6da      	b.n	80095b0 <_printf_float+0x1e8>
 80097fa:	f04f 0800 	mov.w	r8, #0
 80097fe:	f104 0a1a 	add.w	sl, r4, #26
 8009802:	e7f2      	b.n	80097ea <_printf_float+0x422>
 8009804:	2301      	movs	r3, #1
 8009806:	4642      	mov	r2, r8
 8009808:	e7df      	b.n	80097ca <_printf_float+0x402>
 800980a:	2301      	movs	r3, #1
 800980c:	464a      	mov	r2, r9
 800980e:	4631      	mov	r1, r6
 8009810:	4628      	mov	r0, r5
 8009812:	47b8      	blx	r7
 8009814:	3001      	adds	r0, #1
 8009816:	f43f ae36 	beq.w	8009486 <_printf_float+0xbe>
 800981a:	f108 0801 	add.w	r8, r8, #1
 800981e:	68e3      	ldr	r3, [r4, #12]
 8009820:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8009822:	1a5b      	subs	r3, r3, r1
 8009824:	4543      	cmp	r3, r8
 8009826:	dcf0      	bgt.n	800980a <_printf_float+0x442>
 8009828:	e6f8      	b.n	800961c <_printf_float+0x254>
 800982a:	f04f 0800 	mov.w	r8, #0
 800982e:	f104 0919 	add.w	r9, r4, #25
 8009832:	e7f4      	b.n	800981e <_printf_float+0x456>

08009834 <_printf_common>:
 8009834:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8009838:	4616      	mov	r6, r2
 800983a:	4699      	mov	r9, r3
 800983c:	688a      	ldr	r2, [r1, #8]
 800983e:	690b      	ldr	r3, [r1, #16]
 8009840:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8009844:	4293      	cmp	r3, r2
 8009846:	bfb8      	it	lt
 8009848:	4613      	movlt	r3, r2
 800984a:	6033      	str	r3, [r6, #0]
 800984c:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8009850:	4607      	mov	r7, r0
 8009852:	460c      	mov	r4, r1
 8009854:	b10a      	cbz	r2, 800985a <_printf_common+0x26>
 8009856:	3301      	adds	r3, #1
 8009858:	6033      	str	r3, [r6, #0]
 800985a:	6823      	ldr	r3, [r4, #0]
 800985c:	0699      	lsls	r1, r3, #26
 800985e:	bf42      	ittt	mi
 8009860:	6833      	ldrmi	r3, [r6, #0]
 8009862:	3302      	addmi	r3, #2
 8009864:	6033      	strmi	r3, [r6, #0]
 8009866:	6825      	ldr	r5, [r4, #0]
 8009868:	f015 0506 	ands.w	r5, r5, #6
 800986c:	d106      	bne.n	800987c <_printf_common+0x48>
 800986e:	f104 0a19 	add.w	sl, r4, #25
 8009872:	68e3      	ldr	r3, [r4, #12]
 8009874:	6832      	ldr	r2, [r6, #0]
 8009876:	1a9b      	subs	r3, r3, r2
 8009878:	42ab      	cmp	r3, r5
 800987a:	dc26      	bgt.n	80098ca <_printf_common+0x96>
 800987c:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8009880:	1e13      	subs	r3, r2, #0
 8009882:	6822      	ldr	r2, [r4, #0]
 8009884:	bf18      	it	ne
 8009886:	2301      	movne	r3, #1
 8009888:	0692      	lsls	r2, r2, #26
 800988a:	d42b      	bmi.n	80098e4 <_printf_common+0xb0>
 800988c:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8009890:	4649      	mov	r1, r9
 8009892:	4638      	mov	r0, r7
 8009894:	47c0      	blx	r8
 8009896:	3001      	adds	r0, #1
 8009898:	d01e      	beq.n	80098d8 <_printf_common+0xa4>
 800989a:	6823      	ldr	r3, [r4, #0]
 800989c:	6922      	ldr	r2, [r4, #16]
 800989e:	f003 0306 	and.w	r3, r3, #6
 80098a2:	2b04      	cmp	r3, #4
 80098a4:	bf02      	ittt	eq
 80098a6:	68e5      	ldreq	r5, [r4, #12]
 80098a8:	6833      	ldreq	r3, [r6, #0]
 80098aa:	1aed      	subeq	r5, r5, r3
 80098ac:	68a3      	ldr	r3, [r4, #8]
 80098ae:	bf0c      	ite	eq
 80098b0:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 80098b4:	2500      	movne	r5, #0
 80098b6:	4293      	cmp	r3, r2
 80098b8:	bfc4      	itt	gt
 80098ba:	1a9b      	subgt	r3, r3, r2
 80098bc:	18ed      	addgt	r5, r5, r3
 80098be:	2600      	movs	r6, #0
 80098c0:	341a      	adds	r4, #26
 80098c2:	42b5      	cmp	r5, r6
 80098c4:	d11a      	bne.n	80098fc <_printf_common+0xc8>
 80098c6:	2000      	movs	r0, #0
 80098c8:	e008      	b.n	80098dc <_printf_common+0xa8>
 80098ca:	2301      	movs	r3, #1
 80098cc:	4652      	mov	r2, sl
 80098ce:	4649      	mov	r1, r9
 80098d0:	4638      	mov	r0, r7
 80098d2:	47c0      	blx	r8
 80098d4:	3001      	adds	r0, #1
 80098d6:	d103      	bne.n	80098e0 <_printf_common+0xac>
 80098d8:	f04f 30ff 	mov.w	r0, #4294967295
 80098dc:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80098e0:	3501      	adds	r5, #1
 80098e2:	e7c6      	b.n	8009872 <_printf_common+0x3e>
 80098e4:	18e1      	adds	r1, r4, r3
 80098e6:	1c5a      	adds	r2, r3, #1
 80098e8:	2030      	movs	r0, #48	; 0x30
 80098ea:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 80098ee:	4422      	add	r2, r4
 80098f0:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 80098f4:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 80098f8:	3302      	adds	r3, #2
 80098fa:	e7c7      	b.n	800988c <_printf_common+0x58>
 80098fc:	2301      	movs	r3, #1
 80098fe:	4622      	mov	r2, r4
 8009900:	4649      	mov	r1, r9
 8009902:	4638      	mov	r0, r7
 8009904:	47c0      	blx	r8
 8009906:	3001      	adds	r0, #1
 8009908:	d0e6      	beq.n	80098d8 <_printf_common+0xa4>
 800990a:	3601      	adds	r6, #1
 800990c:	e7d9      	b.n	80098c2 <_printf_common+0x8e>
	...

08009910 <_printf_i>:
 8009910:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8009914:	7e0f      	ldrb	r7, [r1, #24]
 8009916:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8009918:	2f78      	cmp	r7, #120	; 0x78
 800991a:	4691      	mov	r9, r2
 800991c:	4680      	mov	r8, r0
 800991e:	460c      	mov	r4, r1
 8009920:	469a      	mov	sl, r3
 8009922:	f101 0243 	add.w	r2, r1, #67	; 0x43
 8009926:	d807      	bhi.n	8009938 <_printf_i+0x28>
 8009928:	2f62      	cmp	r7, #98	; 0x62
 800992a:	d80a      	bhi.n	8009942 <_printf_i+0x32>
 800992c:	2f00      	cmp	r7, #0
 800992e:	f000 80d4 	beq.w	8009ada <_printf_i+0x1ca>
 8009932:	2f58      	cmp	r7, #88	; 0x58
 8009934:	f000 80c0 	beq.w	8009ab8 <_printf_i+0x1a8>
 8009938:	f104 0542 	add.w	r5, r4, #66	; 0x42
 800993c:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8009940:	e03a      	b.n	80099b8 <_printf_i+0xa8>
 8009942:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8009946:	2b15      	cmp	r3, #21
 8009948:	d8f6      	bhi.n	8009938 <_printf_i+0x28>
 800994a:	a101      	add	r1, pc, #4	; (adr r1, 8009950 <_printf_i+0x40>)
 800994c:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8009950:	080099a9 	.word	0x080099a9
 8009954:	080099bd 	.word	0x080099bd
 8009958:	08009939 	.word	0x08009939
 800995c:	08009939 	.word	0x08009939
 8009960:	08009939 	.word	0x08009939
 8009964:	08009939 	.word	0x08009939
 8009968:	080099bd 	.word	0x080099bd
 800996c:	08009939 	.word	0x08009939
 8009970:	08009939 	.word	0x08009939
 8009974:	08009939 	.word	0x08009939
 8009978:	08009939 	.word	0x08009939
 800997c:	08009ac1 	.word	0x08009ac1
 8009980:	080099e9 	.word	0x080099e9
 8009984:	08009a7b 	.word	0x08009a7b
 8009988:	08009939 	.word	0x08009939
 800998c:	08009939 	.word	0x08009939
 8009990:	08009ae3 	.word	0x08009ae3
 8009994:	08009939 	.word	0x08009939
 8009998:	080099e9 	.word	0x080099e9
 800999c:	08009939 	.word	0x08009939
 80099a0:	08009939 	.word	0x08009939
 80099a4:	08009a83 	.word	0x08009a83
 80099a8:	682b      	ldr	r3, [r5, #0]
 80099aa:	1d1a      	adds	r2, r3, #4
 80099ac:	681b      	ldr	r3, [r3, #0]
 80099ae:	602a      	str	r2, [r5, #0]
 80099b0:	f104 0542 	add.w	r5, r4, #66	; 0x42
 80099b4:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 80099b8:	2301      	movs	r3, #1
 80099ba:	e09f      	b.n	8009afc <_printf_i+0x1ec>
 80099bc:	6820      	ldr	r0, [r4, #0]
 80099be:	682b      	ldr	r3, [r5, #0]
 80099c0:	0607      	lsls	r7, r0, #24
 80099c2:	f103 0104 	add.w	r1, r3, #4
 80099c6:	6029      	str	r1, [r5, #0]
 80099c8:	d501      	bpl.n	80099ce <_printf_i+0xbe>
 80099ca:	681e      	ldr	r6, [r3, #0]
 80099cc:	e003      	b.n	80099d6 <_printf_i+0xc6>
 80099ce:	0646      	lsls	r6, r0, #25
 80099d0:	d5fb      	bpl.n	80099ca <_printf_i+0xba>
 80099d2:	f9b3 6000 	ldrsh.w	r6, [r3]
 80099d6:	2e00      	cmp	r6, #0
 80099d8:	da03      	bge.n	80099e2 <_printf_i+0xd2>
 80099da:	232d      	movs	r3, #45	; 0x2d
 80099dc:	4276      	negs	r6, r6
 80099de:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 80099e2:	485a      	ldr	r0, [pc, #360]	; (8009b4c <_printf_i+0x23c>)
 80099e4:	230a      	movs	r3, #10
 80099e6:	e012      	b.n	8009a0e <_printf_i+0xfe>
 80099e8:	682b      	ldr	r3, [r5, #0]
 80099ea:	6820      	ldr	r0, [r4, #0]
 80099ec:	1d19      	adds	r1, r3, #4
 80099ee:	6029      	str	r1, [r5, #0]
 80099f0:	0605      	lsls	r5, r0, #24
 80099f2:	d501      	bpl.n	80099f8 <_printf_i+0xe8>
 80099f4:	681e      	ldr	r6, [r3, #0]
 80099f6:	e002      	b.n	80099fe <_printf_i+0xee>
 80099f8:	0641      	lsls	r1, r0, #25
 80099fa:	d5fb      	bpl.n	80099f4 <_printf_i+0xe4>
 80099fc:	881e      	ldrh	r6, [r3, #0]
 80099fe:	4853      	ldr	r0, [pc, #332]	; (8009b4c <_printf_i+0x23c>)
 8009a00:	2f6f      	cmp	r7, #111	; 0x6f
 8009a02:	bf0c      	ite	eq
 8009a04:	2308      	moveq	r3, #8
 8009a06:	230a      	movne	r3, #10
 8009a08:	2100      	movs	r1, #0
 8009a0a:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8009a0e:	6865      	ldr	r5, [r4, #4]
 8009a10:	60a5      	str	r5, [r4, #8]
 8009a12:	2d00      	cmp	r5, #0
 8009a14:	bfa2      	ittt	ge
 8009a16:	6821      	ldrge	r1, [r4, #0]
 8009a18:	f021 0104 	bicge.w	r1, r1, #4
 8009a1c:	6021      	strge	r1, [r4, #0]
 8009a1e:	b90e      	cbnz	r6, 8009a24 <_printf_i+0x114>
 8009a20:	2d00      	cmp	r5, #0
 8009a22:	d04b      	beq.n	8009abc <_printf_i+0x1ac>
 8009a24:	4615      	mov	r5, r2
 8009a26:	fbb6 f1f3 	udiv	r1, r6, r3
 8009a2a:	fb03 6711 	mls	r7, r3, r1, r6
 8009a2e:	5dc7      	ldrb	r7, [r0, r7]
 8009a30:	f805 7d01 	strb.w	r7, [r5, #-1]!
 8009a34:	4637      	mov	r7, r6
 8009a36:	42bb      	cmp	r3, r7
 8009a38:	460e      	mov	r6, r1
 8009a3a:	d9f4      	bls.n	8009a26 <_printf_i+0x116>
 8009a3c:	2b08      	cmp	r3, #8
 8009a3e:	d10b      	bne.n	8009a58 <_printf_i+0x148>
 8009a40:	6823      	ldr	r3, [r4, #0]
 8009a42:	07de      	lsls	r6, r3, #31
 8009a44:	d508      	bpl.n	8009a58 <_printf_i+0x148>
 8009a46:	6923      	ldr	r3, [r4, #16]
 8009a48:	6861      	ldr	r1, [r4, #4]
 8009a4a:	4299      	cmp	r1, r3
 8009a4c:	bfde      	ittt	le
 8009a4e:	2330      	movle	r3, #48	; 0x30
 8009a50:	f805 3c01 	strble.w	r3, [r5, #-1]
 8009a54:	f105 35ff 	addle.w	r5, r5, #4294967295
 8009a58:	1b52      	subs	r2, r2, r5
 8009a5a:	6122      	str	r2, [r4, #16]
 8009a5c:	f8cd a000 	str.w	sl, [sp]
 8009a60:	464b      	mov	r3, r9
 8009a62:	aa03      	add	r2, sp, #12
 8009a64:	4621      	mov	r1, r4
 8009a66:	4640      	mov	r0, r8
 8009a68:	f7ff fee4 	bl	8009834 <_printf_common>
 8009a6c:	3001      	adds	r0, #1
 8009a6e:	d14a      	bne.n	8009b06 <_printf_i+0x1f6>
 8009a70:	f04f 30ff 	mov.w	r0, #4294967295
 8009a74:	b004      	add	sp, #16
 8009a76:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8009a7a:	6823      	ldr	r3, [r4, #0]
 8009a7c:	f043 0320 	orr.w	r3, r3, #32
 8009a80:	6023      	str	r3, [r4, #0]
 8009a82:	4833      	ldr	r0, [pc, #204]	; (8009b50 <_printf_i+0x240>)
 8009a84:	2778      	movs	r7, #120	; 0x78
 8009a86:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 8009a8a:	6823      	ldr	r3, [r4, #0]
 8009a8c:	6829      	ldr	r1, [r5, #0]
 8009a8e:	061f      	lsls	r7, r3, #24
 8009a90:	f851 6b04 	ldr.w	r6, [r1], #4
 8009a94:	d402      	bmi.n	8009a9c <_printf_i+0x18c>
 8009a96:	065f      	lsls	r7, r3, #25
 8009a98:	bf48      	it	mi
 8009a9a:	b2b6      	uxthmi	r6, r6
 8009a9c:	07df      	lsls	r7, r3, #31
 8009a9e:	bf48      	it	mi
 8009aa0:	f043 0320 	orrmi.w	r3, r3, #32
 8009aa4:	6029      	str	r1, [r5, #0]
 8009aa6:	bf48      	it	mi
 8009aa8:	6023      	strmi	r3, [r4, #0]
 8009aaa:	b91e      	cbnz	r6, 8009ab4 <_printf_i+0x1a4>
 8009aac:	6823      	ldr	r3, [r4, #0]
 8009aae:	f023 0320 	bic.w	r3, r3, #32
 8009ab2:	6023      	str	r3, [r4, #0]
 8009ab4:	2310      	movs	r3, #16
 8009ab6:	e7a7      	b.n	8009a08 <_printf_i+0xf8>
 8009ab8:	4824      	ldr	r0, [pc, #144]	; (8009b4c <_printf_i+0x23c>)
 8009aba:	e7e4      	b.n	8009a86 <_printf_i+0x176>
 8009abc:	4615      	mov	r5, r2
 8009abe:	e7bd      	b.n	8009a3c <_printf_i+0x12c>
 8009ac0:	682b      	ldr	r3, [r5, #0]
 8009ac2:	6826      	ldr	r6, [r4, #0]
 8009ac4:	6961      	ldr	r1, [r4, #20]
 8009ac6:	1d18      	adds	r0, r3, #4
 8009ac8:	6028      	str	r0, [r5, #0]
 8009aca:	0635      	lsls	r5, r6, #24
 8009acc:	681b      	ldr	r3, [r3, #0]
 8009ace:	d501      	bpl.n	8009ad4 <_printf_i+0x1c4>
 8009ad0:	6019      	str	r1, [r3, #0]
 8009ad2:	e002      	b.n	8009ada <_printf_i+0x1ca>
 8009ad4:	0670      	lsls	r0, r6, #25
 8009ad6:	d5fb      	bpl.n	8009ad0 <_printf_i+0x1c0>
 8009ad8:	8019      	strh	r1, [r3, #0]
 8009ada:	2300      	movs	r3, #0
 8009adc:	6123      	str	r3, [r4, #16]
 8009ade:	4615      	mov	r5, r2
 8009ae0:	e7bc      	b.n	8009a5c <_printf_i+0x14c>
 8009ae2:	682b      	ldr	r3, [r5, #0]
 8009ae4:	1d1a      	adds	r2, r3, #4
 8009ae6:	602a      	str	r2, [r5, #0]
 8009ae8:	681d      	ldr	r5, [r3, #0]
 8009aea:	6862      	ldr	r2, [r4, #4]
 8009aec:	2100      	movs	r1, #0
 8009aee:	4628      	mov	r0, r5
 8009af0:	f7f6 fb76 	bl	80001e0 <memchr>
 8009af4:	b108      	cbz	r0, 8009afa <_printf_i+0x1ea>
 8009af6:	1b40      	subs	r0, r0, r5
 8009af8:	6060      	str	r0, [r4, #4]
 8009afa:	6863      	ldr	r3, [r4, #4]
 8009afc:	6123      	str	r3, [r4, #16]
 8009afe:	2300      	movs	r3, #0
 8009b00:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8009b04:	e7aa      	b.n	8009a5c <_printf_i+0x14c>
 8009b06:	6923      	ldr	r3, [r4, #16]
 8009b08:	462a      	mov	r2, r5
 8009b0a:	4649      	mov	r1, r9
 8009b0c:	4640      	mov	r0, r8
 8009b0e:	47d0      	blx	sl
 8009b10:	3001      	adds	r0, #1
 8009b12:	d0ad      	beq.n	8009a70 <_printf_i+0x160>
 8009b14:	6823      	ldr	r3, [r4, #0]
 8009b16:	079b      	lsls	r3, r3, #30
 8009b18:	d413      	bmi.n	8009b42 <_printf_i+0x232>
 8009b1a:	68e0      	ldr	r0, [r4, #12]
 8009b1c:	9b03      	ldr	r3, [sp, #12]
 8009b1e:	4298      	cmp	r0, r3
 8009b20:	bfb8      	it	lt
 8009b22:	4618      	movlt	r0, r3
 8009b24:	e7a6      	b.n	8009a74 <_printf_i+0x164>
 8009b26:	2301      	movs	r3, #1
 8009b28:	4632      	mov	r2, r6
 8009b2a:	4649      	mov	r1, r9
 8009b2c:	4640      	mov	r0, r8
 8009b2e:	47d0      	blx	sl
 8009b30:	3001      	adds	r0, #1
 8009b32:	d09d      	beq.n	8009a70 <_printf_i+0x160>
 8009b34:	3501      	adds	r5, #1
 8009b36:	68e3      	ldr	r3, [r4, #12]
 8009b38:	9903      	ldr	r1, [sp, #12]
 8009b3a:	1a5b      	subs	r3, r3, r1
 8009b3c:	42ab      	cmp	r3, r5
 8009b3e:	dcf2      	bgt.n	8009b26 <_printf_i+0x216>
 8009b40:	e7eb      	b.n	8009b1a <_printf_i+0x20a>
 8009b42:	2500      	movs	r5, #0
 8009b44:	f104 0619 	add.w	r6, r4, #25
 8009b48:	e7f5      	b.n	8009b36 <_printf_i+0x226>
 8009b4a:	bf00      	nop
 8009b4c:	0800d4cb 	.word	0x0800d4cb
 8009b50:	0800d4dc 	.word	0x0800d4dc

08009b54 <_scanf_float>:
 8009b54:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009b58:	b087      	sub	sp, #28
 8009b5a:	4617      	mov	r7, r2
 8009b5c:	9303      	str	r3, [sp, #12]
 8009b5e:	688b      	ldr	r3, [r1, #8]
 8009b60:	1e5a      	subs	r2, r3, #1
 8009b62:	f5b2 7fae 	cmp.w	r2, #348	; 0x15c
 8009b66:	bf83      	ittte	hi
 8009b68:	f46f 75ae 	mvnhi.w	r5, #348	; 0x15c
 8009b6c:	195b      	addhi	r3, r3, r5
 8009b6e:	9302      	strhi	r3, [sp, #8]
 8009b70:	2300      	movls	r3, #0
 8009b72:	bf86      	itte	hi
 8009b74:	f240 135d 	movwhi	r3, #349	; 0x15d
 8009b78:	608b      	strhi	r3, [r1, #8]
 8009b7a:	9302      	strls	r3, [sp, #8]
 8009b7c:	680b      	ldr	r3, [r1, #0]
 8009b7e:	468b      	mov	fp, r1
 8009b80:	2500      	movs	r5, #0
 8009b82:	f443 63f0 	orr.w	r3, r3, #1920	; 0x780
 8009b86:	f84b 3b1c 	str.w	r3, [fp], #28
 8009b8a:	e9cd 5504 	strd	r5, r5, [sp, #16]
 8009b8e:	4680      	mov	r8, r0
 8009b90:	460c      	mov	r4, r1
 8009b92:	465e      	mov	r6, fp
 8009b94:	46aa      	mov	sl, r5
 8009b96:	46a9      	mov	r9, r5
 8009b98:	9501      	str	r5, [sp, #4]
 8009b9a:	68a2      	ldr	r2, [r4, #8]
 8009b9c:	b152      	cbz	r2, 8009bb4 <_scanf_float+0x60>
 8009b9e:	683b      	ldr	r3, [r7, #0]
 8009ba0:	781b      	ldrb	r3, [r3, #0]
 8009ba2:	2b4e      	cmp	r3, #78	; 0x4e
 8009ba4:	d864      	bhi.n	8009c70 <_scanf_float+0x11c>
 8009ba6:	2b40      	cmp	r3, #64	; 0x40
 8009ba8:	d83c      	bhi.n	8009c24 <_scanf_float+0xd0>
 8009baa:	f1a3 012b 	sub.w	r1, r3, #43	; 0x2b
 8009bae:	b2c8      	uxtb	r0, r1
 8009bb0:	280e      	cmp	r0, #14
 8009bb2:	d93a      	bls.n	8009c2a <_scanf_float+0xd6>
 8009bb4:	f1b9 0f00 	cmp.w	r9, #0
 8009bb8:	d003      	beq.n	8009bc2 <_scanf_float+0x6e>
 8009bba:	6823      	ldr	r3, [r4, #0]
 8009bbc:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8009bc0:	6023      	str	r3, [r4, #0]
 8009bc2:	f10a 3aff 	add.w	sl, sl, #4294967295
 8009bc6:	f1ba 0f01 	cmp.w	sl, #1
 8009bca:	f200 8113 	bhi.w	8009df4 <_scanf_float+0x2a0>
 8009bce:	455e      	cmp	r6, fp
 8009bd0:	f200 8105 	bhi.w	8009dde <_scanf_float+0x28a>
 8009bd4:	2501      	movs	r5, #1
 8009bd6:	4628      	mov	r0, r5
 8009bd8:	b007      	add	sp, #28
 8009bda:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009bde:	f1a3 0261 	sub.w	r2, r3, #97	; 0x61
 8009be2:	2a0d      	cmp	r2, #13
 8009be4:	d8e6      	bhi.n	8009bb4 <_scanf_float+0x60>
 8009be6:	a101      	add	r1, pc, #4	; (adr r1, 8009bec <_scanf_float+0x98>)
 8009be8:	f851 f022 	ldr.w	pc, [r1, r2, lsl #2]
 8009bec:	08009d2b 	.word	0x08009d2b
 8009bf0:	08009bb5 	.word	0x08009bb5
 8009bf4:	08009bb5 	.word	0x08009bb5
 8009bf8:	08009bb5 	.word	0x08009bb5
 8009bfc:	08009d8b 	.word	0x08009d8b
 8009c00:	08009d63 	.word	0x08009d63
 8009c04:	08009bb5 	.word	0x08009bb5
 8009c08:	08009bb5 	.word	0x08009bb5
 8009c0c:	08009d39 	.word	0x08009d39
 8009c10:	08009bb5 	.word	0x08009bb5
 8009c14:	08009bb5 	.word	0x08009bb5
 8009c18:	08009bb5 	.word	0x08009bb5
 8009c1c:	08009bb5 	.word	0x08009bb5
 8009c20:	08009cf1 	.word	0x08009cf1
 8009c24:	f1a3 0241 	sub.w	r2, r3, #65	; 0x41
 8009c28:	e7db      	b.n	8009be2 <_scanf_float+0x8e>
 8009c2a:	290e      	cmp	r1, #14
 8009c2c:	d8c2      	bhi.n	8009bb4 <_scanf_float+0x60>
 8009c2e:	a001      	add	r0, pc, #4	; (adr r0, 8009c34 <_scanf_float+0xe0>)
 8009c30:	f850 f021 	ldr.w	pc, [r0, r1, lsl #2]
 8009c34:	08009ce3 	.word	0x08009ce3
 8009c38:	08009bb5 	.word	0x08009bb5
 8009c3c:	08009ce3 	.word	0x08009ce3
 8009c40:	08009d77 	.word	0x08009d77
 8009c44:	08009bb5 	.word	0x08009bb5
 8009c48:	08009c91 	.word	0x08009c91
 8009c4c:	08009ccd 	.word	0x08009ccd
 8009c50:	08009ccd 	.word	0x08009ccd
 8009c54:	08009ccd 	.word	0x08009ccd
 8009c58:	08009ccd 	.word	0x08009ccd
 8009c5c:	08009ccd 	.word	0x08009ccd
 8009c60:	08009ccd 	.word	0x08009ccd
 8009c64:	08009ccd 	.word	0x08009ccd
 8009c68:	08009ccd 	.word	0x08009ccd
 8009c6c:	08009ccd 	.word	0x08009ccd
 8009c70:	2b6e      	cmp	r3, #110	; 0x6e
 8009c72:	d809      	bhi.n	8009c88 <_scanf_float+0x134>
 8009c74:	2b60      	cmp	r3, #96	; 0x60
 8009c76:	d8b2      	bhi.n	8009bde <_scanf_float+0x8a>
 8009c78:	2b54      	cmp	r3, #84	; 0x54
 8009c7a:	d077      	beq.n	8009d6c <_scanf_float+0x218>
 8009c7c:	2b59      	cmp	r3, #89	; 0x59
 8009c7e:	d199      	bne.n	8009bb4 <_scanf_float+0x60>
 8009c80:	2d07      	cmp	r5, #7
 8009c82:	d197      	bne.n	8009bb4 <_scanf_float+0x60>
 8009c84:	2508      	movs	r5, #8
 8009c86:	e029      	b.n	8009cdc <_scanf_float+0x188>
 8009c88:	2b74      	cmp	r3, #116	; 0x74
 8009c8a:	d06f      	beq.n	8009d6c <_scanf_float+0x218>
 8009c8c:	2b79      	cmp	r3, #121	; 0x79
 8009c8e:	e7f6      	b.n	8009c7e <_scanf_float+0x12a>
 8009c90:	6821      	ldr	r1, [r4, #0]
 8009c92:	05c8      	lsls	r0, r1, #23
 8009c94:	d51a      	bpl.n	8009ccc <_scanf_float+0x178>
 8009c96:	9b02      	ldr	r3, [sp, #8]
 8009c98:	f021 0180 	bic.w	r1, r1, #128	; 0x80
 8009c9c:	6021      	str	r1, [r4, #0]
 8009c9e:	f109 0901 	add.w	r9, r9, #1
 8009ca2:	b11b      	cbz	r3, 8009cac <_scanf_float+0x158>
 8009ca4:	3b01      	subs	r3, #1
 8009ca6:	3201      	adds	r2, #1
 8009ca8:	9302      	str	r3, [sp, #8]
 8009caa:	60a2      	str	r2, [r4, #8]
 8009cac:	68a3      	ldr	r3, [r4, #8]
 8009cae:	3b01      	subs	r3, #1
 8009cb0:	60a3      	str	r3, [r4, #8]
 8009cb2:	6923      	ldr	r3, [r4, #16]
 8009cb4:	3301      	adds	r3, #1
 8009cb6:	6123      	str	r3, [r4, #16]
 8009cb8:	687b      	ldr	r3, [r7, #4]
 8009cba:	3b01      	subs	r3, #1
 8009cbc:	2b00      	cmp	r3, #0
 8009cbe:	607b      	str	r3, [r7, #4]
 8009cc0:	f340 8084 	ble.w	8009dcc <_scanf_float+0x278>
 8009cc4:	683b      	ldr	r3, [r7, #0]
 8009cc6:	3301      	adds	r3, #1
 8009cc8:	603b      	str	r3, [r7, #0]
 8009cca:	e766      	b.n	8009b9a <_scanf_float+0x46>
 8009ccc:	eb1a 0f05 	cmn.w	sl, r5
 8009cd0:	f47f af70 	bne.w	8009bb4 <_scanf_float+0x60>
 8009cd4:	6822      	ldr	r2, [r4, #0]
 8009cd6:	f422 72c0 	bic.w	r2, r2, #384	; 0x180
 8009cda:	6022      	str	r2, [r4, #0]
 8009cdc:	f806 3b01 	strb.w	r3, [r6], #1
 8009ce0:	e7e4      	b.n	8009cac <_scanf_float+0x158>
 8009ce2:	6822      	ldr	r2, [r4, #0]
 8009ce4:	0610      	lsls	r0, r2, #24
 8009ce6:	f57f af65 	bpl.w	8009bb4 <_scanf_float+0x60>
 8009cea:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8009cee:	e7f4      	b.n	8009cda <_scanf_float+0x186>
 8009cf0:	f1ba 0f00 	cmp.w	sl, #0
 8009cf4:	d10e      	bne.n	8009d14 <_scanf_float+0x1c0>
 8009cf6:	f1b9 0f00 	cmp.w	r9, #0
 8009cfa:	d10e      	bne.n	8009d1a <_scanf_float+0x1c6>
 8009cfc:	6822      	ldr	r2, [r4, #0]
 8009cfe:	f402 61e0 	and.w	r1, r2, #1792	; 0x700
 8009d02:	f5b1 6fe0 	cmp.w	r1, #1792	; 0x700
 8009d06:	d108      	bne.n	8009d1a <_scanf_float+0x1c6>
 8009d08:	f422 62f0 	bic.w	r2, r2, #1920	; 0x780
 8009d0c:	6022      	str	r2, [r4, #0]
 8009d0e:	f04f 0a01 	mov.w	sl, #1
 8009d12:	e7e3      	b.n	8009cdc <_scanf_float+0x188>
 8009d14:	f1ba 0f02 	cmp.w	sl, #2
 8009d18:	d055      	beq.n	8009dc6 <_scanf_float+0x272>
 8009d1a:	2d01      	cmp	r5, #1
 8009d1c:	d002      	beq.n	8009d24 <_scanf_float+0x1d0>
 8009d1e:	2d04      	cmp	r5, #4
 8009d20:	f47f af48 	bne.w	8009bb4 <_scanf_float+0x60>
 8009d24:	3501      	adds	r5, #1
 8009d26:	b2ed      	uxtb	r5, r5
 8009d28:	e7d8      	b.n	8009cdc <_scanf_float+0x188>
 8009d2a:	f1ba 0f01 	cmp.w	sl, #1
 8009d2e:	f47f af41 	bne.w	8009bb4 <_scanf_float+0x60>
 8009d32:	f04f 0a02 	mov.w	sl, #2
 8009d36:	e7d1      	b.n	8009cdc <_scanf_float+0x188>
 8009d38:	b97d      	cbnz	r5, 8009d5a <_scanf_float+0x206>
 8009d3a:	f1b9 0f00 	cmp.w	r9, #0
 8009d3e:	f47f af3c 	bne.w	8009bba <_scanf_float+0x66>
 8009d42:	6822      	ldr	r2, [r4, #0]
 8009d44:	f402 61e0 	and.w	r1, r2, #1792	; 0x700
 8009d48:	f5b1 6fe0 	cmp.w	r1, #1792	; 0x700
 8009d4c:	f47f af39 	bne.w	8009bc2 <_scanf_float+0x6e>
 8009d50:	f422 62f0 	bic.w	r2, r2, #1920	; 0x780
 8009d54:	6022      	str	r2, [r4, #0]
 8009d56:	2501      	movs	r5, #1
 8009d58:	e7c0      	b.n	8009cdc <_scanf_float+0x188>
 8009d5a:	2d03      	cmp	r5, #3
 8009d5c:	d0e2      	beq.n	8009d24 <_scanf_float+0x1d0>
 8009d5e:	2d05      	cmp	r5, #5
 8009d60:	e7de      	b.n	8009d20 <_scanf_float+0x1cc>
 8009d62:	2d02      	cmp	r5, #2
 8009d64:	f47f af26 	bne.w	8009bb4 <_scanf_float+0x60>
 8009d68:	2503      	movs	r5, #3
 8009d6a:	e7b7      	b.n	8009cdc <_scanf_float+0x188>
 8009d6c:	2d06      	cmp	r5, #6
 8009d6e:	f47f af21 	bne.w	8009bb4 <_scanf_float+0x60>
 8009d72:	2507      	movs	r5, #7
 8009d74:	e7b2      	b.n	8009cdc <_scanf_float+0x188>
 8009d76:	6822      	ldr	r2, [r4, #0]
 8009d78:	0591      	lsls	r1, r2, #22
 8009d7a:	f57f af1b 	bpl.w	8009bb4 <_scanf_float+0x60>
 8009d7e:	f422 7220 	bic.w	r2, r2, #640	; 0x280
 8009d82:	6022      	str	r2, [r4, #0]
 8009d84:	f8cd 9004 	str.w	r9, [sp, #4]
 8009d88:	e7a8      	b.n	8009cdc <_scanf_float+0x188>
 8009d8a:	6822      	ldr	r2, [r4, #0]
 8009d8c:	f402 61a0 	and.w	r1, r2, #1280	; 0x500
 8009d90:	f5b1 6f80 	cmp.w	r1, #1024	; 0x400
 8009d94:	d006      	beq.n	8009da4 <_scanf_float+0x250>
 8009d96:	0550      	lsls	r0, r2, #21
 8009d98:	f57f af0c 	bpl.w	8009bb4 <_scanf_float+0x60>
 8009d9c:	f1b9 0f00 	cmp.w	r9, #0
 8009da0:	f43f af0f 	beq.w	8009bc2 <_scanf_float+0x6e>
 8009da4:	0591      	lsls	r1, r2, #22
 8009da6:	bf58      	it	pl
 8009da8:	9901      	ldrpl	r1, [sp, #4]
 8009daa:	f422 62f0 	bic.w	r2, r2, #1920	; 0x780
 8009dae:	bf58      	it	pl
 8009db0:	eba9 0101 	subpl.w	r1, r9, r1
 8009db4:	f442 72c0 	orr.w	r2, r2, #384	; 0x180
 8009db8:	bf58      	it	pl
 8009dba:	e9cd 1604 	strdpl	r1, r6, [sp, #16]
 8009dbe:	6022      	str	r2, [r4, #0]
 8009dc0:	f04f 0900 	mov.w	r9, #0
 8009dc4:	e78a      	b.n	8009cdc <_scanf_float+0x188>
 8009dc6:	f04f 0a03 	mov.w	sl, #3
 8009dca:	e787      	b.n	8009cdc <_scanf_float+0x188>
 8009dcc:	f8d4 3180 	ldr.w	r3, [r4, #384]	; 0x180
 8009dd0:	4639      	mov	r1, r7
 8009dd2:	4640      	mov	r0, r8
 8009dd4:	4798      	blx	r3
 8009dd6:	2800      	cmp	r0, #0
 8009dd8:	f43f aedf 	beq.w	8009b9a <_scanf_float+0x46>
 8009ddc:	e6ea      	b.n	8009bb4 <_scanf_float+0x60>
 8009dde:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8009de2:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 8009de6:	463a      	mov	r2, r7
 8009de8:	4640      	mov	r0, r8
 8009dea:	4798      	blx	r3
 8009dec:	6923      	ldr	r3, [r4, #16]
 8009dee:	3b01      	subs	r3, #1
 8009df0:	6123      	str	r3, [r4, #16]
 8009df2:	e6ec      	b.n	8009bce <_scanf_float+0x7a>
 8009df4:	1e6b      	subs	r3, r5, #1
 8009df6:	2b06      	cmp	r3, #6
 8009df8:	d825      	bhi.n	8009e46 <_scanf_float+0x2f2>
 8009dfa:	2d02      	cmp	r5, #2
 8009dfc:	d836      	bhi.n	8009e6c <_scanf_float+0x318>
 8009dfe:	455e      	cmp	r6, fp
 8009e00:	f67f aee8 	bls.w	8009bd4 <_scanf_float+0x80>
 8009e04:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8009e08:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 8009e0c:	463a      	mov	r2, r7
 8009e0e:	4640      	mov	r0, r8
 8009e10:	4798      	blx	r3
 8009e12:	6923      	ldr	r3, [r4, #16]
 8009e14:	3b01      	subs	r3, #1
 8009e16:	6123      	str	r3, [r4, #16]
 8009e18:	e7f1      	b.n	8009dfe <_scanf_float+0x2aa>
 8009e1a:	9802      	ldr	r0, [sp, #8]
 8009e1c:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8009e20:	f810 1d01 	ldrb.w	r1, [r0, #-1]!
 8009e24:	9002      	str	r0, [sp, #8]
 8009e26:	463a      	mov	r2, r7
 8009e28:	4640      	mov	r0, r8
 8009e2a:	4798      	blx	r3
 8009e2c:	6923      	ldr	r3, [r4, #16]
 8009e2e:	3b01      	subs	r3, #1
 8009e30:	6123      	str	r3, [r4, #16]
 8009e32:	f10a 3aff 	add.w	sl, sl, #4294967295
 8009e36:	fa5f fa8a 	uxtb.w	sl, sl
 8009e3a:	f1ba 0f02 	cmp.w	sl, #2
 8009e3e:	d1ec      	bne.n	8009e1a <_scanf_float+0x2c6>
 8009e40:	3d03      	subs	r5, #3
 8009e42:	b2ed      	uxtb	r5, r5
 8009e44:	1b76      	subs	r6, r6, r5
 8009e46:	6823      	ldr	r3, [r4, #0]
 8009e48:	05da      	lsls	r2, r3, #23
 8009e4a:	d52f      	bpl.n	8009eac <_scanf_float+0x358>
 8009e4c:	055b      	lsls	r3, r3, #21
 8009e4e:	d510      	bpl.n	8009e72 <_scanf_float+0x31e>
 8009e50:	455e      	cmp	r6, fp
 8009e52:	f67f aebf 	bls.w	8009bd4 <_scanf_float+0x80>
 8009e56:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8009e5a:	f816 1d01 	ldrb.w	r1, [r6, #-1]!
 8009e5e:	463a      	mov	r2, r7
 8009e60:	4640      	mov	r0, r8
 8009e62:	4798      	blx	r3
 8009e64:	6923      	ldr	r3, [r4, #16]
 8009e66:	3b01      	subs	r3, #1
 8009e68:	6123      	str	r3, [r4, #16]
 8009e6a:	e7f1      	b.n	8009e50 <_scanf_float+0x2fc>
 8009e6c:	46aa      	mov	sl, r5
 8009e6e:	9602      	str	r6, [sp, #8]
 8009e70:	e7df      	b.n	8009e32 <_scanf_float+0x2de>
 8009e72:	f816 1c01 	ldrb.w	r1, [r6, #-1]
 8009e76:	6923      	ldr	r3, [r4, #16]
 8009e78:	2965      	cmp	r1, #101	; 0x65
 8009e7a:	f103 33ff 	add.w	r3, r3, #4294967295
 8009e7e:	f106 35ff 	add.w	r5, r6, #4294967295
 8009e82:	6123      	str	r3, [r4, #16]
 8009e84:	d00c      	beq.n	8009ea0 <_scanf_float+0x34c>
 8009e86:	2945      	cmp	r1, #69	; 0x45
 8009e88:	d00a      	beq.n	8009ea0 <_scanf_float+0x34c>
 8009e8a:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8009e8e:	463a      	mov	r2, r7
 8009e90:	4640      	mov	r0, r8
 8009e92:	4798      	blx	r3
 8009e94:	6923      	ldr	r3, [r4, #16]
 8009e96:	f816 1c02 	ldrb.w	r1, [r6, #-2]
 8009e9a:	3b01      	subs	r3, #1
 8009e9c:	1eb5      	subs	r5, r6, #2
 8009e9e:	6123      	str	r3, [r4, #16]
 8009ea0:	f8d4 317c 	ldr.w	r3, [r4, #380]	; 0x17c
 8009ea4:	463a      	mov	r2, r7
 8009ea6:	4640      	mov	r0, r8
 8009ea8:	4798      	blx	r3
 8009eaa:	462e      	mov	r6, r5
 8009eac:	6825      	ldr	r5, [r4, #0]
 8009eae:	f015 0510 	ands.w	r5, r5, #16
 8009eb2:	d158      	bne.n	8009f66 <_scanf_float+0x412>
 8009eb4:	7035      	strb	r5, [r6, #0]
 8009eb6:	6823      	ldr	r3, [r4, #0]
 8009eb8:	f403 63c0 	and.w	r3, r3, #1536	; 0x600
 8009ebc:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8009ec0:	d11c      	bne.n	8009efc <_scanf_float+0x3a8>
 8009ec2:	9b01      	ldr	r3, [sp, #4]
 8009ec4:	454b      	cmp	r3, r9
 8009ec6:	eba3 0209 	sub.w	r2, r3, r9
 8009eca:	d124      	bne.n	8009f16 <_scanf_float+0x3c2>
 8009ecc:	2200      	movs	r2, #0
 8009ece:	4659      	mov	r1, fp
 8009ed0:	4640      	mov	r0, r8
 8009ed2:	f7ff f8d5 	bl	8009080 <_strtod_r>
 8009ed6:	9b03      	ldr	r3, [sp, #12]
 8009ed8:	6821      	ldr	r1, [r4, #0]
 8009eda:	681b      	ldr	r3, [r3, #0]
 8009edc:	f011 0f02 	tst.w	r1, #2
 8009ee0:	ec57 6b10 	vmov	r6, r7, d0
 8009ee4:	f103 0204 	add.w	r2, r3, #4
 8009ee8:	d020      	beq.n	8009f2c <_scanf_float+0x3d8>
 8009eea:	9903      	ldr	r1, [sp, #12]
 8009eec:	600a      	str	r2, [r1, #0]
 8009eee:	681b      	ldr	r3, [r3, #0]
 8009ef0:	e9c3 6700 	strd	r6, r7, [r3]
 8009ef4:	68e3      	ldr	r3, [r4, #12]
 8009ef6:	3301      	adds	r3, #1
 8009ef8:	60e3      	str	r3, [r4, #12]
 8009efa:	e66c      	b.n	8009bd6 <_scanf_float+0x82>
 8009efc:	9b04      	ldr	r3, [sp, #16]
 8009efe:	2b00      	cmp	r3, #0
 8009f00:	d0e4      	beq.n	8009ecc <_scanf_float+0x378>
 8009f02:	9905      	ldr	r1, [sp, #20]
 8009f04:	230a      	movs	r3, #10
 8009f06:	462a      	mov	r2, r5
 8009f08:	3101      	adds	r1, #1
 8009f0a:	4640      	mov	r0, r8
 8009f0c:	f7ff f9a6 	bl	800925c <_strtol_r>
 8009f10:	9b04      	ldr	r3, [sp, #16]
 8009f12:	9e05      	ldr	r6, [sp, #20]
 8009f14:	1ac2      	subs	r2, r0, r3
 8009f16:	f204 136f 	addw	r3, r4, #367	; 0x16f
 8009f1a:	429e      	cmp	r6, r3
 8009f1c:	bf28      	it	cs
 8009f1e:	f504 76b7 	addcs.w	r6, r4, #366	; 0x16e
 8009f22:	4912      	ldr	r1, [pc, #72]	; (8009f6c <_scanf_float+0x418>)
 8009f24:	4630      	mov	r0, r6
 8009f26:	f000 f8e7 	bl	800a0f8 <siprintf>
 8009f2a:	e7cf      	b.n	8009ecc <_scanf_float+0x378>
 8009f2c:	f011 0f04 	tst.w	r1, #4
 8009f30:	9903      	ldr	r1, [sp, #12]
 8009f32:	600a      	str	r2, [r1, #0]
 8009f34:	d1db      	bne.n	8009eee <_scanf_float+0x39a>
 8009f36:	f8d3 8000 	ldr.w	r8, [r3]
 8009f3a:	ee10 2a10 	vmov	r2, s0
 8009f3e:	ee10 0a10 	vmov	r0, s0
 8009f42:	463b      	mov	r3, r7
 8009f44:	4639      	mov	r1, r7
 8009f46:	f7f6 fdf9 	bl	8000b3c <__aeabi_dcmpun>
 8009f4a:	b128      	cbz	r0, 8009f58 <_scanf_float+0x404>
 8009f4c:	4808      	ldr	r0, [pc, #32]	; (8009f70 <_scanf_float+0x41c>)
 8009f4e:	f000 f9f3 	bl	800a338 <nanf>
 8009f52:	ed88 0a00 	vstr	s0, [r8]
 8009f56:	e7cd      	b.n	8009ef4 <_scanf_float+0x3a0>
 8009f58:	4630      	mov	r0, r6
 8009f5a:	4639      	mov	r1, r7
 8009f5c:	f7f6 fe4c 	bl	8000bf8 <__aeabi_d2f>
 8009f60:	f8c8 0000 	str.w	r0, [r8]
 8009f64:	e7c6      	b.n	8009ef4 <_scanf_float+0x3a0>
 8009f66:	2500      	movs	r5, #0
 8009f68:	e635      	b.n	8009bd6 <_scanf_float+0x82>
 8009f6a:	bf00      	nop
 8009f6c:	0800d4ed 	.word	0x0800d4ed
 8009f70:	0800d788 	.word	0x0800d788

08009f74 <std>:
 8009f74:	2300      	movs	r3, #0
 8009f76:	b510      	push	{r4, lr}
 8009f78:	4604      	mov	r4, r0
 8009f7a:	e9c0 3300 	strd	r3, r3, [r0]
 8009f7e:	e9c0 3304 	strd	r3, r3, [r0, #16]
 8009f82:	6083      	str	r3, [r0, #8]
 8009f84:	8181      	strh	r1, [r0, #12]
 8009f86:	6643      	str	r3, [r0, #100]	; 0x64
 8009f88:	81c2      	strh	r2, [r0, #14]
 8009f8a:	6183      	str	r3, [r0, #24]
 8009f8c:	4619      	mov	r1, r3
 8009f8e:	2208      	movs	r2, #8
 8009f90:	305c      	adds	r0, #92	; 0x5c
 8009f92:	f000 f914 	bl	800a1be <memset>
 8009f96:	4b0d      	ldr	r3, [pc, #52]	; (8009fcc <std+0x58>)
 8009f98:	6263      	str	r3, [r4, #36]	; 0x24
 8009f9a:	4b0d      	ldr	r3, [pc, #52]	; (8009fd0 <std+0x5c>)
 8009f9c:	62a3      	str	r3, [r4, #40]	; 0x28
 8009f9e:	4b0d      	ldr	r3, [pc, #52]	; (8009fd4 <std+0x60>)
 8009fa0:	62e3      	str	r3, [r4, #44]	; 0x2c
 8009fa2:	4b0d      	ldr	r3, [pc, #52]	; (8009fd8 <std+0x64>)
 8009fa4:	6323      	str	r3, [r4, #48]	; 0x30
 8009fa6:	4b0d      	ldr	r3, [pc, #52]	; (8009fdc <std+0x68>)
 8009fa8:	6224      	str	r4, [r4, #32]
 8009faa:	429c      	cmp	r4, r3
 8009fac:	d006      	beq.n	8009fbc <std+0x48>
 8009fae:	f103 0268 	add.w	r2, r3, #104	; 0x68
 8009fb2:	4294      	cmp	r4, r2
 8009fb4:	d002      	beq.n	8009fbc <std+0x48>
 8009fb6:	33d0      	adds	r3, #208	; 0xd0
 8009fb8:	429c      	cmp	r4, r3
 8009fba:	d105      	bne.n	8009fc8 <std+0x54>
 8009fbc:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8009fc0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8009fc4:	f000 b99c 	b.w	800a300 <__retarget_lock_init_recursive>
 8009fc8:	bd10      	pop	{r4, pc}
 8009fca:	bf00      	nop
 8009fcc:	0800a139 	.word	0x0800a139
 8009fd0:	0800a15b 	.word	0x0800a15b
 8009fd4:	0800a193 	.word	0x0800a193
 8009fd8:	0800a1b7 	.word	0x0800a1b7
 8009fdc:	20000764 	.word	0x20000764

08009fe0 <stdio_exit_handler>:
 8009fe0:	4a02      	ldr	r2, [pc, #8]	; (8009fec <stdio_exit_handler+0xc>)
 8009fe2:	4903      	ldr	r1, [pc, #12]	; (8009ff0 <stdio_exit_handler+0x10>)
 8009fe4:	4803      	ldr	r0, [pc, #12]	; (8009ff4 <stdio_exit_handler+0x14>)
 8009fe6:	f000 b869 	b.w	800a0bc <_fwalk_sglue>
 8009fea:	bf00      	nop
 8009fec:	20000078 	.word	0x20000078
 8009ff0:	0800c641 	.word	0x0800c641
 8009ff4:	200001f0 	.word	0x200001f0

08009ff8 <cleanup_stdio>:
 8009ff8:	6841      	ldr	r1, [r0, #4]
 8009ffa:	4b0c      	ldr	r3, [pc, #48]	; (800a02c <cleanup_stdio+0x34>)
 8009ffc:	4299      	cmp	r1, r3
 8009ffe:	b510      	push	{r4, lr}
 800a000:	4604      	mov	r4, r0
 800a002:	d001      	beq.n	800a008 <cleanup_stdio+0x10>
 800a004:	f002 fb1c 	bl	800c640 <_fflush_r>
 800a008:	68a1      	ldr	r1, [r4, #8]
 800a00a:	4b09      	ldr	r3, [pc, #36]	; (800a030 <cleanup_stdio+0x38>)
 800a00c:	4299      	cmp	r1, r3
 800a00e:	d002      	beq.n	800a016 <cleanup_stdio+0x1e>
 800a010:	4620      	mov	r0, r4
 800a012:	f002 fb15 	bl	800c640 <_fflush_r>
 800a016:	68e1      	ldr	r1, [r4, #12]
 800a018:	4b06      	ldr	r3, [pc, #24]	; (800a034 <cleanup_stdio+0x3c>)
 800a01a:	4299      	cmp	r1, r3
 800a01c:	d004      	beq.n	800a028 <cleanup_stdio+0x30>
 800a01e:	4620      	mov	r0, r4
 800a020:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800a024:	f002 bb0c 	b.w	800c640 <_fflush_r>
 800a028:	bd10      	pop	{r4, pc}
 800a02a:	bf00      	nop
 800a02c:	20000764 	.word	0x20000764
 800a030:	200007cc 	.word	0x200007cc
 800a034:	20000834 	.word	0x20000834

0800a038 <global_stdio_init.part.0>:
 800a038:	b510      	push	{r4, lr}
 800a03a:	4b0b      	ldr	r3, [pc, #44]	; (800a068 <global_stdio_init.part.0+0x30>)
 800a03c:	4c0b      	ldr	r4, [pc, #44]	; (800a06c <global_stdio_init.part.0+0x34>)
 800a03e:	4a0c      	ldr	r2, [pc, #48]	; (800a070 <global_stdio_init.part.0+0x38>)
 800a040:	601a      	str	r2, [r3, #0]
 800a042:	4620      	mov	r0, r4
 800a044:	2200      	movs	r2, #0
 800a046:	2104      	movs	r1, #4
 800a048:	f7ff ff94 	bl	8009f74 <std>
 800a04c:	f104 0068 	add.w	r0, r4, #104	; 0x68
 800a050:	2201      	movs	r2, #1
 800a052:	2109      	movs	r1, #9
 800a054:	f7ff ff8e 	bl	8009f74 <std>
 800a058:	f104 00d0 	add.w	r0, r4, #208	; 0xd0
 800a05c:	2202      	movs	r2, #2
 800a05e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800a062:	2112      	movs	r1, #18
 800a064:	f7ff bf86 	b.w	8009f74 <std>
 800a068:	2000089c 	.word	0x2000089c
 800a06c:	20000764 	.word	0x20000764
 800a070:	08009fe1 	.word	0x08009fe1

0800a074 <__sfp_lock_acquire>:
 800a074:	4801      	ldr	r0, [pc, #4]	; (800a07c <__sfp_lock_acquire+0x8>)
 800a076:	f000 b944 	b.w	800a302 <__retarget_lock_acquire_recursive>
 800a07a:	bf00      	nop
 800a07c:	200008a5 	.word	0x200008a5

0800a080 <__sfp_lock_release>:
 800a080:	4801      	ldr	r0, [pc, #4]	; (800a088 <__sfp_lock_release+0x8>)
 800a082:	f000 b93f 	b.w	800a304 <__retarget_lock_release_recursive>
 800a086:	bf00      	nop
 800a088:	200008a5 	.word	0x200008a5

0800a08c <__sinit>:
 800a08c:	b510      	push	{r4, lr}
 800a08e:	4604      	mov	r4, r0
 800a090:	f7ff fff0 	bl	800a074 <__sfp_lock_acquire>
 800a094:	6a23      	ldr	r3, [r4, #32]
 800a096:	b11b      	cbz	r3, 800a0a0 <__sinit+0x14>
 800a098:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800a09c:	f7ff bff0 	b.w	800a080 <__sfp_lock_release>
 800a0a0:	4b04      	ldr	r3, [pc, #16]	; (800a0b4 <__sinit+0x28>)
 800a0a2:	6223      	str	r3, [r4, #32]
 800a0a4:	4b04      	ldr	r3, [pc, #16]	; (800a0b8 <__sinit+0x2c>)
 800a0a6:	681b      	ldr	r3, [r3, #0]
 800a0a8:	2b00      	cmp	r3, #0
 800a0aa:	d1f5      	bne.n	800a098 <__sinit+0xc>
 800a0ac:	f7ff ffc4 	bl	800a038 <global_stdio_init.part.0>
 800a0b0:	e7f2      	b.n	800a098 <__sinit+0xc>
 800a0b2:	bf00      	nop
 800a0b4:	08009ff9 	.word	0x08009ff9
 800a0b8:	2000089c 	.word	0x2000089c

0800a0bc <_fwalk_sglue>:
 800a0bc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800a0c0:	4607      	mov	r7, r0
 800a0c2:	4688      	mov	r8, r1
 800a0c4:	4614      	mov	r4, r2
 800a0c6:	2600      	movs	r6, #0
 800a0c8:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 800a0cc:	f1b9 0901 	subs.w	r9, r9, #1
 800a0d0:	d505      	bpl.n	800a0de <_fwalk_sglue+0x22>
 800a0d2:	6824      	ldr	r4, [r4, #0]
 800a0d4:	2c00      	cmp	r4, #0
 800a0d6:	d1f7      	bne.n	800a0c8 <_fwalk_sglue+0xc>
 800a0d8:	4630      	mov	r0, r6
 800a0da:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800a0de:	89ab      	ldrh	r3, [r5, #12]
 800a0e0:	2b01      	cmp	r3, #1
 800a0e2:	d907      	bls.n	800a0f4 <_fwalk_sglue+0x38>
 800a0e4:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 800a0e8:	3301      	adds	r3, #1
 800a0ea:	d003      	beq.n	800a0f4 <_fwalk_sglue+0x38>
 800a0ec:	4629      	mov	r1, r5
 800a0ee:	4638      	mov	r0, r7
 800a0f0:	47c0      	blx	r8
 800a0f2:	4306      	orrs	r6, r0
 800a0f4:	3568      	adds	r5, #104	; 0x68
 800a0f6:	e7e9      	b.n	800a0cc <_fwalk_sglue+0x10>

0800a0f8 <siprintf>:
 800a0f8:	b40e      	push	{r1, r2, r3}
 800a0fa:	b500      	push	{lr}
 800a0fc:	b09c      	sub	sp, #112	; 0x70
 800a0fe:	ab1d      	add	r3, sp, #116	; 0x74
 800a100:	9002      	str	r0, [sp, #8]
 800a102:	9006      	str	r0, [sp, #24]
 800a104:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 800a108:	4809      	ldr	r0, [pc, #36]	; (800a130 <siprintf+0x38>)
 800a10a:	9107      	str	r1, [sp, #28]
 800a10c:	9104      	str	r1, [sp, #16]
 800a10e:	4909      	ldr	r1, [pc, #36]	; (800a134 <siprintf+0x3c>)
 800a110:	f853 2b04 	ldr.w	r2, [r3], #4
 800a114:	9105      	str	r1, [sp, #20]
 800a116:	6800      	ldr	r0, [r0, #0]
 800a118:	9301      	str	r3, [sp, #4]
 800a11a:	a902      	add	r1, sp, #8
 800a11c:	f002 f90c 	bl	800c338 <_svfiprintf_r>
 800a120:	9b02      	ldr	r3, [sp, #8]
 800a122:	2200      	movs	r2, #0
 800a124:	701a      	strb	r2, [r3, #0]
 800a126:	b01c      	add	sp, #112	; 0x70
 800a128:	f85d eb04 	ldr.w	lr, [sp], #4
 800a12c:	b003      	add	sp, #12
 800a12e:	4770      	bx	lr
 800a130:	2000023c 	.word	0x2000023c
 800a134:	ffff0208 	.word	0xffff0208

0800a138 <__sread>:
 800a138:	b510      	push	{r4, lr}
 800a13a:	460c      	mov	r4, r1
 800a13c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800a140:	f000 f890 	bl	800a264 <_read_r>
 800a144:	2800      	cmp	r0, #0
 800a146:	bfab      	itete	ge
 800a148:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 800a14a:	89a3      	ldrhlt	r3, [r4, #12]
 800a14c:	181b      	addge	r3, r3, r0
 800a14e:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 800a152:	bfac      	ite	ge
 800a154:	6563      	strge	r3, [r4, #84]	; 0x54
 800a156:	81a3      	strhlt	r3, [r4, #12]
 800a158:	bd10      	pop	{r4, pc}

0800a15a <__swrite>:
 800a15a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a15e:	461f      	mov	r7, r3
 800a160:	898b      	ldrh	r3, [r1, #12]
 800a162:	05db      	lsls	r3, r3, #23
 800a164:	4605      	mov	r5, r0
 800a166:	460c      	mov	r4, r1
 800a168:	4616      	mov	r6, r2
 800a16a:	d505      	bpl.n	800a178 <__swrite+0x1e>
 800a16c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800a170:	2302      	movs	r3, #2
 800a172:	2200      	movs	r2, #0
 800a174:	f000 f864 	bl	800a240 <_lseek_r>
 800a178:	89a3      	ldrh	r3, [r4, #12]
 800a17a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800a17e:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 800a182:	81a3      	strh	r3, [r4, #12]
 800a184:	4632      	mov	r2, r6
 800a186:	463b      	mov	r3, r7
 800a188:	4628      	mov	r0, r5
 800a18a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800a18e:	f000 b87b 	b.w	800a288 <_write_r>

0800a192 <__sseek>:
 800a192:	b510      	push	{r4, lr}
 800a194:	460c      	mov	r4, r1
 800a196:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800a19a:	f000 f851 	bl	800a240 <_lseek_r>
 800a19e:	1c43      	adds	r3, r0, #1
 800a1a0:	89a3      	ldrh	r3, [r4, #12]
 800a1a2:	bf15      	itete	ne
 800a1a4:	6560      	strne	r0, [r4, #84]	; 0x54
 800a1a6:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 800a1aa:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 800a1ae:	81a3      	strheq	r3, [r4, #12]
 800a1b0:	bf18      	it	ne
 800a1b2:	81a3      	strhne	r3, [r4, #12]
 800a1b4:	bd10      	pop	{r4, pc}

0800a1b6 <__sclose>:
 800a1b6:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800a1ba:	f000 b831 	b.w	800a220 <_close_r>

0800a1be <memset>:
 800a1be:	4402      	add	r2, r0
 800a1c0:	4603      	mov	r3, r0
 800a1c2:	4293      	cmp	r3, r2
 800a1c4:	d100      	bne.n	800a1c8 <memset+0xa>
 800a1c6:	4770      	bx	lr
 800a1c8:	f803 1b01 	strb.w	r1, [r3], #1
 800a1cc:	e7f9      	b.n	800a1c2 <memset+0x4>

0800a1ce <strncmp>:
 800a1ce:	b510      	push	{r4, lr}
 800a1d0:	b16a      	cbz	r2, 800a1ee <strncmp+0x20>
 800a1d2:	3901      	subs	r1, #1
 800a1d4:	1884      	adds	r4, r0, r2
 800a1d6:	f810 2b01 	ldrb.w	r2, [r0], #1
 800a1da:	f811 3f01 	ldrb.w	r3, [r1, #1]!
 800a1de:	429a      	cmp	r2, r3
 800a1e0:	d103      	bne.n	800a1ea <strncmp+0x1c>
 800a1e2:	42a0      	cmp	r0, r4
 800a1e4:	d001      	beq.n	800a1ea <strncmp+0x1c>
 800a1e6:	2a00      	cmp	r2, #0
 800a1e8:	d1f5      	bne.n	800a1d6 <strncmp+0x8>
 800a1ea:	1ad0      	subs	r0, r2, r3
 800a1ec:	bd10      	pop	{r4, pc}
 800a1ee:	4610      	mov	r0, r2
 800a1f0:	e7fc      	b.n	800a1ec <strncmp+0x1e>

0800a1f2 <strncpy>:
 800a1f2:	b510      	push	{r4, lr}
 800a1f4:	3901      	subs	r1, #1
 800a1f6:	4603      	mov	r3, r0
 800a1f8:	b132      	cbz	r2, 800a208 <strncpy+0x16>
 800a1fa:	f811 4f01 	ldrb.w	r4, [r1, #1]!
 800a1fe:	f803 4b01 	strb.w	r4, [r3], #1
 800a202:	3a01      	subs	r2, #1
 800a204:	2c00      	cmp	r4, #0
 800a206:	d1f7      	bne.n	800a1f8 <strncpy+0x6>
 800a208:	441a      	add	r2, r3
 800a20a:	2100      	movs	r1, #0
 800a20c:	4293      	cmp	r3, r2
 800a20e:	d100      	bne.n	800a212 <strncpy+0x20>
 800a210:	bd10      	pop	{r4, pc}
 800a212:	f803 1b01 	strb.w	r1, [r3], #1
 800a216:	e7f9      	b.n	800a20c <strncpy+0x1a>

0800a218 <_localeconv_r>:
 800a218:	4800      	ldr	r0, [pc, #0]	; (800a21c <_localeconv_r+0x4>)
 800a21a:	4770      	bx	lr
 800a21c:	20000174 	.word	0x20000174

0800a220 <_close_r>:
 800a220:	b538      	push	{r3, r4, r5, lr}
 800a222:	4d06      	ldr	r5, [pc, #24]	; (800a23c <_close_r+0x1c>)
 800a224:	2300      	movs	r3, #0
 800a226:	4604      	mov	r4, r0
 800a228:	4608      	mov	r0, r1
 800a22a:	602b      	str	r3, [r5, #0]
 800a22c:	f7fa fb0f 	bl	800484e <_close>
 800a230:	1c43      	adds	r3, r0, #1
 800a232:	d102      	bne.n	800a23a <_close_r+0x1a>
 800a234:	682b      	ldr	r3, [r5, #0]
 800a236:	b103      	cbz	r3, 800a23a <_close_r+0x1a>
 800a238:	6023      	str	r3, [r4, #0]
 800a23a:	bd38      	pop	{r3, r4, r5, pc}
 800a23c:	200008a0 	.word	0x200008a0

0800a240 <_lseek_r>:
 800a240:	b538      	push	{r3, r4, r5, lr}
 800a242:	4d07      	ldr	r5, [pc, #28]	; (800a260 <_lseek_r+0x20>)
 800a244:	4604      	mov	r4, r0
 800a246:	4608      	mov	r0, r1
 800a248:	4611      	mov	r1, r2
 800a24a:	2200      	movs	r2, #0
 800a24c:	602a      	str	r2, [r5, #0]
 800a24e:	461a      	mov	r2, r3
 800a250:	f7fa fb24 	bl	800489c <_lseek>
 800a254:	1c43      	adds	r3, r0, #1
 800a256:	d102      	bne.n	800a25e <_lseek_r+0x1e>
 800a258:	682b      	ldr	r3, [r5, #0]
 800a25a:	b103      	cbz	r3, 800a25e <_lseek_r+0x1e>
 800a25c:	6023      	str	r3, [r4, #0]
 800a25e:	bd38      	pop	{r3, r4, r5, pc}
 800a260:	200008a0 	.word	0x200008a0

0800a264 <_read_r>:
 800a264:	b538      	push	{r3, r4, r5, lr}
 800a266:	4d07      	ldr	r5, [pc, #28]	; (800a284 <_read_r+0x20>)
 800a268:	4604      	mov	r4, r0
 800a26a:	4608      	mov	r0, r1
 800a26c:	4611      	mov	r1, r2
 800a26e:	2200      	movs	r2, #0
 800a270:	602a      	str	r2, [r5, #0]
 800a272:	461a      	mov	r2, r3
 800a274:	f7fa fab2 	bl	80047dc <_read>
 800a278:	1c43      	adds	r3, r0, #1
 800a27a:	d102      	bne.n	800a282 <_read_r+0x1e>
 800a27c:	682b      	ldr	r3, [r5, #0]
 800a27e:	b103      	cbz	r3, 800a282 <_read_r+0x1e>
 800a280:	6023      	str	r3, [r4, #0]
 800a282:	bd38      	pop	{r3, r4, r5, pc}
 800a284:	200008a0 	.word	0x200008a0

0800a288 <_write_r>:
 800a288:	b538      	push	{r3, r4, r5, lr}
 800a28a:	4d07      	ldr	r5, [pc, #28]	; (800a2a8 <_write_r+0x20>)
 800a28c:	4604      	mov	r4, r0
 800a28e:	4608      	mov	r0, r1
 800a290:	4611      	mov	r1, r2
 800a292:	2200      	movs	r2, #0
 800a294:	602a      	str	r2, [r5, #0]
 800a296:	461a      	mov	r2, r3
 800a298:	f7fa fabd 	bl	8004816 <_write>
 800a29c:	1c43      	adds	r3, r0, #1
 800a29e:	d102      	bne.n	800a2a6 <_write_r+0x1e>
 800a2a0:	682b      	ldr	r3, [r5, #0]
 800a2a2:	b103      	cbz	r3, 800a2a6 <_write_r+0x1e>
 800a2a4:	6023      	str	r3, [r4, #0]
 800a2a6:	bd38      	pop	{r3, r4, r5, pc}
 800a2a8:	200008a0 	.word	0x200008a0

0800a2ac <__errno>:
 800a2ac:	4b01      	ldr	r3, [pc, #4]	; (800a2b4 <__errno+0x8>)
 800a2ae:	6818      	ldr	r0, [r3, #0]
 800a2b0:	4770      	bx	lr
 800a2b2:	bf00      	nop
 800a2b4:	2000023c 	.word	0x2000023c

0800a2b8 <__libc_init_array>:
 800a2b8:	b570      	push	{r4, r5, r6, lr}
 800a2ba:	4d0d      	ldr	r5, [pc, #52]	; (800a2f0 <__libc_init_array+0x38>)
 800a2bc:	4c0d      	ldr	r4, [pc, #52]	; (800a2f4 <__libc_init_array+0x3c>)
 800a2be:	1b64      	subs	r4, r4, r5
 800a2c0:	10a4      	asrs	r4, r4, #2
 800a2c2:	2600      	movs	r6, #0
 800a2c4:	42a6      	cmp	r6, r4
 800a2c6:	d109      	bne.n	800a2dc <__libc_init_array+0x24>
 800a2c8:	4d0b      	ldr	r5, [pc, #44]	; (800a2f8 <__libc_init_array+0x40>)
 800a2ca:	4c0c      	ldr	r4, [pc, #48]	; (800a2fc <__libc_init_array+0x44>)
 800a2cc:	f002 fd30 	bl	800cd30 <_init>
 800a2d0:	1b64      	subs	r4, r4, r5
 800a2d2:	10a4      	asrs	r4, r4, #2
 800a2d4:	2600      	movs	r6, #0
 800a2d6:	42a6      	cmp	r6, r4
 800a2d8:	d105      	bne.n	800a2e6 <__libc_init_array+0x2e>
 800a2da:	bd70      	pop	{r4, r5, r6, pc}
 800a2dc:	f855 3b04 	ldr.w	r3, [r5], #4
 800a2e0:	4798      	blx	r3
 800a2e2:	3601      	adds	r6, #1
 800a2e4:	e7ee      	b.n	800a2c4 <__libc_init_array+0xc>
 800a2e6:	f855 3b04 	ldr.w	r3, [r5], #4
 800a2ea:	4798      	blx	r3
 800a2ec:	3601      	adds	r6, #1
 800a2ee:	e7f2      	b.n	800a2d6 <__libc_init_array+0x1e>
 800a2f0:	0800d794 	.word	0x0800d794
 800a2f4:	0800d794 	.word	0x0800d794
 800a2f8:	0800d794 	.word	0x0800d794
 800a2fc:	0800d798 	.word	0x0800d798

0800a300 <__retarget_lock_init_recursive>:
 800a300:	4770      	bx	lr

0800a302 <__retarget_lock_acquire_recursive>:
 800a302:	4770      	bx	lr

0800a304 <__retarget_lock_release_recursive>:
 800a304:	4770      	bx	lr

0800a306 <memcpy>:
 800a306:	440a      	add	r2, r1
 800a308:	4291      	cmp	r1, r2
 800a30a:	f100 33ff 	add.w	r3, r0, #4294967295
 800a30e:	d100      	bne.n	800a312 <memcpy+0xc>
 800a310:	4770      	bx	lr
 800a312:	b510      	push	{r4, lr}
 800a314:	f811 4b01 	ldrb.w	r4, [r1], #1
 800a318:	f803 4f01 	strb.w	r4, [r3, #1]!
 800a31c:	4291      	cmp	r1, r2
 800a31e:	d1f9      	bne.n	800a314 <memcpy+0xe>
 800a320:	bd10      	pop	{r4, pc}
 800a322:	0000      	movs	r0, r0
 800a324:	0000      	movs	r0, r0
	...

0800a328 <nan>:
 800a328:	ed9f 0b01 	vldr	d0, [pc, #4]	; 800a330 <nan+0x8>
 800a32c:	4770      	bx	lr
 800a32e:	bf00      	nop
 800a330:	00000000 	.word	0x00000000
 800a334:	7ff80000 	.word	0x7ff80000

0800a338 <nanf>:
 800a338:	ed9f 0a01 	vldr	s0, [pc, #4]	; 800a340 <nanf+0x8>
 800a33c:	4770      	bx	lr
 800a33e:	bf00      	nop
 800a340:	7fc00000 	.word	0x7fc00000

0800a344 <quorem>:
 800a344:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a348:	6903      	ldr	r3, [r0, #16]
 800a34a:	690c      	ldr	r4, [r1, #16]
 800a34c:	42a3      	cmp	r3, r4
 800a34e:	4607      	mov	r7, r0
 800a350:	db7e      	blt.n	800a450 <quorem+0x10c>
 800a352:	3c01      	subs	r4, #1
 800a354:	f101 0814 	add.w	r8, r1, #20
 800a358:	f100 0514 	add.w	r5, r0, #20
 800a35c:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 800a360:	9301      	str	r3, [sp, #4]
 800a362:	f858 3024 	ldr.w	r3, [r8, r4, lsl #2]
 800a366:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 800a36a:	3301      	adds	r3, #1
 800a36c:	429a      	cmp	r2, r3
 800a36e:	ea4f 0b84 	mov.w	fp, r4, lsl #2
 800a372:	eb08 0984 	add.w	r9, r8, r4, lsl #2
 800a376:	fbb2 f6f3 	udiv	r6, r2, r3
 800a37a:	d331      	bcc.n	800a3e0 <quorem+0x9c>
 800a37c:	f04f 0e00 	mov.w	lr, #0
 800a380:	4640      	mov	r0, r8
 800a382:	46ac      	mov	ip, r5
 800a384:	46f2      	mov	sl, lr
 800a386:	f850 2b04 	ldr.w	r2, [r0], #4
 800a38a:	b293      	uxth	r3, r2
 800a38c:	fb06 e303 	mla	r3, r6, r3, lr
 800a390:	ea4f 4e12 	mov.w	lr, r2, lsr #16
 800a394:	0c1a      	lsrs	r2, r3, #16
 800a396:	b29b      	uxth	r3, r3
 800a398:	ebaa 0303 	sub.w	r3, sl, r3
 800a39c:	f8dc a000 	ldr.w	sl, [ip]
 800a3a0:	fa13 f38a 	uxtah	r3, r3, sl
 800a3a4:	fb06 220e 	mla	r2, r6, lr, r2
 800a3a8:	9300      	str	r3, [sp, #0]
 800a3aa:	9b00      	ldr	r3, [sp, #0]
 800a3ac:	ea4f 4e12 	mov.w	lr, r2, lsr #16
 800a3b0:	b292      	uxth	r2, r2
 800a3b2:	ebc2 421a 	rsb	r2, r2, sl, lsr #16
 800a3b6:	eb02 4223 	add.w	r2, r2, r3, asr #16
 800a3ba:	f8bd 3000 	ldrh.w	r3, [sp]
 800a3be:	4581      	cmp	r9, r0
 800a3c0:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800a3c4:	f84c 3b04 	str.w	r3, [ip], #4
 800a3c8:	ea4f 4a22 	mov.w	sl, r2, asr #16
 800a3cc:	d2db      	bcs.n	800a386 <quorem+0x42>
 800a3ce:	f855 300b 	ldr.w	r3, [r5, fp]
 800a3d2:	b92b      	cbnz	r3, 800a3e0 <quorem+0x9c>
 800a3d4:	9b01      	ldr	r3, [sp, #4]
 800a3d6:	3b04      	subs	r3, #4
 800a3d8:	429d      	cmp	r5, r3
 800a3da:	461a      	mov	r2, r3
 800a3dc:	d32c      	bcc.n	800a438 <quorem+0xf4>
 800a3de:	613c      	str	r4, [r7, #16]
 800a3e0:	4638      	mov	r0, r7
 800a3e2:	f001 fd5b 	bl	800be9c <__mcmp>
 800a3e6:	2800      	cmp	r0, #0
 800a3e8:	db22      	blt.n	800a430 <quorem+0xec>
 800a3ea:	3601      	adds	r6, #1
 800a3ec:	4629      	mov	r1, r5
 800a3ee:	2000      	movs	r0, #0
 800a3f0:	f858 2b04 	ldr.w	r2, [r8], #4
 800a3f4:	f8d1 c000 	ldr.w	ip, [r1]
 800a3f8:	b293      	uxth	r3, r2
 800a3fa:	1ac3      	subs	r3, r0, r3
 800a3fc:	0c12      	lsrs	r2, r2, #16
 800a3fe:	fa13 f38c 	uxtah	r3, r3, ip
 800a402:	ebc2 421c 	rsb	r2, r2, ip, lsr #16
 800a406:	eb02 4223 	add.w	r2, r2, r3, asr #16
 800a40a:	b29b      	uxth	r3, r3
 800a40c:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 800a410:	45c1      	cmp	r9, r8
 800a412:	f841 3b04 	str.w	r3, [r1], #4
 800a416:	ea4f 4022 	mov.w	r0, r2, asr #16
 800a41a:	d2e9      	bcs.n	800a3f0 <quorem+0xac>
 800a41c:	f855 2024 	ldr.w	r2, [r5, r4, lsl #2]
 800a420:	eb05 0384 	add.w	r3, r5, r4, lsl #2
 800a424:	b922      	cbnz	r2, 800a430 <quorem+0xec>
 800a426:	3b04      	subs	r3, #4
 800a428:	429d      	cmp	r5, r3
 800a42a:	461a      	mov	r2, r3
 800a42c:	d30a      	bcc.n	800a444 <quorem+0x100>
 800a42e:	613c      	str	r4, [r7, #16]
 800a430:	4630      	mov	r0, r6
 800a432:	b003      	add	sp, #12
 800a434:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a438:	6812      	ldr	r2, [r2, #0]
 800a43a:	3b04      	subs	r3, #4
 800a43c:	2a00      	cmp	r2, #0
 800a43e:	d1ce      	bne.n	800a3de <quorem+0x9a>
 800a440:	3c01      	subs	r4, #1
 800a442:	e7c9      	b.n	800a3d8 <quorem+0x94>
 800a444:	6812      	ldr	r2, [r2, #0]
 800a446:	3b04      	subs	r3, #4
 800a448:	2a00      	cmp	r2, #0
 800a44a:	d1f0      	bne.n	800a42e <quorem+0xea>
 800a44c:	3c01      	subs	r4, #1
 800a44e:	e7eb      	b.n	800a428 <quorem+0xe4>
 800a450:	2000      	movs	r0, #0
 800a452:	e7ee      	b.n	800a432 <quorem+0xee>
 800a454:	0000      	movs	r0, r0
	...

0800a458 <_dtoa_r>:
 800a458:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a45c:	ed2d 8b04 	vpush	{d8-d9}
 800a460:	69c5      	ldr	r5, [r0, #28]
 800a462:	b093      	sub	sp, #76	; 0x4c
 800a464:	ed8d 0b02 	vstr	d0, [sp, #8]
 800a468:	ec57 6b10 	vmov	r6, r7, d0
 800a46c:	f8dd 8080 	ldr.w	r8, [sp, #128]	; 0x80
 800a470:	9107      	str	r1, [sp, #28]
 800a472:	4604      	mov	r4, r0
 800a474:	920a      	str	r2, [sp, #40]	; 0x28
 800a476:	930d      	str	r3, [sp, #52]	; 0x34
 800a478:	b975      	cbnz	r5, 800a498 <_dtoa_r+0x40>
 800a47a:	2010      	movs	r0, #16
 800a47c:	f001 f982 	bl	800b784 <malloc>
 800a480:	4602      	mov	r2, r0
 800a482:	61e0      	str	r0, [r4, #28]
 800a484:	b920      	cbnz	r0, 800a490 <_dtoa_r+0x38>
 800a486:	4bae      	ldr	r3, [pc, #696]	; (800a740 <_dtoa_r+0x2e8>)
 800a488:	21ef      	movs	r1, #239	; 0xef
 800a48a:	48ae      	ldr	r0, [pc, #696]	; (800a744 <_dtoa_r+0x2ec>)
 800a48c:	f002 f92a 	bl	800c6e4 <__assert_func>
 800a490:	e9c0 5501 	strd	r5, r5, [r0, #4]
 800a494:	6005      	str	r5, [r0, #0]
 800a496:	60c5      	str	r5, [r0, #12]
 800a498:	69e3      	ldr	r3, [r4, #28]
 800a49a:	6819      	ldr	r1, [r3, #0]
 800a49c:	b151      	cbz	r1, 800a4b4 <_dtoa_r+0x5c>
 800a49e:	685a      	ldr	r2, [r3, #4]
 800a4a0:	604a      	str	r2, [r1, #4]
 800a4a2:	2301      	movs	r3, #1
 800a4a4:	4093      	lsls	r3, r2
 800a4a6:	608b      	str	r3, [r1, #8]
 800a4a8:	4620      	mov	r0, r4
 800a4aa:	f001 fa71 	bl	800b990 <_Bfree>
 800a4ae:	69e3      	ldr	r3, [r4, #28]
 800a4b0:	2200      	movs	r2, #0
 800a4b2:	601a      	str	r2, [r3, #0]
 800a4b4:	1e3b      	subs	r3, r7, #0
 800a4b6:	bfbb      	ittet	lt
 800a4b8:	f023 4300 	biclt.w	r3, r3, #2147483648	; 0x80000000
 800a4bc:	9303      	strlt	r3, [sp, #12]
 800a4be:	2300      	movge	r3, #0
 800a4c0:	2201      	movlt	r2, #1
 800a4c2:	bfac      	ite	ge
 800a4c4:	f8c8 3000 	strge.w	r3, [r8]
 800a4c8:	f8c8 2000 	strlt.w	r2, [r8]
 800a4cc:	4b9e      	ldr	r3, [pc, #632]	; (800a748 <_dtoa_r+0x2f0>)
 800a4ce:	f8dd 800c 	ldr.w	r8, [sp, #12]
 800a4d2:	ea33 0308 	bics.w	r3, r3, r8
 800a4d6:	d11b      	bne.n	800a510 <_dtoa_r+0xb8>
 800a4d8:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800a4da:	f242 730f 	movw	r3, #9999	; 0x270f
 800a4de:	6013      	str	r3, [r2, #0]
 800a4e0:	f3c8 0313 	ubfx	r3, r8, #0, #20
 800a4e4:	4333      	orrs	r3, r6
 800a4e6:	f000 8593 	beq.w	800b010 <_dtoa_r+0xbb8>
 800a4ea:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800a4ec:	b963      	cbnz	r3, 800a508 <_dtoa_r+0xb0>
 800a4ee:	4b97      	ldr	r3, [pc, #604]	; (800a74c <_dtoa_r+0x2f4>)
 800a4f0:	e027      	b.n	800a542 <_dtoa_r+0xea>
 800a4f2:	4b97      	ldr	r3, [pc, #604]	; (800a750 <_dtoa_r+0x2f8>)
 800a4f4:	9300      	str	r3, [sp, #0]
 800a4f6:	3308      	adds	r3, #8
 800a4f8:	9a21      	ldr	r2, [sp, #132]	; 0x84
 800a4fa:	6013      	str	r3, [r2, #0]
 800a4fc:	9800      	ldr	r0, [sp, #0]
 800a4fe:	b013      	add	sp, #76	; 0x4c
 800a500:	ecbd 8b04 	vpop	{d8-d9}
 800a504:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a508:	4b90      	ldr	r3, [pc, #576]	; (800a74c <_dtoa_r+0x2f4>)
 800a50a:	9300      	str	r3, [sp, #0]
 800a50c:	3303      	adds	r3, #3
 800a50e:	e7f3      	b.n	800a4f8 <_dtoa_r+0xa0>
 800a510:	ed9d 7b02 	vldr	d7, [sp, #8]
 800a514:	2200      	movs	r2, #0
 800a516:	ec51 0b17 	vmov	r0, r1, d7
 800a51a:	eeb0 8a47 	vmov.f32	s16, s14
 800a51e:	eef0 8a67 	vmov.f32	s17, s15
 800a522:	2300      	movs	r3, #0
 800a524:	f7f6 fad8 	bl	8000ad8 <__aeabi_dcmpeq>
 800a528:	4681      	mov	r9, r0
 800a52a:	b160      	cbz	r0, 800a546 <_dtoa_r+0xee>
 800a52c:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800a52e:	2301      	movs	r3, #1
 800a530:	6013      	str	r3, [r2, #0]
 800a532:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800a534:	2b00      	cmp	r3, #0
 800a536:	f000 8568 	beq.w	800b00a <_dtoa_r+0xbb2>
 800a53a:	4b86      	ldr	r3, [pc, #536]	; (800a754 <_dtoa_r+0x2fc>)
 800a53c:	9a21      	ldr	r2, [sp, #132]	; 0x84
 800a53e:	6013      	str	r3, [r2, #0]
 800a540:	3b01      	subs	r3, #1
 800a542:	9300      	str	r3, [sp, #0]
 800a544:	e7da      	b.n	800a4fc <_dtoa_r+0xa4>
 800a546:	aa10      	add	r2, sp, #64	; 0x40
 800a548:	a911      	add	r1, sp, #68	; 0x44
 800a54a:	4620      	mov	r0, r4
 800a54c:	eeb0 0a48 	vmov.f32	s0, s16
 800a550:	eef0 0a68 	vmov.f32	s1, s17
 800a554:	f001 fdb8 	bl	800c0c8 <__d2b>
 800a558:	f3c8 550a 	ubfx	r5, r8, #20, #11
 800a55c:	4682      	mov	sl, r0
 800a55e:	2d00      	cmp	r5, #0
 800a560:	d07f      	beq.n	800a662 <_dtoa_r+0x20a>
 800a562:	ee18 3a90 	vmov	r3, s17
 800a566:	f3c3 0313 	ubfx	r3, r3, #0, #20
 800a56a:	f043 537f 	orr.w	r3, r3, #1069547520	; 0x3fc00000
 800a56e:	ec51 0b18 	vmov	r0, r1, d8
 800a572:	f443 1340 	orr.w	r3, r3, #3145728	; 0x300000
 800a576:	f2a5 35ff 	subw	r5, r5, #1023	; 0x3ff
 800a57a:	f8cd 9038 	str.w	r9, [sp, #56]	; 0x38
 800a57e:	4619      	mov	r1, r3
 800a580:	2200      	movs	r2, #0
 800a582:	4b75      	ldr	r3, [pc, #468]	; (800a758 <_dtoa_r+0x300>)
 800a584:	f7f5 fe88 	bl	8000298 <__aeabi_dsub>
 800a588:	a367      	add	r3, pc, #412	; (adr r3, 800a728 <_dtoa_r+0x2d0>)
 800a58a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a58e:	f7f6 f83b 	bl	8000608 <__aeabi_dmul>
 800a592:	a367      	add	r3, pc, #412	; (adr r3, 800a730 <_dtoa_r+0x2d8>)
 800a594:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a598:	f7f5 fe80 	bl	800029c <__adddf3>
 800a59c:	4606      	mov	r6, r0
 800a59e:	4628      	mov	r0, r5
 800a5a0:	460f      	mov	r7, r1
 800a5a2:	f7f5 ffc7 	bl	8000534 <__aeabi_i2d>
 800a5a6:	a364      	add	r3, pc, #400	; (adr r3, 800a738 <_dtoa_r+0x2e0>)
 800a5a8:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a5ac:	f7f6 f82c 	bl	8000608 <__aeabi_dmul>
 800a5b0:	4602      	mov	r2, r0
 800a5b2:	460b      	mov	r3, r1
 800a5b4:	4630      	mov	r0, r6
 800a5b6:	4639      	mov	r1, r7
 800a5b8:	f7f5 fe70 	bl	800029c <__adddf3>
 800a5bc:	4606      	mov	r6, r0
 800a5be:	460f      	mov	r7, r1
 800a5c0:	f7f6 fad2 	bl	8000b68 <__aeabi_d2iz>
 800a5c4:	2200      	movs	r2, #0
 800a5c6:	4683      	mov	fp, r0
 800a5c8:	2300      	movs	r3, #0
 800a5ca:	4630      	mov	r0, r6
 800a5cc:	4639      	mov	r1, r7
 800a5ce:	f7f6 fa8d 	bl	8000aec <__aeabi_dcmplt>
 800a5d2:	b148      	cbz	r0, 800a5e8 <_dtoa_r+0x190>
 800a5d4:	4658      	mov	r0, fp
 800a5d6:	f7f5 ffad 	bl	8000534 <__aeabi_i2d>
 800a5da:	4632      	mov	r2, r6
 800a5dc:	463b      	mov	r3, r7
 800a5de:	f7f6 fa7b 	bl	8000ad8 <__aeabi_dcmpeq>
 800a5e2:	b908      	cbnz	r0, 800a5e8 <_dtoa_r+0x190>
 800a5e4:	f10b 3bff 	add.w	fp, fp, #4294967295
 800a5e8:	f1bb 0f16 	cmp.w	fp, #22
 800a5ec:	d857      	bhi.n	800a69e <_dtoa_r+0x246>
 800a5ee:	4b5b      	ldr	r3, [pc, #364]	; (800a75c <_dtoa_r+0x304>)
 800a5f0:	eb03 03cb 	add.w	r3, r3, fp, lsl #3
 800a5f4:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a5f8:	ec51 0b18 	vmov	r0, r1, d8
 800a5fc:	f7f6 fa76 	bl	8000aec <__aeabi_dcmplt>
 800a600:	2800      	cmp	r0, #0
 800a602:	d04e      	beq.n	800a6a2 <_dtoa_r+0x24a>
 800a604:	f10b 3bff 	add.w	fp, fp, #4294967295
 800a608:	2300      	movs	r3, #0
 800a60a:	930c      	str	r3, [sp, #48]	; 0x30
 800a60c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800a60e:	1b5b      	subs	r3, r3, r5
 800a610:	1e5a      	subs	r2, r3, #1
 800a612:	bf45      	ittet	mi
 800a614:	f1c3 0301 	rsbmi	r3, r3, #1
 800a618:	9305      	strmi	r3, [sp, #20]
 800a61a:	2300      	movpl	r3, #0
 800a61c:	2300      	movmi	r3, #0
 800a61e:	9206      	str	r2, [sp, #24]
 800a620:	bf54      	ite	pl
 800a622:	9305      	strpl	r3, [sp, #20]
 800a624:	9306      	strmi	r3, [sp, #24]
 800a626:	f1bb 0f00 	cmp.w	fp, #0
 800a62a:	db3c      	blt.n	800a6a6 <_dtoa_r+0x24e>
 800a62c:	9b06      	ldr	r3, [sp, #24]
 800a62e:	f8cd b02c 	str.w	fp, [sp, #44]	; 0x2c
 800a632:	445b      	add	r3, fp
 800a634:	9306      	str	r3, [sp, #24]
 800a636:	2300      	movs	r3, #0
 800a638:	9308      	str	r3, [sp, #32]
 800a63a:	9b07      	ldr	r3, [sp, #28]
 800a63c:	2b09      	cmp	r3, #9
 800a63e:	d868      	bhi.n	800a712 <_dtoa_r+0x2ba>
 800a640:	2b05      	cmp	r3, #5
 800a642:	bfc4      	itt	gt
 800a644:	3b04      	subgt	r3, #4
 800a646:	9307      	strgt	r3, [sp, #28]
 800a648:	9b07      	ldr	r3, [sp, #28]
 800a64a:	f1a3 0302 	sub.w	r3, r3, #2
 800a64e:	bfcc      	ite	gt
 800a650:	2500      	movgt	r5, #0
 800a652:	2501      	movle	r5, #1
 800a654:	2b03      	cmp	r3, #3
 800a656:	f200 8085 	bhi.w	800a764 <_dtoa_r+0x30c>
 800a65a:	e8df f003 	tbb	[pc, r3]
 800a65e:	3b2e      	.short	0x3b2e
 800a660:	5839      	.short	0x5839
 800a662:	e9dd 5310 	ldrd	r5, r3, [sp, #64]	; 0x40
 800a666:	441d      	add	r5, r3
 800a668:	f205 4332 	addw	r3, r5, #1074	; 0x432
 800a66c:	2b20      	cmp	r3, #32
 800a66e:	bfc1      	itttt	gt
 800a670:	f1c3 0340 	rsbgt	r3, r3, #64	; 0x40
 800a674:	fa08 f803 	lslgt.w	r8, r8, r3
 800a678:	f205 4312 	addwgt	r3, r5, #1042	; 0x412
 800a67c:	fa26 f303 	lsrgt.w	r3, r6, r3
 800a680:	bfd6      	itet	le
 800a682:	f1c3 0320 	rsble	r3, r3, #32
 800a686:	ea48 0003 	orrgt.w	r0, r8, r3
 800a68a:	fa06 f003 	lslle.w	r0, r6, r3
 800a68e:	f7f5 ff41 	bl	8000514 <__aeabi_ui2d>
 800a692:	2201      	movs	r2, #1
 800a694:	f1a1 73f8 	sub.w	r3, r1, #32505856	; 0x1f00000
 800a698:	3d01      	subs	r5, #1
 800a69a:	920e      	str	r2, [sp, #56]	; 0x38
 800a69c:	e76f      	b.n	800a57e <_dtoa_r+0x126>
 800a69e:	2301      	movs	r3, #1
 800a6a0:	e7b3      	b.n	800a60a <_dtoa_r+0x1b2>
 800a6a2:	900c      	str	r0, [sp, #48]	; 0x30
 800a6a4:	e7b2      	b.n	800a60c <_dtoa_r+0x1b4>
 800a6a6:	9b05      	ldr	r3, [sp, #20]
 800a6a8:	eba3 030b 	sub.w	r3, r3, fp
 800a6ac:	9305      	str	r3, [sp, #20]
 800a6ae:	f1cb 0300 	rsb	r3, fp, #0
 800a6b2:	9308      	str	r3, [sp, #32]
 800a6b4:	2300      	movs	r3, #0
 800a6b6:	930b      	str	r3, [sp, #44]	; 0x2c
 800a6b8:	e7bf      	b.n	800a63a <_dtoa_r+0x1e2>
 800a6ba:	2300      	movs	r3, #0
 800a6bc:	9309      	str	r3, [sp, #36]	; 0x24
 800a6be:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800a6c0:	2b00      	cmp	r3, #0
 800a6c2:	dc52      	bgt.n	800a76a <_dtoa_r+0x312>
 800a6c4:	2301      	movs	r3, #1
 800a6c6:	9301      	str	r3, [sp, #4]
 800a6c8:	9304      	str	r3, [sp, #16]
 800a6ca:	461a      	mov	r2, r3
 800a6cc:	920a      	str	r2, [sp, #40]	; 0x28
 800a6ce:	e00b      	b.n	800a6e8 <_dtoa_r+0x290>
 800a6d0:	2301      	movs	r3, #1
 800a6d2:	e7f3      	b.n	800a6bc <_dtoa_r+0x264>
 800a6d4:	2300      	movs	r3, #0
 800a6d6:	9309      	str	r3, [sp, #36]	; 0x24
 800a6d8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800a6da:	445b      	add	r3, fp
 800a6dc:	9301      	str	r3, [sp, #4]
 800a6de:	3301      	adds	r3, #1
 800a6e0:	2b01      	cmp	r3, #1
 800a6e2:	9304      	str	r3, [sp, #16]
 800a6e4:	bfb8      	it	lt
 800a6e6:	2301      	movlt	r3, #1
 800a6e8:	69e0      	ldr	r0, [r4, #28]
 800a6ea:	2100      	movs	r1, #0
 800a6ec:	2204      	movs	r2, #4
 800a6ee:	f102 0614 	add.w	r6, r2, #20
 800a6f2:	429e      	cmp	r6, r3
 800a6f4:	d93d      	bls.n	800a772 <_dtoa_r+0x31a>
 800a6f6:	6041      	str	r1, [r0, #4]
 800a6f8:	4620      	mov	r0, r4
 800a6fa:	f001 f909 	bl	800b910 <_Balloc>
 800a6fe:	9000      	str	r0, [sp, #0]
 800a700:	2800      	cmp	r0, #0
 800a702:	d139      	bne.n	800a778 <_dtoa_r+0x320>
 800a704:	4b16      	ldr	r3, [pc, #88]	; (800a760 <_dtoa_r+0x308>)
 800a706:	4602      	mov	r2, r0
 800a708:	f240 11af 	movw	r1, #431	; 0x1af
 800a70c:	e6bd      	b.n	800a48a <_dtoa_r+0x32>
 800a70e:	2301      	movs	r3, #1
 800a710:	e7e1      	b.n	800a6d6 <_dtoa_r+0x27e>
 800a712:	2501      	movs	r5, #1
 800a714:	2300      	movs	r3, #0
 800a716:	9307      	str	r3, [sp, #28]
 800a718:	9509      	str	r5, [sp, #36]	; 0x24
 800a71a:	f04f 33ff 	mov.w	r3, #4294967295
 800a71e:	9301      	str	r3, [sp, #4]
 800a720:	9304      	str	r3, [sp, #16]
 800a722:	2200      	movs	r2, #0
 800a724:	2312      	movs	r3, #18
 800a726:	e7d1      	b.n	800a6cc <_dtoa_r+0x274>
 800a728:	636f4361 	.word	0x636f4361
 800a72c:	3fd287a7 	.word	0x3fd287a7
 800a730:	8b60c8b3 	.word	0x8b60c8b3
 800a734:	3fc68a28 	.word	0x3fc68a28
 800a738:	509f79fb 	.word	0x509f79fb
 800a73c:	3fd34413 	.word	0x3fd34413
 800a740:	0800d507 	.word	0x0800d507
 800a744:	0800d51e 	.word	0x0800d51e
 800a748:	7ff00000 	.word	0x7ff00000
 800a74c:	0800d503 	.word	0x0800d503
 800a750:	0800d4fa 	.word	0x0800d4fa
 800a754:	0800d4ca 	.word	0x0800d4ca
 800a758:	3ff80000 	.word	0x3ff80000
 800a75c:	0800d668 	.word	0x0800d668
 800a760:	0800d576 	.word	0x0800d576
 800a764:	2301      	movs	r3, #1
 800a766:	9309      	str	r3, [sp, #36]	; 0x24
 800a768:	e7d7      	b.n	800a71a <_dtoa_r+0x2c2>
 800a76a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800a76c:	9301      	str	r3, [sp, #4]
 800a76e:	9304      	str	r3, [sp, #16]
 800a770:	e7ba      	b.n	800a6e8 <_dtoa_r+0x290>
 800a772:	3101      	adds	r1, #1
 800a774:	0052      	lsls	r2, r2, #1
 800a776:	e7ba      	b.n	800a6ee <_dtoa_r+0x296>
 800a778:	69e3      	ldr	r3, [r4, #28]
 800a77a:	9a00      	ldr	r2, [sp, #0]
 800a77c:	601a      	str	r2, [r3, #0]
 800a77e:	9b04      	ldr	r3, [sp, #16]
 800a780:	2b0e      	cmp	r3, #14
 800a782:	f200 80a8 	bhi.w	800a8d6 <_dtoa_r+0x47e>
 800a786:	2d00      	cmp	r5, #0
 800a788:	f000 80a5 	beq.w	800a8d6 <_dtoa_r+0x47e>
 800a78c:	f1bb 0f00 	cmp.w	fp, #0
 800a790:	dd38      	ble.n	800a804 <_dtoa_r+0x3ac>
 800a792:	4bc0      	ldr	r3, [pc, #768]	; (800aa94 <_dtoa_r+0x63c>)
 800a794:	f00b 020f 	and.w	r2, fp, #15
 800a798:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800a79c:	f41b 7f80 	tst.w	fp, #256	; 0x100
 800a7a0:	e9d3 6700 	ldrd	r6, r7, [r3]
 800a7a4:	ea4f 182b 	mov.w	r8, fp, asr #4
 800a7a8:	d019      	beq.n	800a7de <_dtoa_r+0x386>
 800a7aa:	4bbb      	ldr	r3, [pc, #748]	; (800aa98 <_dtoa_r+0x640>)
 800a7ac:	ec51 0b18 	vmov	r0, r1, d8
 800a7b0:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 800a7b4:	f7f6 f852 	bl	800085c <__aeabi_ddiv>
 800a7b8:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800a7bc:	f008 080f 	and.w	r8, r8, #15
 800a7c0:	2503      	movs	r5, #3
 800a7c2:	f8df 92d4 	ldr.w	r9, [pc, #724]	; 800aa98 <_dtoa_r+0x640>
 800a7c6:	f1b8 0f00 	cmp.w	r8, #0
 800a7ca:	d10a      	bne.n	800a7e2 <_dtoa_r+0x38a>
 800a7cc:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 800a7d0:	4632      	mov	r2, r6
 800a7d2:	463b      	mov	r3, r7
 800a7d4:	f7f6 f842 	bl	800085c <__aeabi_ddiv>
 800a7d8:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800a7dc:	e02b      	b.n	800a836 <_dtoa_r+0x3de>
 800a7de:	2502      	movs	r5, #2
 800a7e0:	e7ef      	b.n	800a7c2 <_dtoa_r+0x36a>
 800a7e2:	f018 0f01 	tst.w	r8, #1
 800a7e6:	d008      	beq.n	800a7fa <_dtoa_r+0x3a2>
 800a7e8:	4630      	mov	r0, r6
 800a7ea:	4639      	mov	r1, r7
 800a7ec:	e9d9 2300 	ldrd	r2, r3, [r9]
 800a7f0:	f7f5 ff0a 	bl	8000608 <__aeabi_dmul>
 800a7f4:	3501      	adds	r5, #1
 800a7f6:	4606      	mov	r6, r0
 800a7f8:	460f      	mov	r7, r1
 800a7fa:	ea4f 0868 	mov.w	r8, r8, asr #1
 800a7fe:	f109 0908 	add.w	r9, r9, #8
 800a802:	e7e0      	b.n	800a7c6 <_dtoa_r+0x36e>
 800a804:	f000 809f 	beq.w	800a946 <_dtoa_r+0x4ee>
 800a808:	f1cb 0600 	rsb	r6, fp, #0
 800a80c:	4ba1      	ldr	r3, [pc, #644]	; (800aa94 <_dtoa_r+0x63c>)
 800a80e:	4fa2      	ldr	r7, [pc, #648]	; (800aa98 <_dtoa_r+0x640>)
 800a810:	f006 020f 	and.w	r2, r6, #15
 800a814:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 800a818:	e9d3 2300 	ldrd	r2, r3, [r3]
 800a81c:	ec51 0b18 	vmov	r0, r1, d8
 800a820:	f7f5 fef2 	bl	8000608 <__aeabi_dmul>
 800a824:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800a828:	1136      	asrs	r6, r6, #4
 800a82a:	2300      	movs	r3, #0
 800a82c:	2502      	movs	r5, #2
 800a82e:	2e00      	cmp	r6, #0
 800a830:	d17e      	bne.n	800a930 <_dtoa_r+0x4d8>
 800a832:	2b00      	cmp	r3, #0
 800a834:	d1d0      	bne.n	800a7d8 <_dtoa_r+0x380>
 800a836:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800a838:	e9dd 8902 	ldrd	r8, r9, [sp, #8]
 800a83c:	2b00      	cmp	r3, #0
 800a83e:	f000 8084 	beq.w	800a94a <_dtoa_r+0x4f2>
 800a842:	4b96      	ldr	r3, [pc, #600]	; (800aa9c <_dtoa_r+0x644>)
 800a844:	2200      	movs	r2, #0
 800a846:	4640      	mov	r0, r8
 800a848:	4649      	mov	r1, r9
 800a84a:	f7f6 f94f 	bl	8000aec <__aeabi_dcmplt>
 800a84e:	2800      	cmp	r0, #0
 800a850:	d07b      	beq.n	800a94a <_dtoa_r+0x4f2>
 800a852:	9b04      	ldr	r3, [sp, #16]
 800a854:	2b00      	cmp	r3, #0
 800a856:	d078      	beq.n	800a94a <_dtoa_r+0x4f2>
 800a858:	9b01      	ldr	r3, [sp, #4]
 800a85a:	2b00      	cmp	r3, #0
 800a85c:	dd39      	ble.n	800a8d2 <_dtoa_r+0x47a>
 800a85e:	4b90      	ldr	r3, [pc, #576]	; (800aaa0 <_dtoa_r+0x648>)
 800a860:	2200      	movs	r2, #0
 800a862:	4640      	mov	r0, r8
 800a864:	4649      	mov	r1, r9
 800a866:	f7f5 fecf 	bl	8000608 <__aeabi_dmul>
 800a86a:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800a86e:	9e01      	ldr	r6, [sp, #4]
 800a870:	f10b 37ff 	add.w	r7, fp, #4294967295
 800a874:	3501      	adds	r5, #1
 800a876:	e9dd 8902 	ldrd	r8, r9, [sp, #8]
 800a87a:	4628      	mov	r0, r5
 800a87c:	f7f5 fe5a 	bl	8000534 <__aeabi_i2d>
 800a880:	4642      	mov	r2, r8
 800a882:	464b      	mov	r3, r9
 800a884:	f7f5 fec0 	bl	8000608 <__aeabi_dmul>
 800a888:	4b86      	ldr	r3, [pc, #536]	; (800aaa4 <_dtoa_r+0x64c>)
 800a88a:	2200      	movs	r2, #0
 800a88c:	f7f5 fd06 	bl	800029c <__adddf3>
 800a890:	f1a1 7350 	sub.w	r3, r1, #54525952	; 0x3400000
 800a894:	e9cd 0102 	strd	r0, r1, [sp, #8]
 800a898:	9303      	str	r3, [sp, #12]
 800a89a:	2e00      	cmp	r6, #0
 800a89c:	d158      	bne.n	800a950 <_dtoa_r+0x4f8>
 800a89e:	4b82      	ldr	r3, [pc, #520]	; (800aaa8 <_dtoa_r+0x650>)
 800a8a0:	2200      	movs	r2, #0
 800a8a2:	4640      	mov	r0, r8
 800a8a4:	4649      	mov	r1, r9
 800a8a6:	f7f5 fcf7 	bl	8000298 <__aeabi_dsub>
 800a8aa:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 800a8ae:	4680      	mov	r8, r0
 800a8b0:	4689      	mov	r9, r1
 800a8b2:	f7f6 f939 	bl	8000b28 <__aeabi_dcmpgt>
 800a8b6:	2800      	cmp	r0, #0
 800a8b8:	f040 8296 	bne.w	800ade8 <_dtoa_r+0x990>
 800a8bc:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 800a8c0:	4640      	mov	r0, r8
 800a8c2:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 800a8c6:	4649      	mov	r1, r9
 800a8c8:	f7f6 f910 	bl	8000aec <__aeabi_dcmplt>
 800a8cc:	2800      	cmp	r0, #0
 800a8ce:	f040 8289 	bne.w	800ade4 <_dtoa_r+0x98c>
 800a8d2:	ed8d 8b02 	vstr	d8, [sp, #8]
 800a8d6:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800a8d8:	2b00      	cmp	r3, #0
 800a8da:	f2c0 814e 	blt.w	800ab7a <_dtoa_r+0x722>
 800a8de:	f1bb 0f0e 	cmp.w	fp, #14
 800a8e2:	f300 814a 	bgt.w	800ab7a <_dtoa_r+0x722>
 800a8e6:	4b6b      	ldr	r3, [pc, #428]	; (800aa94 <_dtoa_r+0x63c>)
 800a8e8:	eb03 03cb 	add.w	r3, r3, fp, lsl #3
 800a8ec:	e9d3 8900 	ldrd	r8, r9, [r3]
 800a8f0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800a8f2:	2b00      	cmp	r3, #0
 800a8f4:	f280 80dc 	bge.w	800aab0 <_dtoa_r+0x658>
 800a8f8:	9b04      	ldr	r3, [sp, #16]
 800a8fa:	2b00      	cmp	r3, #0
 800a8fc:	f300 80d8 	bgt.w	800aab0 <_dtoa_r+0x658>
 800a900:	f040 826f 	bne.w	800ade2 <_dtoa_r+0x98a>
 800a904:	4b68      	ldr	r3, [pc, #416]	; (800aaa8 <_dtoa_r+0x650>)
 800a906:	2200      	movs	r2, #0
 800a908:	4640      	mov	r0, r8
 800a90a:	4649      	mov	r1, r9
 800a90c:	f7f5 fe7c 	bl	8000608 <__aeabi_dmul>
 800a910:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 800a914:	f7f6 f8fe 	bl	8000b14 <__aeabi_dcmpge>
 800a918:	9e04      	ldr	r6, [sp, #16]
 800a91a:	4637      	mov	r7, r6
 800a91c:	2800      	cmp	r0, #0
 800a91e:	f040 8245 	bne.w	800adac <_dtoa_r+0x954>
 800a922:	9d00      	ldr	r5, [sp, #0]
 800a924:	2331      	movs	r3, #49	; 0x31
 800a926:	f805 3b01 	strb.w	r3, [r5], #1
 800a92a:	f10b 0b01 	add.w	fp, fp, #1
 800a92e:	e241      	b.n	800adb4 <_dtoa_r+0x95c>
 800a930:	07f2      	lsls	r2, r6, #31
 800a932:	d505      	bpl.n	800a940 <_dtoa_r+0x4e8>
 800a934:	e9d7 2300 	ldrd	r2, r3, [r7]
 800a938:	f7f5 fe66 	bl	8000608 <__aeabi_dmul>
 800a93c:	3501      	adds	r5, #1
 800a93e:	2301      	movs	r3, #1
 800a940:	1076      	asrs	r6, r6, #1
 800a942:	3708      	adds	r7, #8
 800a944:	e773      	b.n	800a82e <_dtoa_r+0x3d6>
 800a946:	2502      	movs	r5, #2
 800a948:	e775      	b.n	800a836 <_dtoa_r+0x3de>
 800a94a:	9e04      	ldr	r6, [sp, #16]
 800a94c:	465f      	mov	r7, fp
 800a94e:	e792      	b.n	800a876 <_dtoa_r+0x41e>
 800a950:	9900      	ldr	r1, [sp, #0]
 800a952:	4b50      	ldr	r3, [pc, #320]	; (800aa94 <_dtoa_r+0x63c>)
 800a954:	ed9d 7b02 	vldr	d7, [sp, #8]
 800a958:	4431      	add	r1, r6
 800a95a:	9102      	str	r1, [sp, #8]
 800a95c:	9909      	ldr	r1, [sp, #36]	; 0x24
 800a95e:	eeb0 9a47 	vmov.f32	s18, s14
 800a962:	eef0 9a67 	vmov.f32	s19, s15
 800a966:	eb03 03c6 	add.w	r3, r3, r6, lsl #3
 800a96a:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 800a96e:	2900      	cmp	r1, #0
 800a970:	d044      	beq.n	800a9fc <_dtoa_r+0x5a4>
 800a972:	494e      	ldr	r1, [pc, #312]	; (800aaac <_dtoa_r+0x654>)
 800a974:	2000      	movs	r0, #0
 800a976:	f7f5 ff71 	bl	800085c <__aeabi_ddiv>
 800a97a:	ec53 2b19 	vmov	r2, r3, d9
 800a97e:	f7f5 fc8b 	bl	8000298 <__aeabi_dsub>
 800a982:	9d00      	ldr	r5, [sp, #0]
 800a984:	ec41 0b19 	vmov	d9, r0, r1
 800a988:	4649      	mov	r1, r9
 800a98a:	4640      	mov	r0, r8
 800a98c:	f7f6 f8ec 	bl	8000b68 <__aeabi_d2iz>
 800a990:	4606      	mov	r6, r0
 800a992:	f7f5 fdcf 	bl	8000534 <__aeabi_i2d>
 800a996:	4602      	mov	r2, r0
 800a998:	460b      	mov	r3, r1
 800a99a:	4640      	mov	r0, r8
 800a99c:	4649      	mov	r1, r9
 800a99e:	f7f5 fc7b 	bl	8000298 <__aeabi_dsub>
 800a9a2:	3630      	adds	r6, #48	; 0x30
 800a9a4:	f805 6b01 	strb.w	r6, [r5], #1
 800a9a8:	ec53 2b19 	vmov	r2, r3, d9
 800a9ac:	4680      	mov	r8, r0
 800a9ae:	4689      	mov	r9, r1
 800a9b0:	f7f6 f89c 	bl	8000aec <__aeabi_dcmplt>
 800a9b4:	2800      	cmp	r0, #0
 800a9b6:	d164      	bne.n	800aa82 <_dtoa_r+0x62a>
 800a9b8:	4642      	mov	r2, r8
 800a9ba:	464b      	mov	r3, r9
 800a9bc:	4937      	ldr	r1, [pc, #220]	; (800aa9c <_dtoa_r+0x644>)
 800a9be:	2000      	movs	r0, #0
 800a9c0:	f7f5 fc6a 	bl	8000298 <__aeabi_dsub>
 800a9c4:	ec53 2b19 	vmov	r2, r3, d9
 800a9c8:	f7f6 f890 	bl	8000aec <__aeabi_dcmplt>
 800a9cc:	2800      	cmp	r0, #0
 800a9ce:	f040 80b6 	bne.w	800ab3e <_dtoa_r+0x6e6>
 800a9d2:	9b02      	ldr	r3, [sp, #8]
 800a9d4:	429d      	cmp	r5, r3
 800a9d6:	f43f af7c 	beq.w	800a8d2 <_dtoa_r+0x47a>
 800a9da:	4b31      	ldr	r3, [pc, #196]	; (800aaa0 <_dtoa_r+0x648>)
 800a9dc:	ec51 0b19 	vmov	r0, r1, d9
 800a9e0:	2200      	movs	r2, #0
 800a9e2:	f7f5 fe11 	bl	8000608 <__aeabi_dmul>
 800a9e6:	4b2e      	ldr	r3, [pc, #184]	; (800aaa0 <_dtoa_r+0x648>)
 800a9e8:	ec41 0b19 	vmov	d9, r0, r1
 800a9ec:	2200      	movs	r2, #0
 800a9ee:	4640      	mov	r0, r8
 800a9f0:	4649      	mov	r1, r9
 800a9f2:	f7f5 fe09 	bl	8000608 <__aeabi_dmul>
 800a9f6:	4680      	mov	r8, r0
 800a9f8:	4689      	mov	r9, r1
 800a9fa:	e7c5      	b.n	800a988 <_dtoa_r+0x530>
 800a9fc:	ec51 0b17 	vmov	r0, r1, d7
 800aa00:	f7f5 fe02 	bl	8000608 <__aeabi_dmul>
 800aa04:	9b02      	ldr	r3, [sp, #8]
 800aa06:	9d00      	ldr	r5, [sp, #0]
 800aa08:	930f      	str	r3, [sp, #60]	; 0x3c
 800aa0a:	ec41 0b19 	vmov	d9, r0, r1
 800aa0e:	4649      	mov	r1, r9
 800aa10:	4640      	mov	r0, r8
 800aa12:	f7f6 f8a9 	bl	8000b68 <__aeabi_d2iz>
 800aa16:	4606      	mov	r6, r0
 800aa18:	f7f5 fd8c 	bl	8000534 <__aeabi_i2d>
 800aa1c:	3630      	adds	r6, #48	; 0x30
 800aa1e:	4602      	mov	r2, r0
 800aa20:	460b      	mov	r3, r1
 800aa22:	4640      	mov	r0, r8
 800aa24:	4649      	mov	r1, r9
 800aa26:	f7f5 fc37 	bl	8000298 <__aeabi_dsub>
 800aa2a:	f805 6b01 	strb.w	r6, [r5], #1
 800aa2e:	9b02      	ldr	r3, [sp, #8]
 800aa30:	429d      	cmp	r5, r3
 800aa32:	4680      	mov	r8, r0
 800aa34:	4689      	mov	r9, r1
 800aa36:	f04f 0200 	mov.w	r2, #0
 800aa3a:	d124      	bne.n	800aa86 <_dtoa_r+0x62e>
 800aa3c:	4b1b      	ldr	r3, [pc, #108]	; (800aaac <_dtoa_r+0x654>)
 800aa3e:	ec51 0b19 	vmov	r0, r1, d9
 800aa42:	f7f5 fc2b 	bl	800029c <__adddf3>
 800aa46:	4602      	mov	r2, r0
 800aa48:	460b      	mov	r3, r1
 800aa4a:	4640      	mov	r0, r8
 800aa4c:	4649      	mov	r1, r9
 800aa4e:	f7f6 f86b 	bl	8000b28 <__aeabi_dcmpgt>
 800aa52:	2800      	cmp	r0, #0
 800aa54:	d173      	bne.n	800ab3e <_dtoa_r+0x6e6>
 800aa56:	ec53 2b19 	vmov	r2, r3, d9
 800aa5a:	4914      	ldr	r1, [pc, #80]	; (800aaac <_dtoa_r+0x654>)
 800aa5c:	2000      	movs	r0, #0
 800aa5e:	f7f5 fc1b 	bl	8000298 <__aeabi_dsub>
 800aa62:	4602      	mov	r2, r0
 800aa64:	460b      	mov	r3, r1
 800aa66:	4640      	mov	r0, r8
 800aa68:	4649      	mov	r1, r9
 800aa6a:	f7f6 f83f 	bl	8000aec <__aeabi_dcmplt>
 800aa6e:	2800      	cmp	r0, #0
 800aa70:	f43f af2f 	beq.w	800a8d2 <_dtoa_r+0x47a>
 800aa74:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 800aa76:	1e6b      	subs	r3, r5, #1
 800aa78:	930f      	str	r3, [sp, #60]	; 0x3c
 800aa7a:	f815 3c01 	ldrb.w	r3, [r5, #-1]
 800aa7e:	2b30      	cmp	r3, #48	; 0x30
 800aa80:	d0f8      	beq.n	800aa74 <_dtoa_r+0x61c>
 800aa82:	46bb      	mov	fp, r7
 800aa84:	e04a      	b.n	800ab1c <_dtoa_r+0x6c4>
 800aa86:	4b06      	ldr	r3, [pc, #24]	; (800aaa0 <_dtoa_r+0x648>)
 800aa88:	f7f5 fdbe 	bl	8000608 <__aeabi_dmul>
 800aa8c:	4680      	mov	r8, r0
 800aa8e:	4689      	mov	r9, r1
 800aa90:	e7bd      	b.n	800aa0e <_dtoa_r+0x5b6>
 800aa92:	bf00      	nop
 800aa94:	0800d668 	.word	0x0800d668
 800aa98:	0800d640 	.word	0x0800d640
 800aa9c:	3ff00000 	.word	0x3ff00000
 800aaa0:	40240000 	.word	0x40240000
 800aaa4:	401c0000 	.word	0x401c0000
 800aaa8:	40140000 	.word	0x40140000
 800aaac:	3fe00000 	.word	0x3fe00000
 800aab0:	e9dd 6702 	ldrd	r6, r7, [sp, #8]
 800aab4:	9d00      	ldr	r5, [sp, #0]
 800aab6:	4642      	mov	r2, r8
 800aab8:	464b      	mov	r3, r9
 800aaba:	4630      	mov	r0, r6
 800aabc:	4639      	mov	r1, r7
 800aabe:	f7f5 fecd 	bl	800085c <__aeabi_ddiv>
 800aac2:	f7f6 f851 	bl	8000b68 <__aeabi_d2iz>
 800aac6:	9001      	str	r0, [sp, #4]
 800aac8:	f7f5 fd34 	bl	8000534 <__aeabi_i2d>
 800aacc:	4642      	mov	r2, r8
 800aace:	464b      	mov	r3, r9
 800aad0:	f7f5 fd9a 	bl	8000608 <__aeabi_dmul>
 800aad4:	4602      	mov	r2, r0
 800aad6:	460b      	mov	r3, r1
 800aad8:	4630      	mov	r0, r6
 800aada:	4639      	mov	r1, r7
 800aadc:	f7f5 fbdc 	bl	8000298 <__aeabi_dsub>
 800aae0:	9e01      	ldr	r6, [sp, #4]
 800aae2:	9f04      	ldr	r7, [sp, #16]
 800aae4:	3630      	adds	r6, #48	; 0x30
 800aae6:	f805 6b01 	strb.w	r6, [r5], #1
 800aaea:	9e00      	ldr	r6, [sp, #0]
 800aaec:	1bae      	subs	r6, r5, r6
 800aaee:	42b7      	cmp	r7, r6
 800aaf0:	4602      	mov	r2, r0
 800aaf2:	460b      	mov	r3, r1
 800aaf4:	d134      	bne.n	800ab60 <_dtoa_r+0x708>
 800aaf6:	f7f5 fbd1 	bl	800029c <__adddf3>
 800aafa:	4642      	mov	r2, r8
 800aafc:	464b      	mov	r3, r9
 800aafe:	4606      	mov	r6, r0
 800ab00:	460f      	mov	r7, r1
 800ab02:	f7f6 f811 	bl	8000b28 <__aeabi_dcmpgt>
 800ab06:	b9c8      	cbnz	r0, 800ab3c <_dtoa_r+0x6e4>
 800ab08:	4642      	mov	r2, r8
 800ab0a:	464b      	mov	r3, r9
 800ab0c:	4630      	mov	r0, r6
 800ab0e:	4639      	mov	r1, r7
 800ab10:	f7f5 ffe2 	bl	8000ad8 <__aeabi_dcmpeq>
 800ab14:	b110      	cbz	r0, 800ab1c <_dtoa_r+0x6c4>
 800ab16:	9b01      	ldr	r3, [sp, #4]
 800ab18:	07db      	lsls	r3, r3, #31
 800ab1a:	d40f      	bmi.n	800ab3c <_dtoa_r+0x6e4>
 800ab1c:	4651      	mov	r1, sl
 800ab1e:	4620      	mov	r0, r4
 800ab20:	f000 ff36 	bl	800b990 <_Bfree>
 800ab24:	2300      	movs	r3, #0
 800ab26:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800ab28:	702b      	strb	r3, [r5, #0]
 800ab2a:	f10b 0301 	add.w	r3, fp, #1
 800ab2e:	6013      	str	r3, [r2, #0]
 800ab30:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800ab32:	2b00      	cmp	r3, #0
 800ab34:	f43f ace2 	beq.w	800a4fc <_dtoa_r+0xa4>
 800ab38:	601d      	str	r5, [r3, #0]
 800ab3a:	e4df      	b.n	800a4fc <_dtoa_r+0xa4>
 800ab3c:	465f      	mov	r7, fp
 800ab3e:	462b      	mov	r3, r5
 800ab40:	461d      	mov	r5, r3
 800ab42:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 800ab46:	2a39      	cmp	r2, #57	; 0x39
 800ab48:	d106      	bne.n	800ab58 <_dtoa_r+0x700>
 800ab4a:	9a00      	ldr	r2, [sp, #0]
 800ab4c:	429a      	cmp	r2, r3
 800ab4e:	d1f7      	bne.n	800ab40 <_dtoa_r+0x6e8>
 800ab50:	9900      	ldr	r1, [sp, #0]
 800ab52:	2230      	movs	r2, #48	; 0x30
 800ab54:	3701      	adds	r7, #1
 800ab56:	700a      	strb	r2, [r1, #0]
 800ab58:	781a      	ldrb	r2, [r3, #0]
 800ab5a:	3201      	adds	r2, #1
 800ab5c:	701a      	strb	r2, [r3, #0]
 800ab5e:	e790      	b.n	800aa82 <_dtoa_r+0x62a>
 800ab60:	4ba3      	ldr	r3, [pc, #652]	; (800adf0 <_dtoa_r+0x998>)
 800ab62:	2200      	movs	r2, #0
 800ab64:	f7f5 fd50 	bl	8000608 <__aeabi_dmul>
 800ab68:	2200      	movs	r2, #0
 800ab6a:	2300      	movs	r3, #0
 800ab6c:	4606      	mov	r6, r0
 800ab6e:	460f      	mov	r7, r1
 800ab70:	f7f5 ffb2 	bl	8000ad8 <__aeabi_dcmpeq>
 800ab74:	2800      	cmp	r0, #0
 800ab76:	d09e      	beq.n	800aab6 <_dtoa_r+0x65e>
 800ab78:	e7d0      	b.n	800ab1c <_dtoa_r+0x6c4>
 800ab7a:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800ab7c:	2a00      	cmp	r2, #0
 800ab7e:	f000 80ca 	beq.w	800ad16 <_dtoa_r+0x8be>
 800ab82:	9a07      	ldr	r2, [sp, #28]
 800ab84:	2a01      	cmp	r2, #1
 800ab86:	f300 80ad 	bgt.w	800ace4 <_dtoa_r+0x88c>
 800ab8a:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800ab8c:	2a00      	cmp	r2, #0
 800ab8e:	f000 80a5 	beq.w	800acdc <_dtoa_r+0x884>
 800ab92:	f203 4333 	addw	r3, r3, #1075	; 0x433
 800ab96:	9e08      	ldr	r6, [sp, #32]
 800ab98:	9d05      	ldr	r5, [sp, #20]
 800ab9a:	9a05      	ldr	r2, [sp, #20]
 800ab9c:	441a      	add	r2, r3
 800ab9e:	9205      	str	r2, [sp, #20]
 800aba0:	9a06      	ldr	r2, [sp, #24]
 800aba2:	2101      	movs	r1, #1
 800aba4:	441a      	add	r2, r3
 800aba6:	4620      	mov	r0, r4
 800aba8:	9206      	str	r2, [sp, #24]
 800abaa:	f000 fff1 	bl	800bb90 <__i2b>
 800abae:	4607      	mov	r7, r0
 800abb0:	b165      	cbz	r5, 800abcc <_dtoa_r+0x774>
 800abb2:	9b06      	ldr	r3, [sp, #24]
 800abb4:	2b00      	cmp	r3, #0
 800abb6:	dd09      	ble.n	800abcc <_dtoa_r+0x774>
 800abb8:	42ab      	cmp	r3, r5
 800abba:	9a05      	ldr	r2, [sp, #20]
 800abbc:	bfa8      	it	ge
 800abbe:	462b      	movge	r3, r5
 800abc0:	1ad2      	subs	r2, r2, r3
 800abc2:	9205      	str	r2, [sp, #20]
 800abc4:	9a06      	ldr	r2, [sp, #24]
 800abc6:	1aed      	subs	r5, r5, r3
 800abc8:	1ad3      	subs	r3, r2, r3
 800abca:	9306      	str	r3, [sp, #24]
 800abcc:	9b08      	ldr	r3, [sp, #32]
 800abce:	b1f3      	cbz	r3, 800ac0e <_dtoa_r+0x7b6>
 800abd0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800abd2:	2b00      	cmp	r3, #0
 800abd4:	f000 80a3 	beq.w	800ad1e <_dtoa_r+0x8c6>
 800abd8:	2e00      	cmp	r6, #0
 800abda:	dd10      	ble.n	800abfe <_dtoa_r+0x7a6>
 800abdc:	4639      	mov	r1, r7
 800abde:	4632      	mov	r2, r6
 800abe0:	4620      	mov	r0, r4
 800abe2:	f001 f895 	bl	800bd10 <__pow5mult>
 800abe6:	4652      	mov	r2, sl
 800abe8:	4601      	mov	r1, r0
 800abea:	4607      	mov	r7, r0
 800abec:	4620      	mov	r0, r4
 800abee:	f000 ffe5 	bl	800bbbc <__multiply>
 800abf2:	4651      	mov	r1, sl
 800abf4:	4680      	mov	r8, r0
 800abf6:	4620      	mov	r0, r4
 800abf8:	f000 feca 	bl	800b990 <_Bfree>
 800abfc:	46c2      	mov	sl, r8
 800abfe:	9b08      	ldr	r3, [sp, #32]
 800ac00:	1b9a      	subs	r2, r3, r6
 800ac02:	d004      	beq.n	800ac0e <_dtoa_r+0x7b6>
 800ac04:	4651      	mov	r1, sl
 800ac06:	4620      	mov	r0, r4
 800ac08:	f001 f882 	bl	800bd10 <__pow5mult>
 800ac0c:	4682      	mov	sl, r0
 800ac0e:	2101      	movs	r1, #1
 800ac10:	4620      	mov	r0, r4
 800ac12:	f000 ffbd 	bl	800bb90 <__i2b>
 800ac16:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800ac18:	2b00      	cmp	r3, #0
 800ac1a:	4606      	mov	r6, r0
 800ac1c:	f340 8081 	ble.w	800ad22 <_dtoa_r+0x8ca>
 800ac20:	461a      	mov	r2, r3
 800ac22:	4601      	mov	r1, r0
 800ac24:	4620      	mov	r0, r4
 800ac26:	f001 f873 	bl	800bd10 <__pow5mult>
 800ac2a:	9b07      	ldr	r3, [sp, #28]
 800ac2c:	2b01      	cmp	r3, #1
 800ac2e:	4606      	mov	r6, r0
 800ac30:	dd7a      	ble.n	800ad28 <_dtoa_r+0x8d0>
 800ac32:	f04f 0800 	mov.w	r8, #0
 800ac36:	6933      	ldr	r3, [r6, #16]
 800ac38:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 800ac3c:	6918      	ldr	r0, [r3, #16]
 800ac3e:	f000 ff59 	bl	800baf4 <__hi0bits>
 800ac42:	f1c0 0020 	rsb	r0, r0, #32
 800ac46:	9b06      	ldr	r3, [sp, #24]
 800ac48:	4418      	add	r0, r3
 800ac4a:	f010 001f 	ands.w	r0, r0, #31
 800ac4e:	f000 8094 	beq.w	800ad7a <_dtoa_r+0x922>
 800ac52:	f1c0 0320 	rsb	r3, r0, #32
 800ac56:	2b04      	cmp	r3, #4
 800ac58:	f340 8085 	ble.w	800ad66 <_dtoa_r+0x90e>
 800ac5c:	9b05      	ldr	r3, [sp, #20]
 800ac5e:	f1c0 001c 	rsb	r0, r0, #28
 800ac62:	4403      	add	r3, r0
 800ac64:	9305      	str	r3, [sp, #20]
 800ac66:	9b06      	ldr	r3, [sp, #24]
 800ac68:	4403      	add	r3, r0
 800ac6a:	4405      	add	r5, r0
 800ac6c:	9306      	str	r3, [sp, #24]
 800ac6e:	9b05      	ldr	r3, [sp, #20]
 800ac70:	2b00      	cmp	r3, #0
 800ac72:	dd05      	ble.n	800ac80 <_dtoa_r+0x828>
 800ac74:	4651      	mov	r1, sl
 800ac76:	461a      	mov	r2, r3
 800ac78:	4620      	mov	r0, r4
 800ac7a:	f001 f8a3 	bl	800bdc4 <__lshift>
 800ac7e:	4682      	mov	sl, r0
 800ac80:	9b06      	ldr	r3, [sp, #24]
 800ac82:	2b00      	cmp	r3, #0
 800ac84:	dd05      	ble.n	800ac92 <_dtoa_r+0x83a>
 800ac86:	4631      	mov	r1, r6
 800ac88:	461a      	mov	r2, r3
 800ac8a:	4620      	mov	r0, r4
 800ac8c:	f001 f89a 	bl	800bdc4 <__lshift>
 800ac90:	4606      	mov	r6, r0
 800ac92:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800ac94:	2b00      	cmp	r3, #0
 800ac96:	d072      	beq.n	800ad7e <_dtoa_r+0x926>
 800ac98:	4631      	mov	r1, r6
 800ac9a:	4650      	mov	r0, sl
 800ac9c:	f001 f8fe 	bl	800be9c <__mcmp>
 800aca0:	2800      	cmp	r0, #0
 800aca2:	da6c      	bge.n	800ad7e <_dtoa_r+0x926>
 800aca4:	2300      	movs	r3, #0
 800aca6:	4651      	mov	r1, sl
 800aca8:	220a      	movs	r2, #10
 800acaa:	4620      	mov	r0, r4
 800acac:	f000 fe92 	bl	800b9d4 <__multadd>
 800acb0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800acb2:	f10b 3bff 	add.w	fp, fp, #4294967295
 800acb6:	4682      	mov	sl, r0
 800acb8:	2b00      	cmp	r3, #0
 800acba:	f000 81b0 	beq.w	800b01e <_dtoa_r+0xbc6>
 800acbe:	2300      	movs	r3, #0
 800acc0:	4639      	mov	r1, r7
 800acc2:	220a      	movs	r2, #10
 800acc4:	4620      	mov	r0, r4
 800acc6:	f000 fe85 	bl	800b9d4 <__multadd>
 800acca:	9b01      	ldr	r3, [sp, #4]
 800accc:	2b00      	cmp	r3, #0
 800acce:	4607      	mov	r7, r0
 800acd0:	f300 8096 	bgt.w	800ae00 <_dtoa_r+0x9a8>
 800acd4:	9b07      	ldr	r3, [sp, #28]
 800acd6:	2b02      	cmp	r3, #2
 800acd8:	dc59      	bgt.n	800ad8e <_dtoa_r+0x936>
 800acda:	e091      	b.n	800ae00 <_dtoa_r+0x9a8>
 800acdc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800acde:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
 800ace2:	e758      	b.n	800ab96 <_dtoa_r+0x73e>
 800ace4:	9b04      	ldr	r3, [sp, #16]
 800ace6:	1e5e      	subs	r6, r3, #1
 800ace8:	9b08      	ldr	r3, [sp, #32]
 800acea:	42b3      	cmp	r3, r6
 800acec:	bfbf      	itttt	lt
 800acee:	9b08      	ldrlt	r3, [sp, #32]
 800acf0:	9a0b      	ldrlt	r2, [sp, #44]	; 0x2c
 800acf2:	9608      	strlt	r6, [sp, #32]
 800acf4:	1af3      	sublt	r3, r6, r3
 800acf6:	bfb4      	ite	lt
 800acf8:	18d2      	addlt	r2, r2, r3
 800acfa:	1b9e      	subge	r6, r3, r6
 800acfc:	9b04      	ldr	r3, [sp, #16]
 800acfe:	bfbc      	itt	lt
 800ad00:	920b      	strlt	r2, [sp, #44]	; 0x2c
 800ad02:	2600      	movlt	r6, #0
 800ad04:	2b00      	cmp	r3, #0
 800ad06:	bfb7      	itett	lt
 800ad08:	e9dd 2304 	ldrdlt	r2, r3, [sp, #16]
 800ad0c:	e9dd 3504 	ldrdge	r3, r5, [sp, #16]
 800ad10:	1a9d      	sublt	r5, r3, r2
 800ad12:	2300      	movlt	r3, #0
 800ad14:	e741      	b.n	800ab9a <_dtoa_r+0x742>
 800ad16:	9e08      	ldr	r6, [sp, #32]
 800ad18:	9d05      	ldr	r5, [sp, #20]
 800ad1a:	9f09      	ldr	r7, [sp, #36]	; 0x24
 800ad1c:	e748      	b.n	800abb0 <_dtoa_r+0x758>
 800ad1e:	9a08      	ldr	r2, [sp, #32]
 800ad20:	e770      	b.n	800ac04 <_dtoa_r+0x7ac>
 800ad22:	9b07      	ldr	r3, [sp, #28]
 800ad24:	2b01      	cmp	r3, #1
 800ad26:	dc19      	bgt.n	800ad5c <_dtoa_r+0x904>
 800ad28:	9b02      	ldr	r3, [sp, #8]
 800ad2a:	b9bb      	cbnz	r3, 800ad5c <_dtoa_r+0x904>
 800ad2c:	9b03      	ldr	r3, [sp, #12]
 800ad2e:	f3c3 0313 	ubfx	r3, r3, #0, #20
 800ad32:	b99b      	cbnz	r3, 800ad5c <_dtoa_r+0x904>
 800ad34:	9b03      	ldr	r3, [sp, #12]
 800ad36:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 800ad3a:	0d1b      	lsrs	r3, r3, #20
 800ad3c:	051b      	lsls	r3, r3, #20
 800ad3e:	b183      	cbz	r3, 800ad62 <_dtoa_r+0x90a>
 800ad40:	9b05      	ldr	r3, [sp, #20]
 800ad42:	3301      	adds	r3, #1
 800ad44:	9305      	str	r3, [sp, #20]
 800ad46:	9b06      	ldr	r3, [sp, #24]
 800ad48:	3301      	adds	r3, #1
 800ad4a:	9306      	str	r3, [sp, #24]
 800ad4c:	f04f 0801 	mov.w	r8, #1
 800ad50:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800ad52:	2b00      	cmp	r3, #0
 800ad54:	f47f af6f 	bne.w	800ac36 <_dtoa_r+0x7de>
 800ad58:	2001      	movs	r0, #1
 800ad5a:	e774      	b.n	800ac46 <_dtoa_r+0x7ee>
 800ad5c:	f04f 0800 	mov.w	r8, #0
 800ad60:	e7f6      	b.n	800ad50 <_dtoa_r+0x8f8>
 800ad62:	4698      	mov	r8, r3
 800ad64:	e7f4      	b.n	800ad50 <_dtoa_r+0x8f8>
 800ad66:	d082      	beq.n	800ac6e <_dtoa_r+0x816>
 800ad68:	9a05      	ldr	r2, [sp, #20]
 800ad6a:	331c      	adds	r3, #28
 800ad6c:	441a      	add	r2, r3
 800ad6e:	9205      	str	r2, [sp, #20]
 800ad70:	9a06      	ldr	r2, [sp, #24]
 800ad72:	441a      	add	r2, r3
 800ad74:	441d      	add	r5, r3
 800ad76:	9206      	str	r2, [sp, #24]
 800ad78:	e779      	b.n	800ac6e <_dtoa_r+0x816>
 800ad7a:	4603      	mov	r3, r0
 800ad7c:	e7f4      	b.n	800ad68 <_dtoa_r+0x910>
 800ad7e:	9b04      	ldr	r3, [sp, #16]
 800ad80:	2b00      	cmp	r3, #0
 800ad82:	dc37      	bgt.n	800adf4 <_dtoa_r+0x99c>
 800ad84:	9b07      	ldr	r3, [sp, #28]
 800ad86:	2b02      	cmp	r3, #2
 800ad88:	dd34      	ble.n	800adf4 <_dtoa_r+0x99c>
 800ad8a:	9b04      	ldr	r3, [sp, #16]
 800ad8c:	9301      	str	r3, [sp, #4]
 800ad8e:	9b01      	ldr	r3, [sp, #4]
 800ad90:	b963      	cbnz	r3, 800adac <_dtoa_r+0x954>
 800ad92:	4631      	mov	r1, r6
 800ad94:	2205      	movs	r2, #5
 800ad96:	4620      	mov	r0, r4
 800ad98:	f000 fe1c 	bl	800b9d4 <__multadd>
 800ad9c:	4601      	mov	r1, r0
 800ad9e:	4606      	mov	r6, r0
 800ada0:	4650      	mov	r0, sl
 800ada2:	f001 f87b 	bl	800be9c <__mcmp>
 800ada6:	2800      	cmp	r0, #0
 800ada8:	f73f adbb 	bgt.w	800a922 <_dtoa_r+0x4ca>
 800adac:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800adae:	9d00      	ldr	r5, [sp, #0]
 800adb0:	ea6f 0b03 	mvn.w	fp, r3
 800adb4:	f04f 0800 	mov.w	r8, #0
 800adb8:	4631      	mov	r1, r6
 800adba:	4620      	mov	r0, r4
 800adbc:	f000 fde8 	bl	800b990 <_Bfree>
 800adc0:	2f00      	cmp	r7, #0
 800adc2:	f43f aeab 	beq.w	800ab1c <_dtoa_r+0x6c4>
 800adc6:	f1b8 0f00 	cmp.w	r8, #0
 800adca:	d005      	beq.n	800add8 <_dtoa_r+0x980>
 800adcc:	45b8      	cmp	r8, r7
 800adce:	d003      	beq.n	800add8 <_dtoa_r+0x980>
 800add0:	4641      	mov	r1, r8
 800add2:	4620      	mov	r0, r4
 800add4:	f000 fddc 	bl	800b990 <_Bfree>
 800add8:	4639      	mov	r1, r7
 800adda:	4620      	mov	r0, r4
 800addc:	f000 fdd8 	bl	800b990 <_Bfree>
 800ade0:	e69c      	b.n	800ab1c <_dtoa_r+0x6c4>
 800ade2:	2600      	movs	r6, #0
 800ade4:	4637      	mov	r7, r6
 800ade6:	e7e1      	b.n	800adac <_dtoa_r+0x954>
 800ade8:	46bb      	mov	fp, r7
 800adea:	4637      	mov	r7, r6
 800adec:	e599      	b.n	800a922 <_dtoa_r+0x4ca>
 800adee:	bf00      	nop
 800adf0:	40240000 	.word	0x40240000
 800adf4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800adf6:	2b00      	cmp	r3, #0
 800adf8:	f000 80c8 	beq.w	800af8c <_dtoa_r+0xb34>
 800adfc:	9b04      	ldr	r3, [sp, #16]
 800adfe:	9301      	str	r3, [sp, #4]
 800ae00:	2d00      	cmp	r5, #0
 800ae02:	dd05      	ble.n	800ae10 <_dtoa_r+0x9b8>
 800ae04:	4639      	mov	r1, r7
 800ae06:	462a      	mov	r2, r5
 800ae08:	4620      	mov	r0, r4
 800ae0a:	f000 ffdb 	bl	800bdc4 <__lshift>
 800ae0e:	4607      	mov	r7, r0
 800ae10:	f1b8 0f00 	cmp.w	r8, #0
 800ae14:	d05b      	beq.n	800aece <_dtoa_r+0xa76>
 800ae16:	6879      	ldr	r1, [r7, #4]
 800ae18:	4620      	mov	r0, r4
 800ae1a:	f000 fd79 	bl	800b910 <_Balloc>
 800ae1e:	4605      	mov	r5, r0
 800ae20:	b928      	cbnz	r0, 800ae2e <_dtoa_r+0x9d6>
 800ae22:	4b83      	ldr	r3, [pc, #524]	; (800b030 <_dtoa_r+0xbd8>)
 800ae24:	4602      	mov	r2, r0
 800ae26:	f240 21ef 	movw	r1, #751	; 0x2ef
 800ae2a:	f7ff bb2e 	b.w	800a48a <_dtoa_r+0x32>
 800ae2e:	693a      	ldr	r2, [r7, #16]
 800ae30:	3202      	adds	r2, #2
 800ae32:	0092      	lsls	r2, r2, #2
 800ae34:	f107 010c 	add.w	r1, r7, #12
 800ae38:	300c      	adds	r0, #12
 800ae3a:	f7ff fa64 	bl	800a306 <memcpy>
 800ae3e:	2201      	movs	r2, #1
 800ae40:	4629      	mov	r1, r5
 800ae42:	4620      	mov	r0, r4
 800ae44:	f000 ffbe 	bl	800bdc4 <__lshift>
 800ae48:	9b00      	ldr	r3, [sp, #0]
 800ae4a:	3301      	adds	r3, #1
 800ae4c:	9304      	str	r3, [sp, #16]
 800ae4e:	e9dd 2300 	ldrd	r2, r3, [sp]
 800ae52:	4413      	add	r3, r2
 800ae54:	9308      	str	r3, [sp, #32]
 800ae56:	9b02      	ldr	r3, [sp, #8]
 800ae58:	f003 0301 	and.w	r3, r3, #1
 800ae5c:	46b8      	mov	r8, r7
 800ae5e:	9306      	str	r3, [sp, #24]
 800ae60:	4607      	mov	r7, r0
 800ae62:	9b04      	ldr	r3, [sp, #16]
 800ae64:	4631      	mov	r1, r6
 800ae66:	3b01      	subs	r3, #1
 800ae68:	4650      	mov	r0, sl
 800ae6a:	9301      	str	r3, [sp, #4]
 800ae6c:	f7ff fa6a 	bl	800a344 <quorem>
 800ae70:	4641      	mov	r1, r8
 800ae72:	9002      	str	r0, [sp, #8]
 800ae74:	f100 0930 	add.w	r9, r0, #48	; 0x30
 800ae78:	4650      	mov	r0, sl
 800ae7a:	f001 f80f 	bl	800be9c <__mcmp>
 800ae7e:	463a      	mov	r2, r7
 800ae80:	9005      	str	r0, [sp, #20]
 800ae82:	4631      	mov	r1, r6
 800ae84:	4620      	mov	r0, r4
 800ae86:	f001 f825 	bl	800bed4 <__mdiff>
 800ae8a:	68c2      	ldr	r2, [r0, #12]
 800ae8c:	4605      	mov	r5, r0
 800ae8e:	bb02      	cbnz	r2, 800aed2 <_dtoa_r+0xa7a>
 800ae90:	4601      	mov	r1, r0
 800ae92:	4650      	mov	r0, sl
 800ae94:	f001 f802 	bl	800be9c <__mcmp>
 800ae98:	4602      	mov	r2, r0
 800ae9a:	4629      	mov	r1, r5
 800ae9c:	4620      	mov	r0, r4
 800ae9e:	9209      	str	r2, [sp, #36]	; 0x24
 800aea0:	f000 fd76 	bl	800b990 <_Bfree>
 800aea4:	9b07      	ldr	r3, [sp, #28]
 800aea6:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800aea8:	9d04      	ldr	r5, [sp, #16]
 800aeaa:	ea43 0102 	orr.w	r1, r3, r2
 800aeae:	9b06      	ldr	r3, [sp, #24]
 800aeb0:	4319      	orrs	r1, r3
 800aeb2:	d110      	bne.n	800aed6 <_dtoa_r+0xa7e>
 800aeb4:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
 800aeb8:	d029      	beq.n	800af0e <_dtoa_r+0xab6>
 800aeba:	9b05      	ldr	r3, [sp, #20]
 800aebc:	2b00      	cmp	r3, #0
 800aebe:	dd02      	ble.n	800aec6 <_dtoa_r+0xa6e>
 800aec0:	9b02      	ldr	r3, [sp, #8]
 800aec2:	f103 0931 	add.w	r9, r3, #49	; 0x31
 800aec6:	9b01      	ldr	r3, [sp, #4]
 800aec8:	f883 9000 	strb.w	r9, [r3]
 800aecc:	e774      	b.n	800adb8 <_dtoa_r+0x960>
 800aece:	4638      	mov	r0, r7
 800aed0:	e7ba      	b.n	800ae48 <_dtoa_r+0x9f0>
 800aed2:	2201      	movs	r2, #1
 800aed4:	e7e1      	b.n	800ae9a <_dtoa_r+0xa42>
 800aed6:	9b05      	ldr	r3, [sp, #20]
 800aed8:	2b00      	cmp	r3, #0
 800aeda:	db04      	blt.n	800aee6 <_dtoa_r+0xa8e>
 800aedc:	9907      	ldr	r1, [sp, #28]
 800aede:	430b      	orrs	r3, r1
 800aee0:	9906      	ldr	r1, [sp, #24]
 800aee2:	430b      	orrs	r3, r1
 800aee4:	d120      	bne.n	800af28 <_dtoa_r+0xad0>
 800aee6:	2a00      	cmp	r2, #0
 800aee8:	dded      	ble.n	800aec6 <_dtoa_r+0xa6e>
 800aeea:	4651      	mov	r1, sl
 800aeec:	2201      	movs	r2, #1
 800aeee:	4620      	mov	r0, r4
 800aef0:	f000 ff68 	bl	800bdc4 <__lshift>
 800aef4:	4631      	mov	r1, r6
 800aef6:	4682      	mov	sl, r0
 800aef8:	f000 ffd0 	bl	800be9c <__mcmp>
 800aefc:	2800      	cmp	r0, #0
 800aefe:	dc03      	bgt.n	800af08 <_dtoa_r+0xab0>
 800af00:	d1e1      	bne.n	800aec6 <_dtoa_r+0xa6e>
 800af02:	f019 0f01 	tst.w	r9, #1
 800af06:	d0de      	beq.n	800aec6 <_dtoa_r+0xa6e>
 800af08:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
 800af0c:	d1d8      	bne.n	800aec0 <_dtoa_r+0xa68>
 800af0e:	9a01      	ldr	r2, [sp, #4]
 800af10:	2339      	movs	r3, #57	; 0x39
 800af12:	7013      	strb	r3, [r2, #0]
 800af14:	462b      	mov	r3, r5
 800af16:	461d      	mov	r5, r3
 800af18:	3b01      	subs	r3, #1
 800af1a:	f815 2c01 	ldrb.w	r2, [r5, #-1]
 800af1e:	2a39      	cmp	r2, #57	; 0x39
 800af20:	d06c      	beq.n	800affc <_dtoa_r+0xba4>
 800af22:	3201      	adds	r2, #1
 800af24:	701a      	strb	r2, [r3, #0]
 800af26:	e747      	b.n	800adb8 <_dtoa_r+0x960>
 800af28:	2a00      	cmp	r2, #0
 800af2a:	dd07      	ble.n	800af3c <_dtoa_r+0xae4>
 800af2c:	f1b9 0f39 	cmp.w	r9, #57	; 0x39
 800af30:	d0ed      	beq.n	800af0e <_dtoa_r+0xab6>
 800af32:	9a01      	ldr	r2, [sp, #4]
 800af34:	f109 0301 	add.w	r3, r9, #1
 800af38:	7013      	strb	r3, [r2, #0]
 800af3a:	e73d      	b.n	800adb8 <_dtoa_r+0x960>
 800af3c:	9b04      	ldr	r3, [sp, #16]
 800af3e:	9a08      	ldr	r2, [sp, #32]
 800af40:	f803 9c01 	strb.w	r9, [r3, #-1]
 800af44:	4293      	cmp	r3, r2
 800af46:	d043      	beq.n	800afd0 <_dtoa_r+0xb78>
 800af48:	4651      	mov	r1, sl
 800af4a:	2300      	movs	r3, #0
 800af4c:	220a      	movs	r2, #10
 800af4e:	4620      	mov	r0, r4
 800af50:	f000 fd40 	bl	800b9d4 <__multadd>
 800af54:	45b8      	cmp	r8, r7
 800af56:	4682      	mov	sl, r0
 800af58:	f04f 0300 	mov.w	r3, #0
 800af5c:	f04f 020a 	mov.w	r2, #10
 800af60:	4641      	mov	r1, r8
 800af62:	4620      	mov	r0, r4
 800af64:	d107      	bne.n	800af76 <_dtoa_r+0xb1e>
 800af66:	f000 fd35 	bl	800b9d4 <__multadd>
 800af6a:	4680      	mov	r8, r0
 800af6c:	4607      	mov	r7, r0
 800af6e:	9b04      	ldr	r3, [sp, #16]
 800af70:	3301      	adds	r3, #1
 800af72:	9304      	str	r3, [sp, #16]
 800af74:	e775      	b.n	800ae62 <_dtoa_r+0xa0a>
 800af76:	f000 fd2d 	bl	800b9d4 <__multadd>
 800af7a:	4639      	mov	r1, r7
 800af7c:	4680      	mov	r8, r0
 800af7e:	2300      	movs	r3, #0
 800af80:	220a      	movs	r2, #10
 800af82:	4620      	mov	r0, r4
 800af84:	f000 fd26 	bl	800b9d4 <__multadd>
 800af88:	4607      	mov	r7, r0
 800af8a:	e7f0      	b.n	800af6e <_dtoa_r+0xb16>
 800af8c:	9b04      	ldr	r3, [sp, #16]
 800af8e:	9301      	str	r3, [sp, #4]
 800af90:	9d00      	ldr	r5, [sp, #0]
 800af92:	4631      	mov	r1, r6
 800af94:	4650      	mov	r0, sl
 800af96:	f7ff f9d5 	bl	800a344 <quorem>
 800af9a:	f100 0930 	add.w	r9, r0, #48	; 0x30
 800af9e:	9b00      	ldr	r3, [sp, #0]
 800afa0:	f805 9b01 	strb.w	r9, [r5], #1
 800afa4:	1aea      	subs	r2, r5, r3
 800afa6:	9b01      	ldr	r3, [sp, #4]
 800afa8:	4293      	cmp	r3, r2
 800afaa:	dd07      	ble.n	800afbc <_dtoa_r+0xb64>
 800afac:	4651      	mov	r1, sl
 800afae:	2300      	movs	r3, #0
 800afb0:	220a      	movs	r2, #10
 800afb2:	4620      	mov	r0, r4
 800afb4:	f000 fd0e 	bl	800b9d4 <__multadd>
 800afb8:	4682      	mov	sl, r0
 800afba:	e7ea      	b.n	800af92 <_dtoa_r+0xb3a>
 800afbc:	9b01      	ldr	r3, [sp, #4]
 800afbe:	2b00      	cmp	r3, #0
 800afc0:	bfc8      	it	gt
 800afc2:	461d      	movgt	r5, r3
 800afc4:	9b00      	ldr	r3, [sp, #0]
 800afc6:	bfd8      	it	le
 800afc8:	2501      	movle	r5, #1
 800afca:	441d      	add	r5, r3
 800afcc:	f04f 0800 	mov.w	r8, #0
 800afd0:	4651      	mov	r1, sl
 800afd2:	2201      	movs	r2, #1
 800afd4:	4620      	mov	r0, r4
 800afd6:	f000 fef5 	bl	800bdc4 <__lshift>
 800afda:	4631      	mov	r1, r6
 800afdc:	4682      	mov	sl, r0
 800afde:	f000 ff5d 	bl	800be9c <__mcmp>
 800afe2:	2800      	cmp	r0, #0
 800afe4:	dc96      	bgt.n	800af14 <_dtoa_r+0xabc>
 800afe6:	d102      	bne.n	800afee <_dtoa_r+0xb96>
 800afe8:	f019 0f01 	tst.w	r9, #1
 800afec:	d192      	bne.n	800af14 <_dtoa_r+0xabc>
 800afee:	462b      	mov	r3, r5
 800aff0:	461d      	mov	r5, r3
 800aff2:	f813 2d01 	ldrb.w	r2, [r3, #-1]!
 800aff6:	2a30      	cmp	r2, #48	; 0x30
 800aff8:	d0fa      	beq.n	800aff0 <_dtoa_r+0xb98>
 800affa:	e6dd      	b.n	800adb8 <_dtoa_r+0x960>
 800affc:	9a00      	ldr	r2, [sp, #0]
 800affe:	429a      	cmp	r2, r3
 800b000:	d189      	bne.n	800af16 <_dtoa_r+0xabe>
 800b002:	f10b 0b01 	add.w	fp, fp, #1
 800b006:	2331      	movs	r3, #49	; 0x31
 800b008:	e796      	b.n	800af38 <_dtoa_r+0xae0>
 800b00a:	4b0a      	ldr	r3, [pc, #40]	; (800b034 <_dtoa_r+0xbdc>)
 800b00c:	f7ff ba99 	b.w	800a542 <_dtoa_r+0xea>
 800b010:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800b012:	2b00      	cmp	r3, #0
 800b014:	f47f aa6d 	bne.w	800a4f2 <_dtoa_r+0x9a>
 800b018:	4b07      	ldr	r3, [pc, #28]	; (800b038 <_dtoa_r+0xbe0>)
 800b01a:	f7ff ba92 	b.w	800a542 <_dtoa_r+0xea>
 800b01e:	9b01      	ldr	r3, [sp, #4]
 800b020:	2b00      	cmp	r3, #0
 800b022:	dcb5      	bgt.n	800af90 <_dtoa_r+0xb38>
 800b024:	9b07      	ldr	r3, [sp, #28]
 800b026:	2b02      	cmp	r3, #2
 800b028:	f73f aeb1 	bgt.w	800ad8e <_dtoa_r+0x936>
 800b02c:	e7b0      	b.n	800af90 <_dtoa_r+0xb38>
 800b02e:	bf00      	nop
 800b030:	0800d576 	.word	0x0800d576
 800b034:	0800d4c9 	.word	0x0800d4c9
 800b038:	0800d4fa 	.word	0x0800d4fa

0800b03c <_free_r>:
 800b03c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800b03e:	2900      	cmp	r1, #0
 800b040:	d044      	beq.n	800b0cc <_free_r+0x90>
 800b042:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800b046:	9001      	str	r0, [sp, #4]
 800b048:	2b00      	cmp	r3, #0
 800b04a:	f1a1 0404 	sub.w	r4, r1, #4
 800b04e:	bfb8      	it	lt
 800b050:	18e4      	addlt	r4, r4, r3
 800b052:	f000 fc51 	bl	800b8f8 <__malloc_lock>
 800b056:	4a1e      	ldr	r2, [pc, #120]	; (800b0d0 <_free_r+0x94>)
 800b058:	9801      	ldr	r0, [sp, #4]
 800b05a:	6813      	ldr	r3, [r2, #0]
 800b05c:	b933      	cbnz	r3, 800b06c <_free_r+0x30>
 800b05e:	6063      	str	r3, [r4, #4]
 800b060:	6014      	str	r4, [r2, #0]
 800b062:	b003      	add	sp, #12
 800b064:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 800b068:	f000 bc4c 	b.w	800b904 <__malloc_unlock>
 800b06c:	42a3      	cmp	r3, r4
 800b06e:	d908      	bls.n	800b082 <_free_r+0x46>
 800b070:	6825      	ldr	r5, [r4, #0]
 800b072:	1961      	adds	r1, r4, r5
 800b074:	428b      	cmp	r3, r1
 800b076:	bf01      	itttt	eq
 800b078:	6819      	ldreq	r1, [r3, #0]
 800b07a:	685b      	ldreq	r3, [r3, #4]
 800b07c:	1949      	addeq	r1, r1, r5
 800b07e:	6021      	streq	r1, [r4, #0]
 800b080:	e7ed      	b.n	800b05e <_free_r+0x22>
 800b082:	461a      	mov	r2, r3
 800b084:	685b      	ldr	r3, [r3, #4]
 800b086:	b10b      	cbz	r3, 800b08c <_free_r+0x50>
 800b088:	42a3      	cmp	r3, r4
 800b08a:	d9fa      	bls.n	800b082 <_free_r+0x46>
 800b08c:	6811      	ldr	r1, [r2, #0]
 800b08e:	1855      	adds	r5, r2, r1
 800b090:	42a5      	cmp	r5, r4
 800b092:	d10b      	bne.n	800b0ac <_free_r+0x70>
 800b094:	6824      	ldr	r4, [r4, #0]
 800b096:	4421      	add	r1, r4
 800b098:	1854      	adds	r4, r2, r1
 800b09a:	42a3      	cmp	r3, r4
 800b09c:	6011      	str	r1, [r2, #0]
 800b09e:	d1e0      	bne.n	800b062 <_free_r+0x26>
 800b0a0:	681c      	ldr	r4, [r3, #0]
 800b0a2:	685b      	ldr	r3, [r3, #4]
 800b0a4:	6053      	str	r3, [r2, #4]
 800b0a6:	440c      	add	r4, r1
 800b0a8:	6014      	str	r4, [r2, #0]
 800b0aa:	e7da      	b.n	800b062 <_free_r+0x26>
 800b0ac:	d902      	bls.n	800b0b4 <_free_r+0x78>
 800b0ae:	230c      	movs	r3, #12
 800b0b0:	6003      	str	r3, [r0, #0]
 800b0b2:	e7d6      	b.n	800b062 <_free_r+0x26>
 800b0b4:	6825      	ldr	r5, [r4, #0]
 800b0b6:	1961      	adds	r1, r4, r5
 800b0b8:	428b      	cmp	r3, r1
 800b0ba:	bf04      	itt	eq
 800b0bc:	6819      	ldreq	r1, [r3, #0]
 800b0be:	685b      	ldreq	r3, [r3, #4]
 800b0c0:	6063      	str	r3, [r4, #4]
 800b0c2:	bf04      	itt	eq
 800b0c4:	1949      	addeq	r1, r1, r5
 800b0c6:	6021      	streq	r1, [r4, #0]
 800b0c8:	6054      	str	r4, [r2, #4]
 800b0ca:	e7ca      	b.n	800b062 <_free_r+0x26>
 800b0cc:	b003      	add	sp, #12
 800b0ce:	bd30      	pop	{r4, r5, pc}
 800b0d0:	200008a8 	.word	0x200008a8

0800b0d4 <rshift>:
 800b0d4:	6903      	ldr	r3, [r0, #16]
 800b0d6:	ebb3 1f61 	cmp.w	r3, r1, asr #5
 800b0da:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800b0de:	ea4f 1261 	mov.w	r2, r1, asr #5
 800b0e2:	f100 0414 	add.w	r4, r0, #20
 800b0e6:	dd45      	ble.n	800b174 <rshift+0xa0>
 800b0e8:	f011 011f 	ands.w	r1, r1, #31
 800b0ec:	eb04 0683 	add.w	r6, r4, r3, lsl #2
 800b0f0:	eb04 0582 	add.w	r5, r4, r2, lsl #2
 800b0f4:	d10c      	bne.n	800b110 <rshift+0x3c>
 800b0f6:	f100 0710 	add.w	r7, r0, #16
 800b0fa:	4629      	mov	r1, r5
 800b0fc:	42b1      	cmp	r1, r6
 800b0fe:	d334      	bcc.n	800b16a <rshift+0x96>
 800b100:	1a9b      	subs	r3, r3, r2
 800b102:	009b      	lsls	r3, r3, #2
 800b104:	1eea      	subs	r2, r5, #3
 800b106:	4296      	cmp	r6, r2
 800b108:	bf38      	it	cc
 800b10a:	2300      	movcc	r3, #0
 800b10c:	4423      	add	r3, r4
 800b10e:	e015      	b.n	800b13c <rshift+0x68>
 800b110:	f854 7022 	ldr.w	r7, [r4, r2, lsl #2]
 800b114:	f1c1 0820 	rsb	r8, r1, #32
 800b118:	40cf      	lsrs	r7, r1
 800b11a:	f105 0e04 	add.w	lr, r5, #4
 800b11e:	46a1      	mov	r9, r4
 800b120:	4576      	cmp	r6, lr
 800b122:	46f4      	mov	ip, lr
 800b124:	d815      	bhi.n	800b152 <rshift+0x7e>
 800b126:	1a9a      	subs	r2, r3, r2
 800b128:	0092      	lsls	r2, r2, #2
 800b12a:	3a04      	subs	r2, #4
 800b12c:	3501      	adds	r5, #1
 800b12e:	42ae      	cmp	r6, r5
 800b130:	bf38      	it	cc
 800b132:	2200      	movcc	r2, #0
 800b134:	18a3      	adds	r3, r4, r2
 800b136:	50a7      	str	r7, [r4, r2]
 800b138:	b107      	cbz	r7, 800b13c <rshift+0x68>
 800b13a:	3304      	adds	r3, #4
 800b13c:	1b1a      	subs	r2, r3, r4
 800b13e:	42a3      	cmp	r3, r4
 800b140:	ea4f 02a2 	mov.w	r2, r2, asr #2
 800b144:	bf08      	it	eq
 800b146:	2300      	moveq	r3, #0
 800b148:	6102      	str	r2, [r0, #16]
 800b14a:	bf08      	it	eq
 800b14c:	6143      	streq	r3, [r0, #20]
 800b14e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800b152:	f8dc c000 	ldr.w	ip, [ip]
 800b156:	fa0c fc08 	lsl.w	ip, ip, r8
 800b15a:	ea4c 0707 	orr.w	r7, ip, r7
 800b15e:	f849 7b04 	str.w	r7, [r9], #4
 800b162:	f85e 7b04 	ldr.w	r7, [lr], #4
 800b166:	40cf      	lsrs	r7, r1
 800b168:	e7da      	b.n	800b120 <rshift+0x4c>
 800b16a:	f851 cb04 	ldr.w	ip, [r1], #4
 800b16e:	f847 cf04 	str.w	ip, [r7, #4]!
 800b172:	e7c3      	b.n	800b0fc <rshift+0x28>
 800b174:	4623      	mov	r3, r4
 800b176:	e7e1      	b.n	800b13c <rshift+0x68>

0800b178 <__hexdig_fun>:
 800b178:	f1a0 0330 	sub.w	r3, r0, #48	; 0x30
 800b17c:	2b09      	cmp	r3, #9
 800b17e:	d802      	bhi.n	800b186 <__hexdig_fun+0xe>
 800b180:	3820      	subs	r0, #32
 800b182:	b2c0      	uxtb	r0, r0
 800b184:	4770      	bx	lr
 800b186:	f1a0 0361 	sub.w	r3, r0, #97	; 0x61
 800b18a:	2b05      	cmp	r3, #5
 800b18c:	d801      	bhi.n	800b192 <__hexdig_fun+0x1a>
 800b18e:	3847      	subs	r0, #71	; 0x47
 800b190:	e7f7      	b.n	800b182 <__hexdig_fun+0xa>
 800b192:	f1a0 0341 	sub.w	r3, r0, #65	; 0x41
 800b196:	2b05      	cmp	r3, #5
 800b198:	d801      	bhi.n	800b19e <__hexdig_fun+0x26>
 800b19a:	3827      	subs	r0, #39	; 0x27
 800b19c:	e7f1      	b.n	800b182 <__hexdig_fun+0xa>
 800b19e:	2000      	movs	r0, #0
 800b1a0:	4770      	bx	lr
	...

0800b1a4 <__gethex>:
 800b1a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b1a8:	4617      	mov	r7, r2
 800b1aa:	680a      	ldr	r2, [r1, #0]
 800b1ac:	b085      	sub	sp, #20
 800b1ae:	f102 0b02 	add.w	fp, r2, #2
 800b1b2:	f1c2 22ff 	rsb	r2, r2, #4278255360	; 0xff00ff00
 800b1b6:	f502 027f 	add.w	r2, r2, #16711680	; 0xff0000
 800b1ba:	4681      	mov	r9, r0
 800b1bc:	468a      	mov	sl, r1
 800b1be:	9302      	str	r3, [sp, #8]
 800b1c0:	32fe      	adds	r2, #254	; 0xfe
 800b1c2:	eb02 030b 	add.w	r3, r2, fp
 800b1c6:	46d8      	mov	r8, fp
 800b1c8:	f81b 0b01 	ldrb.w	r0, [fp], #1
 800b1cc:	9301      	str	r3, [sp, #4]
 800b1ce:	2830      	cmp	r0, #48	; 0x30
 800b1d0:	d0f7      	beq.n	800b1c2 <__gethex+0x1e>
 800b1d2:	f7ff ffd1 	bl	800b178 <__hexdig_fun>
 800b1d6:	4604      	mov	r4, r0
 800b1d8:	2800      	cmp	r0, #0
 800b1da:	d138      	bne.n	800b24e <__gethex+0xaa>
 800b1dc:	49a7      	ldr	r1, [pc, #668]	; (800b47c <__gethex+0x2d8>)
 800b1de:	2201      	movs	r2, #1
 800b1e0:	4640      	mov	r0, r8
 800b1e2:	f7fe fff4 	bl	800a1ce <strncmp>
 800b1e6:	4606      	mov	r6, r0
 800b1e8:	2800      	cmp	r0, #0
 800b1ea:	d169      	bne.n	800b2c0 <__gethex+0x11c>
 800b1ec:	f898 0001 	ldrb.w	r0, [r8, #1]
 800b1f0:	465d      	mov	r5, fp
 800b1f2:	f7ff ffc1 	bl	800b178 <__hexdig_fun>
 800b1f6:	2800      	cmp	r0, #0
 800b1f8:	d064      	beq.n	800b2c4 <__gethex+0x120>
 800b1fa:	465a      	mov	r2, fp
 800b1fc:	7810      	ldrb	r0, [r2, #0]
 800b1fe:	2830      	cmp	r0, #48	; 0x30
 800b200:	4690      	mov	r8, r2
 800b202:	f102 0201 	add.w	r2, r2, #1
 800b206:	d0f9      	beq.n	800b1fc <__gethex+0x58>
 800b208:	f7ff ffb6 	bl	800b178 <__hexdig_fun>
 800b20c:	2301      	movs	r3, #1
 800b20e:	fab0 f480 	clz	r4, r0
 800b212:	0964      	lsrs	r4, r4, #5
 800b214:	465e      	mov	r6, fp
 800b216:	9301      	str	r3, [sp, #4]
 800b218:	4642      	mov	r2, r8
 800b21a:	4615      	mov	r5, r2
 800b21c:	3201      	adds	r2, #1
 800b21e:	7828      	ldrb	r0, [r5, #0]
 800b220:	f7ff ffaa 	bl	800b178 <__hexdig_fun>
 800b224:	2800      	cmp	r0, #0
 800b226:	d1f8      	bne.n	800b21a <__gethex+0x76>
 800b228:	4994      	ldr	r1, [pc, #592]	; (800b47c <__gethex+0x2d8>)
 800b22a:	2201      	movs	r2, #1
 800b22c:	4628      	mov	r0, r5
 800b22e:	f7fe ffce 	bl	800a1ce <strncmp>
 800b232:	b978      	cbnz	r0, 800b254 <__gethex+0xb0>
 800b234:	b946      	cbnz	r6, 800b248 <__gethex+0xa4>
 800b236:	1c6e      	adds	r6, r5, #1
 800b238:	4632      	mov	r2, r6
 800b23a:	4615      	mov	r5, r2
 800b23c:	3201      	adds	r2, #1
 800b23e:	7828      	ldrb	r0, [r5, #0]
 800b240:	f7ff ff9a 	bl	800b178 <__hexdig_fun>
 800b244:	2800      	cmp	r0, #0
 800b246:	d1f8      	bne.n	800b23a <__gethex+0x96>
 800b248:	1b73      	subs	r3, r6, r5
 800b24a:	009e      	lsls	r6, r3, #2
 800b24c:	e004      	b.n	800b258 <__gethex+0xb4>
 800b24e:	2400      	movs	r4, #0
 800b250:	4626      	mov	r6, r4
 800b252:	e7e1      	b.n	800b218 <__gethex+0x74>
 800b254:	2e00      	cmp	r6, #0
 800b256:	d1f7      	bne.n	800b248 <__gethex+0xa4>
 800b258:	782b      	ldrb	r3, [r5, #0]
 800b25a:	f003 03df 	and.w	r3, r3, #223	; 0xdf
 800b25e:	2b50      	cmp	r3, #80	; 0x50
 800b260:	d13d      	bne.n	800b2de <__gethex+0x13a>
 800b262:	786b      	ldrb	r3, [r5, #1]
 800b264:	2b2b      	cmp	r3, #43	; 0x2b
 800b266:	d02f      	beq.n	800b2c8 <__gethex+0x124>
 800b268:	2b2d      	cmp	r3, #45	; 0x2d
 800b26a:	d031      	beq.n	800b2d0 <__gethex+0x12c>
 800b26c:	1c69      	adds	r1, r5, #1
 800b26e:	f04f 0b00 	mov.w	fp, #0
 800b272:	7808      	ldrb	r0, [r1, #0]
 800b274:	f7ff ff80 	bl	800b178 <__hexdig_fun>
 800b278:	1e42      	subs	r2, r0, #1
 800b27a:	b2d2      	uxtb	r2, r2
 800b27c:	2a18      	cmp	r2, #24
 800b27e:	d82e      	bhi.n	800b2de <__gethex+0x13a>
 800b280:	f1a0 0210 	sub.w	r2, r0, #16
 800b284:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 800b288:	f7ff ff76 	bl	800b178 <__hexdig_fun>
 800b28c:	f100 3cff 	add.w	ip, r0, #4294967295
 800b290:	fa5f fc8c 	uxtb.w	ip, ip
 800b294:	f1bc 0f18 	cmp.w	ip, #24
 800b298:	d91d      	bls.n	800b2d6 <__gethex+0x132>
 800b29a:	f1bb 0f00 	cmp.w	fp, #0
 800b29e:	d000      	beq.n	800b2a2 <__gethex+0xfe>
 800b2a0:	4252      	negs	r2, r2
 800b2a2:	4416      	add	r6, r2
 800b2a4:	f8ca 1000 	str.w	r1, [sl]
 800b2a8:	b1dc      	cbz	r4, 800b2e2 <__gethex+0x13e>
 800b2aa:	9b01      	ldr	r3, [sp, #4]
 800b2ac:	2b00      	cmp	r3, #0
 800b2ae:	bf14      	ite	ne
 800b2b0:	f04f 0800 	movne.w	r8, #0
 800b2b4:	f04f 0806 	moveq.w	r8, #6
 800b2b8:	4640      	mov	r0, r8
 800b2ba:	b005      	add	sp, #20
 800b2bc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b2c0:	4645      	mov	r5, r8
 800b2c2:	4626      	mov	r6, r4
 800b2c4:	2401      	movs	r4, #1
 800b2c6:	e7c7      	b.n	800b258 <__gethex+0xb4>
 800b2c8:	f04f 0b00 	mov.w	fp, #0
 800b2cc:	1ca9      	adds	r1, r5, #2
 800b2ce:	e7d0      	b.n	800b272 <__gethex+0xce>
 800b2d0:	f04f 0b01 	mov.w	fp, #1
 800b2d4:	e7fa      	b.n	800b2cc <__gethex+0x128>
 800b2d6:	230a      	movs	r3, #10
 800b2d8:	fb03 0002 	mla	r0, r3, r2, r0
 800b2dc:	e7d0      	b.n	800b280 <__gethex+0xdc>
 800b2de:	4629      	mov	r1, r5
 800b2e0:	e7e0      	b.n	800b2a4 <__gethex+0x100>
 800b2e2:	eba5 0308 	sub.w	r3, r5, r8
 800b2e6:	3b01      	subs	r3, #1
 800b2e8:	4621      	mov	r1, r4
 800b2ea:	2b07      	cmp	r3, #7
 800b2ec:	dc0a      	bgt.n	800b304 <__gethex+0x160>
 800b2ee:	4648      	mov	r0, r9
 800b2f0:	f000 fb0e 	bl	800b910 <_Balloc>
 800b2f4:	4604      	mov	r4, r0
 800b2f6:	b940      	cbnz	r0, 800b30a <__gethex+0x166>
 800b2f8:	4b61      	ldr	r3, [pc, #388]	; (800b480 <__gethex+0x2dc>)
 800b2fa:	4602      	mov	r2, r0
 800b2fc:	21e4      	movs	r1, #228	; 0xe4
 800b2fe:	4861      	ldr	r0, [pc, #388]	; (800b484 <__gethex+0x2e0>)
 800b300:	f001 f9f0 	bl	800c6e4 <__assert_func>
 800b304:	3101      	adds	r1, #1
 800b306:	105b      	asrs	r3, r3, #1
 800b308:	e7ef      	b.n	800b2ea <__gethex+0x146>
 800b30a:	f100 0a14 	add.w	sl, r0, #20
 800b30e:	2300      	movs	r3, #0
 800b310:	495a      	ldr	r1, [pc, #360]	; (800b47c <__gethex+0x2d8>)
 800b312:	f8cd a004 	str.w	sl, [sp, #4]
 800b316:	469b      	mov	fp, r3
 800b318:	45a8      	cmp	r8, r5
 800b31a:	d342      	bcc.n	800b3a2 <__gethex+0x1fe>
 800b31c:	9801      	ldr	r0, [sp, #4]
 800b31e:	f840 bb04 	str.w	fp, [r0], #4
 800b322:	eba0 000a 	sub.w	r0, r0, sl
 800b326:	1080      	asrs	r0, r0, #2
 800b328:	6120      	str	r0, [r4, #16]
 800b32a:	ea4f 1840 	mov.w	r8, r0, lsl #5
 800b32e:	4658      	mov	r0, fp
 800b330:	f000 fbe0 	bl	800baf4 <__hi0bits>
 800b334:	683d      	ldr	r5, [r7, #0]
 800b336:	eba8 0000 	sub.w	r0, r8, r0
 800b33a:	42a8      	cmp	r0, r5
 800b33c:	dd59      	ble.n	800b3f2 <__gethex+0x24e>
 800b33e:	eba0 0805 	sub.w	r8, r0, r5
 800b342:	4641      	mov	r1, r8
 800b344:	4620      	mov	r0, r4
 800b346:	f000 ff6f 	bl	800c228 <__any_on>
 800b34a:	4683      	mov	fp, r0
 800b34c:	b1b8      	cbz	r0, 800b37e <__gethex+0x1da>
 800b34e:	f108 33ff 	add.w	r3, r8, #4294967295
 800b352:	1159      	asrs	r1, r3, #5
 800b354:	f003 021f 	and.w	r2, r3, #31
 800b358:	f85a 1021 	ldr.w	r1, [sl, r1, lsl #2]
 800b35c:	f04f 0b01 	mov.w	fp, #1
 800b360:	fa0b f202 	lsl.w	r2, fp, r2
 800b364:	420a      	tst	r2, r1
 800b366:	d00a      	beq.n	800b37e <__gethex+0x1da>
 800b368:	455b      	cmp	r3, fp
 800b36a:	dd06      	ble.n	800b37a <__gethex+0x1d6>
 800b36c:	f1a8 0102 	sub.w	r1, r8, #2
 800b370:	4620      	mov	r0, r4
 800b372:	f000 ff59 	bl	800c228 <__any_on>
 800b376:	2800      	cmp	r0, #0
 800b378:	d138      	bne.n	800b3ec <__gethex+0x248>
 800b37a:	f04f 0b02 	mov.w	fp, #2
 800b37e:	4641      	mov	r1, r8
 800b380:	4620      	mov	r0, r4
 800b382:	f7ff fea7 	bl	800b0d4 <rshift>
 800b386:	4446      	add	r6, r8
 800b388:	68bb      	ldr	r3, [r7, #8]
 800b38a:	42b3      	cmp	r3, r6
 800b38c:	da41      	bge.n	800b412 <__gethex+0x26e>
 800b38e:	4621      	mov	r1, r4
 800b390:	4648      	mov	r0, r9
 800b392:	f000 fafd 	bl	800b990 <_Bfree>
 800b396:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800b398:	2300      	movs	r3, #0
 800b39a:	6013      	str	r3, [r2, #0]
 800b39c:	f04f 08a3 	mov.w	r8, #163	; 0xa3
 800b3a0:	e78a      	b.n	800b2b8 <__gethex+0x114>
 800b3a2:	f815 2d01 	ldrb.w	r2, [r5, #-1]!
 800b3a6:	2a2e      	cmp	r2, #46	; 0x2e
 800b3a8:	d014      	beq.n	800b3d4 <__gethex+0x230>
 800b3aa:	2b20      	cmp	r3, #32
 800b3ac:	d106      	bne.n	800b3bc <__gethex+0x218>
 800b3ae:	9b01      	ldr	r3, [sp, #4]
 800b3b0:	f843 bb04 	str.w	fp, [r3], #4
 800b3b4:	f04f 0b00 	mov.w	fp, #0
 800b3b8:	9301      	str	r3, [sp, #4]
 800b3ba:	465b      	mov	r3, fp
 800b3bc:	7828      	ldrb	r0, [r5, #0]
 800b3be:	9303      	str	r3, [sp, #12]
 800b3c0:	f7ff feda 	bl	800b178 <__hexdig_fun>
 800b3c4:	9b03      	ldr	r3, [sp, #12]
 800b3c6:	f000 000f 	and.w	r0, r0, #15
 800b3ca:	4098      	lsls	r0, r3
 800b3cc:	ea4b 0b00 	orr.w	fp, fp, r0
 800b3d0:	3304      	adds	r3, #4
 800b3d2:	e7a1      	b.n	800b318 <__gethex+0x174>
 800b3d4:	45a8      	cmp	r8, r5
 800b3d6:	d8e8      	bhi.n	800b3aa <__gethex+0x206>
 800b3d8:	2201      	movs	r2, #1
 800b3da:	4628      	mov	r0, r5
 800b3dc:	9303      	str	r3, [sp, #12]
 800b3de:	f7fe fef6 	bl	800a1ce <strncmp>
 800b3e2:	4926      	ldr	r1, [pc, #152]	; (800b47c <__gethex+0x2d8>)
 800b3e4:	9b03      	ldr	r3, [sp, #12]
 800b3e6:	2800      	cmp	r0, #0
 800b3e8:	d1df      	bne.n	800b3aa <__gethex+0x206>
 800b3ea:	e795      	b.n	800b318 <__gethex+0x174>
 800b3ec:	f04f 0b03 	mov.w	fp, #3
 800b3f0:	e7c5      	b.n	800b37e <__gethex+0x1da>
 800b3f2:	da0b      	bge.n	800b40c <__gethex+0x268>
 800b3f4:	eba5 0800 	sub.w	r8, r5, r0
 800b3f8:	4621      	mov	r1, r4
 800b3fa:	4642      	mov	r2, r8
 800b3fc:	4648      	mov	r0, r9
 800b3fe:	f000 fce1 	bl	800bdc4 <__lshift>
 800b402:	eba6 0608 	sub.w	r6, r6, r8
 800b406:	4604      	mov	r4, r0
 800b408:	f100 0a14 	add.w	sl, r0, #20
 800b40c:	f04f 0b00 	mov.w	fp, #0
 800b410:	e7ba      	b.n	800b388 <__gethex+0x1e4>
 800b412:	687b      	ldr	r3, [r7, #4]
 800b414:	42b3      	cmp	r3, r6
 800b416:	dd73      	ble.n	800b500 <__gethex+0x35c>
 800b418:	1b9e      	subs	r6, r3, r6
 800b41a:	42b5      	cmp	r5, r6
 800b41c:	dc34      	bgt.n	800b488 <__gethex+0x2e4>
 800b41e:	68fb      	ldr	r3, [r7, #12]
 800b420:	2b02      	cmp	r3, #2
 800b422:	d023      	beq.n	800b46c <__gethex+0x2c8>
 800b424:	2b03      	cmp	r3, #3
 800b426:	d025      	beq.n	800b474 <__gethex+0x2d0>
 800b428:	2b01      	cmp	r3, #1
 800b42a:	d115      	bne.n	800b458 <__gethex+0x2b4>
 800b42c:	42b5      	cmp	r5, r6
 800b42e:	d113      	bne.n	800b458 <__gethex+0x2b4>
 800b430:	2d01      	cmp	r5, #1
 800b432:	d10b      	bne.n	800b44c <__gethex+0x2a8>
 800b434:	9a02      	ldr	r2, [sp, #8]
 800b436:	687b      	ldr	r3, [r7, #4]
 800b438:	6013      	str	r3, [r2, #0]
 800b43a:	2301      	movs	r3, #1
 800b43c:	6123      	str	r3, [r4, #16]
 800b43e:	f8ca 3000 	str.w	r3, [sl]
 800b442:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800b444:	f04f 0862 	mov.w	r8, #98	; 0x62
 800b448:	601c      	str	r4, [r3, #0]
 800b44a:	e735      	b.n	800b2b8 <__gethex+0x114>
 800b44c:	1e69      	subs	r1, r5, #1
 800b44e:	4620      	mov	r0, r4
 800b450:	f000 feea 	bl	800c228 <__any_on>
 800b454:	2800      	cmp	r0, #0
 800b456:	d1ed      	bne.n	800b434 <__gethex+0x290>
 800b458:	4621      	mov	r1, r4
 800b45a:	4648      	mov	r0, r9
 800b45c:	f000 fa98 	bl	800b990 <_Bfree>
 800b460:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800b462:	2300      	movs	r3, #0
 800b464:	6013      	str	r3, [r2, #0]
 800b466:	f04f 0850 	mov.w	r8, #80	; 0x50
 800b46a:	e725      	b.n	800b2b8 <__gethex+0x114>
 800b46c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800b46e:	2b00      	cmp	r3, #0
 800b470:	d1f2      	bne.n	800b458 <__gethex+0x2b4>
 800b472:	e7df      	b.n	800b434 <__gethex+0x290>
 800b474:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800b476:	2b00      	cmp	r3, #0
 800b478:	d1dc      	bne.n	800b434 <__gethex+0x290>
 800b47a:	e7ed      	b.n	800b458 <__gethex+0x2b4>
 800b47c:	0800d364 	.word	0x0800d364
 800b480:	0800d576 	.word	0x0800d576
 800b484:	0800d587 	.word	0x0800d587
 800b488:	f106 38ff 	add.w	r8, r6, #4294967295
 800b48c:	f1bb 0f00 	cmp.w	fp, #0
 800b490:	d133      	bne.n	800b4fa <__gethex+0x356>
 800b492:	f1b8 0f00 	cmp.w	r8, #0
 800b496:	d004      	beq.n	800b4a2 <__gethex+0x2fe>
 800b498:	4641      	mov	r1, r8
 800b49a:	4620      	mov	r0, r4
 800b49c:	f000 fec4 	bl	800c228 <__any_on>
 800b4a0:	4683      	mov	fp, r0
 800b4a2:	ea4f 1268 	mov.w	r2, r8, asr #5
 800b4a6:	2301      	movs	r3, #1
 800b4a8:	f85a 2022 	ldr.w	r2, [sl, r2, lsl #2]
 800b4ac:	f008 081f 	and.w	r8, r8, #31
 800b4b0:	fa03 f308 	lsl.w	r3, r3, r8
 800b4b4:	4213      	tst	r3, r2
 800b4b6:	4631      	mov	r1, r6
 800b4b8:	4620      	mov	r0, r4
 800b4ba:	bf18      	it	ne
 800b4bc:	f04b 0b02 	orrne.w	fp, fp, #2
 800b4c0:	1bad      	subs	r5, r5, r6
 800b4c2:	f7ff fe07 	bl	800b0d4 <rshift>
 800b4c6:	687e      	ldr	r6, [r7, #4]
 800b4c8:	f04f 0802 	mov.w	r8, #2
 800b4cc:	f1bb 0f00 	cmp.w	fp, #0
 800b4d0:	d04a      	beq.n	800b568 <__gethex+0x3c4>
 800b4d2:	68fb      	ldr	r3, [r7, #12]
 800b4d4:	2b02      	cmp	r3, #2
 800b4d6:	d016      	beq.n	800b506 <__gethex+0x362>
 800b4d8:	2b03      	cmp	r3, #3
 800b4da:	d018      	beq.n	800b50e <__gethex+0x36a>
 800b4dc:	2b01      	cmp	r3, #1
 800b4de:	d109      	bne.n	800b4f4 <__gethex+0x350>
 800b4e0:	f01b 0f02 	tst.w	fp, #2
 800b4e4:	d006      	beq.n	800b4f4 <__gethex+0x350>
 800b4e6:	f8da 3000 	ldr.w	r3, [sl]
 800b4ea:	ea4b 0b03 	orr.w	fp, fp, r3
 800b4ee:	f01b 0f01 	tst.w	fp, #1
 800b4f2:	d10f      	bne.n	800b514 <__gethex+0x370>
 800b4f4:	f048 0810 	orr.w	r8, r8, #16
 800b4f8:	e036      	b.n	800b568 <__gethex+0x3c4>
 800b4fa:	f04f 0b01 	mov.w	fp, #1
 800b4fe:	e7d0      	b.n	800b4a2 <__gethex+0x2fe>
 800b500:	f04f 0801 	mov.w	r8, #1
 800b504:	e7e2      	b.n	800b4cc <__gethex+0x328>
 800b506:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800b508:	f1c3 0301 	rsb	r3, r3, #1
 800b50c:	930f      	str	r3, [sp, #60]	; 0x3c
 800b50e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800b510:	2b00      	cmp	r3, #0
 800b512:	d0ef      	beq.n	800b4f4 <__gethex+0x350>
 800b514:	f8d4 b010 	ldr.w	fp, [r4, #16]
 800b518:	f104 0214 	add.w	r2, r4, #20
 800b51c:	ea4f 038b 	mov.w	r3, fp, lsl #2
 800b520:	9301      	str	r3, [sp, #4]
 800b522:	eb02 008b 	add.w	r0, r2, fp, lsl #2
 800b526:	2300      	movs	r3, #0
 800b528:	4694      	mov	ip, r2
 800b52a:	f852 1b04 	ldr.w	r1, [r2], #4
 800b52e:	f1b1 3fff 	cmp.w	r1, #4294967295
 800b532:	d01e      	beq.n	800b572 <__gethex+0x3ce>
 800b534:	3101      	adds	r1, #1
 800b536:	f8cc 1000 	str.w	r1, [ip]
 800b53a:	f1b8 0f02 	cmp.w	r8, #2
 800b53e:	f104 0214 	add.w	r2, r4, #20
 800b542:	d13d      	bne.n	800b5c0 <__gethex+0x41c>
 800b544:	683b      	ldr	r3, [r7, #0]
 800b546:	3b01      	subs	r3, #1
 800b548:	42ab      	cmp	r3, r5
 800b54a:	d10b      	bne.n	800b564 <__gethex+0x3c0>
 800b54c:	1169      	asrs	r1, r5, #5
 800b54e:	2301      	movs	r3, #1
 800b550:	f005 051f 	and.w	r5, r5, #31
 800b554:	fa03 f505 	lsl.w	r5, r3, r5
 800b558:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 800b55c:	421d      	tst	r5, r3
 800b55e:	bf18      	it	ne
 800b560:	f04f 0801 	movne.w	r8, #1
 800b564:	f048 0820 	orr.w	r8, r8, #32
 800b568:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800b56a:	601c      	str	r4, [r3, #0]
 800b56c:	9b02      	ldr	r3, [sp, #8]
 800b56e:	601e      	str	r6, [r3, #0]
 800b570:	e6a2      	b.n	800b2b8 <__gethex+0x114>
 800b572:	4290      	cmp	r0, r2
 800b574:	f842 3c04 	str.w	r3, [r2, #-4]
 800b578:	d8d6      	bhi.n	800b528 <__gethex+0x384>
 800b57a:	68a2      	ldr	r2, [r4, #8]
 800b57c:	4593      	cmp	fp, r2
 800b57e:	db17      	blt.n	800b5b0 <__gethex+0x40c>
 800b580:	6861      	ldr	r1, [r4, #4]
 800b582:	4648      	mov	r0, r9
 800b584:	3101      	adds	r1, #1
 800b586:	f000 f9c3 	bl	800b910 <_Balloc>
 800b58a:	4682      	mov	sl, r0
 800b58c:	b918      	cbnz	r0, 800b596 <__gethex+0x3f2>
 800b58e:	4b1b      	ldr	r3, [pc, #108]	; (800b5fc <__gethex+0x458>)
 800b590:	4602      	mov	r2, r0
 800b592:	2184      	movs	r1, #132	; 0x84
 800b594:	e6b3      	b.n	800b2fe <__gethex+0x15a>
 800b596:	6922      	ldr	r2, [r4, #16]
 800b598:	3202      	adds	r2, #2
 800b59a:	f104 010c 	add.w	r1, r4, #12
 800b59e:	0092      	lsls	r2, r2, #2
 800b5a0:	300c      	adds	r0, #12
 800b5a2:	f7fe feb0 	bl	800a306 <memcpy>
 800b5a6:	4621      	mov	r1, r4
 800b5a8:	4648      	mov	r0, r9
 800b5aa:	f000 f9f1 	bl	800b990 <_Bfree>
 800b5ae:	4654      	mov	r4, sl
 800b5b0:	6922      	ldr	r2, [r4, #16]
 800b5b2:	1c51      	adds	r1, r2, #1
 800b5b4:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 800b5b8:	6121      	str	r1, [r4, #16]
 800b5ba:	2101      	movs	r1, #1
 800b5bc:	6151      	str	r1, [r2, #20]
 800b5be:	e7bc      	b.n	800b53a <__gethex+0x396>
 800b5c0:	6921      	ldr	r1, [r4, #16]
 800b5c2:	4559      	cmp	r1, fp
 800b5c4:	dd0b      	ble.n	800b5de <__gethex+0x43a>
 800b5c6:	2101      	movs	r1, #1
 800b5c8:	4620      	mov	r0, r4
 800b5ca:	f7ff fd83 	bl	800b0d4 <rshift>
 800b5ce:	68bb      	ldr	r3, [r7, #8]
 800b5d0:	3601      	adds	r6, #1
 800b5d2:	42b3      	cmp	r3, r6
 800b5d4:	f6ff aedb 	blt.w	800b38e <__gethex+0x1ea>
 800b5d8:	f04f 0801 	mov.w	r8, #1
 800b5dc:	e7c2      	b.n	800b564 <__gethex+0x3c0>
 800b5de:	f015 051f 	ands.w	r5, r5, #31
 800b5e2:	d0f9      	beq.n	800b5d8 <__gethex+0x434>
 800b5e4:	9b01      	ldr	r3, [sp, #4]
 800b5e6:	441a      	add	r2, r3
 800b5e8:	f1c5 0520 	rsb	r5, r5, #32
 800b5ec:	f852 0c04 	ldr.w	r0, [r2, #-4]
 800b5f0:	f000 fa80 	bl	800baf4 <__hi0bits>
 800b5f4:	42a8      	cmp	r0, r5
 800b5f6:	dbe6      	blt.n	800b5c6 <__gethex+0x422>
 800b5f8:	e7ee      	b.n	800b5d8 <__gethex+0x434>
 800b5fa:	bf00      	nop
 800b5fc:	0800d576 	.word	0x0800d576

0800b600 <L_shift>:
 800b600:	f1c2 0208 	rsb	r2, r2, #8
 800b604:	0092      	lsls	r2, r2, #2
 800b606:	b570      	push	{r4, r5, r6, lr}
 800b608:	f1c2 0620 	rsb	r6, r2, #32
 800b60c:	6843      	ldr	r3, [r0, #4]
 800b60e:	6804      	ldr	r4, [r0, #0]
 800b610:	fa03 f506 	lsl.w	r5, r3, r6
 800b614:	432c      	orrs	r4, r5
 800b616:	40d3      	lsrs	r3, r2
 800b618:	6004      	str	r4, [r0, #0]
 800b61a:	f840 3f04 	str.w	r3, [r0, #4]!
 800b61e:	4288      	cmp	r0, r1
 800b620:	d3f4      	bcc.n	800b60c <L_shift+0xc>
 800b622:	bd70      	pop	{r4, r5, r6, pc}

0800b624 <__match>:
 800b624:	b530      	push	{r4, r5, lr}
 800b626:	6803      	ldr	r3, [r0, #0]
 800b628:	3301      	adds	r3, #1
 800b62a:	f811 4b01 	ldrb.w	r4, [r1], #1
 800b62e:	b914      	cbnz	r4, 800b636 <__match+0x12>
 800b630:	6003      	str	r3, [r0, #0]
 800b632:	2001      	movs	r0, #1
 800b634:	bd30      	pop	{r4, r5, pc}
 800b636:	f813 2b01 	ldrb.w	r2, [r3], #1
 800b63a:	f1a2 0541 	sub.w	r5, r2, #65	; 0x41
 800b63e:	2d19      	cmp	r5, #25
 800b640:	bf98      	it	ls
 800b642:	3220      	addls	r2, #32
 800b644:	42a2      	cmp	r2, r4
 800b646:	d0f0      	beq.n	800b62a <__match+0x6>
 800b648:	2000      	movs	r0, #0
 800b64a:	e7f3      	b.n	800b634 <__match+0x10>

0800b64c <__hexnan>:
 800b64c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b650:	680b      	ldr	r3, [r1, #0]
 800b652:	6801      	ldr	r1, [r0, #0]
 800b654:	115e      	asrs	r6, r3, #5
 800b656:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 800b65a:	f013 031f 	ands.w	r3, r3, #31
 800b65e:	b087      	sub	sp, #28
 800b660:	bf18      	it	ne
 800b662:	3604      	addne	r6, #4
 800b664:	2500      	movs	r5, #0
 800b666:	1f37      	subs	r7, r6, #4
 800b668:	4682      	mov	sl, r0
 800b66a:	4690      	mov	r8, r2
 800b66c:	9301      	str	r3, [sp, #4]
 800b66e:	f846 5c04 	str.w	r5, [r6, #-4]
 800b672:	46b9      	mov	r9, r7
 800b674:	463c      	mov	r4, r7
 800b676:	9502      	str	r5, [sp, #8]
 800b678:	46ab      	mov	fp, r5
 800b67a:	784a      	ldrb	r2, [r1, #1]
 800b67c:	1c4b      	adds	r3, r1, #1
 800b67e:	9303      	str	r3, [sp, #12]
 800b680:	b342      	cbz	r2, 800b6d4 <__hexnan+0x88>
 800b682:	4610      	mov	r0, r2
 800b684:	9105      	str	r1, [sp, #20]
 800b686:	9204      	str	r2, [sp, #16]
 800b688:	f7ff fd76 	bl	800b178 <__hexdig_fun>
 800b68c:	2800      	cmp	r0, #0
 800b68e:	d14f      	bne.n	800b730 <__hexnan+0xe4>
 800b690:	9a04      	ldr	r2, [sp, #16]
 800b692:	9905      	ldr	r1, [sp, #20]
 800b694:	2a20      	cmp	r2, #32
 800b696:	d818      	bhi.n	800b6ca <__hexnan+0x7e>
 800b698:	9b02      	ldr	r3, [sp, #8]
 800b69a:	459b      	cmp	fp, r3
 800b69c:	dd13      	ble.n	800b6c6 <__hexnan+0x7a>
 800b69e:	454c      	cmp	r4, r9
 800b6a0:	d206      	bcs.n	800b6b0 <__hexnan+0x64>
 800b6a2:	2d07      	cmp	r5, #7
 800b6a4:	dc04      	bgt.n	800b6b0 <__hexnan+0x64>
 800b6a6:	462a      	mov	r2, r5
 800b6a8:	4649      	mov	r1, r9
 800b6aa:	4620      	mov	r0, r4
 800b6ac:	f7ff ffa8 	bl	800b600 <L_shift>
 800b6b0:	4544      	cmp	r4, r8
 800b6b2:	d950      	bls.n	800b756 <__hexnan+0x10a>
 800b6b4:	2300      	movs	r3, #0
 800b6b6:	f1a4 0904 	sub.w	r9, r4, #4
 800b6ba:	f844 3c04 	str.w	r3, [r4, #-4]
 800b6be:	f8cd b008 	str.w	fp, [sp, #8]
 800b6c2:	464c      	mov	r4, r9
 800b6c4:	461d      	mov	r5, r3
 800b6c6:	9903      	ldr	r1, [sp, #12]
 800b6c8:	e7d7      	b.n	800b67a <__hexnan+0x2e>
 800b6ca:	2a29      	cmp	r2, #41	; 0x29
 800b6cc:	d155      	bne.n	800b77a <__hexnan+0x12e>
 800b6ce:	3102      	adds	r1, #2
 800b6d0:	f8ca 1000 	str.w	r1, [sl]
 800b6d4:	f1bb 0f00 	cmp.w	fp, #0
 800b6d8:	d04f      	beq.n	800b77a <__hexnan+0x12e>
 800b6da:	454c      	cmp	r4, r9
 800b6dc:	d206      	bcs.n	800b6ec <__hexnan+0xa0>
 800b6de:	2d07      	cmp	r5, #7
 800b6e0:	dc04      	bgt.n	800b6ec <__hexnan+0xa0>
 800b6e2:	462a      	mov	r2, r5
 800b6e4:	4649      	mov	r1, r9
 800b6e6:	4620      	mov	r0, r4
 800b6e8:	f7ff ff8a 	bl	800b600 <L_shift>
 800b6ec:	4544      	cmp	r4, r8
 800b6ee:	d934      	bls.n	800b75a <__hexnan+0x10e>
 800b6f0:	f1a8 0204 	sub.w	r2, r8, #4
 800b6f4:	4623      	mov	r3, r4
 800b6f6:	f853 1b04 	ldr.w	r1, [r3], #4
 800b6fa:	f842 1f04 	str.w	r1, [r2, #4]!
 800b6fe:	429f      	cmp	r7, r3
 800b700:	d2f9      	bcs.n	800b6f6 <__hexnan+0xaa>
 800b702:	1b3b      	subs	r3, r7, r4
 800b704:	f023 0303 	bic.w	r3, r3, #3
 800b708:	3304      	adds	r3, #4
 800b70a:	3e03      	subs	r6, #3
 800b70c:	3401      	adds	r4, #1
 800b70e:	42a6      	cmp	r6, r4
 800b710:	bf38      	it	cc
 800b712:	2304      	movcc	r3, #4
 800b714:	4443      	add	r3, r8
 800b716:	2200      	movs	r2, #0
 800b718:	f843 2b04 	str.w	r2, [r3], #4
 800b71c:	429f      	cmp	r7, r3
 800b71e:	d2fb      	bcs.n	800b718 <__hexnan+0xcc>
 800b720:	683b      	ldr	r3, [r7, #0]
 800b722:	b91b      	cbnz	r3, 800b72c <__hexnan+0xe0>
 800b724:	4547      	cmp	r7, r8
 800b726:	d126      	bne.n	800b776 <__hexnan+0x12a>
 800b728:	2301      	movs	r3, #1
 800b72a:	603b      	str	r3, [r7, #0]
 800b72c:	2005      	movs	r0, #5
 800b72e:	e025      	b.n	800b77c <__hexnan+0x130>
 800b730:	3501      	adds	r5, #1
 800b732:	2d08      	cmp	r5, #8
 800b734:	f10b 0b01 	add.w	fp, fp, #1
 800b738:	dd06      	ble.n	800b748 <__hexnan+0xfc>
 800b73a:	4544      	cmp	r4, r8
 800b73c:	d9c3      	bls.n	800b6c6 <__hexnan+0x7a>
 800b73e:	2300      	movs	r3, #0
 800b740:	f844 3c04 	str.w	r3, [r4, #-4]
 800b744:	2501      	movs	r5, #1
 800b746:	3c04      	subs	r4, #4
 800b748:	6822      	ldr	r2, [r4, #0]
 800b74a:	f000 000f 	and.w	r0, r0, #15
 800b74e:	ea40 1002 	orr.w	r0, r0, r2, lsl #4
 800b752:	6020      	str	r0, [r4, #0]
 800b754:	e7b7      	b.n	800b6c6 <__hexnan+0x7a>
 800b756:	2508      	movs	r5, #8
 800b758:	e7b5      	b.n	800b6c6 <__hexnan+0x7a>
 800b75a:	9b01      	ldr	r3, [sp, #4]
 800b75c:	2b00      	cmp	r3, #0
 800b75e:	d0df      	beq.n	800b720 <__hexnan+0xd4>
 800b760:	f1c3 0320 	rsb	r3, r3, #32
 800b764:	f04f 32ff 	mov.w	r2, #4294967295
 800b768:	40da      	lsrs	r2, r3
 800b76a:	f856 3c04 	ldr.w	r3, [r6, #-4]
 800b76e:	4013      	ands	r3, r2
 800b770:	f846 3c04 	str.w	r3, [r6, #-4]
 800b774:	e7d4      	b.n	800b720 <__hexnan+0xd4>
 800b776:	3f04      	subs	r7, #4
 800b778:	e7d2      	b.n	800b720 <__hexnan+0xd4>
 800b77a:	2004      	movs	r0, #4
 800b77c:	b007      	add	sp, #28
 800b77e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0800b784 <malloc>:
 800b784:	4b02      	ldr	r3, [pc, #8]	; (800b790 <malloc+0xc>)
 800b786:	4601      	mov	r1, r0
 800b788:	6818      	ldr	r0, [r3, #0]
 800b78a:	f000 b823 	b.w	800b7d4 <_malloc_r>
 800b78e:	bf00      	nop
 800b790:	2000023c 	.word	0x2000023c

0800b794 <sbrk_aligned>:
 800b794:	b570      	push	{r4, r5, r6, lr}
 800b796:	4e0e      	ldr	r6, [pc, #56]	; (800b7d0 <sbrk_aligned+0x3c>)
 800b798:	460c      	mov	r4, r1
 800b79a:	6831      	ldr	r1, [r6, #0]
 800b79c:	4605      	mov	r5, r0
 800b79e:	b911      	cbnz	r1, 800b7a6 <sbrk_aligned+0x12>
 800b7a0:	f000 ff90 	bl	800c6c4 <_sbrk_r>
 800b7a4:	6030      	str	r0, [r6, #0]
 800b7a6:	4621      	mov	r1, r4
 800b7a8:	4628      	mov	r0, r5
 800b7aa:	f000 ff8b 	bl	800c6c4 <_sbrk_r>
 800b7ae:	1c43      	adds	r3, r0, #1
 800b7b0:	d00a      	beq.n	800b7c8 <sbrk_aligned+0x34>
 800b7b2:	1cc4      	adds	r4, r0, #3
 800b7b4:	f024 0403 	bic.w	r4, r4, #3
 800b7b8:	42a0      	cmp	r0, r4
 800b7ba:	d007      	beq.n	800b7cc <sbrk_aligned+0x38>
 800b7bc:	1a21      	subs	r1, r4, r0
 800b7be:	4628      	mov	r0, r5
 800b7c0:	f000 ff80 	bl	800c6c4 <_sbrk_r>
 800b7c4:	3001      	adds	r0, #1
 800b7c6:	d101      	bne.n	800b7cc <sbrk_aligned+0x38>
 800b7c8:	f04f 34ff 	mov.w	r4, #4294967295
 800b7cc:	4620      	mov	r0, r4
 800b7ce:	bd70      	pop	{r4, r5, r6, pc}
 800b7d0:	200008ac 	.word	0x200008ac

0800b7d4 <_malloc_r>:
 800b7d4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800b7d8:	1ccd      	adds	r5, r1, #3
 800b7da:	f025 0503 	bic.w	r5, r5, #3
 800b7de:	3508      	adds	r5, #8
 800b7e0:	2d0c      	cmp	r5, #12
 800b7e2:	bf38      	it	cc
 800b7e4:	250c      	movcc	r5, #12
 800b7e6:	2d00      	cmp	r5, #0
 800b7e8:	4607      	mov	r7, r0
 800b7ea:	db01      	blt.n	800b7f0 <_malloc_r+0x1c>
 800b7ec:	42a9      	cmp	r1, r5
 800b7ee:	d905      	bls.n	800b7fc <_malloc_r+0x28>
 800b7f0:	230c      	movs	r3, #12
 800b7f2:	603b      	str	r3, [r7, #0]
 800b7f4:	2600      	movs	r6, #0
 800b7f6:	4630      	mov	r0, r6
 800b7f8:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800b7fc:	f8df 80d0 	ldr.w	r8, [pc, #208]	; 800b8d0 <_malloc_r+0xfc>
 800b800:	f000 f87a 	bl	800b8f8 <__malloc_lock>
 800b804:	f8d8 3000 	ldr.w	r3, [r8]
 800b808:	461c      	mov	r4, r3
 800b80a:	bb5c      	cbnz	r4, 800b864 <_malloc_r+0x90>
 800b80c:	4629      	mov	r1, r5
 800b80e:	4638      	mov	r0, r7
 800b810:	f7ff ffc0 	bl	800b794 <sbrk_aligned>
 800b814:	1c43      	adds	r3, r0, #1
 800b816:	4604      	mov	r4, r0
 800b818:	d155      	bne.n	800b8c6 <_malloc_r+0xf2>
 800b81a:	f8d8 4000 	ldr.w	r4, [r8]
 800b81e:	4626      	mov	r6, r4
 800b820:	2e00      	cmp	r6, #0
 800b822:	d145      	bne.n	800b8b0 <_malloc_r+0xdc>
 800b824:	2c00      	cmp	r4, #0
 800b826:	d048      	beq.n	800b8ba <_malloc_r+0xe6>
 800b828:	6823      	ldr	r3, [r4, #0]
 800b82a:	4631      	mov	r1, r6
 800b82c:	4638      	mov	r0, r7
 800b82e:	eb04 0903 	add.w	r9, r4, r3
 800b832:	f000 ff47 	bl	800c6c4 <_sbrk_r>
 800b836:	4581      	cmp	r9, r0
 800b838:	d13f      	bne.n	800b8ba <_malloc_r+0xe6>
 800b83a:	6821      	ldr	r1, [r4, #0]
 800b83c:	1a6d      	subs	r5, r5, r1
 800b83e:	4629      	mov	r1, r5
 800b840:	4638      	mov	r0, r7
 800b842:	f7ff ffa7 	bl	800b794 <sbrk_aligned>
 800b846:	3001      	adds	r0, #1
 800b848:	d037      	beq.n	800b8ba <_malloc_r+0xe6>
 800b84a:	6823      	ldr	r3, [r4, #0]
 800b84c:	442b      	add	r3, r5
 800b84e:	6023      	str	r3, [r4, #0]
 800b850:	f8d8 3000 	ldr.w	r3, [r8]
 800b854:	2b00      	cmp	r3, #0
 800b856:	d038      	beq.n	800b8ca <_malloc_r+0xf6>
 800b858:	685a      	ldr	r2, [r3, #4]
 800b85a:	42a2      	cmp	r2, r4
 800b85c:	d12b      	bne.n	800b8b6 <_malloc_r+0xe2>
 800b85e:	2200      	movs	r2, #0
 800b860:	605a      	str	r2, [r3, #4]
 800b862:	e00f      	b.n	800b884 <_malloc_r+0xb0>
 800b864:	6822      	ldr	r2, [r4, #0]
 800b866:	1b52      	subs	r2, r2, r5
 800b868:	d41f      	bmi.n	800b8aa <_malloc_r+0xd6>
 800b86a:	2a0b      	cmp	r2, #11
 800b86c:	d917      	bls.n	800b89e <_malloc_r+0xca>
 800b86e:	1961      	adds	r1, r4, r5
 800b870:	42a3      	cmp	r3, r4
 800b872:	6025      	str	r5, [r4, #0]
 800b874:	bf18      	it	ne
 800b876:	6059      	strne	r1, [r3, #4]
 800b878:	6863      	ldr	r3, [r4, #4]
 800b87a:	bf08      	it	eq
 800b87c:	f8c8 1000 	streq.w	r1, [r8]
 800b880:	5162      	str	r2, [r4, r5]
 800b882:	604b      	str	r3, [r1, #4]
 800b884:	4638      	mov	r0, r7
 800b886:	f104 060b 	add.w	r6, r4, #11
 800b88a:	f000 f83b 	bl	800b904 <__malloc_unlock>
 800b88e:	f026 0607 	bic.w	r6, r6, #7
 800b892:	1d23      	adds	r3, r4, #4
 800b894:	1af2      	subs	r2, r6, r3
 800b896:	d0ae      	beq.n	800b7f6 <_malloc_r+0x22>
 800b898:	1b9b      	subs	r3, r3, r6
 800b89a:	50a3      	str	r3, [r4, r2]
 800b89c:	e7ab      	b.n	800b7f6 <_malloc_r+0x22>
 800b89e:	42a3      	cmp	r3, r4
 800b8a0:	6862      	ldr	r2, [r4, #4]
 800b8a2:	d1dd      	bne.n	800b860 <_malloc_r+0x8c>
 800b8a4:	f8c8 2000 	str.w	r2, [r8]
 800b8a8:	e7ec      	b.n	800b884 <_malloc_r+0xb0>
 800b8aa:	4623      	mov	r3, r4
 800b8ac:	6864      	ldr	r4, [r4, #4]
 800b8ae:	e7ac      	b.n	800b80a <_malloc_r+0x36>
 800b8b0:	4634      	mov	r4, r6
 800b8b2:	6876      	ldr	r6, [r6, #4]
 800b8b4:	e7b4      	b.n	800b820 <_malloc_r+0x4c>
 800b8b6:	4613      	mov	r3, r2
 800b8b8:	e7cc      	b.n	800b854 <_malloc_r+0x80>
 800b8ba:	230c      	movs	r3, #12
 800b8bc:	603b      	str	r3, [r7, #0]
 800b8be:	4638      	mov	r0, r7
 800b8c0:	f000 f820 	bl	800b904 <__malloc_unlock>
 800b8c4:	e797      	b.n	800b7f6 <_malloc_r+0x22>
 800b8c6:	6025      	str	r5, [r4, #0]
 800b8c8:	e7dc      	b.n	800b884 <_malloc_r+0xb0>
 800b8ca:	605b      	str	r3, [r3, #4]
 800b8cc:	deff      	udf	#255	; 0xff
 800b8ce:	bf00      	nop
 800b8d0:	200008a8 	.word	0x200008a8

0800b8d4 <__ascii_mbtowc>:
 800b8d4:	b082      	sub	sp, #8
 800b8d6:	b901      	cbnz	r1, 800b8da <__ascii_mbtowc+0x6>
 800b8d8:	a901      	add	r1, sp, #4
 800b8da:	b142      	cbz	r2, 800b8ee <__ascii_mbtowc+0x1a>
 800b8dc:	b14b      	cbz	r3, 800b8f2 <__ascii_mbtowc+0x1e>
 800b8de:	7813      	ldrb	r3, [r2, #0]
 800b8e0:	600b      	str	r3, [r1, #0]
 800b8e2:	7812      	ldrb	r2, [r2, #0]
 800b8e4:	1e10      	subs	r0, r2, #0
 800b8e6:	bf18      	it	ne
 800b8e8:	2001      	movne	r0, #1
 800b8ea:	b002      	add	sp, #8
 800b8ec:	4770      	bx	lr
 800b8ee:	4610      	mov	r0, r2
 800b8f0:	e7fb      	b.n	800b8ea <__ascii_mbtowc+0x16>
 800b8f2:	f06f 0001 	mvn.w	r0, #1
 800b8f6:	e7f8      	b.n	800b8ea <__ascii_mbtowc+0x16>

0800b8f8 <__malloc_lock>:
 800b8f8:	4801      	ldr	r0, [pc, #4]	; (800b900 <__malloc_lock+0x8>)
 800b8fa:	f7fe bd02 	b.w	800a302 <__retarget_lock_acquire_recursive>
 800b8fe:	bf00      	nop
 800b900:	200008a4 	.word	0x200008a4

0800b904 <__malloc_unlock>:
 800b904:	4801      	ldr	r0, [pc, #4]	; (800b90c <__malloc_unlock+0x8>)
 800b906:	f7fe bcfd 	b.w	800a304 <__retarget_lock_release_recursive>
 800b90a:	bf00      	nop
 800b90c:	200008a4 	.word	0x200008a4

0800b910 <_Balloc>:
 800b910:	b570      	push	{r4, r5, r6, lr}
 800b912:	69c6      	ldr	r6, [r0, #28]
 800b914:	4604      	mov	r4, r0
 800b916:	460d      	mov	r5, r1
 800b918:	b976      	cbnz	r6, 800b938 <_Balloc+0x28>
 800b91a:	2010      	movs	r0, #16
 800b91c:	f7ff ff32 	bl	800b784 <malloc>
 800b920:	4602      	mov	r2, r0
 800b922:	61e0      	str	r0, [r4, #28]
 800b924:	b920      	cbnz	r0, 800b930 <_Balloc+0x20>
 800b926:	4b18      	ldr	r3, [pc, #96]	; (800b988 <_Balloc+0x78>)
 800b928:	4818      	ldr	r0, [pc, #96]	; (800b98c <_Balloc+0x7c>)
 800b92a:	216b      	movs	r1, #107	; 0x6b
 800b92c:	f000 feda 	bl	800c6e4 <__assert_func>
 800b930:	e9c0 6601 	strd	r6, r6, [r0, #4]
 800b934:	6006      	str	r6, [r0, #0]
 800b936:	60c6      	str	r6, [r0, #12]
 800b938:	69e6      	ldr	r6, [r4, #28]
 800b93a:	68f3      	ldr	r3, [r6, #12]
 800b93c:	b183      	cbz	r3, 800b960 <_Balloc+0x50>
 800b93e:	69e3      	ldr	r3, [r4, #28]
 800b940:	68db      	ldr	r3, [r3, #12]
 800b942:	f853 0025 	ldr.w	r0, [r3, r5, lsl #2]
 800b946:	b9b8      	cbnz	r0, 800b978 <_Balloc+0x68>
 800b948:	2101      	movs	r1, #1
 800b94a:	fa01 f605 	lsl.w	r6, r1, r5
 800b94e:	1d72      	adds	r2, r6, #5
 800b950:	0092      	lsls	r2, r2, #2
 800b952:	4620      	mov	r0, r4
 800b954:	f000 fee4 	bl	800c720 <_calloc_r>
 800b958:	b160      	cbz	r0, 800b974 <_Balloc+0x64>
 800b95a:	e9c0 5601 	strd	r5, r6, [r0, #4]
 800b95e:	e00e      	b.n	800b97e <_Balloc+0x6e>
 800b960:	2221      	movs	r2, #33	; 0x21
 800b962:	2104      	movs	r1, #4
 800b964:	4620      	mov	r0, r4
 800b966:	f000 fedb 	bl	800c720 <_calloc_r>
 800b96a:	69e3      	ldr	r3, [r4, #28]
 800b96c:	60f0      	str	r0, [r6, #12]
 800b96e:	68db      	ldr	r3, [r3, #12]
 800b970:	2b00      	cmp	r3, #0
 800b972:	d1e4      	bne.n	800b93e <_Balloc+0x2e>
 800b974:	2000      	movs	r0, #0
 800b976:	bd70      	pop	{r4, r5, r6, pc}
 800b978:	6802      	ldr	r2, [r0, #0]
 800b97a:	f843 2025 	str.w	r2, [r3, r5, lsl #2]
 800b97e:	2300      	movs	r3, #0
 800b980:	e9c0 3303 	strd	r3, r3, [r0, #12]
 800b984:	e7f7      	b.n	800b976 <_Balloc+0x66>
 800b986:	bf00      	nop
 800b988:	0800d507 	.word	0x0800d507
 800b98c:	0800d5e7 	.word	0x0800d5e7

0800b990 <_Bfree>:
 800b990:	b570      	push	{r4, r5, r6, lr}
 800b992:	69c6      	ldr	r6, [r0, #28]
 800b994:	4605      	mov	r5, r0
 800b996:	460c      	mov	r4, r1
 800b998:	b976      	cbnz	r6, 800b9b8 <_Bfree+0x28>
 800b99a:	2010      	movs	r0, #16
 800b99c:	f7ff fef2 	bl	800b784 <malloc>
 800b9a0:	4602      	mov	r2, r0
 800b9a2:	61e8      	str	r0, [r5, #28]
 800b9a4:	b920      	cbnz	r0, 800b9b0 <_Bfree+0x20>
 800b9a6:	4b09      	ldr	r3, [pc, #36]	; (800b9cc <_Bfree+0x3c>)
 800b9a8:	4809      	ldr	r0, [pc, #36]	; (800b9d0 <_Bfree+0x40>)
 800b9aa:	218f      	movs	r1, #143	; 0x8f
 800b9ac:	f000 fe9a 	bl	800c6e4 <__assert_func>
 800b9b0:	e9c0 6601 	strd	r6, r6, [r0, #4]
 800b9b4:	6006      	str	r6, [r0, #0]
 800b9b6:	60c6      	str	r6, [r0, #12]
 800b9b8:	b13c      	cbz	r4, 800b9ca <_Bfree+0x3a>
 800b9ba:	69eb      	ldr	r3, [r5, #28]
 800b9bc:	6862      	ldr	r2, [r4, #4]
 800b9be:	68db      	ldr	r3, [r3, #12]
 800b9c0:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 800b9c4:	6021      	str	r1, [r4, #0]
 800b9c6:	f843 4022 	str.w	r4, [r3, r2, lsl #2]
 800b9ca:	bd70      	pop	{r4, r5, r6, pc}
 800b9cc:	0800d507 	.word	0x0800d507
 800b9d0:	0800d5e7 	.word	0x0800d5e7

0800b9d4 <__multadd>:
 800b9d4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b9d8:	690d      	ldr	r5, [r1, #16]
 800b9da:	4607      	mov	r7, r0
 800b9dc:	460c      	mov	r4, r1
 800b9de:	461e      	mov	r6, r3
 800b9e0:	f101 0c14 	add.w	ip, r1, #20
 800b9e4:	2000      	movs	r0, #0
 800b9e6:	f8dc 3000 	ldr.w	r3, [ip]
 800b9ea:	b299      	uxth	r1, r3
 800b9ec:	fb02 6101 	mla	r1, r2, r1, r6
 800b9f0:	0c1e      	lsrs	r6, r3, #16
 800b9f2:	0c0b      	lsrs	r3, r1, #16
 800b9f4:	fb02 3306 	mla	r3, r2, r6, r3
 800b9f8:	b289      	uxth	r1, r1
 800b9fa:	3001      	adds	r0, #1
 800b9fc:	eb01 4103 	add.w	r1, r1, r3, lsl #16
 800ba00:	4285      	cmp	r5, r0
 800ba02:	f84c 1b04 	str.w	r1, [ip], #4
 800ba06:	ea4f 4613 	mov.w	r6, r3, lsr #16
 800ba0a:	dcec      	bgt.n	800b9e6 <__multadd+0x12>
 800ba0c:	b30e      	cbz	r6, 800ba52 <__multadd+0x7e>
 800ba0e:	68a3      	ldr	r3, [r4, #8]
 800ba10:	42ab      	cmp	r3, r5
 800ba12:	dc19      	bgt.n	800ba48 <__multadd+0x74>
 800ba14:	6861      	ldr	r1, [r4, #4]
 800ba16:	4638      	mov	r0, r7
 800ba18:	3101      	adds	r1, #1
 800ba1a:	f7ff ff79 	bl	800b910 <_Balloc>
 800ba1e:	4680      	mov	r8, r0
 800ba20:	b928      	cbnz	r0, 800ba2e <__multadd+0x5a>
 800ba22:	4602      	mov	r2, r0
 800ba24:	4b0c      	ldr	r3, [pc, #48]	; (800ba58 <__multadd+0x84>)
 800ba26:	480d      	ldr	r0, [pc, #52]	; (800ba5c <__multadd+0x88>)
 800ba28:	21ba      	movs	r1, #186	; 0xba
 800ba2a:	f000 fe5b 	bl	800c6e4 <__assert_func>
 800ba2e:	6922      	ldr	r2, [r4, #16]
 800ba30:	3202      	adds	r2, #2
 800ba32:	f104 010c 	add.w	r1, r4, #12
 800ba36:	0092      	lsls	r2, r2, #2
 800ba38:	300c      	adds	r0, #12
 800ba3a:	f7fe fc64 	bl	800a306 <memcpy>
 800ba3e:	4621      	mov	r1, r4
 800ba40:	4638      	mov	r0, r7
 800ba42:	f7ff ffa5 	bl	800b990 <_Bfree>
 800ba46:	4644      	mov	r4, r8
 800ba48:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 800ba4c:	3501      	adds	r5, #1
 800ba4e:	615e      	str	r6, [r3, #20]
 800ba50:	6125      	str	r5, [r4, #16]
 800ba52:	4620      	mov	r0, r4
 800ba54:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800ba58:	0800d576 	.word	0x0800d576
 800ba5c:	0800d5e7 	.word	0x0800d5e7

0800ba60 <__s2b>:
 800ba60:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800ba64:	460c      	mov	r4, r1
 800ba66:	4615      	mov	r5, r2
 800ba68:	461f      	mov	r7, r3
 800ba6a:	2209      	movs	r2, #9
 800ba6c:	3308      	adds	r3, #8
 800ba6e:	4606      	mov	r6, r0
 800ba70:	fb93 f3f2 	sdiv	r3, r3, r2
 800ba74:	2100      	movs	r1, #0
 800ba76:	2201      	movs	r2, #1
 800ba78:	429a      	cmp	r2, r3
 800ba7a:	db09      	blt.n	800ba90 <__s2b+0x30>
 800ba7c:	4630      	mov	r0, r6
 800ba7e:	f7ff ff47 	bl	800b910 <_Balloc>
 800ba82:	b940      	cbnz	r0, 800ba96 <__s2b+0x36>
 800ba84:	4602      	mov	r2, r0
 800ba86:	4b19      	ldr	r3, [pc, #100]	; (800baec <__s2b+0x8c>)
 800ba88:	4819      	ldr	r0, [pc, #100]	; (800baf0 <__s2b+0x90>)
 800ba8a:	21d3      	movs	r1, #211	; 0xd3
 800ba8c:	f000 fe2a 	bl	800c6e4 <__assert_func>
 800ba90:	0052      	lsls	r2, r2, #1
 800ba92:	3101      	adds	r1, #1
 800ba94:	e7f0      	b.n	800ba78 <__s2b+0x18>
 800ba96:	9b08      	ldr	r3, [sp, #32]
 800ba98:	6143      	str	r3, [r0, #20]
 800ba9a:	2d09      	cmp	r5, #9
 800ba9c:	f04f 0301 	mov.w	r3, #1
 800baa0:	6103      	str	r3, [r0, #16]
 800baa2:	dd16      	ble.n	800bad2 <__s2b+0x72>
 800baa4:	f104 0909 	add.w	r9, r4, #9
 800baa8:	46c8      	mov	r8, r9
 800baaa:	442c      	add	r4, r5
 800baac:	f818 3b01 	ldrb.w	r3, [r8], #1
 800bab0:	4601      	mov	r1, r0
 800bab2:	3b30      	subs	r3, #48	; 0x30
 800bab4:	220a      	movs	r2, #10
 800bab6:	4630      	mov	r0, r6
 800bab8:	f7ff ff8c 	bl	800b9d4 <__multadd>
 800babc:	45a0      	cmp	r8, r4
 800babe:	d1f5      	bne.n	800baac <__s2b+0x4c>
 800bac0:	f1a5 0408 	sub.w	r4, r5, #8
 800bac4:	444c      	add	r4, r9
 800bac6:	1b2d      	subs	r5, r5, r4
 800bac8:	1963      	adds	r3, r4, r5
 800baca:	42bb      	cmp	r3, r7
 800bacc:	db04      	blt.n	800bad8 <__s2b+0x78>
 800bace:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800bad2:	340a      	adds	r4, #10
 800bad4:	2509      	movs	r5, #9
 800bad6:	e7f6      	b.n	800bac6 <__s2b+0x66>
 800bad8:	f814 3b01 	ldrb.w	r3, [r4], #1
 800badc:	4601      	mov	r1, r0
 800bade:	3b30      	subs	r3, #48	; 0x30
 800bae0:	220a      	movs	r2, #10
 800bae2:	4630      	mov	r0, r6
 800bae4:	f7ff ff76 	bl	800b9d4 <__multadd>
 800bae8:	e7ee      	b.n	800bac8 <__s2b+0x68>
 800baea:	bf00      	nop
 800baec:	0800d576 	.word	0x0800d576
 800baf0:	0800d5e7 	.word	0x0800d5e7

0800baf4 <__hi0bits>:
 800baf4:	0c03      	lsrs	r3, r0, #16
 800baf6:	041b      	lsls	r3, r3, #16
 800baf8:	b9d3      	cbnz	r3, 800bb30 <__hi0bits+0x3c>
 800bafa:	0400      	lsls	r0, r0, #16
 800bafc:	2310      	movs	r3, #16
 800bafe:	f010 4f7f 	tst.w	r0, #4278190080	; 0xff000000
 800bb02:	bf04      	itt	eq
 800bb04:	0200      	lsleq	r0, r0, #8
 800bb06:	3308      	addeq	r3, #8
 800bb08:	f010 4f70 	tst.w	r0, #4026531840	; 0xf0000000
 800bb0c:	bf04      	itt	eq
 800bb0e:	0100      	lsleq	r0, r0, #4
 800bb10:	3304      	addeq	r3, #4
 800bb12:	f010 4f40 	tst.w	r0, #3221225472	; 0xc0000000
 800bb16:	bf04      	itt	eq
 800bb18:	0080      	lsleq	r0, r0, #2
 800bb1a:	3302      	addeq	r3, #2
 800bb1c:	2800      	cmp	r0, #0
 800bb1e:	db05      	blt.n	800bb2c <__hi0bits+0x38>
 800bb20:	f010 4f80 	tst.w	r0, #1073741824	; 0x40000000
 800bb24:	f103 0301 	add.w	r3, r3, #1
 800bb28:	bf08      	it	eq
 800bb2a:	2320      	moveq	r3, #32
 800bb2c:	4618      	mov	r0, r3
 800bb2e:	4770      	bx	lr
 800bb30:	2300      	movs	r3, #0
 800bb32:	e7e4      	b.n	800bafe <__hi0bits+0xa>

0800bb34 <__lo0bits>:
 800bb34:	6803      	ldr	r3, [r0, #0]
 800bb36:	f013 0207 	ands.w	r2, r3, #7
 800bb3a:	d00c      	beq.n	800bb56 <__lo0bits+0x22>
 800bb3c:	07d9      	lsls	r1, r3, #31
 800bb3e:	d422      	bmi.n	800bb86 <__lo0bits+0x52>
 800bb40:	079a      	lsls	r2, r3, #30
 800bb42:	bf49      	itett	mi
 800bb44:	085b      	lsrmi	r3, r3, #1
 800bb46:	089b      	lsrpl	r3, r3, #2
 800bb48:	6003      	strmi	r3, [r0, #0]
 800bb4a:	2201      	movmi	r2, #1
 800bb4c:	bf5c      	itt	pl
 800bb4e:	6003      	strpl	r3, [r0, #0]
 800bb50:	2202      	movpl	r2, #2
 800bb52:	4610      	mov	r0, r2
 800bb54:	4770      	bx	lr
 800bb56:	b299      	uxth	r1, r3
 800bb58:	b909      	cbnz	r1, 800bb5e <__lo0bits+0x2a>
 800bb5a:	0c1b      	lsrs	r3, r3, #16
 800bb5c:	2210      	movs	r2, #16
 800bb5e:	b2d9      	uxtb	r1, r3
 800bb60:	b909      	cbnz	r1, 800bb66 <__lo0bits+0x32>
 800bb62:	3208      	adds	r2, #8
 800bb64:	0a1b      	lsrs	r3, r3, #8
 800bb66:	0719      	lsls	r1, r3, #28
 800bb68:	bf04      	itt	eq
 800bb6a:	091b      	lsreq	r3, r3, #4
 800bb6c:	3204      	addeq	r2, #4
 800bb6e:	0799      	lsls	r1, r3, #30
 800bb70:	bf04      	itt	eq
 800bb72:	089b      	lsreq	r3, r3, #2
 800bb74:	3202      	addeq	r2, #2
 800bb76:	07d9      	lsls	r1, r3, #31
 800bb78:	d403      	bmi.n	800bb82 <__lo0bits+0x4e>
 800bb7a:	085b      	lsrs	r3, r3, #1
 800bb7c:	f102 0201 	add.w	r2, r2, #1
 800bb80:	d003      	beq.n	800bb8a <__lo0bits+0x56>
 800bb82:	6003      	str	r3, [r0, #0]
 800bb84:	e7e5      	b.n	800bb52 <__lo0bits+0x1e>
 800bb86:	2200      	movs	r2, #0
 800bb88:	e7e3      	b.n	800bb52 <__lo0bits+0x1e>
 800bb8a:	2220      	movs	r2, #32
 800bb8c:	e7e1      	b.n	800bb52 <__lo0bits+0x1e>
	...

0800bb90 <__i2b>:
 800bb90:	b510      	push	{r4, lr}
 800bb92:	460c      	mov	r4, r1
 800bb94:	2101      	movs	r1, #1
 800bb96:	f7ff febb 	bl	800b910 <_Balloc>
 800bb9a:	4602      	mov	r2, r0
 800bb9c:	b928      	cbnz	r0, 800bbaa <__i2b+0x1a>
 800bb9e:	4b05      	ldr	r3, [pc, #20]	; (800bbb4 <__i2b+0x24>)
 800bba0:	4805      	ldr	r0, [pc, #20]	; (800bbb8 <__i2b+0x28>)
 800bba2:	f240 1145 	movw	r1, #325	; 0x145
 800bba6:	f000 fd9d 	bl	800c6e4 <__assert_func>
 800bbaa:	2301      	movs	r3, #1
 800bbac:	6144      	str	r4, [r0, #20]
 800bbae:	6103      	str	r3, [r0, #16]
 800bbb0:	bd10      	pop	{r4, pc}
 800bbb2:	bf00      	nop
 800bbb4:	0800d576 	.word	0x0800d576
 800bbb8:	0800d5e7 	.word	0x0800d5e7

0800bbbc <__multiply>:
 800bbbc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800bbc0:	4691      	mov	r9, r2
 800bbc2:	690a      	ldr	r2, [r1, #16]
 800bbc4:	f8d9 3010 	ldr.w	r3, [r9, #16]
 800bbc8:	429a      	cmp	r2, r3
 800bbca:	bfb8      	it	lt
 800bbcc:	460b      	movlt	r3, r1
 800bbce:	460c      	mov	r4, r1
 800bbd0:	bfbc      	itt	lt
 800bbd2:	464c      	movlt	r4, r9
 800bbd4:	4699      	movlt	r9, r3
 800bbd6:	6927      	ldr	r7, [r4, #16]
 800bbd8:	f8d9 a010 	ldr.w	sl, [r9, #16]
 800bbdc:	68a3      	ldr	r3, [r4, #8]
 800bbde:	6861      	ldr	r1, [r4, #4]
 800bbe0:	eb07 060a 	add.w	r6, r7, sl
 800bbe4:	42b3      	cmp	r3, r6
 800bbe6:	b085      	sub	sp, #20
 800bbe8:	bfb8      	it	lt
 800bbea:	3101      	addlt	r1, #1
 800bbec:	f7ff fe90 	bl	800b910 <_Balloc>
 800bbf0:	b930      	cbnz	r0, 800bc00 <__multiply+0x44>
 800bbf2:	4602      	mov	r2, r0
 800bbf4:	4b44      	ldr	r3, [pc, #272]	; (800bd08 <__multiply+0x14c>)
 800bbf6:	4845      	ldr	r0, [pc, #276]	; (800bd0c <__multiply+0x150>)
 800bbf8:	f44f 71b1 	mov.w	r1, #354	; 0x162
 800bbfc:	f000 fd72 	bl	800c6e4 <__assert_func>
 800bc00:	f100 0514 	add.w	r5, r0, #20
 800bc04:	eb05 0886 	add.w	r8, r5, r6, lsl #2
 800bc08:	462b      	mov	r3, r5
 800bc0a:	2200      	movs	r2, #0
 800bc0c:	4543      	cmp	r3, r8
 800bc0e:	d321      	bcc.n	800bc54 <__multiply+0x98>
 800bc10:	f104 0314 	add.w	r3, r4, #20
 800bc14:	eb03 0787 	add.w	r7, r3, r7, lsl #2
 800bc18:	f109 0314 	add.w	r3, r9, #20
 800bc1c:	eb03 028a 	add.w	r2, r3, sl, lsl #2
 800bc20:	9202      	str	r2, [sp, #8]
 800bc22:	1b3a      	subs	r2, r7, r4
 800bc24:	3a15      	subs	r2, #21
 800bc26:	f022 0203 	bic.w	r2, r2, #3
 800bc2a:	3204      	adds	r2, #4
 800bc2c:	f104 0115 	add.w	r1, r4, #21
 800bc30:	428f      	cmp	r7, r1
 800bc32:	bf38      	it	cc
 800bc34:	2204      	movcc	r2, #4
 800bc36:	9201      	str	r2, [sp, #4]
 800bc38:	9a02      	ldr	r2, [sp, #8]
 800bc3a:	9303      	str	r3, [sp, #12]
 800bc3c:	429a      	cmp	r2, r3
 800bc3e:	d80c      	bhi.n	800bc5a <__multiply+0x9e>
 800bc40:	2e00      	cmp	r6, #0
 800bc42:	dd03      	ble.n	800bc4c <__multiply+0x90>
 800bc44:	f858 3d04 	ldr.w	r3, [r8, #-4]!
 800bc48:	2b00      	cmp	r3, #0
 800bc4a:	d05b      	beq.n	800bd04 <__multiply+0x148>
 800bc4c:	6106      	str	r6, [r0, #16]
 800bc4e:	b005      	add	sp, #20
 800bc50:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800bc54:	f843 2b04 	str.w	r2, [r3], #4
 800bc58:	e7d8      	b.n	800bc0c <__multiply+0x50>
 800bc5a:	f8b3 a000 	ldrh.w	sl, [r3]
 800bc5e:	f1ba 0f00 	cmp.w	sl, #0
 800bc62:	d024      	beq.n	800bcae <__multiply+0xf2>
 800bc64:	f104 0e14 	add.w	lr, r4, #20
 800bc68:	46a9      	mov	r9, r5
 800bc6a:	f04f 0c00 	mov.w	ip, #0
 800bc6e:	f85e 2b04 	ldr.w	r2, [lr], #4
 800bc72:	f8d9 1000 	ldr.w	r1, [r9]
 800bc76:	fa1f fb82 	uxth.w	fp, r2
 800bc7a:	b289      	uxth	r1, r1
 800bc7c:	fb0a 110b 	mla	r1, sl, fp, r1
 800bc80:	ea4f 4b12 	mov.w	fp, r2, lsr #16
 800bc84:	f8d9 2000 	ldr.w	r2, [r9]
 800bc88:	4461      	add	r1, ip
 800bc8a:	ea4f 4c12 	mov.w	ip, r2, lsr #16
 800bc8e:	fb0a c20b 	mla	r2, sl, fp, ip
 800bc92:	eb02 4211 	add.w	r2, r2, r1, lsr #16
 800bc96:	b289      	uxth	r1, r1
 800bc98:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 800bc9c:	4577      	cmp	r7, lr
 800bc9e:	f849 1b04 	str.w	r1, [r9], #4
 800bca2:	ea4f 4c12 	mov.w	ip, r2, lsr #16
 800bca6:	d8e2      	bhi.n	800bc6e <__multiply+0xb2>
 800bca8:	9a01      	ldr	r2, [sp, #4]
 800bcaa:	f845 c002 	str.w	ip, [r5, r2]
 800bcae:	9a03      	ldr	r2, [sp, #12]
 800bcb0:	f8b2 9002 	ldrh.w	r9, [r2, #2]
 800bcb4:	3304      	adds	r3, #4
 800bcb6:	f1b9 0f00 	cmp.w	r9, #0
 800bcba:	d021      	beq.n	800bd00 <__multiply+0x144>
 800bcbc:	6829      	ldr	r1, [r5, #0]
 800bcbe:	f104 0c14 	add.w	ip, r4, #20
 800bcc2:	46ae      	mov	lr, r5
 800bcc4:	f04f 0a00 	mov.w	sl, #0
 800bcc8:	f8bc b000 	ldrh.w	fp, [ip]
 800bccc:	f8be 2002 	ldrh.w	r2, [lr, #2]
 800bcd0:	fb09 220b 	mla	r2, r9, fp, r2
 800bcd4:	4452      	add	r2, sl
 800bcd6:	b289      	uxth	r1, r1
 800bcd8:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 800bcdc:	f84e 1b04 	str.w	r1, [lr], #4
 800bce0:	f85c 1b04 	ldr.w	r1, [ip], #4
 800bce4:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 800bce8:	f8be 1000 	ldrh.w	r1, [lr]
 800bcec:	fb09 110a 	mla	r1, r9, sl, r1
 800bcf0:	eb01 4112 	add.w	r1, r1, r2, lsr #16
 800bcf4:	4567      	cmp	r7, ip
 800bcf6:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 800bcfa:	d8e5      	bhi.n	800bcc8 <__multiply+0x10c>
 800bcfc:	9a01      	ldr	r2, [sp, #4]
 800bcfe:	50a9      	str	r1, [r5, r2]
 800bd00:	3504      	adds	r5, #4
 800bd02:	e799      	b.n	800bc38 <__multiply+0x7c>
 800bd04:	3e01      	subs	r6, #1
 800bd06:	e79b      	b.n	800bc40 <__multiply+0x84>
 800bd08:	0800d576 	.word	0x0800d576
 800bd0c:	0800d5e7 	.word	0x0800d5e7

0800bd10 <__pow5mult>:
 800bd10:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800bd14:	4615      	mov	r5, r2
 800bd16:	f012 0203 	ands.w	r2, r2, #3
 800bd1a:	4606      	mov	r6, r0
 800bd1c:	460f      	mov	r7, r1
 800bd1e:	d007      	beq.n	800bd30 <__pow5mult+0x20>
 800bd20:	4c25      	ldr	r4, [pc, #148]	; (800bdb8 <__pow5mult+0xa8>)
 800bd22:	3a01      	subs	r2, #1
 800bd24:	2300      	movs	r3, #0
 800bd26:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 800bd2a:	f7ff fe53 	bl	800b9d4 <__multadd>
 800bd2e:	4607      	mov	r7, r0
 800bd30:	10ad      	asrs	r5, r5, #2
 800bd32:	d03d      	beq.n	800bdb0 <__pow5mult+0xa0>
 800bd34:	69f4      	ldr	r4, [r6, #28]
 800bd36:	b97c      	cbnz	r4, 800bd58 <__pow5mult+0x48>
 800bd38:	2010      	movs	r0, #16
 800bd3a:	f7ff fd23 	bl	800b784 <malloc>
 800bd3e:	4602      	mov	r2, r0
 800bd40:	61f0      	str	r0, [r6, #28]
 800bd42:	b928      	cbnz	r0, 800bd50 <__pow5mult+0x40>
 800bd44:	4b1d      	ldr	r3, [pc, #116]	; (800bdbc <__pow5mult+0xac>)
 800bd46:	481e      	ldr	r0, [pc, #120]	; (800bdc0 <__pow5mult+0xb0>)
 800bd48:	f240 11b3 	movw	r1, #435	; 0x1b3
 800bd4c:	f000 fcca 	bl	800c6e4 <__assert_func>
 800bd50:	e9c0 4401 	strd	r4, r4, [r0, #4]
 800bd54:	6004      	str	r4, [r0, #0]
 800bd56:	60c4      	str	r4, [r0, #12]
 800bd58:	f8d6 801c 	ldr.w	r8, [r6, #28]
 800bd5c:	f8d8 4008 	ldr.w	r4, [r8, #8]
 800bd60:	b94c      	cbnz	r4, 800bd76 <__pow5mult+0x66>
 800bd62:	f240 2171 	movw	r1, #625	; 0x271
 800bd66:	4630      	mov	r0, r6
 800bd68:	f7ff ff12 	bl	800bb90 <__i2b>
 800bd6c:	2300      	movs	r3, #0
 800bd6e:	f8c8 0008 	str.w	r0, [r8, #8]
 800bd72:	4604      	mov	r4, r0
 800bd74:	6003      	str	r3, [r0, #0]
 800bd76:	f04f 0900 	mov.w	r9, #0
 800bd7a:	07eb      	lsls	r3, r5, #31
 800bd7c:	d50a      	bpl.n	800bd94 <__pow5mult+0x84>
 800bd7e:	4639      	mov	r1, r7
 800bd80:	4622      	mov	r2, r4
 800bd82:	4630      	mov	r0, r6
 800bd84:	f7ff ff1a 	bl	800bbbc <__multiply>
 800bd88:	4639      	mov	r1, r7
 800bd8a:	4680      	mov	r8, r0
 800bd8c:	4630      	mov	r0, r6
 800bd8e:	f7ff fdff 	bl	800b990 <_Bfree>
 800bd92:	4647      	mov	r7, r8
 800bd94:	106d      	asrs	r5, r5, #1
 800bd96:	d00b      	beq.n	800bdb0 <__pow5mult+0xa0>
 800bd98:	6820      	ldr	r0, [r4, #0]
 800bd9a:	b938      	cbnz	r0, 800bdac <__pow5mult+0x9c>
 800bd9c:	4622      	mov	r2, r4
 800bd9e:	4621      	mov	r1, r4
 800bda0:	4630      	mov	r0, r6
 800bda2:	f7ff ff0b 	bl	800bbbc <__multiply>
 800bda6:	6020      	str	r0, [r4, #0]
 800bda8:	f8c0 9000 	str.w	r9, [r0]
 800bdac:	4604      	mov	r4, r0
 800bdae:	e7e4      	b.n	800bd7a <__pow5mult+0x6a>
 800bdb0:	4638      	mov	r0, r7
 800bdb2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 800bdb6:	bf00      	nop
 800bdb8:	0800d730 	.word	0x0800d730
 800bdbc:	0800d507 	.word	0x0800d507
 800bdc0:	0800d5e7 	.word	0x0800d5e7

0800bdc4 <__lshift>:
 800bdc4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800bdc8:	460c      	mov	r4, r1
 800bdca:	6849      	ldr	r1, [r1, #4]
 800bdcc:	6923      	ldr	r3, [r4, #16]
 800bdce:	eb03 1862 	add.w	r8, r3, r2, asr #5
 800bdd2:	68a3      	ldr	r3, [r4, #8]
 800bdd4:	4607      	mov	r7, r0
 800bdd6:	4691      	mov	r9, r2
 800bdd8:	ea4f 1a62 	mov.w	sl, r2, asr #5
 800bddc:	f108 0601 	add.w	r6, r8, #1
 800bde0:	42b3      	cmp	r3, r6
 800bde2:	db0b      	blt.n	800bdfc <__lshift+0x38>
 800bde4:	4638      	mov	r0, r7
 800bde6:	f7ff fd93 	bl	800b910 <_Balloc>
 800bdea:	4605      	mov	r5, r0
 800bdec:	b948      	cbnz	r0, 800be02 <__lshift+0x3e>
 800bdee:	4602      	mov	r2, r0
 800bdf0:	4b28      	ldr	r3, [pc, #160]	; (800be94 <__lshift+0xd0>)
 800bdf2:	4829      	ldr	r0, [pc, #164]	; (800be98 <__lshift+0xd4>)
 800bdf4:	f44f 71ef 	mov.w	r1, #478	; 0x1de
 800bdf8:	f000 fc74 	bl	800c6e4 <__assert_func>
 800bdfc:	3101      	adds	r1, #1
 800bdfe:	005b      	lsls	r3, r3, #1
 800be00:	e7ee      	b.n	800bde0 <__lshift+0x1c>
 800be02:	2300      	movs	r3, #0
 800be04:	f100 0114 	add.w	r1, r0, #20
 800be08:	f100 0210 	add.w	r2, r0, #16
 800be0c:	4618      	mov	r0, r3
 800be0e:	4553      	cmp	r3, sl
 800be10:	db33      	blt.n	800be7a <__lshift+0xb6>
 800be12:	6920      	ldr	r0, [r4, #16]
 800be14:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 800be18:	f104 0314 	add.w	r3, r4, #20
 800be1c:	f019 091f 	ands.w	r9, r9, #31
 800be20:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 800be24:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 800be28:	d02b      	beq.n	800be82 <__lshift+0xbe>
 800be2a:	f1c9 0e20 	rsb	lr, r9, #32
 800be2e:	468a      	mov	sl, r1
 800be30:	2200      	movs	r2, #0
 800be32:	6818      	ldr	r0, [r3, #0]
 800be34:	fa00 f009 	lsl.w	r0, r0, r9
 800be38:	4310      	orrs	r0, r2
 800be3a:	f84a 0b04 	str.w	r0, [sl], #4
 800be3e:	f853 2b04 	ldr.w	r2, [r3], #4
 800be42:	459c      	cmp	ip, r3
 800be44:	fa22 f20e 	lsr.w	r2, r2, lr
 800be48:	d8f3      	bhi.n	800be32 <__lshift+0x6e>
 800be4a:	ebac 0304 	sub.w	r3, ip, r4
 800be4e:	3b15      	subs	r3, #21
 800be50:	f023 0303 	bic.w	r3, r3, #3
 800be54:	3304      	adds	r3, #4
 800be56:	f104 0015 	add.w	r0, r4, #21
 800be5a:	4584      	cmp	ip, r0
 800be5c:	bf38      	it	cc
 800be5e:	2304      	movcc	r3, #4
 800be60:	50ca      	str	r2, [r1, r3]
 800be62:	b10a      	cbz	r2, 800be68 <__lshift+0xa4>
 800be64:	f108 0602 	add.w	r6, r8, #2
 800be68:	3e01      	subs	r6, #1
 800be6a:	4638      	mov	r0, r7
 800be6c:	612e      	str	r6, [r5, #16]
 800be6e:	4621      	mov	r1, r4
 800be70:	f7ff fd8e 	bl	800b990 <_Bfree>
 800be74:	4628      	mov	r0, r5
 800be76:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800be7a:	f842 0f04 	str.w	r0, [r2, #4]!
 800be7e:	3301      	adds	r3, #1
 800be80:	e7c5      	b.n	800be0e <__lshift+0x4a>
 800be82:	3904      	subs	r1, #4
 800be84:	f853 2b04 	ldr.w	r2, [r3], #4
 800be88:	f841 2f04 	str.w	r2, [r1, #4]!
 800be8c:	459c      	cmp	ip, r3
 800be8e:	d8f9      	bhi.n	800be84 <__lshift+0xc0>
 800be90:	e7ea      	b.n	800be68 <__lshift+0xa4>
 800be92:	bf00      	nop
 800be94:	0800d576 	.word	0x0800d576
 800be98:	0800d5e7 	.word	0x0800d5e7

0800be9c <__mcmp>:
 800be9c:	b530      	push	{r4, r5, lr}
 800be9e:	6902      	ldr	r2, [r0, #16]
 800bea0:	690c      	ldr	r4, [r1, #16]
 800bea2:	1b12      	subs	r2, r2, r4
 800bea4:	d10e      	bne.n	800bec4 <__mcmp+0x28>
 800bea6:	f100 0314 	add.w	r3, r0, #20
 800beaa:	3114      	adds	r1, #20
 800beac:	eb03 0084 	add.w	r0, r3, r4, lsl #2
 800beb0:	eb01 0184 	add.w	r1, r1, r4, lsl #2
 800beb4:	f850 5d04 	ldr.w	r5, [r0, #-4]!
 800beb8:	f851 4d04 	ldr.w	r4, [r1, #-4]!
 800bebc:	42a5      	cmp	r5, r4
 800bebe:	d003      	beq.n	800bec8 <__mcmp+0x2c>
 800bec0:	d305      	bcc.n	800bece <__mcmp+0x32>
 800bec2:	2201      	movs	r2, #1
 800bec4:	4610      	mov	r0, r2
 800bec6:	bd30      	pop	{r4, r5, pc}
 800bec8:	4283      	cmp	r3, r0
 800beca:	d3f3      	bcc.n	800beb4 <__mcmp+0x18>
 800becc:	e7fa      	b.n	800bec4 <__mcmp+0x28>
 800bece:	f04f 32ff 	mov.w	r2, #4294967295
 800bed2:	e7f7      	b.n	800bec4 <__mcmp+0x28>

0800bed4 <__mdiff>:
 800bed4:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800bed8:	460c      	mov	r4, r1
 800beda:	4606      	mov	r6, r0
 800bedc:	4611      	mov	r1, r2
 800bede:	4620      	mov	r0, r4
 800bee0:	4690      	mov	r8, r2
 800bee2:	f7ff ffdb 	bl	800be9c <__mcmp>
 800bee6:	1e05      	subs	r5, r0, #0
 800bee8:	d110      	bne.n	800bf0c <__mdiff+0x38>
 800beea:	4629      	mov	r1, r5
 800beec:	4630      	mov	r0, r6
 800beee:	f7ff fd0f 	bl	800b910 <_Balloc>
 800bef2:	b930      	cbnz	r0, 800bf02 <__mdiff+0x2e>
 800bef4:	4b3a      	ldr	r3, [pc, #232]	; (800bfe0 <__mdiff+0x10c>)
 800bef6:	4602      	mov	r2, r0
 800bef8:	f240 2137 	movw	r1, #567	; 0x237
 800befc:	4839      	ldr	r0, [pc, #228]	; (800bfe4 <__mdiff+0x110>)
 800befe:	f000 fbf1 	bl	800c6e4 <__assert_func>
 800bf02:	2301      	movs	r3, #1
 800bf04:	e9c0 3504 	strd	r3, r5, [r0, #16]
 800bf08:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800bf0c:	bfa4      	itt	ge
 800bf0e:	4643      	movge	r3, r8
 800bf10:	46a0      	movge	r8, r4
 800bf12:	4630      	mov	r0, r6
 800bf14:	f8d8 1004 	ldr.w	r1, [r8, #4]
 800bf18:	bfa6      	itte	ge
 800bf1a:	461c      	movge	r4, r3
 800bf1c:	2500      	movge	r5, #0
 800bf1e:	2501      	movlt	r5, #1
 800bf20:	f7ff fcf6 	bl	800b910 <_Balloc>
 800bf24:	b920      	cbnz	r0, 800bf30 <__mdiff+0x5c>
 800bf26:	4b2e      	ldr	r3, [pc, #184]	; (800bfe0 <__mdiff+0x10c>)
 800bf28:	4602      	mov	r2, r0
 800bf2a:	f240 2145 	movw	r1, #581	; 0x245
 800bf2e:	e7e5      	b.n	800befc <__mdiff+0x28>
 800bf30:	f8d8 7010 	ldr.w	r7, [r8, #16]
 800bf34:	6926      	ldr	r6, [r4, #16]
 800bf36:	60c5      	str	r5, [r0, #12]
 800bf38:	f104 0914 	add.w	r9, r4, #20
 800bf3c:	f108 0514 	add.w	r5, r8, #20
 800bf40:	f100 0e14 	add.w	lr, r0, #20
 800bf44:	eb05 0c87 	add.w	ip, r5, r7, lsl #2
 800bf48:	eb09 0686 	add.w	r6, r9, r6, lsl #2
 800bf4c:	f108 0210 	add.w	r2, r8, #16
 800bf50:	46f2      	mov	sl, lr
 800bf52:	2100      	movs	r1, #0
 800bf54:	f859 3b04 	ldr.w	r3, [r9], #4
 800bf58:	f852 bf04 	ldr.w	fp, [r2, #4]!
 800bf5c:	fa11 f88b 	uxtah	r8, r1, fp
 800bf60:	b299      	uxth	r1, r3
 800bf62:	0c1b      	lsrs	r3, r3, #16
 800bf64:	eba8 0801 	sub.w	r8, r8, r1
 800bf68:	ebc3 431b 	rsb	r3, r3, fp, lsr #16
 800bf6c:	eb03 4328 	add.w	r3, r3, r8, asr #16
 800bf70:	fa1f f888 	uxth.w	r8, r8
 800bf74:	1419      	asrs	r1, r3, #16
 800bf76:	454e      	cmp	r6, r9
 800bf78:	ea48 4303 	orr.w	r3, r8, r3, lsl #16
 800bf7c:	f84a 3b04 	str.w	r3, [sl], #4
 800bf80:	d8e8      	bhi.n	800bf54 <__mdiff+0x80>
 800bf82:	1b33      	subs	r3, r6, r4
 800bf84:	3b15      	subs	r3, #21
 800bf86:	f023 0303 	bic.w	r3, r3, #3
 800bf8a:	3304      	adds	r3, #4
 800bf8c:	3415      	adds	r4, #21
 800bf8e:	42a6      	cmp	r6, r4
 800bf90:	bf38      	it	cc
 800bf92:	2304      	movcc	r3, #4
 800bf94:	441d      	add	r5, r3
 800bf96:	4473      	add	r3, lr
 800bf98:	469e      	mov	lr, r3
 800bf9a:	462e      	mov	r6, r5
 800bf9c:	4566      	cmp	r6, ip
 800bf9e:	d30e      	bcc.n	800bfbe <__mdiff+0xea>
 800bfa0:	f10c 0203 	add.w	r2, ip, #3
 800bfa4:	1b52      	subs	r2, r2, r5
 800bfa6:	f022 0203 	bic.w	r2, r2, #3
 800bfaa:	3d03      	subs	r5, #3
 800bfac:	45ac      	cmp	ip, r5
 800bfae:	bf38      	it	cc
 800bfb0:	2200      	movcc	r2, #0
 800bfb2:	4413      	add	r3, r2
 800bfb4:	f853 2d04 	ldr.w	r2, [r3, #-4]!
 800bfb8:	b17a      	cbz	r2, 800bfda <__mdiff+0x106>
 800bfba:	6107      	str	r7, [r0, #16]
 800bfbc:	e7a4      	b.n	800bf08 <__mdiff+0x34>
 800bfbe:	f856 8b04 	ldr.w	r8, [r6], #4
 800bfc2:	fa11 f288 	uxtah	r2, r1, r8
 800bfc6:	1414      	asrs	r4, r2, #16
 800bfc8:	eb04 4418 	add.w	r4, r4, r8, lsr #16
 800bfcc:	b292      	uxth	r2, r2
 800bfce:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
 800bfd2:	f84e 2b04 	str.w	r2, [lr], #4
 800bfd6:	1421      	asrs	r1, r4, #16
 800bfd8:	e7e0      	b.n	800bf9c <__mdiff+0xc8>
 800bfda:	3f01      	subs	r7, #1
 800bfdc:	e7ea      	b.n	800bfb4 <__mdiff+0xe0>
 800bfde:	bf00      	nop
 800bfe0:	0800d576 	.word	0x0800d576
 800bfe4:	0800d5e7 	.word	0x0800d5e7

0800bfe8 <__ulp>:
 800bfe8:	b082      	sub	sp, #8
 800bfea:	ed8d 0b00 	vstr	d0, [sp]
 800bfee:	9a01      	ldr	r2, [sp, #4]
 800bff0:	4b0f      	ldr	r3, [pc, #60]	; (800c030 <__ulp+0x48>)
 800bff2:	4013      	ands	r3, r2
 800bff4:	f1a3 7350 	sub.w	r3, r3, #54525952	; 0x3400000
 800bff8:	2b00      	cmp	r3, #0
 800bffa:	dc08      	bgt.n	800c00e <__ulp+0x26>
 800bffc:	425b      	negs	r3, r3
 800bffe:	f1b3 7fa0 	cmp.w	r3, #20971520	; 0x1400000
 800c002:	ea4f 5223 	mov.w	r2, r3, asr #20
 800c006:	da04      	bge.n	800c012 <__ulp+0x2a>
 800c008:	f44f 2300 	mov.w	r3, #524288	; 0x80000
 800c00c:	4113      	asrs	r3, r2
 800c00e:	2200      	movs	r2, #0
 800c010:	e008      	b.n	800c024 <__ulp+0x3c>
 800c012:	f1a2 0314 	sub.w	r3, r2, #20
 800c016:	2b1e      	cmp	r3, #30
 800c018:	bfda      	itte	le
 800c01a:	f04f 4200 	movle.w	r2, #2147483648	; 0x80000000
 800c01e:	40da      	lsrle	r2, r3
 800c020:	2201      	movgt	r2, #1
 800c022:	2300      	movs	r3, #0
 800c024:	4619      	mov	r1, r3
 800c026:	4610      	mov	r0, r2
 800c028:	ec41 0b10 	vmov	d0, r0, r1
 800c02c:	b002      	add	sp, #8
 800c02e:	4770      	bx	lr
 800c030:	7ff00000 	.word	0x7ff00000

0800c034 <__b2d>:
 800c034:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c038:	6906      	ldr	r6, [r0, #16]
 800c03a:	f100 0814 	add.w	r8, r0, #20
 800c03e:	eb08 0686 	add.w	r6, r8, r6, lsl #2
 800c042:	1f37      	subs	r7, r6, #4
 800c044:	f856 2c04 	ldr.w	r2, [r6, #-4]
 800c048:	4610      	mov	r0, r2
 800c04a:	f7ff fd53 	bl	800baf4 <__hi0bits>
 800c04e:	f1c0 0320 	rsb	r3, r0, #32
 800c052:	280a      	cmp	r0, #10
 800c054:	600b      	str	r3, [r1, #0]
 800c056:	491b      	ldr	r1, [pc, #108]	; (800c0c4 <__b2d+0x90>)
 800c058:	dc15      	bgt.n	800c086 <__b2d+0x52>
 800c05a:	f1c0 0c0b 	rsb	ip, r0, #11
 800c05e:	fa22 f30c 	lsr.w	r3, r2, ip
 800c062:	45b8      	cmp	r8, r7
 800c064:	ea43 0501 	orr.w	r5, r3, r1
 800c068:	bf34      	ite	cc
 800c06a:	f856 3c08 	ldrcc.w	r3, [r6, #-8]
 800c06e:	2300      	movcs	r3, #0
 800c070:	3015      	adds	r0, #21
 800c072:	fa02 f000 	lsl.w	r0, r2, r0
 800c076:	fa23 f30c 	lsr.w	r3, r3, ip
 800c07a:	4303      	orrs	r3, r0
 800c07c:	461c      	mov	r4, r3
 800c07e:	ec45 4b10 	vmov	d0, r4, r5
 800c082:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c086:	45b8      	cmp	r8, r7
 800c088:	bf3a      	itte	cc
 800c08a:	f856 3c08 	ldrcc.w	r3, [r6, #-8]
 800c08e:	f1a6 0708 	subcc.w	r7, r6, #8
 800c092:	2300      	movcs	r3, #0
 800c094:	380b      	subs	r0, #11
 800c096:	d012      	beq.n	800c0be <__b2d+0x8a>
 800c098:	f1c0 0120 	rsb	r1, r0, #32
 800c09c:	fa23 f401 	lsr.w	r4, r3, r1
 800c0a0:	4082      	lsls	r2, r0
 800c0a2:	4322      	orrs	r2, r4
 800c0a4:	4547      	cmp	r7, r8
 800c0a6:	f042 557f 	orr.w	r5, r2, #1069547520	; 0x3fc00000
 800c0aa:	bf8c      	ite	hi
 800c0ac:	f857 2c04 	ldrhi.w	r2, [r7, #-4]
 800c0b0:	2200      	movls	r2, #0
 800c0b2:	4083      	lsls	r3, r0
 800c0b4:	40ca      	lsrs	r2, r1
 800c0b6:	f445 1540 	orr.w	r5, r5, #3145728	; 0x300000
 800c0ba:	4313      	orrs	r3, r2
 800c0bc:	e7de      	b.n	800c07c <__b2d+0x48>
 800c0be:	ea42 0501 	orr.w	r5, r2, r1
 800c0c2:	e7db      	b.n	800c07c <__b2d+0x48>
 800c0c4:	3ff00000 	.word	0x3ff00000

0800c0c8 <__d2b>:
 800c0c8:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 800c0cc:	460f      	mov	r7, r1
 800c0ce:	2101      	movs	r1, #1
 800c0d0:	ec59 8b10 	vmov	r8, r9, d0
 800c0d4:	4616      	mov	r6, r2
 800c0d6:	f7ff fc1b 	bl	800b910 <_Balloc>
 800c0da:	4604      	mov	r4, r0
 800c0dc:	b930      	cbnz	r0, 800c0ec <__d2b+0x24>
 800c0de:	4602      	mov	r2, r0
 800c0e0:	4b24      	ldr	r3, [pc, #144]	; (800c174 <__d2b+0xac>)
 800c0e2:	4825      	ldr	r0, [pc, #148]	; (800c178 <__d2b+0xb0>)
 800c0e4:	f240 310f 	movw	r1, #783	; 0x30f
 800c0e8:	f000 fafc 	bl	800c6e4 <__assert_func>
 800c0ec:	f3c9 550a 	ubfx	r5, r9, #20, #11
 800c0f0:	f3c9 0313 	ubfx	r3, r9, #0, #20
 800c0f4:	bb2d      	cbnz	r5, 800c142 <__d2b+0x7a>
 800c0f6:	9301      	str	r3, [sp, #4]
 800c0f8:	f1b8 0300 	subs.w	r3, r8, #0
 800c0fc:	d026      	beq.n	800c14c <__d2b+0x84>
 800c0fe:	4668      	mov	r0, sp
 800c100:	9300      	str	r3, [sp, #0]
 800c102:	f7ff fd17 	bl	800bb34 <__lo0bits>
 800c106:	e9dd 1200 	ldrd	r1, r2, [sp]
 800c10a:	b1e8      	cbz	r0, 800c148 <__d2b+0x80>
 800c10c:	f1c0 0320 	rsb	r3, r0, #32
 800c110:	fa02 f303 	lsl.w	r3, r2, r3
 800c114:	430b      	orrs	r3, r1
 800c116:	40c2      	lsrs	r2, r0
 800c118:	6163      	str	r3, [r4, #20]
 800c11a:	9201      	str	r2, [sp, #4]
 800c11c:	9b01      	ldr	r3, [sp, #4]
 800c11e:	61a3      	str	r3, [r4, #24]
 800c120:	2b00      	cmp	r3, #0
 800c122:	bf14      	ite	ne
 800c124:	2202      	movne	r2, #2
 800c126:	2201      	moveq	r2, #1
 800c128:	6122      	str	r2, [r4, #16]
 800c12a:	b1bd      	cbz	r5, 800c15c <__d2b+0x94>
 800c12c:	f2a5 4533 	subw	r5, r5, #1075	; 0x433
 800c130:	4405      	add	r5, r0
 800c132:	603d      	str	r5, [r7, #0]
 800c134:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
 800c138:	6030      	str	r0, [r6, #0]
 800c13a:	4620      	mov	r0, r4
 800c13c:	b003      	add	sp, #12
 800c13e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800c142:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 800c146:	e7d6      	b.n	800c0f6 <__d2b+0x2e>
 800c148:	6161      	str	r1, [r4, #20]
 800c14a:	e7e7      	b.n	800c11c <__d2b+0x54>
 800c14c:	a801      	add	r0, sp, #4
 800c14e:	f7ff fcf1 	bl	800bb34 <__lo0bits>
 800c152:	9b01      	ldr	r3, [sp, #4]
 800c154:	6163      	str	r3, [r4, #20]
 800c156:	3020      	adds	r0, #32
 800c158:	2201      	movs	r2, #1
 800c15a:	e7e5      	b.n	800c128 <__d2b+0x60>
 800c15c:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 800c160:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
 800c164:	6038      	str	r0, [r7, #0]
 800c166:	6918      	ldr	r0, [r3, #16]
 800c168:	f7ff fcc4 	bl	800baf4 <__hi0bits>
 800c16c:	ebc0 1042 	rsb	r0, r0, r2, lsl #5
 800c170:	e7e2      	b.n	800c138 <__d2b+0x70>
 800c172:	bf00      	nop
 800c174:	0800d576 	.word	0x0800d576
 800c178:	0800d5e7 	.word	0x0800d5e7

0800c17c <__ratio>:
 800c17c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c180:	4688      	mov	r8, r1
 800c182:	4669      	mov	r1, sp
 800c184:	4681      	mov	r9, r0
 800c186:	f7ff ff55 	bl	800c034 <__b2d>
 800c18a:	a901      	add	r1, sp, #4
 800c18c:	4640      	mov	r0, r8
 800c18e:	ec55 4b10 	vmov	r4, r5, d0
 800c192:	f7ff ff4f 	bl	800c034 <__b2d>
 800c196:	f8d9 3010 	ldr.w	r3, [r9, #16]
 800c19a:	f8d8 2010 	ldr.w	r2, [r8, #16]
 800c19e:	eba3 0c02 	sub.w	ip, r3, r2
 800c1a2:	e9dd 3200 	ldrd	r3, r2, [sp]
 800c1a6:	1a9b      	subs	r3, r3, r2
 800c1a8:	eb03 134c 	add.w	r3, r3, ip, lsl #5
 800c1ac:	ec51 0b10 	vmov	r0, r1, d0
 800c1b0:	2b00      	cmp	r3, #0
 800c1b2:	bfd6      	itet	le
 800c1b4:	460a      	movle	r2, r1
 800c1b6:	462a      	movgt	r2, r5
 800c1b8:	ebc3 3303 	rsble	r3, r3, r3, lsl #12
 800c1bc:	468b      	mov	fp, r1
 800c1be:	462f      	mov	r7, r5
 800c1c0:	bfd4      	ite	le
 800c1c2:	eb02 5b03 	addle.w	fp, r2, r3, lsl #20
 800c1c6:	eb02 5703 	addgt.w	r7, r2, r3, lsl #20
 800c1ca:	4620      	mov	r0, r4
 800c1cc:	ee10 2a10 	vmov	r2, s0
 800c1d0:	465b      	mov	r3, fp
 800c1d2:	4639      	mov	r1, r7
 800c1d4:	f7f4 fb42 	bl	800085c <__aeabi_ddiv>
 800c1d8:	ec41 0b10 	vmov	d0, r0, r1
 800c1dc:	b003      	add	sp, #12
 800c1de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800c1e2 <__copybits>:
 800c1e2:	3901      	subs	r1, #1
 800c1e4:	b570      	push	{r4, r5, r6, lr}
 800c1e6:	1149      	asrs	r1, r1, #5
 800c1e8:	6914      	ldr	r4, [r2, #16]
 800c1ea:	3101      	adds	r1, #1
 800c1ec:	f102 0314 	add.w	r3, r2, #20
 800c1f0:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 800c1f4:	eb03 0484 	add.w	r4, r3, r4, lsl #2
 800c1f8:	1f05      	subs	r5, r0, #4
 800c1fa:	42a3      	cmp	r3, r4
 800c1fc:	d30c      	bcc.n	800c218 <__copybits+0x36>
 800c1fe:	1aa3      	subs	r3, r4, r2
 800c200:	3b11      	subs	r3, #17
 800c202:	f023 0303 	bic.w	r3, r3, #3
 800c206:	3211      	adds	r2, #17
 800c208:	42a2      	cmp	r2, r4
 800c20a:	bf88      	it	hi
 800c20c:	2300      	movhi	r3, #0
 800c20e:	4418      	add	r0, r3
 800c210:	2300      	movs	r3, #0
 800c212:	4288      	cmp	r0, r1
 800c214:	d305      	bcc.n	800c222 <__copybits+0x40>
 800c216:	bd70      	pop	{r4, r5, r6, pc}
 800c218:	f853 6b04 	ldr.w	r6, [r3], #4
 800c21c:	f845 6f04 	str.w	r6, [r5, #4]!
 800c220:	e7eb      	b.n	800c1fa <__copybits+0x18>
 800c222:	f840 3b04 	str.w	r3, [r0], #4
 800c226:	e7f4      	b.n	800c212 <__copybits+0x30>

0800c228 <__any_on>:
 800c228:	f100 0214 	add.w	r2, r0, #20
 800c22c:	6900      	ldr	r0, [r0, #16]
 800c22e:	114b      	asrs	r3, r1, #5
 800c230:	4298      	cmp	r0, r3
 800c232:	b510      	push	{r4, lr}
 800c234:	db11      	blt.n	800c25a <__any_on+0x32>
 800c236:	dd0a      	ble.n	800c24e <__any_on+0x26>
 800c238:	f011 011f 	ands.w	r1, r1, #31
 800c23c:	d007      	beq.n	800c24e <__any_on+0x26>
 800c23e:	f852 4023 	ldr.w	r4, [r2, r3, lsl #2]
 800c242:	fa24 f001 	lsr.w	r0, r4, r1
 800c246:	fa00 f101 	lsl.w	r1, r0, r1
 800c24a:	428c      	cmp	r4, r1
 800c24c:	d10b      	bne.n	800c266 <__any_on+0x3e>
 800c24e:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 800c252:	4293      	cmp	r3, r2
 800c254:	d803      	bhi.n	800c25e <__any_on+0x36>
 800c256:	2000      	movs	r0, #0
 800c258:	bd10      	pop	{r4, pc}
 800c25a:	4603      	mov	r3, r0
 800c25c:	e7f7      	b.n	800c24e <__any_on+0x26>
 800c25e:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 800c262:	2900      	cmp	r1, #0
 800c264:	d0f5      	beq.n	800c252 <__any_on+0x2a>
 800c266:	2001      	movs	r0, #1
 800c268:	e7f6      	b.n	800c258 <__any_on+0x30>

0800c26a <__ascii_wctomb>:
 800c26a:	b149      	cbz	r1, 800c280 <__ascii_wctomb+0x16>
 800c26c:	2aff      	cmp	r2, #255	; 0xff
 800c26e:	bf85      	ittet	hi
 800c270:	238a      	movhi	r3, #138	; 0x8a
 800c272:	6003      	strhi	r3, [r0, #0]
 800c274:	700a      	strbls	r2, [r1, #0]
 800c276:	f04f 30ff 	movhi.w	r0, #4294967295
 800c27a:	bf98      	it	ls
 800c27c:	2001      	movls	r0, #1
 800c27e:	4770      	bx	lr
 800c280:	4608      	mov	r0, r1
 800c282:	4770      	bx	lr

0800c284 <__ssputs_r>:
 800c284:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800c288:	688e      	ldr	r6, [r1, #8]
 800c28a:	461f      	mov	r7, r3
 800c28c:	42be      	cmp	r6, r7
 800c28e:	680b      	ldr	r3, [r1, #0]
 800c290:	4682      	mov	sl, r0
 800c292:	460c      	mov	r4, r1
 800c294:	4690      	mov	r8, r2
 800c296:	d82c      	bhi.n	800c2f2 <__ssputs_r+0x6e>
 800c298:	898a      	ldrh	r2, [r1, #12]
 800c29a:	f412 6f90 	tst.w	r2, #1152	; 0x480
 800c29e:	d026      	beq.n	800c2ee <__ssputs_r+0x6a>
 800c2a0:	6965      	ldr	r5, [r4, #20]
 800c2a2:	6909      	ldr	r1, [r1, #16]
 800c2a4:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 800c2a8:	eba3 0901 	sub.w	r9, r3, r1
 800c2ac:	eb05 75d5 	add.w	r5, r5, r5, lsr #31
 800c2b0:	1c7b      	adds	r3, r7, #1
 800c2b2:	444b      	add	r3, r9
 800c2b4:	106d      	asrs	r5, r5, #1
 800c2b6:	429d      	cmp	r5, r3
 800c2b8:	bf38      	it	cc
 800c2ba:	461d      	movcc	r5, r3
 800c2bc:	0553      	lsls	r3, r2, #21
 800c2be:	d527      	bpl.n	800c310 <__ssputs_r+0x8c>
 800c2c0:	4629      	mov	r1, r5
 800c2c2:	f7ff fa87 	bl	800b7d4 <_malloc_r>
 800c2c6:	4606      	mov	r6, r0
 800c2c8:	b360      	cbz	r0, 800c324 <__ssputs_r+0xa0>
 800c2ca:	6921      	ldr	r1, [r4, #16]
 800c2cc:	464a      	mov	r2, r9
 800c2ce:	f7fe f81a 	bl	800a306 <memcpy>
 800c2d2:	89a3      	ldrh	r3, [r4, #12]
 800c2d4:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 800c2d8:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800c2dc:	81a3      	strh	r3, [r4, #12]
 800c2de:	6126      	str	r6, [r4, #16]
 800c2e0:	6165      	str	r5, [r4, #20]
 800c2e2:	444e      	add	r6, r9
 800c2e4:	eba5 0509 	sub.w	r5, r5, r9
 800c2e8:	6026      	str	r6, [r4, #0]
 800c2ea:	60a5      	str	r5, [r4, #8]
 800c2ec:	463e      	mov	r6, r7
 800c2ee:	42be      	cmp	r6, r7
 800c2f0:	d900      	bls.n	800c2f4 <__ssputs_r+0x70>
 800c2f2:	463e      	mov	r6, r7
 800c2f4:	6820      	ldr	r0, [r4, #0]
 800c2f6:	4632      	mov	r2, r6
 800c2f8:	4641      	mov	r1, r8
 800c2fa:	f000 f9c9 	bl	800c690 <memmove>
 800c2fe:	68a3      	ldr	r3, [r4, #8]
 800c300:	1b9b      	subs	r3, r3, r6
 800c302:	60a3      	str	r3, [r4, #8]
 800c304:	6823      	ldr	r3, [r4, #0]
 800c306:	4433      	add	r3, r6
 800c308:	6023      	str	r3, [r4, #0]
 800c30a:	2000      	movs	r0, #0
 800c30c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800c310:	462a      	mov	r2, r5
 800c312:	f000 fa1b 	bl	800c74c <_realloc_r>
 800c316:	4606      	mov	r6, r0
 800c318:	2800      	cmp	r0, #0
 800c31a:	d1e0      	bne.n	800c2de <__ssputs_r+0x5a>
 800c31c:	6921      	ldr	r1, [r4, #16]
 800c31e:	4650      	mov	r0, sl
 800c320:	f7fe fe8c 	bl	800b03c <_free_r>
 800c324:	230c      	movs	r3, #12
 800c326:	f8ca 3000 	str.w	r3, [sl]
 800c32a:	89a3      	ldrh	r3, [r4, #12]
 800c32c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800c330:	81a3      	strh	r3, [r4, #12]
 800c332:	f04f 30ff 	mov.w	r0, #4294967295
 800c336:	e7e9      	b.n	800c30c <__ssputs_r+0x88>

0800c338 <_svfiprintf_r>:
 800c338:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c33c:	4698      	mov	r8, r3
 800c33e:	898b      	ldrh	r3, [r1, #12]
 800c340:	061b      	lsls	r3, r3, #24
 800c342:	b09d      	sub	sp, #116	; 0x74
 800c344:	4607      	mov	r7, r0
 800c346:	460d      	mov	r5, r1
 800c348:	4614      	mov	r4, r2
 800c34a:	d50e      	bpl.n	800c36a <_svfiprintf_r+0x32>
 800c34c:	690b      	ldr	r3, [r1, #16]
 800c34e:	b963      	cbnz	r3, 800c36a <_svfiprintf_r+0x32>
 800c350:	2140      	movs	r1, #64	; 0x40
 800c352:	f7ff fa3f 	bl	800b7d4 <_malloc_r>
 800c356:	6028      	str	r0, [r5, #0]
 800c358:	6128      	str	r0, [r5, #16]
 800c35a:	b920      	cbnz	r0, 800c366 <_svfiprintf_r+0x2e>
 800c35c:	230c      	movs	r3, #12
 800c35e:	603b      	str	r3, [r7, #0]
 800c360:	f04f 30ff 	mov.w	r0, #4294967295
 800c364:	e0d0      	b.n	800c508 <_svfiprintf_r+0x1d0>
 800c366:	2340      	movs	r3, #64	; 0x40
 800c368:	616b      	str	r3, [r5, #20]
 800c36a:	2300      	movs	r3, #0
 800c36c:	9309      	str	r3, [sp, #36]	; 0x24
 800c36e:	2320      	movs	r3, #32
 800c370:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800c374:	f8cd 800c 	str.w	r8, [sp, #12]
 800c378:	2330      	movs	r3, #48	; 0x30
 800c37a:	f8df 81a4 	ldr.w	r8, [pc, #420]	; 800c520 <_svfiprintf_r+0x1e8>
 800c37e:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 800c382:	f04f 0901 	mov.w	r9, #1
 800c386:	4623      	mov	r3, r4
 800c388:	469a      	mov	sl, r3
 800c38a:	f813 2b01 	ldrb.w	r2, [r3], #1
 800c38e:	b10a      	cbz	r2, 800c394 <_svfiprintf_r+0x5c>
 800c390:	2a25      	cmp	r2, #37	; 0x25
 800c392:	d1f9      	bne.n	800c388 <_svfiprintf_r+0x50>
 800c394:	ebba 0b04 	subs.w	fp, sl, r4
 800c398:	d00b      	beq.n	800c3b2 <_svfiprintf_r+0x7a>
 800c39a:	465b      	mov	r3, fp
 800c39c:	4622      	mov	r2, r4
 800c39e:	4629      	mov	r1, r5
 800c3a0:	4638      	mov	r0, r7
 800c3a2:	f7ff ff6f 	bl	800c284 <__ssputs_r>
 800c3a6:	3001      	adds	r0, #1
 800c3a8:	f000 80a9 	beq.w	800c4fe <_svfiprintf_r+0x1c6>
 800c3ac:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800c3ae:	445a      	add	r2, fp
 800c3b0:	9209      	str	r2, [sp, #36]	; 0x24
 800c3b2:	f89a 3000 	ldrb.w	r3, [sl]
 800c3b6:	2b00      	cmp	r3, #0
 800c3b8:	f000 80a1 	beq.w	800c4fe <_svfiprintf_r+0x1c6>
 800c3bc:	2300      	movs	r3, #0
 800c3be:	f04f 32ff 	mov.w	r2, #4294967295
 800c3c2:	e9cd 2305 	strd	r2, r3, [sp, #20]
 800c3c6:	f10a 0a01 	add.w	sl, sl, #1
 800c3ca:	9304      	str	r3, [sp, #16]
 800c3cc:	9307      	str	r3, [sp, #28]
 800c3ce:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 800c3d2:	931a      	str	r3, [sp, #104]	; 0x68
 800c3d4:	4654      	mov	r4, sl
 800c3d6:	2205      	movs	r2, #5
 800c3d8:	f814 1b01 	ldrb.w	r1, [r4], #1
 800c3dc:	4850      	ldr	r0, [pc, #320]	; (800c520 <_svfiprintf_r+0x1e8>)
 800c3de:	f7f3 feff 	bl	80001e0 <memchr>
 800c3e2:	9a04      	ldr	r2, [sp, #16]
 800c3e4:	b9d8      	cbnz	r0, 800c41e <_svfiprintf_r+0xe6>
 800c3e6:	06d0      	lsls	r0, r2, #27
 800c3e8:	bf44      	itt	mi
 800c3ea:	2320      	movmi	r3, #32
 800c3ec:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800c3f0:	0711      	lsls	r1, r2, #28
 800c3f2:	bf44      	itt	mi
 800c3f4:	232b      	movmi	r3, #43	; 0x2b
 800c3f6:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800c3fa:	f89a 3000 	ldrb.w	r3, [sl]
 800c3fe:	2b2a      	cmp	r3, #42	; 0x2a
 800c400:	d015      	beq.n	800c42e <_svfiprintf_r+0xf6>
 800c402:	9a07      	ldr	r2, [sp, #28]
 800c404:	4654      	mov	r4, sl
 800c406:	2000      	movs	r0, #0
 800c408:	f04f 0c0a 	mov.w	ip, #10
 800c40c:	4621      	mov	r1, r4
 800c40e:	f811 3b01 	ldrb.w	r3, [r1], #1
 800c412:	3b30      	subs	r3, #48	; 0x30
 800c414:	2b09      	cmp	r3, #9
 800c416:	d94d      	bls.n	800c4b4 <_svfiprintf_r+0x17c>
 800c418:	b1b0      	cbz	r0, 800c448 <_svfiprintf_r+0x110>
 800c41a:	9207      	str	r2, [sp, #28]
 800c41c:	e014      	b.n	800c448 <_svfiprintf_r+0x110>
 800c41e:	eba0 0308 	sub.w	r3, r0, r8
 800c422:	fa09 f303 	lsl.w	r3, r9, r3
 800c426:	4313      	orrs	r3, r2
 800c428:	9304      	str	r3, [sp, #16]
 800c42a:	46a2      	mov	sl, r4
 800c42c:	e7d2      	b.n	800c3d4 <_svfiprintf_r+0x9c>
 800c42e:	9b03      	ldr	r3, [sp, #12]
 800c430:	1d19      	adds	r1, r3, #4
 800c432:	681b      	ldr	r3, [r3, #0]
 800c434:	9103      	str	r1, [sp, #12]
 800c436:	2b00      	cmp	r3, #0
 800c438:	bfbb      	ittet	lt
 800c43a:	425b      	neglt	r3, r3
 800c43c:	f042 0202 	orrlt.w	r2, r2, #2
 800c440:	9307      	strge	r3, [sp, #28]
 800c442:	9307      	strlt	r3, [sp, #28]
 800c444:	bfb8      	it	lt
 800c446:	9204      	strlt	r2, [sp, #16]
 800c448:	7823      	ldrb	r3, [r4, #0]
 800c44a:	2b2e      	cmp	r3, #46	; 0x2e
 800c44c:	d10c      	bne.n	800c468 <_svfiprintf_r+0x130>
 800c44e:	7863      	ldrb	r3, [r4, #1]
 800c450:	2b2a      	cmp	r3, #42	; 0x2a
 800c452:	d134      	bne.n	800c4be <_svfiprintf_r+0x186>
 800c454:	9b03      	ldr	r3, [sp, #12]
 800c456:	1d1a      	adds	r2, r3, #4
 800c458:	681b      	ldr	r3, [r3, #0]
 800c45a:	9203      	str	r2, [sp, #12]
 800c45c:	2b00      	cmp	r3, #0
 800c45e:	bfb8      	it	lt
 800c460:	f04f 33ff 	movlt.w	r3, #4294967295
 800c464:	3402      	adds	r4, #2
 800c466:	9305      	str	r3, [sp, #20]
 800c468:	f8df a0c4 	ldr.w	sl, [pc, #196]	; 800c530 <_svfiprintf_r+0x1f8>
 800c46c:	7821      	ldrb	r1, [r4, #0]
 800c46e:	2203      	movs	r2, #3
 800c470:	4650      	mov	r0, sl
 800c472:	f7f3 feb5 	bl	80001e0 <memchr>
 800c476:	b138      	cbz	r0, 800c488 <_svfiprintf_r+0x150>
 800c478:	9b04      	ldr	r3, [sp, #16]
 800c47a:	eba0 000a 	sub.w	r0, r0, sl
 800c47e:	2240      	movs	r2, #64	; 0x40
 800c480:	4082      	lsls	r2, r0
 800c482:	4313      	orrs	r3, r2
 800c484:	3401      	adds	r4, #1
 800c486:	9304      	str	r3, [sp, #16]
 800c488:	f814 1b01 	ldrb.w	r1, [r4], #1
 800c48c:	4825      	ldr	r0, [pc, #148]	; (800c524 <_svfiprintf_r+0x1ec>)
 800c48e:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 800c492:	2206      	movs	r2, #6
 800c494:	f7f3 fea4 	bl	80001e0 <memchr>
 800c498:	2800      	cmp	r0, #0
 800c49a:	d038      	beq.n	800c50e <_svfiprintf_r+0x1d6>
 800c49c:	4b22      	ldr	r3, [pc, #136]	; (800c528 <_svfiprintf_r+0x1f0>)
 800c49e:	bb1b      	cbnz	r3, 800c4e8 <_svfiprintf_r+0x1b0>
 800c4a0:	9b03      	ldr	r3, [sp, #12]
 800c4a2:	3307      	adds	r3, #7
 800c4a4:	f023 0307 	bic.w	r3, r3, #7
 800c4a8:	3308      	adds	r3, #8
 800c4aa:	9303      	str	r3, [sp, #12]
 800c4ac:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800c4ae:	4433      	add	r3, r6
 800c4b0:	9309      	str	r3, [sp, #36]	; 0x24
 800c4b2:	e768      	b.n	800c386 <_svfiprintf_r+0x4e>
 800c4b4:	fb0c 3202 	mla	r2, ip, r2, r3
 800c4b8:	460c      	mov	r4, r1
 800c4ba:	2001      	movs	r0, #1
 800c4bc:	e7a6      	b.n	800c40c <_svfiprintf_r+0xd4>
 800c4be:	2300      	movs	r3, #0
 800c4c0:	3401      	adds	r4, #1
 800c4c2:	9305      	str	r3, [sp, #20]
 800c4c4:	4619      	mov	r1, r3
 800c4c6:	f04f 0c0a 	mov.w	ip, #10
 800c4ca:	4620      	mov	r0, r4
 800c4cc:	f810 2b01 	ldrb.w	r2, [r0], #1
 800c4d0:	3a30      	subs	r2, #48	; 0x30
 800c4d2:	2a09      	cmp	r2, #9
 800c4d4:	d903      	bls.n	800c4de <_svfiprintf_r+0x1a6>
 800c4d6:	2b00      	cmp	r3, #0
 800c4d8:	d0c6      	beq.n	800c468 <_svfiprintf_r+0x130>
 800c4da:	9105      	str	r1, [sp, #20]
 800c4dc:	e7c4      	b.n	800c468 <_svfiprintf_r+0x130>
 800c4de:	fb0c 2101 	mla	r1, ip, r1, r2
 800c4e2:	4604      	mov	r4, r0
 800c4e4:	2301      	movs	r3, #1
 800c4e6:	e7f0      	b.n	800c4ca <_svfiprintf_r+0x192>
 800c4e8:	ab03      	add	r3, sp, #12
 800c4ea:	9300      	str	r3, [sp, #0]
 800c4ec:	462a      	mov	r2, r5
 800c4ee:	4b0f      	ldr	r3, [pc, #60]	; (800c52c <_svfiprintf_r+0x1f4>)
 800c4f0:	a904      	add	r1, sp, #16
 800c4f2:	4638      	mov	r0, r7
 800c4f4:	f7fc ff68 	bl	80093c8 <_printf_float>
 800c4f8:	1c42      	adds	r2, r0, #1
 800c4fa:	4606      	mov	r6, r0
 800c4fc:	d1d6      	bne.n	800c4ac <_svfiprintf_r+0x174>
 800c4fe:	89ab      	ldrh	r3, [r5, #12]
 800c500:	065b      	lsls	r3, r3, #25
 800c502:	f53f af2d 	bmi.w	800c360 <_svfiprintf_r+0x28>
 800c506:	9809      	ldr	r0, [sp, #36]	; 0x24
 800c508:	b01d      	add	sp, #116	; 0x74
 800c50a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c50e:	ab03      	add	r3, sp, #12
 800c510:	9300      	str	r3, [sp, #0]
 800c512:	462a      	mov	r2, r5
 800c514:	4b05      	ldr	r3, [pc, #20]	; (800c52c <_svfiprintf_r+0x1f4>)
 800c516:	a904      	add	r1, sp, #16
 800c518:	4638      	mov	r0, r7
 800c51a:	f7fd f9f9 	bl	8009910 <_printf_i>
 800c51e:	e7eb      	b.n	800c4f8 <_svfiprintf_r+0x1c0>
 800c520:	0800d73c 	.word	0x0800d73c
 800c524:	0800d746 	.word	0x0800d746
 800c528:	080093c9 	.word	0x080093c9
 800c52c:	0800c285 	.word	0x0800c285
 800c530:	0800d742 	.word	0x0800d742

0800c534 <__sflush_r>:
 800c534:	898a      	ldrh	r2, [r1, #12]
 800c536:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c53a:	4605      	mov	r5, r0
 800c53c:	0710      	lsls	r0, r2, #28
 800c53e:	460c      	mov	r4, r1
 800c540:	d458      	bmi.n	800c5f4 <__sflush_r+0xc0>
 800c542:	684b      	ldr	r3, [r1, #4]
 800c544:	2b00      	cmp	r3, #0
 800c546:	dc05      	bgt.n	800c554 <__sflush_r+0x20>
 800c548:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 800c54a:	2b00      	cmp	r3, #0
 800c54c:	dc02      	bgt.n	800c554 <__sflush_r+0x20>
 800c54e:	2000      	movs	r0, #0
 800c550:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c554:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800c556:	2e00      	cmp	r6, #0
 800c558:	d0f9      	beq.n	800c54e <__sflush_r+0x1a>
 800c55a:	2300      	movs	r3, #0
 800c55c:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 800c560:	682f      	ldr	r7, [r5, #0]
 800c562:	6a21      	ldr	r1, [r4, #32]
 800c564:	602b      	str	r3, [r5, #0]
 800c566:	d032      	beq.n	800c5ce <__sflush_r+0x9a>
 800c568:	6d60      	ldr	r0, [r4, #84]	; 0x54
 800c56a:	89a3      	ldrh	r3, [r4, #12]
 800c56c:	075a      	lsls	r2, r3, #29
 800c56e:	d505      	bpl.n	800c57c <__sflush_r+0x48>
 800c570:	6863      	ldr	r3, [r4, #4]
 800c572:	1ac0      	subs	r0, r0, r3
 800c574:	6b63      	ldr	r3, [r4, #52]	; 0x34
 800c576:	b10b      	cbz	r3, 800c57c <__sflush_r+0x48>
 800c578:	6c23      	ldr	r3, [r4, #64]	; 0x40
 800c57a:	1ac0      	subs	r0, r0, r3
 800c57c:	2300      	movs	r3, #0
 800c57e:	4602      	mov	r2, r0
 800c580:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800c582:	6a21      	ldr	r1, [r4, #32]
 800c584:	4628      	mov	r0, r5
 800c586:	47b0      	blx	r6
 800c588:	1c43      	adds	r3, r0, #1
 800c58a:	89a3      	ldrh	r3, [r4, #12]
 800c58c:	d106      	bne.n	800c59c <__sflush_r+0x68>
 800c58e:	6829      	ldr	r1, [r5, #0]
 800c590:	291d      	cmp	r1, #29
 800c592:	d82b      	bhi.n	800c5ec <__sflush_r+0xb8>
 800c594:	4a29      	ldr	r2, [pc, #164]	; (800c63c <__sflush_r+0x108>)
 800c596:	410a      	asrs	r2, r1
 800c598:	07d6      	lsls	r6, r2, #31
 800c59a:	d427      	bmi.n	800c5ec <__sflush_r+0xb8>
 800c59c:	2200      	movs	r2, #0
 800c59e:	6062      	str	r2, [r4, #4]
 800c5a0:	04d9      	lsls	r1, r3, #19
 800c5a2:	6922      	ldr	r2, [r4, #16]
 800c5a4:	6022      	str	r2, [r4, #0]
 800c5a6:	d504      	bpl.n	800c5b2 <__sflush_r+0x7e>
 800c5a8:	1c42      	adds	r2, r0, #1
 800c5aa:	d101      	bne.n	800c5b0 <__sflush_r+0x7c>
 800c5ac:	682b      	ldr	r3, [r5, #0]
 800c5ae:	b903      	cbnz	r3, 800c5b2 <__sflush_r+0x7e>
 800c5b0:	6560      	str	r0, [r4, #84]	; 0x54
 800c5b2:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800c5b4:	602f      	str	r7, [r5, #0]
 800c5b6:	2900      	cmp	r1, #0
 800c5b8:	d0c9      	beq.n	800c54e <__sflush_r+0x1a>
 800c5ba:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800c5be:	4299      	cmp	r1, r3
 800c5c0:	d002      	beq.n	800c5c8 <__sflush_r+0x94>
 800c5c2:	4628      	mov	r0, r5
 800c5c4:	f7fe fd3a 	bl	800b03c <_free_r>
 800c5c8:	2000      	movs	r0, #0
 800c5ca:	6360      	str	r0, [r4, #52]	; 0x34
 800c5cc:	e7c0      	b.n	800c550 <__sflush_r+0x1c>
 800c5ce:	2301      	movs	r3, #1
 800c5d0:	4628      	mov	r0, r5
 800c5d2:	47b0      	blx	r6
 800c5d4:	1c41      	adds	r1, r0, #1
 800c5d6:	d1c8      	bne.n	800c56a <__sflush_r+0x36>
 800c5d8:	682b      	ldr	r3, [r5, #0]
 800c5da:	2b00      	cmp	r3, #0
 800c5dc:	d0c5      	beq.n	800c56a <__sflush_r+0x36>
 800c5de:	2b1d      	cmp	r3, #29
 800c5e0:	d001      	beq.n	800c5e6 <__sflush_r+0xb2>
 800c5e2:	2b16      	cmp	r3, #22
 800c5e4:	d101      	bne.n	800c5ea <__sflush_r+0xb6>
 800c5e6:	602f      	str	r7, [r5, #0]
 800c5e8:	e7b1      	b.n	800c54e <__sflush_r+0x1a>
 800c5ea:	89a3      	ldrh	r3, [r4, #12]
 800c5ec:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800c5f0:	81a3      	strh	r3, [r4, #12]
 800c5f2:	e7ad      	b.n	800c550 <__sflush_r+0x1c>
 800c5f4:	690f      	ldr	r7, [r1, #16]
 800c5f6:	2f00      	cmp	r7, #0
 800c5f8:	d0a9      	beq.n	800c54e <__sflush_r+0x1a>
 800c5fa:	0793      	lsls	r3, r2, #30
 800c5fc:	680e      	ldr	r6, [r1, #0]
 800c5fe:	bf08      	it	eq
 800c600:	694b      	ldreq	r3, [r1, #20]
 800c602:	600f      	str	r7, [r1, #0]
 800c604:	bf18      	it	ne
 800c606:	2300      	movne	r3, #0
 800c608:	eba6 0807 	sub.w	r8, r6, r7
 800c60c:	608b      	str	r3, [r1, #8]
 800c60e:	f1b8 0f00 	cmp.w	r8, #0
 800c612:	dd9c      	ble.n	800c54e <__sflush_r+0x1a>
 800c614:	6a21      	ldr	r1, [r4, #32]
 800c616:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 800c618:	4643      	mov	r3, r8
 800c61a:	463a      	mov	r2, r7
 800c61c:	4628      	mov	r0, r5
 800c61e:	47b0      	blx	r6
 800c620:	2800      	cmp	r0, #0
 800c622:	dc06      	bgt.n	800c632 <__sflush_r+0xfe>
 800c624:	89a3      	ldrh	r3, [r4, #12]
 800c626:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800c62a:	81a3      	strh	r3, [r4, #12]
 800c62c:	f04f 30ff 	mov.w	r0, #4294967295
 800c630:	e78e      	b.n	800c550 <__sflush_r+0x1c>
 800c632:	4407      	add	r7, r0
 800c634:	eba8 0800 	sub.w	r8, r8, r0
 800c638:	e7e9      	b.n	800c60e <__sflush_r+0xda>
 800c63a:	bf00      	nop
 800c63c:	dfbffffe 	.word	0xdfbffffe

0800c640 <_fflush_r>:
 800c640:	b538      	push	{r3, r4, r5, lr}
 800c642:	690b      	ldr	r3, [r1, #16]
 800c644:	4605      	mov	r5, r0
 800c646:	460c      	mov	r4, r1
 800c648:	b913      	cbnz	r3, 800c650 <_fflush_r+0x10>
 800c64a:	2500      	movs	r5, #0
 800c64c:	4628      	mov	r0, r5
 800c64e:	bd38      	pop	{r3, r4, r5, pc}
 800c650:	b118      	cbz	r0, 800c65a <_fflush_r+0x1a>
 800c652:	6a03      	ldr	r3, [r0, #32]
 800c654:	b90b      	cbnz	r3, 800c65a <_fflush_r+0x1a>
 800c656:	f7fd fd19 	bl	800a08c <__sinit>
 800c65a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800c65e:	2b00      	cmp	r3, #0
 800c660:	d0f3      	beq.n	800c64a <_fflush_r+0xa>
 800c662:	6e62      	ldr	r2, [r4, #100]	; 0x64
 800c664:	07d0      	lsls	r0, r2, #31
 800c666:	d404      	bmi.n	800c672 <_fflush_r+0x32>
 800c668:	0599      	lsls	r1, r3, #22
 800c66a:	d402      	bmi.n	800c672 <_fflush_r+0x32>
 800c66c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800c66e:	f7fd fe48 	bl	800a302 <__retarget_lock_acquire_recursive>
 800c672:	4628      	mov	r0, r5
 800c674:	4621      	mov	r1, r4
 800c676:	f7ff ff5d 	bl	800c534 <__sflush_r>
 800c67a:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800c67c:	07da      	lsls	r2, r3, #31
 800c67e:	4605      	mov	r5, r0
 800c680:	d4e4      	bmi.n	800c64c <_fflush_r+0xc>
 800c682:	89a3      	ldrh	r3, [r4, #12]
 800c684:	059b      	lsls	r3, r3, #22
 800c686:	d4e1      	bmi.n	800c64c <_fflush_r+0xc>
 800c688:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800c68a:	f7fd fe3b 	bl	800a304 <__retarget_lock_release_recursive>
 800c68e:	e7dd      	b.n	800c64c <_fflush_r+0xc>

0800c690 <memmove>:
 800c690:	4288      	cmp	r0, r1
 800c692:	b510      	push	{r4, lr}
 800c694:	eb01 0402 	add.w	r4, r1, r2
 800c698:	d902      	bls.n	800c6a0 <memmove+0x10>
 800c69a:	4284      	cmp	r4, r0
 800c69c:	4623      	mov	r3, r4
 800c69e:	d807      	bhi.n	800c6b0 <memmove+0x20>
 800c6a0:	1e43      	subs	r3, r0, #1
 800c6a2:	42a1      	cmp	r1, r4
 800c6a4:	d008      	beq.n	800c6b8 <memmove+0x28>
 800c6a6:	f811 2b01 	ldrb.w	r2, [r1], #1
 800c6aa:	f803 2f01 	strb.w	r2, [r3, #1]!
 800c6ae:	e7f8      	b.n	800c6a2 <memmove+0x12>
 800c6b0:	4402      	add	r2, r0
 800c6b2:	4601      	mov	r1, r0
 800c6b4:	428a      	cmp	r2, r1
 800c6b6:	d100      	bne.n	800c6ba <memmove+0x2a>
 800c6b8:	bd10      	pop	{r4, pc}
 800c6ba:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 800c6be:	f802 4d01 	strb.w	r4, [r2, #-1]!
 800c6c2:	e7f7      	b.n	800c6b4 <memmove+0x24>

0800c6c4 <_sbrk_r>:
 800c6c4:	b538      	push	{r3, r4, r5, lr}
 800c6c6:	4d06      	ldr	r5, [pc, #24]	; (800c6e0 <_sbrk_r+0x1c>)
 800c6c8:	2300      	movs	r3, #0
 800c6ca:	4604      	mov	r4, r0
 800c6cc:	4608      	mov	r0, r1
 800c6ce:	602b      	str	r3, [r5, #0]
 800c6d0:	f7f8 f8f2 	bl	80048b8 <_sbrk>
 800c6d4:	1c43      	adds	r3, r0, #1
 800c6d6:	d102      	bne.n	800c6de <_sbrk_r+0x1a>
 800c6d8:	682b      	ldr	r3, [r5, #0]
 800c6da:	b103      	cbz	r3, 800c6de <_sbrk_r+0x1a>
 800c6dc:	6023      	str	r3, [r4, #0]
 800c6de:	bd38      	pop	{r3, r4, r5, pc}
 800c6e0:	200008a0 	.word	0x200008a0

0800c6e4 <__assert_func>:
 800c6e4:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800c6e6:	4614      	mov	r4, r2
 800c6e8:	461a      	mov	r2, r3
 800c6ea:	4b09      	ldr	r3, [pc, #36]	; (800c710 <__assert_func+0x2c>)
 800c6ec:	681b      	ldr	r3, [r3, #0]
 800c6ee:	4605      	mov	r5, r0
 800c6f0:	68d8      	ldr	r0, [r3, #12]
 800c6f2:	b14c      	cbz	r4, 800c708 <__assert_func+0x24>
 800c6f4:	4b07      	ldr	r3, [pc, #28]	; (800c714 <__assert_func+0x30>)
 800c6f6:	9100      	str	r1, [sp, #0]
 800c6f8:	e9cd 3401 	strd	r3, r4, [sp, #4]
 800c6fc:	4906      	ldr	r1, [pc, #24]	; (800c718 <__assert_func+0x34>)
 800c6fe:	462b      	mov	r3, r5
 800c700:	f000 f854 	bl	800c7ac <fiprintf>
 800c704:	f000 f864 	bl	800c7d0 <abort>
 800c708:	4b04      	ldr	r3, [pc, #16]	; (800c71c <__assert_func+0x38>)
 800c70a:	461c      	mov	r4, r3
 800c70c:	e7f3      	b.n	800c6f6 <__assert_func+0x12>
 800c70e:	bf00      	nop
 800c710:	2000023c 	.word	0x2000023c
 800c714:	0800d74d 	.word	0x0800d74d
 800c718:	0800d75a 	.word	0x0800d75a
 800c71c:	0800d788 	.word	0x0800d788

0800c720 <_calloc_r>:
 800c720:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800c722:	fba1 2402 	umull	r2, r4, r1, r2
 800c726:	b94c      	cbnz	r4, 800c73c <_calloc_r+0x1c>
 800c728:	4611      	mov	r1, r2
 800c72a:	9201      	str	r2, [sp, #4]
 800c72c:	f7ff f852 	bl	800b7d4 <_malloc_r>
 800c730:	9a01      	ldr	r2, [sp, #4]
 800c732:	4605      	mov	r5, r0
 800c734:	b930      	cbnz	r0, 800c744 <_calloc_r+0x24>
 800c736:	4628      	mov	r0, r5
 800c738:	b003      	add	sp, #12
 800c73a:	bd30      	pop	{r4, r5, pc}
 800c73c:	220c      	movs	r2, #12
 800c73e:	6002      	str	r2, [r0, #0]
 800c740:	2500      	movs	r5, #0
 800c742:	e7f8      	b.n	800c736 <_calloc_r+0x16>
 800c744:	4621      	mov	r1, r4
 800c746:	f7fd fd3a 	bl	800a1be <memset>
 800c74a:	e7f4      	b.n	800c736 <_calloc_r+0x16>

0800c74c <_realloc_r>:
 800c74c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c750:	4680      	mov	r8, r0
 800c752:	4614      	mov	r4, r2
 800c754:	460e      	mov	r6, r1
 800c756:	b921      	cbnz	r1, 800c762 <_realloc_r+0x16>
 800c758:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 800c75c:	4611      	mov	r1, r2
 800c75e:	f7ff b839 	b.w	800b7d4 <_malloc_r>
 800c762:	b92a      	cbnz	r2, 800c770 <_realloc_r+0x24>
 800c764:	f7fe fc6a 	bl	800b03c <_free_r>
 800c768:	4625      	mov	r5, r4
 800c76a:	4628      	mov	r0, r5
 800c76c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800c770:	f000 f835 	bl	800c7de <_malloc_usable_size_r>
 800c774:	4284      	cmp	r4, r0
 800c776:	4607      	mov	r7, r0
 800c778:	d802      	bhi.n	800c780 <_realloc_r+0x34>
 800c77a:	ebb4 0f50 	cmp.w	r4, r0, lsr #1
 800c77e:	d812      	bhi.n	800c7a6 <_realloc_r+0x5a>
 800c780:	4621      	mov	r1, r4
 800c782:	4640      	mov	r0, r8
 800c784:	f7ff f826 	bl	800b7d4 <_malloc_r>
 800c788:	4605      	mov	r5, r0
 800c78a:	2800      	cmp	r0, #0
 800c78c:	d0ed      	beq.n	800c76a <_realloc_r+0x1e>
 800c78e:	42bc      	cmp	r4, r7
 800c790:	4622      	mov	r2, r4
 800c792:	4631      	mov	r1, r6
 800c794:	bf28      	it	cs
 800c796:	463a      	movcs	r2, r7
 800c798:	f7fd fdb5 	bl	800a306 <memcpy>
 800c79c:	4631      	mov	r1, r6
 800c79e:	4640      	mov	r0, r8
 800c7a0:	f7fe fc4c 	bl	800b03c <_free_r>
 800c7a4:	e7e1      	b.n	800c76a <_realloc_r+0x1e>
 800c7a6:	4635      	mov	r5, r6
 800c7a8:	e7df      	b.n	800c76a <_realloc_r+0x1e>
	...

0800c7ac <fiprintf>:
 800c7ac:	b40e      	push	{r1, r2, r3}
 800c7ae:	b503      	push	{r0, r1, lr}
 800c7b0:	4601      	mov	r1, r0
 800c7b2:	ab03      	add	r3, sp, #12
 800c7b4:	4805      	ldr	r0, [pc, #20]	; (800c7cc <fiprintf+0x20>)
 800c7b6:	f853 2b04 	ldr.w	r2, [r3], #4
 800c7ba:	6800      	ldr	r0, [r0, #0]
 800c7bc:	9301      	str	r3, [sp, #4]
 800c7be:	f000 f83f 	bl	800c840 <_vfiprintf_r>
 800c7c2:	b002      	add	sp, #8
 800c7c4:	f85d eb04 	ldr.w	lr, [sp], #4
 800c7c8:	b003      	add	sp, #12
 800c7ca:	4770      	bx	lr
 800c7cc:	2000023c 	.word	0x2000023c

0800c7d0 <abort>:
 800c7d0:	b508      	push	{r3, lr}
 800c7d2:	2006      	movs	r0, #6
 800c7d4:	f000 fa0c 	bl	800cbf0 <raise>
 800c7d8:	2001      	movs	r0, #1
 800c7da:	f7f7 fff5 	bl	80047c8 <_exit>

0800c7de <_malloc_usable_size_r>:
 800c7de:	f851 3c04 	ldr.w	r3, [r1, #-4]
 800c7e2:	1f18      	subs	r0, r3, #4
 800c7e4:	2b00      	cmp	r3, #0
 800c7e6:	bfbc      	itt	lt
 800c7e8:	580b      	ldrlt	r3, [r1, r0]
 800c7ea:	18c0      	addlt	r0, r0, r3
 800c7ec:	4770      	bx	lr

0800c7ee <__sfputc_r>:
 800c7ee:	6893      	ldr	r3, [r2, #8]
 800c7f0:	3b01      	subs	r3, #1
 800c7f2:	2b00      	cmp	r3, #0
 800c7f4:	b410      	push	{r4}
 800c7f6:	6093      	str	r3, [r2, #8]
 800c7f8:	da08      	bge.n	800c80c <__sfputc_r+0x1e>
 800c7fa:	6994      	ldr	r4, [r2, #24]
 800c7fc:	42a3      	cmp	r3, r4
 800c7fe:	db01      	blt.n	800c804 <__sfputc_r+0x16>
 800c800:	290a      	cmp	r1, #10
 800c802:	d103      	bne.n	800c80c <__sfputc_r+0x1e>
 800c804:	f85d 4b04 	ldr.w	r4, [sp], #4
 800c808:	f000 b934 	b.w	800ca74 <__swbuf_r>
 800c80c:	6813      	ldr	r3, [r2, #0]
 800c80e:	1c58      	adds	r0, r3, #1
 800c810:	6010      	str	r0, [r2, #0]
 800c812:	7019      	strb	r1, [r3, #0]
 800c814:	4608      	mov	r0, r1
 800c816:	f85d 4b04 	ldr.w	r4, [sp], #4
 800c81a:	4770      	bx	lr

0800c81c <__sfputs_r>:
 800c81c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800c81e:	4606      	mov	r6, r0
 800c820:	460f      	mov	r7, r1
 800c822:	4614      	mov	r4, r2
 800c824:	18d5      	adds	r5, r2, r3
 800c826:	42ac      	cmp	r4, r5
 800c828:	d101      	bne.n	800c82e <__sfputs_r+0x12>
 800c82a:	2000      	movs	r0, #0
 800c82c:	e007      	b.n	800c83e <__sfputs_r+0x22>
 800c82e:	f814 1b01 	ldrb.w	r1, [r4], #1
 800c832:	463a      	mov	r2, r7
 800c834:	4630      	mov	r0, r6
 800c836:	f7ff ffda 	bl	800c7ee <__sfputc_r>
 800c83a:	1c43      	adds	r3, r0, #1
 800c83c:	d1f3      	bne.n	800c826 <__sfputs_r+0xa>
 800c83e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

0800c840 <_vfiprintf_r>:
 800c840:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c844:	460d      	mov	r5, r1
 800c846:	b09d      	sub	sp, #116	; 0x74
 800c848:	4614      	mov	r4, r2
 800c84a:	4698      	mov	r8, r3
 800c84c:	4606      	mov	r6, r0
 800c84e:	b118      	cbz	r0, 800c858 <_vfiprintf_r+0x18>
 800c850:	6a03      	ldr	r3, [r0, #32]
 800c852:	b90b      	cbnz	r3, 800c858 <_vfiprintf_r+0x18>
 800c854:	f7fd fc1a 	bl	800a08c <__sinit>
 800c858:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 800c85a:	07d9      	lsls	r1, r3, #31
 800c85c:	d405      	bmi.n	800c86a <_vfiprintf_r+0x2a>
 800c85e:	89ab      	ldrh	r3, [r5, #12]
 800c860:	059a      	lsls	r2, r3, #22
 800c862:	d402      	bmi.n	800c86a <_vfiprintf_r+0x2a>
 800c864:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800c866:	f7fd fd4c 	bl	800a302 <__retarget_lock_acquire_recursive>
 800c86a:	89ab      	ldrh	r3, [r5, #12]
 800c86c:	071b      	lsls	r3, r3, #28
 800c86e:	d501      	bpl.n	800c874 <_vfiprintf_r+0x34>
 800c870:	692b      	ldr	r3, [r5, #16]
 800c872:	b99b      	cbnz	r3, 800c89c <_vfiprintf_r+0x5c>
 800c874:	4629      	mov	r1, r5
 800c876:	4630      	mov	r0, r6
 800c878:	f000 f93a 	bl	800caf0 <__swsetup_r>
 800c87c:	b170      	cbz	r0, 800c89c <_vfiprintf_r+0x5c>
 800c87e:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 800c880:	07dc      	lsls	r4, r3, #31
 800c882:	d504      	bpl.n	800c88e <_vfiprintf_r+0x4e>
 800c884:	f04f 30ff 	mov.w	r0, #4294967295
 800c888:	b01d      	add	sp, #116	; 0x74
 800c88a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c88e:	89ab      	ldrh	r3, [r5, #12]
 800c890:	0598      	lsls	r0, r3, #22
 800c892:	d4f7      	bmi.n	800c884 <_vfiprintf_r+0x44>
 800c894:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800c896:	f7fd fd35 	bl	800a304 <__retarget_lock_release_recursive>
 800c89a:	e7f3      	b.n	800c884 <_vfiprintf_r+0x44>
 800c89c:	2300      	movs	r3, #0
 800c89e:	9309      	str	r3, [sp, #36]	; 0x24
 800c8a0:	2320      	movs	r3, #32
 800c8a2:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 800c8a6:	f8cd 800c 	str.w	r8, [sp, #12]
 800c8aa:	2330      	movs	r3, #48	; 0x30
 800c8ac:	f8df 81b0 	ldr.w	r8, [pc, #432]	; 800ca60 <_vfiprintf_r+0x220>
 800c8b0:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 800c8b4:	f04f 0901 	mov.w	r9, #1
 800c8b8:	4623      	mov	r3, r4
 800c8ba:	469a      	mov	sl, r3
 800c8bc:	f813 2b01 	ldrb.w	r2, [r3], #1
 800c8c0:	b10a      	cbz	r2, 800c8c6 <_vfiprintf_r+0x86>
 800c8c2:	2a25      	cmp	r2, #37	; 0x25
 800c8c4:	d1f9      	bne.n	800c8ba <_vfiprintf_r+0x7a>
 800c8c6:	ebba 0b04 	subs.w	fp, sl, r4
 800c8ca:	d00b      	beq.n	800c8e4 <_vfiprintf_r+0xa4>
 800c8cc:	465b      	mov	r3, fp
 800c8ce:	4622      	mov	r2, r4
 800c8d0:	4629      	mov	r1, r5
 800c8d2:	4630      	mov	r0, r6
 800c8d4:	f7ff ffa2 	bl	800c81c <__sfputs_r>
 800c8d8:	3001      	adds	r0, #1
 800c8da:	f000 80a9 	beq.w	800ca30 <_vfiprintf_r+0x1f0>
 800c8de:	9a09      	ldr	r2, [sp, #36]	; 0x24
 800c8e0:	445a      	add	r2, fp
 800c8e2:	9209      	str	r2, [sp, #36]	; 0x24
 800c8e4:	f89a 3000 	ldrb.w	r3, [sl]
 800c8e8:	2b00      	cmp	r3, #0
 800c8ea:	f000 80a1 	beq.w	800ca30 <_vfiprintf_r+0x1f0>
 800c8ee:	2300      	movs	r3, #0
 800c8f0:	f04f 32ff 	mov.w	r2, #4294967295
 800c8f4:	e9cd 2305 	strd	r2, r3, [sp, #20]
 800c8f8:	f10a 0a01 	add.w	sl, sl, #1
 800c8fc:	9304      	str	r3, [sp, #16]
 800c8fe:	9307      	str	r3, [sp, #28]
 800c900:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 800c904:	931a      	str	r3, [sp, #104]	; 0x68
 800c906:	4654      	mov	r4, sl
 800c908:	2205      	movs	r2, #5
 800c90a:	f814 1b01 	ldrb.w	r1, [r4], #1
 800c90e:	4854      	ldr	r0, [pc, #336]	; (800ca60 <_vfiprintf_r+0x220>)
 800c910:	f7f3 fc66 	bl	80001e0 <memchr>
 800c914:	9a04      	ldr	r2, [sp, #16]
 800c916:	b9d8      	cbnz	r0, 800c950 <_vfiprintf_r+0x110>
 800c918:	06d1      	lsls	r1, r2, #27
 800c91a:	bf44      	itt	mi
 800c91c:	2320      	movmi	r3, #32
 800c91e:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800c922:	0713      	lsls	r3, r2, #28
 800c924:	bf44      	itt	mi
 800c926:	232b      	movmi	r3, #43	; 0x2b
 800c928:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 800c92c:	f89a 3000 	ldrb.w	r3, [sl]
 800c930:	2b2a      	cmp	r3, #42	; 0x2a
 800c932:	d015      	beq.n	800c960 <_vfiprintf_r+0x120>
 800c934:	9a07      	ldr	r2, [sp, #28]
 800c936:	4654      	mov	r4, sl
 800c938:	2000      	movs	r0, #0
 800c93a:	f04f 0c0a 	mov.w	ip, #10
 800c93e:	4621      	mov	r1, r4
 800c940:	f811 3b01 	ldrb.w	r3, [r1], #1
 800c944:	3b30      	subs	r3, #48	; 0x30
 800c946:	2b09      	cmp	r3, #9
 800c948:	d94d      	bls.n	800c9e6 <_vfiprintf_r+0x1a6>
 800c94a:	b1b0      	cbz	r0, 800c97a <_vfiprintf_r+0x13a>
 800c94c:	9207      	str	r2, [sp, #28]
 800c94e:	e014      	b.n	800c97a <_vfiprintf_r+0x13a>
 800c950:	eba0 0308 	sub.w	r3, r0, r8
 800c954:	fa09 f303 	lsl.w	r3, r9, r3
 800c958:	4313      	orrs	r3, r2
 800c95a:	9304      	str	r3, [sp, #16]
 800c95c:	46a2      	mov	sl, r4
 800c95e:	e7d2      	b.n	800c906 <_vfiprintf_r+0xc6>
 800c960:	9b03      	ldr	r3, [sp, #12]
 800c962:	1d19      	adds	r1, r3, #4
 800c964:	681b      	ldr	r3, [r3, #0]
 800c966:	9103      	str	r1, [sp, #12]
 800c968:	2b00      	cmp	r3, #0
 800c96a:	bfbb      	ittet	lt
 800c96c:	425b      	neglt	r3, r3
 800c96e:	f042 0202 	orrlt.w	r2, r2, #2
 800c972:	9307      	strge	r3, [sp, #28]
 800c974:	9307      	strlt	r3, [sp, #28]
 800c976:	bfb8      	it	lt
 800c978:	9204      	strlt	r2, [sp, #16]
 800c97a:	7823      	ldrb	r3, [r4, #0]
 800c97c:	2b2e      	cmp	r3, #46	; 0x2e
 800c97e:	d10c      	bne.n	800c99a <_vfiprintf_r+0x15a>
 800c980:	7863      	ldrb	r3, [r4, #1]
 800c982:	2b2a      	cmp	r3, #42	; 0x2a
 800c984:	d134      	bne.n	800c9f0 <_vfiprintf_r+0x1b0>
 800c986:	9b03      	ldr	r3, [sp, #12]
 800c988:	1d1a      	adds	r2, r3, #4
 800c98a:	681b      	ldr	r3, [r3, #0]
 800c98c:	9203      	str	r2, [sp, #12]
 800c98e:	2b00      	cmp	r3, #0
 800c990:	bfb8      	it	lt
 800c992:	f04f 33ff 	movlt.w	r3, #4294967295
 800c996:	3402      	adds	r4, #2
 800c998:	9305      	str	r3, [sp, #20]
 800c99a:	f8df a0d4 	ldr.w	sl, [pc, #212]	; 800ca70 <_vfiprintf_r+0x230>
 800c99e:	7821      	ldrb	r1, [r4, #0]
 800c9a0:	2203      	movs	r2, #3
 800c9a2:	4650      	mov	r0, sl
 800c9a4:	f7f3 fc1c 	bl	80001e0 <memchr>
 800c9a8:	b138      	cbz	r0, 800c9ba <_vfiprintf_r+0x17a>
 800c9aa:	9b04      	ldr	r3, [sp, #16]
 800c9ac:	eba0 000a 	sub.w	r0, r0, sl
 800c9b0:	2240      	movs	r2, #64	; 0x40
 800c9b2:	4082      	lsls	r2, r0
 800c9b4:	4313      	orrs	r3, r2
 800c9b6:	3401      	adds	r4, #1
 800c9b8:	9304      	str	r3, [sp, #16]
 800c9ba:	f814 1b01 	ldrb.w	r1, [r4], #1
 800c9be:	4829      	ldr	r0, [pc, #164]	; (800ca64 <_vfiprintf_r+0x224>)
 800c9c0:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 800c9c4:	2206      	movs	r2, #6
 800c9c6:	f7f3 fc0b 	bl	80001e0 <memchr>
 800c9ca:	2800      	cmp	r0, #0
 800c9cc:	d03f      	beq.n	800ca4e <_vfiprintf_r+0x20e>
 800c9ce:	4b26      	ldr	r3, [pc, #152]	; (800ca68 <_vfiprintf_r+0x228>)
 800c9d0:	bb1b      	cbnz	r3, 800ca1a <_vfiprintf_r+0x1da>
 800c9d2:	9b03      	ldr	r3, [sp, #12]
 800c9d4:	3307      	adds	r3, #7
 800c9d6:	f023 0307 	bic.w	r3, r3, #7
 800c9da:	3308      	adds	r3, #8
 800c9dc:	9303      	str	r3, [sp, #12]
 800c9de:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800c9e0:	443b      	add	r3, r7
 800c9e2:	9309      	str	r3, [sp, #36]	; 0x24
 800c9e4:	e768      	b.n	800c8b8 <_vfiprintf_r+0x78>
 800c9e6:	fb0c 3202 	mla	r2, ip, r2, r3
 800c9ea:	460c      	mov	r4, r1
 800c9ec:	2001      	movs	r0, #1
 800c9ee:	e7a6      	b.n	800c93e <_vfiprintf_r+0xfe>
 800c9f0:	2300      	movs	r3, #0
 800c9f2:	3401      	adds	r4, #1
 800c9f4:	9305      	str	r3, [sp, #20]
 800c9f6:	4619      	mov	r1, r3
 800c9f8:	f04f 0c0a 	mov.w	ip, #10
 800c9fc:	4620      	mov	r0, r4
 800c9fe:	f810 2b01 	ldrb.w	r2, [r0], #1
 800ca02:	3a30      	subs	r2, #48	; 0x30
 800ca04:	2a09      	cmp	r2, #9
 800ca06:	d903      	bls.n	800ca10 <_vfiprintf_r+0x1d0>
 800ca08:	2b00      	cmp	r3, #0
 800ca0a:	d0c6      	beq.n	800c99a <_vfiprintf_r+0x15a>
 800ca0c:	9105      	str	r1, [sp, #20]
 800ca0e:	e7c4      	b.n	800c99a <_vfiprintf_r+0x15a>
 800ca10:	fb0c 2101 	mla	r1, ip, r1, r2
 800ca14:	4604      	mov	r4, r0
 800ca16:	2301      	movs	r3, #1
 800ca18:	e7f0      	b.n	800c9fc <_vfiprintf_r+0x1bc>
 800ca1a:	ab03      	add	r3, sp, #12
 800ca1c:	9300      	str	r3, [sp, #0]
 800ca1e:	462a      	mov	r2, r5
 800ca20:	4b12      	ldr	r3, [pc, #72]	; (800ca6c <_vfiprintf_r+0x22c>)
 800ca22:	a904      	add	r1, sp, #16
 800ca24:	4630      	mov	r0, r6
 800ca26:	f7fc fccf 	bl	80093c8 <_printf_float>
 800ca2a:	4607      	mov	r7, r0
 800ca2c:	1c78      	adds	r0, r7, #1
 800ca2e:	d1d6      	bne.n	800c9de <_vfiprintf_r+0x19e>
 800ca30:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 800ca32:	07d9      	lsls	r1, r3, #31
 800ca34:	d405      	bmi.n	800ca42 <_vfiprintf_r+0x202>
 800ca36:	89ab      	ldrh	r3, [r5, #12]
 800ca38:	059a      	lsls	r2, r3, #22
 800ca3a:	d402      	bmi.n	800ca42 <_vfiprintf_r+0x202>
 800ca3c:	6da8      	ldr	r0, [r5, #88]	; 0x58
 800ca3e:	f7fd fc61 	bl	800a304 <__retarget_lock_release_recursive>
 800ca42:	89ab      	ldrh	r3, [r5, #12]
 800ca44:	065b      	lsls	r3, r3, #25
 800ca46:	f53f af1d 	bmi.w	800c884 <_vfiprintf_r+0x44>
 800ca4a:	9809      	ldr	r0, [sp, #36]	; 0x24
 800ca4c:	e71c      	b.n	800c888 <_vfiprintf_r+0x48>
 800ca4e:	ab03      	add	r3, sp, #12
 800ca50:	9300      	str	r3, [sp, #0]
 800ca52:	462a      	mov	r2, r5
 800ca54:	4b05      	ldr	r3, [pc, #20]	; (800ca6c <_vfiprintf_r+0x22c>)
 800ca56:	a904      	add	r1, sp, #16
 800ca58:	4630      	mov	r0, r6
 800ca5a:	f7fc ff59 	bl	8009910 <_printf_i>
 800ca5e:	e7e4      	b.n	800ca2a <_vfiprintf_r+0x1ea>
 800ca60:	0800d73c 	.word	0x0800d73c
 800ca64:	0800d746 	.word	0x0800d746
 800ca68:	080093c9 	.word	0x080093c9
 800ca6c:	0800c81d 	.word	0x0800c81d
 800ca70:	0800d742 	.word	0x0800d742

0800ca74 <__swbuf_r>:
 800ca74:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800ca76:	460e      	mov	r6, r1
 800ca78:	4614      	mov	r4, r2
 800ca7a:	4605      	mov	r5, r0
 800ca7c:	b118      	cbz	r0, 800ca86 <__swbuf_r+0x12>
 800ca7e:	6a03      	ldr	r3, [r0, #32]
 800ca80:	b90b      	cbnz	r3, 800ca86 <__swbuf_r+0x12>
 800ca82:	f7fd fb03 	bl	800a08c <__sinit>
 800ca86:	69a3      	ldr	r3, [r4, #24]
 800ca88:	60a3      	str	r3, [r4, #8]
 800ca8a:	89a3      	ldrh	r3, [r4, #12]
 800ca8c:	071a      	lsls	r2, r3, #28
 800ca8e:	d525      	bpl.n	800cadc <__swbuf_r+0x68>
 800ca90:	6923      	ldr	r3, [r4, #16]
 800ca92:	b31b      	cbz	r3, 800cadc <__swbuf_r+0x68>
 800ca94:	6823      	ldr	r3, [r4, #0]
 800ca96:	6922      	ldr	r2, [r4, #16]
 800ca98:	1a98      	subs	r0, r3, r2
 800ca9a:	6963      	ldr	r3, [r4, #20]
 800ca9c:	b2f6      	uxtb	r6, r6
 800ca9e:	4283      	cmp	r3, r0
 800caa0:	4637      	mov	r7, r6
 800caa2:	dc04      	bgt.n	800caae <__swbuf_r+0x3a>
 800caa4:	4621      	mov	r1, r4
 800caa6:	4628      	mov	r0, r5
 800caa8:	f7ff fdca 	bl	800c640 <_fflush_r>
 800caac:	b9e0      	cbnz	r0, 800cae8 <__swbuf_r+0x74>
 800caae:	68a3      	ldr	r3, [r4, #8]
 800cab0:	3b01      	subs	r3, #1
 800cab2:	60a3      	str	r3, [r4, #8]
 800cab4:	6823      	ldr	r3, [r4, #0]
 800cab6:	1c5a      	adds	r2, r3, #1
 800cab8:	6022      	str	r2, [r4, #0]
 800caba:	701e      	strb	r6, [r3, #0]
 800cabc:	6962      	ldr	r2, [r4, #20]
 800cabe:	1c43      	adds	r3, r0, #1
 800cac0:	429a      	cmp	r2, r3
 800cac2:	d004      	beq.n	800cace <__swbuf_r+0x5a>
 800cac4:	89a3      	ldrh	r3, [r4, #12]
 800cac6:	07db      	lsls	r3, r3, #31
 800cac8:	d506      	bpl.n	800cad8 <__swbuf_r+0x64>
 800caca:	2e0a      	cmp	r6, #10
 800cacc:	d104      	bne.n	800cad8 <__swbuf_r+0x64>
 800cace:	4621      	mov	r1, r4
 800cad0:	4628      	mov	r0, r5
 800cad2:	f7ff fdb5 	bl	800c640 <_fflush_r>
 800cad6:	b938      	cbnz	r0, 800cae8 <__swbuf_r+0x74>
 800cad8:	4638      	mov	r0, r7
 800cada:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800cadc:	4621      	mov	r1, r4
 800cade:	4628      	mov	r0, r5
 800cae0:	f000 f806 	bl	800caf0 <__swsetup_r>
 800cae4:	2800      	cmp	r0, #0
 800cae6:	d0d5      	beq.n	800ca94 <__swbuf_r+0x20>
 800cae8:	f04f 37ff 	mov.w	r7, #4294967295
 800caec:	e7f4      	b.n	800cad8 <__swbuf_r+0x64>
	...

0800caf0 <__swsetup_r>:
 800caf0:	b538      	push	{r3, r4, r5, lr}
 800caf2:	4b2a      	ldr	r3, [pc, #168]	; (800cb9c <__swsetup_r+0xac>)
 800caf4:	4605      	mov	r5, r0
 800caf6:	6818      	ldr	r0, [r3, #0]
 800caf8:	460c      	mov	r4, r1
 800cafa:	b118      	cbz	r0, 800cb04 <__swsetup_r+0x14>
 800cafc:	6a03      	ldr	r3, [r0, #32]
 800cafe:	b90b      	cbnz	r3, 800cb04 <__swsetup_r+0x14>
 800cb00:	f7fd fac4 	bl	800a08c <__sinit>
 800cb04:	89a3      	ldrh	r3, [r4, #12]
 800cb06:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800cb0a:	0718      	lsls	r0, r3, #28
 800cb0c:	d422      	bmi.n	800cb54 <__swsetup_r+0x64>
 800cb0e:	06d9      	lsls	r1, r3, #27
 800cb10:	d407      	bmi.n	800cb22 <__swsetup_r+0x32>
 800cb12:	2309      	movs	r3, #9
 800cb14:	602b      	str	r3, [r5, #0]
 800cb16:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 800cb1a:	81a3      	strh	r3, [r4, #12]
 800cb1c:	f04f 30ff 	mov.w	r0, #4294967295
 800cb20:	e034      	b.n	800cb8c <__swsetup_r+0x9c>
 800cb22:	0758      	lsls	r0, r3, #29
 800cb24:	d512      	bpl.n	800cb4c <__swsetup_r+0x5c>
 800cb26:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800cb28:	b141      	cbz	r1, 800cb3c <__swsetup_r+0x4c>
 800cb2a:	f104 0344 	add.w	r3, r4, #68	; 0x44
 800cb2e:	4299      	cmp	r1, r3
 800cb30:	d002      	beq.n	800cb38 <__swsetup_r+0x48>
 800cb32:	4628      	mov	r0, r5
 800cb34:	f7fe fa82 	bl	800b03c <_free_r>
 800cb38:	2300      	movs	r3, #0
 800cb3a:	6363      	str	r3, [r4, #52]	; 0x34
 800cb3c:	89a3      	ldrh	r3, [r4, #12]
 800cb3e:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 800cb42:	81a3      	strh	r3, [r4, #12]
 800cb44:	2300      	movs	r3, #0
 800cb46:	6063      	str	r3, [r4, #4]
 800cb48:	6923      	ldr	r3, [r4, #16]
 800cb4a:	6023      	str	r3, [r4, #0]
 800cb4c:	89a3      	ldrh	r3, [r4, #12]
 800cb4e:	f043 0308 	orr.w	r3, r3, #8
 800cb52:	81a3      	strh	r3, [r4, #12]
 800cb54:	6923      	ldr	r3, [r4, #16]
 800cb56:	b94b      	cbnz	r3, 800cb6c <__swsetup_r+0x7c>
 800cb58:	89a3      	ldrh	r3, [r4, #12]
 800cb5a:	f403 7320 	and.w	r3, r3, #640	; 0x280
 800cb5e:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800cb62:	d003      	beq.n	800cb6c <__swsetup_r+0x7c>
 800cb64:	4621      	mov	r1, r4
 800cb66:	4628      	mov	r0, r5
 800cb68:	f000 f884 	bl	800cc74 <__smakebuf_r>
 800cb6c:	89a0      	ldrh	r0, [r4, #12]
 800cb6e:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800cb72:	f010 0301 	ands.w	r3, r0, #1
 800cb76:	d00a      	beq.n	800cb8e <__swsetup_r+0x9e>
 800cb78:	2300      	movs	r3, #0
 800cb7a:	60a3      	str	r3, [r4, #8]
 800cb7c:	6963      	ldr	r3, [r4, #20]
 800cb7e:	425b      	negs	r3, r3
 800cb80:	61a3      	str	r3, [r4, #24]
 800cb82:	6923      	ldr	r3, [r4, #16]
 800cb84:	b943      	cbnz	r3, 800cb98 <__swsetup_r+0xa8>
 800cb86:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 800cb8a:	d1c4      	bne.n	800cb16 <__swsetup_r+0x26>
 800cb8c:	bd38      	pop	{r3, r4, r5, pc}
 800cb8e:	0781      	lsls	r1, r0, #30
 800cb90:	bf58      	it	pl
 800cb92:	6963      	ldrpl	r3, [r4, #20]
 800cb94:	60a3      	str	r3, [r4, #8]
 800cb96:	e7f4      	b.n	800cb82 <__swsetup_r+0x92>
 800cb98:	2000      	movs	r0, #0
 800cb9a:	e7f7      	b.n	800cb8c <__swsetup_r+0x9c>
 800cb9c:	2000023c 	.word	0x2000023c

0800cba0 <_raise_r>:
 800cba0:	291f      	cmp	r1, #31
 800cba2:	b538      	push	{r3, r4, r5, lr}
 800cba4:	4604      	mov	r4, r0
 800cba6:	460d      	mov	r5, r1
 800cba8:	d904      	bls.n	800cbb4 <_raise_r+0x14>
 800cbaa:	2316      	movs	r3, #22
 800cbac:	6003      	str	r3, [r0, #0]
 800cbae:	f04f 30ff 	mov.w	r0, #4294967295
 800cbb2:	bd38      	pop	{r3, r4, r5, pc}
 800cbb4:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 800cbb6:	b112      	cbz	r2, 800cbbe <_raise_r+0x1e>
 800cbb8:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 800cbbc:	b94b      	cbnz	r3, 800cbd2 <_raise_r+0x32>
 800cbbe:	4620      	mov	r0, r4
 800cbc0:	f000 f830 	bl	800cc24 <_getpid_r>
 800cbc4:	462a      	mov	r2, r5
 800cbc6:	4601      	mov	r1, r0
 800cbc8:	4620      	mov	r0, r4
 800cbca:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800cbce:	f000 b817 	b.w	800cc00 <_kill_r>
 800cbd2:	2b01      	cmp	r3, #1
 800cbd4:	d00a      	beq.n	800cbec <_raise_r+0x4c>
 800cbd6:	1c59      	adds	r1, r3, #1
 800cbd8:	d103      	bne.n	800cbe2 <_raise_r+0x42>
 800cbda:	2316      	movs	r3, #22
 800cbdc:	6003      	str	r3, [r0, #0]
 800cbde:	2001      	movs	r0, #1
 800cbe0:	e7e7      	b.n	800cbb2 <_raise_r+0x12>
 800cbe2:	2400      	movs	r4, #0
 800cbe4:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 800cbe8:	4628      	mov	r0, r5
 800cbea:	4798      	blx	r3
 800cbec:	2000      	movs	r0, #0
 800cbee:	e7e0      	b.n	800cbb2 <_raise_r+0x12>

0800cbf0 <raise>:
 800cbf0:	4b02      	ldr	r3, [pc, #8]	; (800cbfc <raise+0xc>)
 800cbf2:	4601      	mov	r1, r0
 800cbf4:	6818      	ldr	r0, [r3, #0]
 800cbf6:	f7ff bfd3 	b.w	800cba0 <_raise_r>
 800cbfa:	bf00      	nop
 800cbfc:	2000023c 	.word	0x2000023c

0800cc00 <_kill_r>:
 800cc00:	b538      	push	{r3, r4, r5, lr}
 800cc02:	4d07      	ldr	r5, [pc, #28]	; (800cc20 <_kill_r+0x20>)
 800cc04:	2300      	movs	r3, #0
 800cc06:	4604      	mov	r4, r0
 800cc08:	4608      	mov	r0, r1
 800cc0a:	4611      	mov	r1, r2
 800cc0c:	602b      	str	r3, [r5, #0]
 800cc0e:	f7f7 fdcb 	bl	80047a8 <_kill>
 800cc12:	1c43      	adds	r3, r0, #1
 800cc14:	d102      	bne.n	800cc1c <_kill_r+0x1c>
 800cc16:	682b      	ldr	r3, [r5, #0]
 800cc18:	b103      	cbz	r3, 800cc1c <_kill_r+0x1c>
 800cc1a:	6023      	str	r3, [r4, #0]
 800cc1c:	bd38      	pop	{r3, r4, r5, pc}
 800cc1e:	bf00      	nop
 800cc20:	200008a0 	.word	0x200008a0

0800cc24 <_getpid_r>:
 800cc24:	f7f7 bdb8 	b.w	8004798 <_getpid>

0800cc28 <__swhatbuf_r>:
 800cc28:	b570      	push	{r4, r5, r6, lr}
 800cc2a:	460c      	mov	r4, r1
 800cc2c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800cc30:	2900      	cmp	r1, #0
 800cc32:	b096      	sub	sp, #88	; 0x58
 800cc34:	4615      	mov	r5, r2
 800cc36:	461e      	mov	r6, r3
 800cc38:	da0d      	bge.n	800cc56 <__swhatbuf_r+0x2e>
 800cc3a:	89a3      	ldrh	r3, [r4, #12]
 800cc3c:	f013 0f80 	tst.w	r3, #128	; 0x80
 800cc40:	f04f 0100 	mov.w	r1, #0
 800cc44:	bf0c      	ite	eq
 800cc46:	f44f 6380 	moveq.w	r3, #1024	; 0x400
 800cc4a:	2340      	movne	r3, #64	; 0x40
 800cc4c:	2000      	movs	r0, #0
 800cc4e:	6031      	str	r1, [r6, #0]
 800cc50:	602b      	str	r3, [r5, #0]
 800cc52:	b016      	add	sp, #88	; 0x58
 800cc54:	bd70      	pop	{r4, r5, r6, pc}
 800cc56:	466a      	mov	r2, sp
 800cc58:	f000 f848 	bl	800ccec <_fstat_r>
 800cc5c:	2800      	cmp	r0, #0
 800cc5e:	dbec      	blt.n	800cc3a <__swhatbuf_r+0x12>
 800cc60:	9901      	ldr	r1, [sp, #4]
 800cc62:	f401 4170 	and.w	r1, r1, #61440	; 0xf000
 800cc66:	f5a1 5300 	sub.w	r3, r1, #8192	; 0x2000
 800cc6a:	4259      	negs	r1, r3
 800cc6c:	4159      	adcs	r1, r3
 800cc6e:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800cc72:	e7eb      	b.n	800cc4c <__swhatbuf_r+0x24>

0800cc74 <__smakebuf_r>:
 800cc74:	898b      	ldrh	r3, [r1, #12]
 800cc76:	b573      	push	{r0, r1, r4, r5, r6, lr}
 800cc78:	079d      	lsls	r5, r3, #30
 800cc7a:	4606      	mov	r6, r0
 800cc7c:	460c      	mov	r4, r1
 800cc7e:	d507      	bpl.n	800cc90 <__smakebuf_r+0x1c>
 800cc80:	f104 0347 	add.w	r3, r4, #71	; 0x47
 800cc84:	6023      	str	r3, [r4, #0]
 800cc86:	6123      	str	r3, [r4, #16]
 800cc88:	2301      	movs	r3, #1
 800cc8a:	6163      	str	r3, [r4, #20]
 800cc8c:	b002      	add	sp, #8
 800cc8e:	bd70      	pop	{r4, r5, r6, pc}
 800cc90:	ab01      	add	r3, sp, #4
 800cc92:	466a      	mov	r2, sp
 800cc94:	f7ff ffc8 	bl	800cc28 <__swhatbuf_r>
 800cc98:	9900      	ldr	r1, [sp, #0]
 800cc9a:	4605      	mov	r5, r0
 800cc9c:	4630      	mov	r0, r6
 800cc9e:	f7fe fd99 	bl	800b7d4 <_malloc_r>
 800cca2:	b948      	cbnz	r0, 800ccb8 <__smakebuf_r+0x44>
 800cca4:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800cca8:	059a      	lsls	r2, r3, #22
 800ccaa:	d4ef      	bmi.n	800cc8c <__smakebuf_r+0x18>
 800ccac:	f023 0303 	bic.w	r3, r3, #3
 800ccb0:	f043 0302 	orr.w	r3, r3, #2
 800ccb4:	81a3      	strh	r3, [r4, #12]
 800ccb6:	e7e3      	b.n	800cc80 <__smakebuf_r+0xc>
 800ccb8:	89a3      	ldrh	r3, [r4, #12]
 800ccba:	6020      	str	r0, [r4, #0]
 800ccbc:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800ccc0:	81a3      	strh	r3, [r4, #12]
 800ccc2:	9b00      	ldr	r3, [sp, #0]
 800ccc4:	6163      	str	r3, [r4, #20]
 800ccc6:	9b01      	ldr	r3, [sp, #4]
 800ccc8:	6120      	str	r0, [r4, #16]
 800ccca:	b15b      	cbz	r3, 800cce4 <__smakebuf_r+0x70>
 800cccc:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 800ccd0:	4630      	mov	r0, r6
 800ccd2:	f000 f81d 	bl	800cd10 <_isatty_r>
 800ccd6:	b128      	cbz	r0, 800cce4 <__smakebuf_r+0x70>
 800ccd8:	89a3      	ldrh	r3, [r4, #12]
 800ccda:	f023 0303 	bic.w	r3, r3, #3
 800ccde:	f043 0301 	orr.w	r3, r3, #1
 800cce2:	81a3      	strh	r3, [r4, #12]
 800cce4:	89a3      	ldrh	r3, [r4, #12]
 800cce6:	431d      	orrs	r5, r3
 800cce8:	81a5      	strh	r5, [r4, #12]
 800ccea:	e7cf      	b.n	800cc8c <__smakebuf_r+0x18>

0800ccec <_fstat_r>:
 800ccec:	b538      	push	{r3, r4, r5, lr}
 800ccee:	4d07      	ldr	r5, [pc, #28]	; (800cd0c <_fstat_r+0x20>)
 800ccf0:	2300      	movs	r3, #0
 800ccf2:	4604      	mov	r4, r0
 800ccf4:	4608      	mov	r0, r1
 800ccf6:	4611      	mov	r1, r2
 800ccf8:	602b      	str	r3, [r5, #0]
 800ccfa:	f7f7 fdb4 	bl	8004866 <_fstat>
 800ccfe:	1c43      	adds	r3, r0, #1
 800cd00:	d102      	bne.n	800cd08 <_fstat_r+0x1c>
 800cd02:	682b      	ldr	r3, [r5, #0]
 800cd04:	b103      	cbz	r3, 800cd08 <_fstat_r+0x1c>
 800cd06:	6023      	str	r3, [r4, #0]
 800cd08:	bd38      	pop	{r3, r4, r5, pc}
 800cd0a:	bf00      	nop
 800cd0c:	200008a0 	.word	0x200008a0

0800cd10 <_isatty_r>:
 800cd10:	b538      	push	{r3, r4, r5, lr}
 800cd12:	4d06      	ldr	r5, [pc, #24]	; (800cd2c <_isatty_r+0x1c>)
 800cd14:	2300      	movs	r3, #0
 800cd16:	4604      	mov	r4, r0
 800cd18:	4608      	mov	r0, r1
 800cd1a:	602b      	str	r3, [r5, #0]
 800cd1c:	f7f7 fdb3 	bl	8004886 <_isatty>
 800cd20:	1c43      	adds	r3, r0, #1
 800cd22:	d102      	bne.n	800cd2a <_isatty_r+0x1a>
 800cd24:	682b      	ldr	r3, [r5, #0]
 800cd26:	b103      	cbz	r3, 800cd2a <_isatty_r+0x1a>
 800cd28:	6023      	str	r3, [r4, #0]
 800cd2a:	bd38      	pop	{r3, r4, r5, pc}
 800cd2c:	200008a0 	.word	0x200008a0

0800cd30 <_init>:
 800cd30:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800cd32:	bf00      	nop
 800cd34:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800cd36:	bc08      	pop	{r3}
 800cd38:	469e      	mov	lr, r3
 800cd3a:	4770      	bx	lr

0800cd3c <_fini>:
 800cd3c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800cd3e:	bf00      	nop
 800cd40:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800cd42:	bc08      	pop	{r3}
 800cd44:	469e      	mov	lr, r3
 800cd46:	4770      	bx	lr
